{
    "CC_VERSION_TEXT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_IS_GCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "GCC_VERSION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (CC_IS_GCC)] || ( 0 )[!(y)]"
        }
    ],
    "CC_IS_CLANG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CLANG_VERSION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (CC_IS_CLANG)] || ( 0 )[!(y)]"
        }
    ],
    "AS_IS_GNU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "AS_IS_LLVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "AS_VERSION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( CLANG_VERSION )[!(y) && (AS_IS_LLVM)] || ( SP_WORD )[!(y)]"
        }
    ],
    "LD_IS_BFD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "LD_VERSION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (LD_IS_BFD)] || ( 0 )[!(y)]"
        }
    ],
    "LD_IS_LLD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "LLD_VERSION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (LD_IS_LLD)] || ( 0 )[!(y)]"
        }
    ],
    "CC_CAN_LINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (64BIT)] || ( SP_WORD )[!(y)]"
        }
    ],
    "CC_CAN_LINK_STATIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (64BIT)] || ( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_ASM_GOTO_OUTPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_ASM_GOTO_TIED_OUTPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_HAS_ASM_GOTO_OUTPUT)",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "TOOLS_SUPPORT_RELR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_ASM_INLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_NO_PROFILE_FN_ATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "PAHOLE_VERSION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CONSTRUCTORS": [
        {
            "type": "bool",
            "rev_select": "GCOV_KERNEL || KASAN_GENERIC || KASAN_SW_TAGS",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_WORK": [
        {
            "type": "bool",
            "rev_select": "IRQ_SIM || NO_HZ_FULL || BPF_SYSCALL || TASKS_RCU || TASKS_RUDE_RCU || TASKS_TRACE_RCU || RELAY || PRINTK || PERF_EVENTS || ACPI_APEI_GHES || CPU_FREQ_GOV_COMMON || CPU_FREQ_GOV_SCHEDUTIL || DMA_SHARED_BUFFER || DRM_I915 || ATLAS_PH_SENSOR || GP2AP020A00F || IIO_SYSFS_TRIGGER || KFENCE || RING_BUFFER",
            "dep": "",
            "restrict": ""
        }
    ],
    "BUILDTIME_TABLE_SORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "THREAD_INFO_IN_TASK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "BROKEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BROKEN_ON_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BROKEN || ! SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INIT_ENV_ARG_LIMIT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 32 )[!(y) && (! UML)] || ( 128 )[!(y) && (UML)]"
        }
    ],
    "COMPILE_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "WERROR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( COMPILE_TEST )[!(y)]"
        }
    ],
    "UAPI_HEADER_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HEADERS_INSTALL && CC_CAN_LINK)",
            "restrict": ""
        }
    ],
    "LOCALVERSION": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LOCALVERSION_AUTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BUILD_SALT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "HAVE_KERNEL_GZIP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_BZIP2": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_LZMA": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_XZ": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_LZO": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_LZ4": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_ZSTD": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KERNEL_UNCOMPRESSED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KERNEL_GZIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_GZIP) && ( KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_LZMA &&  !KERNEL_XZ &&  !KERNEL_LZO &&  !KERNEL_LZ4 &&  !KERNEL_ZSTD &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_BZIP2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_BZIP2) && ( KERNEL_BZIP2 &&  !KERNEL_GZIP &&  !KERNEL_LZMA &&  !KERNEL_XZ &&  !KERNEL_LZO &&  !KERNEL_LZ4 &&  !KERNEL_ZSTD &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_LZMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_LZMA) && ( KERNEL_LZMA &&  !KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_XZ &&  !KERNEL_LZO &&  !KERNEL_LZ4 &&  !KERNEL_ZSTD &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_XZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_XZ) && ( KERNEL_XZ &&  !KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_LZMA &&  !KERNEL_LZO &&  !KERNEL_LZ4 &&  !KERNEL_ZSTD &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_LZO) && ( KERNEL_LZO &&  !KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_LZMA &&  !KERNEL_XZ &&  !KERNEL_LZ4 &&  !KERNEL_ZSTD &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_LZ4) && ( KERNEL_LZ4 &&  !KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_LZMA &&  !KERNEL_XZ &&  !KERNEL_LZO &&  !KERNEL_ZSTD &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_ZSTD) && ( KERNEL_ZSTD &&  !KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_LZMA &&  !KERNEL_XZ &&  !KERNEL_LZO &&  !KERNEL_LZ4 &&  !KERNEL_UNCOMPRESSED )",
            "restrict": ""
        }
    ],
    "KERNEL_UNCOMPRESSED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( HAVE_KERNEL_GZIP || HAVE_KERNEL_BZIP2 || HAVE_KERNEL_LZMA || HAVE_KERNEL_XZ || HAVE_KERNEL_LZO || HAVE_KERNEL_LZ4 || HAVE_KERNEL_ZSTD || HAVE_KERNEL_UNCOMPRESSED ) ) && (HAVE_KERNEL_UNCOMPRESSED) && ( KERNEL_UNCOMPRESSED &&  !KERNEL_GZIP &&  !KERNEL_BZIP2 &&  !KERNEL_LZMA &&  !KERNEL_XZ &&  !KERNEL_LZO &&  !KERNEL_LZ4 &&  !KERNEL_ZSTD )",
            "restrict": ""
        }
    ],
    "DEFAULT_INIT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "DEFAULT_HOSTNAME": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"(none)\" )[!(y)]"
        }
    ],
    "SYSVIPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SYSVIPC_SYSCTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SYSVIPC) && (SYSCTL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SYSVIPC_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(COMPAT && SYSVIPC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "POSIX_MQUEUE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "POSIX_MQUEUE_SYSCTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(POSIX_MQUEUE) && (SYSCTL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WATCH_QUEUE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CROSS_MEMORY_ATTACH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USELIB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ALPHA || M68K || SPARC )[!(y)]"
        }
    ],
    "AUDIT": [
        {
            "type": "bool",
            "rev_select": "SECURITY_APPARMOR",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_AUDITSYSCALL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "AUDITSYSCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(AUDIT && HAVE_ARCH_AUDITSYSCALL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MAY_HAVE_SPARSE_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_PROBE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_SHOW": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_SHOW_LEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_EFFECTIVE_AFF_MASK": [
        {
            "type": "bool",
            "rev_select": "X86[SMP] || ARM_GIC[SMP] || ARM_GIC_V3[SMP] || ARMADA_370_XP_IRQ[SMP] || BCM6345_L1_IRQ[SMP] || BCM7038_L1_IRQ[SMP] || IRQ_MIPS_CPU[SMP] || XTENSA_MX[SMP] || SIFIVE_PLIC[SMP] || IRQ_LOONGARCH_CPU",
            "dep": "(SMP)",
            "restrict": ""
        }
    ],
    "GENERIC_PENDING_IRQ": [
        {
            "type": "bool",
            "rev_select": "X86[SMP]",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_MIGRATION": [
        {
            "type": "bool",
            "rev_select": "X86[SMP]",
            "dep": "",
            "restrict": ""
        }
    ],
    "AUTO_IRQ_AFFINITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_INJECTION": [
        {
            "type": "bool",
            "rev_select": "GENERIC_IRQ_DEBUGFS || PCIEAER_INJECT",
            "dep": "",
            "restrict": ""
        }
    ],
    "HARDIRQS_SW_RESEND": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_EDGE_EOI_HANDLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_CHIP": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_ROCKCHIP || GPIO_MVEBU || GPIO_MXC || GPIO_MXS || GPIO_OMAP || GPIO_ROCKCHIP || GPIO_SPEAR_SPICS || GPIO_STA2X11 || GPIO_TB10X || GPIO_ML_IOH || GPIO_PCH || GPIO_SODAVILLE || IMX_IPUV3_CORE || ARM_NVIC || ARMADA_370_XP_IRQ || ALPINE_MSI || AL_FIC || ATMEL_AIC_IRQ || ATMEL_AIC5_IRQ || BCM6345_L1_IRQ || BCM7038_L1_IRQ || BCM7120_L2_IRQ || BRCMSTB_L2_IRQ || DAVINCI_AINTC || DAVINCI_CP_INTC || DW_APB_ICTL || IMGPDC_IRQ || IRQ_MIPS_CPU || OMAP_IRQCHIP || PIC32_EVIC || RENESAS_IRQC || RENESAS_RZG2L_IRQC || SUNXI_NMI_INTC || TB10X_IRQC || INGENIC_TCU_IRQ || MSCC_OCELOT_IRQ || STM32_EXTI || GOLDFISH_PIC || LS1X_IRQ || IRQ_LOONGARCH_CPU || LOONGSON_LIOINTC || LOONGSON_EIOINTC || LOONGSON_HTPIC || IRQ_IDT3243X",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_DOMAIN": [
        {
            "type": "bool",
            "rev_select": "GENERIC_IRQ_CHIP || IRQ_SIM || IRQ_DOMAIN_HIERARCHY || IRQ_DOMAIN_NOMAP || OLPC || PCI_HOST_GENERIC || PCIE_CADENCE_HOST || REGMAP[REGMAP_IRQ] || OF_UNITTEST || NET_DSA_MV88E6XXX || NET_DSA_REALTEK || RMI4_CORE || I2C || EINT_MTK || GPIOLIB_IRQCHIP || GPIO_BRCMSTB || GPIO_GRGPIO || GPIO_MPC8XXX || GPIO_PL061 || GPIO_PCF857X || SSB_DRIVER_GPIO[SSB_EMBEDDED] || MFD_CORE || MFD_MAX14577 || MFD_MAX77620 || MFD_MAX77686 || MFD_MAX8997 || MFD_MAX8998 || MFD_MT6397 || AB8500_CORE || MFD_LP8788 || MFD_TPS65217 || MFD_TPS65910 || TWL4030_CORE || MFD_WM831X_I2C || MFD_WM831X_SPI || INGENIC_TIMER || INGENIC_SYSOST || QCOM_SMP2P || QCOM_SMSM || EXTCON_FSA9480 || EXTCON_MAX14577 || EXTCON_MAX77693 || EXTCON_MAX77843 || EXTCON_RT8973A || EXTCON_SM5502 || ARM_VIC || AL_FIC || ATMEL_AIC_IRQ || ATMEL_AIC5_IRQ || I8259 || BCM6345_L1_IRQ || BCM7038_L1_IRQ || BCM7120_L2_IRQ || BRCMSTB_L2_IRQ || DAVINCI_AINTC || DAVINCI_CP_INTC || FARADAY_FTINTC010 || IMGPDC_IRQ || IXP4XX_IRQ || IRQ_MIPS_CPU || CLPS711X_IRQCHIP || OR1K_PIC || OMAP_IRQCHIP || ORION_IRQCHIP || PIC32_EVIC || JCORE_AIC || RDA_INTC || RENESAS_INTC_IRQPIN || RENESAS_IRQC || TB10X_IRQC || TS4800_IRQ || VERSATILE_FPGA_IRQ || XTENSA_MX || XILINX_INTC || IMX_GPCV2 || IRQ_MXS || MSCC_OCELOT_IRQ || STM32_EXTI || GOLDFISH_PIC || IMX_IRQSTEER || IMX_INTMUX || LS1X_IRQ || TI_PRUSS_INTC || IRQ_LOONGARCH_CPU || LOONGSON_LIOINTC || LOONGSON_HTPIC || MST_IRQ || IRQ_IDT3243X || MCHP_EIC || SH_INTC",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_SIM": [
        {
            "type": "bool",
            "rev_select": "GPIO_MOCKUP || GPIO_SIM || IIO_DUMMY_EVGEN",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_DOMAIN_HIERARCHY": [
        {
            "type": "bool",
            "rev_select": "GENERIC_IRQ_IPI || GENERIC_MSI_IRQ_DOMAIN || X86_LOCAL_APIC || SPMI_HISI3670 || SPMI_MSM_PMIC_ARB || PINCTRL_MSM || PINCTRL_QCOM_SPMI_PMIC || PINCTRL_QCOM_SSBI_PMIC || PINCTRL_STM32 || GPIO_IXP4XX || GPIO_LPC18XX || GPIO_SIFIVE || GPIO_TEGRA || GPIO_TEGRA186 || GPIO_THUNDERX || GPIO_UNIPHIER || GPIO_VISCONTI || GPIO_XGENE_SB || GPIO_MSC313 || MFD_PM8XXX || ARM_GIC || ARM_GIC_V3 || ARM_NVIC || DW_APB_ICTL || RENESAS_RZA1_IRQC || RENESAS_RZG2L_IRQC || SUN6I_R_INTC || MIPS_GIC || QCOM_IRQ_COMBINER || IRQ_UNIPHIER_AIDET || MESON_IRQ_GPIO || QCOM_PDC || QCOM_MPM || TI_SCI_INTR_IRQCHIP || TI_SCI_INTA_IRQCHIP || SIFIVE_PLIC || LOONGSON_EIOINTC || LOONGSON_HTVEC || LOONGSON_PCH_PIC || LOONGSON_PCH_MSI || LOONGSON_PCH_LPC || MST_IRQ || MCHP_EIC",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_DOMAIN_NOMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_FASTEOI_HIERARCHY_HANDLERS": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_MSM || GPIO_THUNDERX || SUN6I_R_INTC || LOONGSON_PCH_PIC",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_IPI": [
        {
            "type": "bool",
            "rev_select": "IRQ_MIPS_CPU[SMP && SYS_SUPPORTS_MULTITHREADING] || MIPS_GIC[SMP]",
            "dep": "(SMP)",
            "restrict": ""
        }
    ],
    "GENERIC_MSI_IRQ": [
        {
            "type": "bool",
            "rev_select": "GENERIC_MSI_IRQ_DOMAIN || PCI_MSI",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_MSI_IRQ_DOMAIN": [
        {
            "type": "bool",
            "rev_select": "PCI_MSI_IRQ_DOMAIN || PCIE_MICROCHIP_HOST || FSL_MC_BUS || MV_XOR_V2 || BCM_FLEXRM_MBOX || ARM_SMMU_V3 || TI_SCI_INTA_MSI_DOMAIN || ARM_GIC_V3_ITS || MVEBU_ODMI",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_MSI_IOMMU": [
        {
            "type": "bool",
            "rev_select": "IOMMU_DMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_TIMINGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_MATRIX_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "X86[X86_LOCAL_APIC]",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_RESERVATION_MODE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_FORCED_THREADING": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "SPARSE_IRQ": [
        {
            "type": "bool",
            "rev_select": "X86 || ATMEL_AIC_IRQ || ATMEL_AIC5_IRQ || FARADAY_FTINTC010 || IXP4XX_IRQ || CLPS711X_IRQCHIP",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IRQ_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GENERIC_IRQ_MULTI_HANDLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEPRECATED_IRQ_CPU_ONOFFLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CAVIUM_OCTEON_SOC)",
            "restrict": "( CAVIUM_OCTEON_SOC )[!(y)]"
        }
    ],
    "CLOCKSOURCE_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "X86 || CLKSRC_MIPS_GIC",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_CLOCKSOURCE_DATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_CLOCKSOURCE_INIT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "CLOCKSOURCE_VALIDATE_LAST_CYCLE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_TIME_VSYSCALL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_CLOCKEVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! LEGACY_TIMER_TICK )[!(y)]"
        }
    ],
    "ARCH_HAS_TICK_BROADCAST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_CLOCKEVENTS_BROADCAST": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 || ( X86_32 && X86_LOCAL_APIC )] || MIPS_CPS_CPUIDLE[SMP]",
            "dep": "(GENERIC_CLOCKEVENTS)",
            "restrict": ""
        }
    ],
    "GENERIC_CLOCKEVENTS_MIN_ADJUST": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_CMOS_UPDATE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_POSIX_CPU_TIMERS_TASK_WORK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "POSIX_CPU_TIMERS_TASK_WORK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (POSIX_TIMERS && HAVE_POSIX_CPU_TIMERS_TASK_WORK)]"
        }
    ],
    "LEGACY_TIMER_TICK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "TIME_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "CONTEXT_TRACKING": [
        {
            "type": "bool",
            "rev_select": "CONTEXT_TRACKING_IDLE || CONTEXT_TRACKING_USER",
            "dep": "",
            "restrict": ""
        }
    ],
    "CONTEXT_TRACKING_IDLE": [
        {
            "type": "bool",
            "rev_select": "TREE_RCU",
            "dep": "",
            "restrict": ""
        }
    ],
    "TICK_ONESHOT": [
        {
            "type": "bool",
            "rev_select": "NO_HZ_COMMON || HIGH_RES_TIMERS",
            "dep": "( GENERIC_CLOCKEVENTS )",
            "restrict": ""
        }
    ],
    "NO_HZ_COMMON": [
        {
            "type": "bool",
            "rev_select": "NO_HZ_IDLE || NO_HZ_FULL",
            "dep": "( GENERIC_CLOCKEVENTS )",
            "restrict": ""
        }
    ],
    "HZ_PERIODIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS ) && ( HZ_PERIODIC &&  !NO_HZ_IDLE &&  !NO_HZ_FULL )",
            "restrict": ""
        }
    ],
    "NO_HZ_IDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS ) && ( NO_HZ_IDLE &&  !HZ_PERIODIC &&  !NO_HZ_FULL )",
            "restrict": ""
        }
    ],
    "NO_HZ_FULL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS ) && (SMP) && (HAVE_CONTEXT_TRACKING_USER) && (HAVE_VIRT_CPU_ACCOUNTING_GEN) && ( NO_HZ_FULL &&  !HZ_PERIODIC &&  !NO_HZ_IDLE )",
            "restrict": ""
        }
    ],
    "CONTEXT_TRACKING_USER": [
        {
            "type": "bool",
            "rev_select": "VIRT_CPU_ACCOUNTING_GEN",
            "dep": "( GENERIC_CLOCKEVENTS ) && (HAVE_CONTEXT_TRACKING_USER)",
            "restrict": ""
        }
    ],
    "CONTEXT_TRACKING_USER_FORCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS ) && (CONTEXT_TRACKING_USER)",
            "restrict": "( y )[!(y) && (! NO_HZ_FULL)]"
        }
    ],
    "NO_HZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS )",
            "restrict": ""
        }
    ],
    "HIGH_RES_TIMERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS )",
            "restrict": ""
        }
    ],
    "CLOCKSOURCE_WATCHDOG_MAX_SKEW_US": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( GENERIC_CLOCKEVENTS ) && (CLOCKSOURCE_WATCHDOG)",
            "restrict": "( 50 1000 ) || ( 100 )[!(y)]"
        }
    ],
    "BPF": [
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL || NET",
            "dep": "",
            "restrict": ""
        },
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL || NET",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_CBPF_JIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_EBPF_JIT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANT_DEFAULT_BPF_JIT": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "BPF_SYSCALL": [
        {
            "type": "bool",
            "rev_select": "AF_KCM",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BPF_JIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BPF) && (HAVE_CBPF_JIT || HAVE_EBPF_JIT) && (MODULES)",
            "restrict": ""
        }
    ],
    "BPF_JIT_ALWAYS_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BPF_SYSCALL && HAVE_EBPF_JIT && BPF_JIT)",
            "restrict": ""
        }
    ],
    "BPF_JIT_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_EBPF_JIT && BPF_JIT)",
            "restrict": "( ARCH_WANT_DEFAULT_BPF_JIT || BPF_JIT_ALWAYS_ON )[!(y)]"
        }
    ],
    "BPF_UNPRIV_DEFAULT_OFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BPF_SYSCALL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USERMODE_DRIVER": [
        {
            "type": "bool",
            "rev_select": "BPF_PRELOAD || BPFILTER",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BPF_PRELOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BPF) && (BPF_SYSCALL) && (! COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BPF_PRELOAD_UMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BPF_PRELOAD )",
            "restrict": "( m )[!(y)]"
        }
    ],
    "BPF_LSM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BPF_EVENTS) && (BPF_SYSCALL) && (SECURITY) && (BPF_JIT)",
            "restrict": ""
        }
    ],
    "PREEMPT_NONE_BUILD": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_NONE[! PREEMPT_DYNAMIC]",
            "dep": "",
            "restrict": ""
        }
    ],
    "PREEMPT_VOLUNTARY_BUILD": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_VOLUNTARY[! PREEMPT_DYNAMIC]",
            "dep": "",
            "restrict": ""
        }
    ],
    "PREEMPT_BUILD": [
        {
            "type": "bool",
            "rev_select": "PREEMPT || PREEMPT_DYNAMIC",
            "dep": "",
            "restrict": ""
        }
    ],
    "PREEMPT_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PREEMPT_NONE &&  !PREEMPT_VOLUNTARY &&  !PREEMPT &&  !PREEMPT_RT )",
            "restrict": ""
        }
    ],
    "PREEMPT_VOLUNTARY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! ARCH_NO_PREEMPT) && ( PREEMPT_VOLUNTARY &&  !PREEMPT_NONE &&  !PREEMPT &&  !PREEMPT_RT )",
            "restrict": ""
        }
    ],
    "PREEMPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! ARCH_NO_PREEMPT) && ( PREEMPT &&  !PREEMPT_NONE &&  !PREEMPT_VOLUNTARY &&  !PREEMPT_RT )",
            "restrict": ""
        }
    ],
    "PREEMPT_RT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EXPERT && ARCH_SUPPORTS_RT) && ( PREEMPT_RT &&  !PREEMPT_NONE &&  !PREEMPT_VOLUNTARY &&  !PREEMPT )",
            "restrict": ""
        }
    ],
    "PREEMPT_COUNT": [
        {
            "type": "bool",
            "rev_select": "PREEMPTION || DRM_I915_DEBUG || PROVE_LOCKING[! ARCH_NO_PREEMPT] || DEBUG_ATOMIC_SLEEP || RCU_STRICT_GRACE_PERIOD[PREEMPT = n]",
            "dep": "",
            "restrict": ""
        }
    ],
    "PREEMPTION": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_BUILD || PREEMPT_RT",
            "dep": "",
            "restrict": ""
        }
    ],
    "PREEMPT_DYNAMIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_PREEMPT_DYNAMIC && ! PREEMPT_RT)",
            "restrict": "( y )[!(y) && (HAVE_PREEMPT_DYNAMIC_CALL)]"
        }
    ],
    "SCHED_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCHED_SMT)",
            "restrict": ""
        }
    ],
    "VIRT_CPU_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "VIRT_CPU_ACCOUNTING_NATIVE || VIRT_CPU_ACCOUNTING_GEN",
            "dep": "",
            "restrict": ""
        }
    ],
    "TICK_CPU_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! S390 && ! NO_HZ_FULL) && ( TICK_CPU_ACCOUNTING &&  !VIRT_CPU_ACCOUNTING_NATIVE &&  !VIRT_CPU_ACCOUNTING_GEN )",
            "restrict": ""
        }
    ],
    "VIRT_CPU_ACCOUNTING_NATIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_VIRT_CPU_ACCOUNTING && ! NO_HZ_FULL) && ( VIRT_CPU_ACCOUNTING_NATIVE &&  !TICK_CPU_ACCOUNTING &&  !VIRT_CPU_ACCOUNTING_GEN )",
            "restrict": ""
        }
    ],
    "VIRT_CPU_ACCOUNTING_GEN": [
        {
            "type": "bool",
            "rev_select": "NO_HZ_FULL",
            "dep": "(HAVE_CONTEXT_TRACKING_USER) && (HAVE_VIRT_CPU_ACCOUNTING_GEN) && (GENERIC_CLOCKEVENTS) && ( VIRT_CPU_ACCOUNTING_GEN &&  !TICK_CPU_ACCOUNTING &&  !VIRT_CPU_ACCOUNTING_NATIVE )",
            "restrict": ""
        }
    ],
    "IRQ_TIME_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_IRQ_TIME_ACCOUNTING && ! VIRT_CPU_ACCOUNTING_NATIVE)",
            "restrict": ""
        }
    ],
    "HAVE_SCHED_AVG_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IRQ_TIME_ACCOUNTING || PARAVIRT_TIME_ACCOUNTING) && (SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCHED_THERMAL_PRESSURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP) && (CPU_FREQ_THERMAL)",
            "restrict": "( y )[!(y) && (ARM && ARM_CPU_TOPOLOGY)] || ( y )[!(y) && (ARM64)]"
        }
    ],
    "BSD_PROCESS_ACCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MULTIUSER)",
            "restrict": ""
        }
    ],
    "BSD_PROCESS_ACCT_V3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BSD_PROCESS_ACCT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TASKSTATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NET) && (MULTIUSER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TASK_DELAY_ACCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TASKSTATS)",
            "restrict": ""
        }
    ],
    "TASK_XACCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TASKSTATS)",
            "restrict": ""
        }
    ],
    "TASK_IO_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TASK_XACCT)",
            "restrict": ""
        }
    ],
    "PSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PSI_DEFAULT_DISABLED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PSI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CPU_ISOLATION": [
        {
            "type": "bool",
            "rev_select": "NO_HZ_FULL",
            "dep": "(SMP || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TREE_RCU": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_RCU",
            "dep": "",
            "restrict": "( y )[!(y) && (SMP)]"
        }
    ],
    "PREEMPT_RCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (PREEMPTION)]"
        }
    ],
    "TINY_RCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (! PREEMPTION && ! SMP)]"
        }
    ],
    "RCU_EXPERT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SRCU": [
        {
            "type": "bool",
            "rev_select": "TASKS_RCU_GENERIC || PERF_EVENTS || X86 || X86_SGX || PM_SLEEP || CPU_FREQ || KVM || BLOCK || MMU_NOTIFIER || MD || NETPOLL || COMMON_CLK || PM_DEVFREQ || DAX || STM || PM_OPP || BTRFS_FS || FSNOTIFY || QUOTA || DLM || SECURITY_TOMOYO || RCU_SCALE_TEST || RCU_TORTURE_TEST || RCU_REF_SCALE_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "TINY_SRCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (SRCU && TINY_RCU)]"
        }
    ],
    "TREE_SRCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (SRCU && ! TINY_RCU)]"
        }
    ],
    "TASKS_RCU_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( TASKS_RCU || TASKS_RUDE_RCU || TASKS_TRACE_RCU )[!(y)]"
        }
    ],
    "FORCE_TASKS_RCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TASKS_RCU": [
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL[PREEMPTION] || FORCE_TASKS_RCU || KPROBES[PREEMPTION] || OPTPROBES[PREEMPTION] || TRACING[PREEMPTION] || FUNCTION_TRACER[PREEMPTION]",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FORCE_TASKS_RUDE_RCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TASKS_RUDE_RCU": [
        {
            "type": "bool",
            "rev_select": "FORCE_TASKS_RUDE_RCU || FUNCTION_TRACER",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FORCE_TASKS_TRACE_RCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TASKS_TRACE_RCU": [
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL || FORCE_TASKS_TRACE_RCU",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_STALL_COMMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( TREE_RCU )[!(y)]"
        }
    ],
    "RCU_NEED_SEGCBLIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ( TREE_RCU || TREE_SRCU || TASKS_RCU_GENERIC ) )[!(y)]"
        }
    ],
    "RCU_FANOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(TREE_RCU && RCU_EXPERT)",
            "restrict": "( 2 64 )[64BIT] || ( 2 32 )[! 64BIT] || ( 64 )[!(y) && (64BIT)] || ( 32 )[!(y) && (! 64BIT)]"
        }
    ],
    "RCU_FANOUT_LEAF": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(TREE_RCU && RCU_EXPERT)",
            "restrict": "( 2 64 )[64BIT && ! RCU_STRICT_GRACE_PERIOD] || ( 2 32 )[! 64BIT && ! RCU_STRICT_GRACE_PERIOD] || ( 2 3 )[RCU_STRICT_GRACE_PERIOD] || ( 16 )[!(y) && (! RCU_STRICT_GRACE_PERIOD)] || ( 2 )[!(y) && (RCU_STRICT_GRACE_PERIOD)]"
        }
    ],
    "RCU_BOOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( RT_MUTEXES && PREEMPT_RCU && RCU_EXPERT ) || PREEMPT_RT)",
            "restrict": "( y )[!(y) && (PREEMPT_RT)]"
        }
    ],
    "RCU_BOOST_DELAY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(RCU_BOOST)",
            "restrict": "( 0 3000 ) || ( 500 )[!(y)]"
        }
    ],
    "RCU_EXP_KTHREAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_BOOST && RCU_EXPERT)",
            "restrict": "( ! PREEMPT_RT && NR_CPUS <= 32 )[!(y)]"
        }
    ],
    "RCU_NOCB_CPU": [
        {
            "type": "bool",
            "rev_select": "NO_HZ_FULL",
            "dep": "(TREE_RCU) && (RCU_EXPERT || NO_HZ_FULL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_NOCB_CPU_DEFAULT_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_NOCB_CPU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_NOCB_CPU_CB_BOOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_NOCB_CPU && RCU_BOOST)",
            "restrict": "( y )[!(y) && (PREEMPT_RT)]"
        }
    ],
    "TASKS_TRACE_RCU_READ_MB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RCU_EXPERT && TASKS_TRACE_RCU)",
            "restrict": "( PREEMPT_RT || NR_CPUS < 8 )[!(y)]"
        }
    ],
    "BUILD_BIN2C": [
        {
            "type": "bool",
            "rev_select": "SECURITY_TOMOYO",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IKCONFIG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IKCONFIG_PROC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IKCONFIG && PROC_FS)",
            "restrict": ""
        }
    ],
    "IKHEADERS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SYSFS)",
            "restrict": ""
        }
    ],
    "LOG_BUF_SHIFT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(PRINTK)",
            "restrict": "( 12 25 ) || ( 17 )[!(y)]"
        }
    ],
    "LOG_CPU_MAX_BUF_SHIFT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SMP) && (PRINTK)",
            "restrict": "( 0 21 ) || ( 12 )[!(y) && (! BASE_SMALL)] || ( 0 )[!(y) && (BASE_SMALL)]"
        }
    ],
    "PRINTK_SAFE_LOG_BUF_SHIFT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(PRINTK)",
            "restrict": "( 10 21 ) || ( 13 )[!(y)]"
        }
    ],
    "PRINTK_INDEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PRINTK && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "HAVE_UNSTABLE_SCHED_CLOCK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_SCHED_CLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "UCLAMP_TASK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_FREQ_GOV_SCHEDUTIL)",
            "restrict": ""
        }
    ],
    "UCLAMP_BUCKETS_COUNT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(UCLAMP_TASK)",
            "restrict": "( 5 20 ) || ( 5 )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_NUMA_BALANCING": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "CC_HAS_INT128": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! SP_WORD && 64BIT )[!(y)]"
        }
    ],
    "CC_IMPLICIT_FALLTHROUGH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"-Wimplicit-fallthrough=5\" )[!(y) && (CC_IS_GCC && SP_WORD)] || ( \"-Wimplicit-fallthrough\" )[!(y) && (CC_IS_CLANG && SP_WORD)]"
        }
    ],
    "GCC12_NO_ARRAY_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CC_NO_ARRAY_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (CC_IS_GCC && GCC_VERSION >= 120000 && GCC_VERSION < 130000 && GCC12_NO_ARRAY_BOUNDS)]"
        }
    ],
    "ARCH_SUPPORTS_INT128": [
        {
            "type": "bool",
            "rev_select": "X86_64[CC_HAS_INT128]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANT_NUMA_VARIABLE_LOCALITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "NUMA_BALANCING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SUPPORTS_NUMA_BALANCING) && (! ARCH_WANT_NUMA_VARIABLE_LOCALITY) && (SMP && NUMA && MIGRATION && ! PREEMPT_RT)",
            "restrict": ""
        }
    ],
    "NUMA_BALANCING_DEFAULT_ENABLED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NUMA_BALANCING)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CGROUPS": [
        {
            "type": "bool",
            "rev_select": "SCHED_AUTOGROUP",
            "dep": "",
            "restrict": ""
        }
    ],
    "PAGE_COUNTER": [
        {
            "type": "bool",
            "rev_select": "MEMCG || CGROUP_HUGETLB",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "CGROUP_FAVOR_DYNMODS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "MEMCG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "MEMCG_SWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (MEMCG && SWAP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MEMCG_KMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (MEMCG && ! SLOB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_CGROUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (BLOCK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CGROUP_WRITEBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (MEMCG && BLK_CGROUP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CGROUP_SCHED": [
        {
            "type": "bool",
            "rev_select": "SCHED_AUTOGROUP",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "FAIR_GROUP_SCHED": [
        {
            "type": "bool",
            "rev_select": "SCHED_AUTOGROUP",
            "dep": "( CGROUPS ) && ( CGROUP_SCHED ) && (CGROUP_SCHED)",
            "restrict": "( CGROUP_SCHED )[!(y)]"
        }
    ],
    "CFS_BANDWIDTH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && ( CGROUP_SCHED ) && (FAIR_GROUP_SCHED)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RT_GROUP_SCHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && ( CGROUP_SCHED ) && (CGROUP_SCHED)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "UCLAMP_TASK_GROUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (CGROUP_SCHED) && (UCLAMP_TASK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CGROUP_PIDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "CGROUP_RDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "CGROUP_FREEZER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "CGROUP_HUGETLB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (HUGETLB_PAGE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CPUSETS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (SMP)",
            "restrict": ""
        }
    ],
    "PROC_PID_CPUSET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (CPUSETS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CGROUP_DEVICE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "CGROUP_CPUACCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": ""
        }
    ],
    "CGROUP_PERF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (PERF_EVENTS)",
            "restrict": ""
        }
    ],
    "CGROUP_BPF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (BPF_SYSCALL)",
            "restrict": ""
        }
    ],
    "CGROUP_MISC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CGROUP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CGROUPS ) && (DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SOCK_CGROUP_DATA": [
        {
            "type": "bool",
            "rev_select": "CGROUP_BPF || CGROUP_NET_PRIO || CGROUP_NET_CLASSID",
            "dep": "( CGROUPS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NAMESPACES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MULTIUSER)",
            "restrict": ""
        }
    ],
    "UTS_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NAMESPACES )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TIME_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NAMESPACES ) && (GENERIC_VDSO_TIME_NS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IPC_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NAMESPACES ) && (( SYSVIPC || POSIX_MQUEUE ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USER_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NAMESPACES )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PID_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NAMESPACES )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NAMESPACES ) && (NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CHECKPOINT_RESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCHED_AUTOGROUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SYSFS_DEPRECATED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SYSFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SYSFS_DEPRECATED_V2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SYSFS) && (SYSFS_DEPRECATED)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RELAY": [
        {
            "type": "bool",
            "rev_select": "ATH9K_COMMON_SPECTRAL || ATH10K_SPECTRAL || MT7915E || IOSM[WWAN_DEBUGFS] || DRM_I915 || BLK_DEV_IO_TRACE",
            "dep": "",
            "restrict": ""
        }
    ],
    "BLK_DEV_INITRD": [
        {
            "type": "bool",
            "rev_select": "BOOT_CONFIG[! BOOT_CONFIG_EMBED]",
            "dep": "",
            "restrict": ""
        }
    ],
    "INITRAMFS_SOURCE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "INITRAMFS_FORCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && (CMDLINE_EXTEND || CMDLINE_FORCE)",
            "restrict": ""
        }
    ],
    "INITRAMFS_ROOT_UID": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && (INITRAMFS_SOURCE != \"\")",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "INITRAMFS_ROOT_GID": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && (INITRAMFS_SOURCE != \"\")",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "RD_GZIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RD_BZIP2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RD_LZMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RD_XZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RD_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RD_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RD_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INITRAMFS_COMPRESSION_GZIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_GZIP) && ( INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_BZIP2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_BZIP2) && ( INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_LZMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_LZMA) && ( INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_XZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_XZ) && ( INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_LZO) && ( INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_LZ4) && ( INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && (RD_ZSTD) && ( INITRAMFS_COMPRESSION_ZSTD &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_NONE )",
            "restrict": ""
        }
    ],
    "INITRAMFS_COMPRESSION_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV_INITRD ) && ( ( INITRAMFS_SOURCE != \"\" ) ) && ( INITRAMFS_COMPRESSION_NONE &&  !INITRAMFS_COMPRESSION_GZIP &&  !INITRAMFS_COMPRESSION_BZIP2 &&  !INITRAMFS_COMPRESSION_LZMA &&  !INITRAMFS_COMPRESSION_XZ &&  !INITRAMFS_COMPRESSION_LZO &&  !INITRAMFS_COMPRESSION_LZ4 &&  !INITRAMFS_COMPRESSION_ZSTD )",
            "restrict": ""
        }
    ],
    "BOOT_CONFIG": [
        {
            "type": "bool",
            "rev_select": "BOOTTIME_TRACING",
            "dep": "",
            "restrict": ""
        }
    ],
    "BOOT_CONFIG_EMBED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BOOT_CONFIG)",
            "restrict": ""
        }
    ],
    "BOOT_CONFIG_EMBED_FILE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(BOOT_CONFIG_EMBED)",
            "restrict": ""
        }
    ],
    "INITRAMFS_PRESERVE_MTIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CC_OPTIMIZE_FOR_PERFORMANCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CC_OPTIMIZE_FOR_PERFORMANCE &&  !CC_OPTIMIZE_FOR_SIZE )",
            "restrict": ""
        }
    ],
    "CC_OPTIMIZE_FOR_SIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CC_OPTIMIZE_FOR_SIZE &&  !CC_OPTIMIZE_FOR_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "HAVE_LD_DEAD_CODE_DATA_ELIMINATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LD_DEAD_CODE_DATA_ELIMINATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_LD_DEAD_CODE_DATA_ELIMINATION) && (EXPERT) && (SP_WORD) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "LD_ORPHAN_WARN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_WANT_LD_ORPHAN_WARN) && (SP_WORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SYSCTL": [
        {
            "type": "bool",
            "rev_select": "PROC_SYSCTL",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_UID16": [
        {
            "type": "bool",
            "rev_select": "COMPAT_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "SYSCTL_EXCEPTION_TRACE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "SYSCTL_ARCH_UNALIGN_NO_WARN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SYSCTL_ARCH_UNALIGN_ALLOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_PCSPKR_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "EXPERT": [
        {
            "type": "bool",
            "rev_select": "EMBEDDED",
            "dep": "",
            "restrict": ""
        }
    ],
    "UID16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_UID16 && MULTIUSER)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MULTIUSER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SGETMASK_SYSCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( PARISC || M68K || PPC || MIPS || X86 || SPARC || MICROBLAZE || SUPERH )[!(EXPERT)]"
        }
    ],
    "SYSFS_SYSCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "FHANDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "POSIX_TIMERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PRINTK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "BUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ELF_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(COREDUMP)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PCSPKR_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_PCSPKR_PLATFORM)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "BASE_FULL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "FUTEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! ( SPARC32 && SMP ))",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "FUTEX_PI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FUTEX && RT_MUTEXES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EPOLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SIGNALFD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TIMERFD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "EVENTFD": [
        {
            "type": "bool",
            "rev_select": "MEMCG || HAVE_KVM_EVENTFD || VFIO_VIRQFD || VFIO_FSL_MC || ACRN_HSM",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SHMEM": [
        {
            "type": "bool",
            "rev_select": "DRM_I915 || DRM_MSM || DRM_ETNAVIV",
            "dep": "(MMU)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "AIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "IO_URING": [
        {
            "type": "bool",
            "rev_select": "BLK_DEV_UBLK",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ADVISE_SYSCALLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MEMBARRIER": [
        {
            "type": "bool",
            "rev_select": "RSEQ",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "KALLSYMS": [
        {
            "type": "bool",
            "rev_select": "KPROBES || CFI_CLANG || DEBUG_KMEMLEAK || LOCKDEP || LATENCYTOP || FUNCTION_TRACER || STACK_TRACER || FTRACE_SYSCALLS",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "KALLSYMS_ALL": [
        {
            "type": "bool",
            "rev_select": "LOCKDEP || LATENCYTOP",
            "dep": "(DEBUG_KERNEL && KALLSYMS)",
            "restrict": ""
        }
    ],
    "KALLSYMS_ABSOLUTE_PERCPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KALLSYMS)",
            "restrict": "( X86_64 && SMP )[!(y)]"
        }
    ],
    "KALLSYMS_BASE_RELATIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KALLSYMS)",
            "restrict": "( ! IA64 )[!(y)]"
        }
    ],
    "ARCH_HAS_MEMBARRIER_CALLBACKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_MEMBARRIER_SYNC_CORE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "KCMP": [
        {
            "type": "bool",
            "rev_select": "CHECKPOINT_RESTORE || DRM",
            "dep": "",
            "restrict": ""
        }
    ],
    "RSEQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_RSEQ)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "DEBUG_RSEQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RSEQ && DEBUG_KERNEL)",
            "restrict": "( n )[!(EXPERT)]"
        }
    ],
    "EMBEDDED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_PERF_EVENTS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GUEST_PERF_EVENTS": [
        {
            "type": "bool",
            "rev_select": "XEN_PV || KVM",
            "dep": "(HAVE_PERF_EVENTS)",
            "restrict": ""
        }
    ],
    "PERF_USE_VMALLOC": [
        {
            "type": "bool",
            "rev_select": "DEBUG_PERF_USE_VMALLOC",
            "dep": "",
            "restrict": ""
        }
    ],
    "PC104": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PERF_EVENTS": [
        {
            "type": "bool",
            "rev_select": "X86 || KVM || CORESIGHT",
            "dep": "(HAVE_PERF_EVENTS)",
            "restrict": "( y )[!(y) && (PROFILING)]"
        }
    ],
    "DEBUG_PERF_USE_VMALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PERF_EVENTS && DEBUG_KERNEL && ! PPC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SYSTEM_DATA_VERIFICATION": [
        {
            "type": "bool",
            "rev_select": "MODULE_SIG_FORMAT || CFG80211_REQUIRE_SIGNED_REGDB || DM_VERITY_VERIFY_ROOTHASH_SIG || FS_VERITY_BUILTIN_SIGNATURES || UBIFS_FS_AUTHENTICATION",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PROFILING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "TRACEPOINTS": [
        {
            "type": "bool",
            "rev_select": "TRACING || BLK_DEV_IO_TRACE",
            "dep": "",
            "restrict": ""
        }
    ],
    "64BIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD != \"i386\" )[!(SP_WORD = \"x86\")]"
        },
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD != \"i386\" )[!(SP_WORD = \"x86\")]"
        }
    ],
    "X86_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! 64BIT)",
            "restrict": "( y )[!(y)]"
        },
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! 64BIT )[!(y)]"
        }
    ],
    "X86_64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(64BIT)",
            "restrict": "( y )[!(y)]"
        },
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( 64BIT )[!(y)]"
        }
    ],
    "FORCE_DYNAMIC_FTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && (FUNCTION_TRACER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INSTRUCTION_DECODER": [
        {
            "type": "bool",
            "rev_select": "AMD_MEM_ENCRYPT",
            "dep": "(KPROBES || PERF_EVENTS || UPROBES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OUTPUT_FORMAT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"elf32-i386\" )[!(y) && (X86_32)] || ( \"elf64-x86-64\" )[!(y) && (X86_64)]"
        }
    ],
    "LOCKDEP_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "STACKTRACE_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_MMAP_RND_BITS_MIN": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 28 )[!(y) && (64BIT)] || ( 8 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_BITS_MAX": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 32 )[!(y) && (64BIT)] || ( 16 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_COMPAT_BITS_MIN": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 8 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_COMPAT_BITS_MAX": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 16 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_ISA_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ISA_DMA_API)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GENERIC_BUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GENERIC_BUG_RELATIVE_POINTERS": [
        {
            "type": "bool",
            "rev_select": "GENERIC_BUG[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MAY_HAVE_PC_FDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ISA_DMA_API)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GENERIC_CALIBRATE_DELAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_HAS_CPU_RELAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_HIBERNATION_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_NR_GPIO": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 1024 )[!(y) && (X86_64)] || ( 512 )[!(y)]"
        }
    ],
    "ARCH_SUSPEND_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AUDIT_ARCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (X86_64)]"
        }
    ],
    "KASAN_SHADOW_OFFSET": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "(KASAN)",
            "restrict": "( 0xdffffc0000000000 )[!(y)]"
        }
    ],
    "HAVE_INTEL_TXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(INTEL_IOMMU && ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_32_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_64_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_UPROBES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FIX_EARLYCON_MEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DYNAMIC_PHYSICAL_MASK": [
        {
            "type": "bool",
            "rev_select": "X86_MEM_ENCRYPT",
            "dep": "",
            "restrict": ""
        }
    ],
    "PGTABLE_LEVELS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 5 )[!(y) && (X86_5LEVEL)] || ( 4 )[!(y) && (X86_64)] || ( 3 )[!(y) && (X86_PAE)] || ( 2 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "CC_HAS_SANE_STACKPROTECTOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y) && (64BIT)] || ( SP_WORD )[!(y)]"
        }
    ],
    "SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "X86_FEATURE_NAMES": [
        {
            "type": "bool",
            "rev_select": "X86[PROC_FS]",
            "dep": "",
            "restrict": "( y )[!(EMBEDDED)]"
        }
    ],
    "X86_X2APIC": [
        {
            "type": "bool",
            "rev_select": "XEN_DOM0[XEN_PVH && X86_64]",
            "dep": "(X86_LOCAL_APIC && X86_64 && ( IRQ_REMAP || HYPERVISOR_GUEST ))",
            "restrict": ""
        }
    ],
    "X86_MPPARSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_LOCAL_APIC)",
            "restrict": "( y )[!(ACPI)]"
        }
    ],
    "GOLDFISH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_GOLDFISH)",
            "restrict": "( y )[!(y)]"
        },
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "X86_CPU_RESCTRL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 && ( CPU_SUP_INTEL || CPU_SUP_AMD ))",
            "restrict": ""
        }
    ],
    "X86_BIGSMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (SMP)",
            "restrict": ""
        }
    ],
    "X86_EXTENDED_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 )",
            "restrict": "( y )[!(y)]"
        },
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_64 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_NUMACHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && (X86_EXTENDED_PLATFORM) && (NUMA) && (SMP) && (X86_X2APIC) && (PCI_MMCONFIG)",
            "restrict": ""
        }
    ],
    "X86_VSMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && PCI) && (X86_EXTENDED_PLATFORM) && (SMP)",
            "restrict": ""
        }
    ],
    "X86_UV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && (X86_EXTENDED_PLATFORM) && (NUMA) && (EFI) && (KEXEC_CORE) && (X86_X2APIC) && (PCI)",
            "restrict": ""
        }
    ],
    "X86_GOLDFISH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_EXTENDED_PLATFORM)",
            "restrict": ""
        }
    ],
    "X86_INTEL_CE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI) && (PCI_GODIRECT) && (X86_IO_APIC) && (X86_32) && (X86_EXTENDED_PLATFORM)",
            "restrict": ""
        }
    ],
    "X86_INTEL_MID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_EXTENDED_PLATFORM) && (X86_PLATFORM_DEVICES) && (PCI) && (X86_64 || ( PCI_GOANY && X86_32 )) && (X86_IO_APIC)",
            "restrict": ""
        }
    ],
    "X86_INTEL_QUARK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && (X86_EXTENDED_PLATFORM) && (X86_PLATFORM_DEVICES) && (X86_TSC) && (PCI) && (PCI_GOANY) && (X86_IO_APIC)",
            "restrict": ""
        }
    ],
    "X86_INTEL_LPSS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 && ACPI && PCI)",
            "restrict": ""
        }
    ],
    "X86_AMD_PLATFORM_DEVICE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ACPI)",
            "restrict": ""
        }
    ],
    "IOSF_MBI": [
        {
            "type": "tristate",
            "rev_select": "X86_INTEL_QUARK || X86_INTEL_LPSS || INTEL_SOC_DTS_IOSF_CORE || DRM_I915[X86] || SND_SST_ATOM_HIFI2_PLATFORM_ACPI || SND_SOC_SOF_BAYTRAIL[X86 && PCI] || MMC_SDHCI_PCI[X86] || MMC_SDHCI_ACPI[X86] || INTEL_ATOMISP || VIDEO_ATOMISP || PUNIT_ATOM_DEBUG",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "IOSF_MBI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IOSF_MBI && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "X86_RDC321X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && (X86_EXTENDED_PLATFORM)",
            "restrict": ""
        }
    ],
    "X86_32_NON_STANDARD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && SMP) && (X86_EXTENDED_PLATFORM)",
            "restrict": ""
        }
    ],
    "X86_SUPPORTS_MEMORY_FAILURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_MCE) && (X86_64 || ! SPARSEMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "STA2X11": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32_NON_STANDARD && PCI)",
            "restrict": ""
        }
    ],
    "X86_32_IRIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": ""
        }
    ],
    "SCHED_OMIT_FRAME_POINTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HYPERVISOR_GUEST": [
        {
            "type": "bool",
            "rev_select": "X86_VSMP",
            "dep": "",
            "restrict": ""
        }
    ],
    "PARAVIRT": [
        {
            "type": "bool",
            "rev_select": "X86_VSMP || HYPERV",
            "dep": "( HYPERVISOR_GUEST ) && (HAVE_STATIC_CALL)",
            "restrict": ""
        }
    ],
    "PARAVIRT_XXL": [
        {
            "type": "bool",
            "rev_select": "XEN_PV",
            "dep": "( HYPERVISOR_GUEST )",
            "restrict": ""
        }
    ],
    "PARAVIRT_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (PARAVIRT && DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PARAVIRT_SPINLOCKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (PARAVIRT && SMP)",
            "restrict": ""
        }
    ],
    "X86_HV_CALLBACK_VECTOR": [
        {
            "type": "bool",
            "rev_select": "XEN || KVM_GUEST || ACRN_GUEST || HYPERV[X86]",
            "dep": "( HYPERVISOR_GUEST )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (PARAVIRT) && (X86_64 || ( X86_32 && X86_PAE )) && (X86_LOCAL_APIC && X86_TSC)",
            "restrict": ""
        }
    ],
    "XEN_PV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN) && (X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_512GB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN_PV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_PV_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN_PV && SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_PV_DOM0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN_PV && XEN_DOM0)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_PVHVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN && X86_LOCAL_APIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_PVHVM_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN_PVHVM && SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_PVHVM_GUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN_PVHVM && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_SAVE_RESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "XEN_PVH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (XEN && XEN_PVHVM && ACPI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XEN_DOM0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (( XEN_PV && SWIOTLB_XEN ) || ( XEN_PVH && X86_64 )) && (X86_IO_APIC && ACPI && PCI)",
            "restrict": "( XEN_PV )[!(y)]"
        }
    ],
    "KVM_GUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (PARAVIRT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_CPUIDLE_HALTPOLL": [
        {
            "type": "bool",
            "rev_select": "KVM_GUEST",
            "dep": "( HYPERVISOR_GUEST )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PVH": [
        {
            "type": "bool",
            "rev_select": "XEN_PVH",
            "dep": "( HYPERVISOR_GUEST )",
            "restrict": ""
        }
    ],
    "PARAVIRT_TIME_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (PARAVIRT)",
            "restrict": ""
        }
    ],
    "PARAVIRT_CLOCK": [
        {
            "type": "bool",
            "rev_select": "XEN || KVM_GUEST",
            "dep": "( HYPERVISOR_GUEST )",
            "restrict": ""
        }
    ],
    "JAILHOUSE_GUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (X86_64 && PCI)",
            "restrict": ""
        }
    ],
    "ACRN_GUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (X86_64)",
            "restrict": ""
        }
    ],
    "INTEL_TDX_GUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HYPERVISOR_GUEST ) && (X86_64 && CPU_SUP_INTEL) && (X86_X2APIC)",
            "restrict": ""
        }
    ],
    "M486SX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "M486": [
        {
            "type": "bool",
            "rev_select": "X86_RDC321X",
            "dep": "(X86_32) && ( M486 &&  !M486SX &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "M586": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( M586 &&  !M486SX &&  !M486 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "M586TSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( M586TSC &&  !M486SX &&  !M486 &&  !M586 &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "M586MMX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( M586MMX &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "M686": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( M686 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MPENTIUMII": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MPENTIUMII &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MPENTIUMIII": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MPENTIUMIII &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MPENTIUMM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MPENTIUMM &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MPENTIUM4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MPENTIUM4 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MK6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MK6 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MK7": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MK7 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MK8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MK8 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MCRUSOE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MCRUSOE &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MEFFICEON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MEFFICEON &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MWINCHIPC6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MWINCHIPC6 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MWINCHIP3D": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MWINCHIP3D &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MELAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MELAN &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MGEODEGX1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MGEODEGX1 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MGEODE_LX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MGEODE_LX &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MCYRIXIII": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MCYRIXIII &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MVIAC3_2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MVIAC3_2 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MVIAC7": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32) && ( MVIAC7 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MPSC &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MPSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && ( MPSC &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MCORE2 &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MCORE2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MCORE2 &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MATOM &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "MATOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MATOM &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !GENERIC_CPU )",
            "restrict": ""
        }
    ],
    "GENERIC_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && ( GENERIC_CPU &&  !M486SX &&  !M486 &&  !M586 &&  !M586TSC &&  !M586MMX &&  !M686 &&  !MPENTIUMII &&  !MPENTIUMIII &&  !MPENTIUMM &&  !MPENTIUM4 &&  !MK6 &&  !MK7 &&  !MK8 &&  !MCRUSOE &&  !MEFFICEON &&  !MWINCHIPC6 &&  !MWINCHIP3D &&  !MELAN &&  !MGEODEGX1 &&  !MGEODE_LX &&  !MCYRIXIII &&  !MVIAC3_2 &&  !MVIAC7 &&  !MPSC &&  !MCORE2 &&  !MATOM )",
            "restrict": ""
        }
    ],
    "X86_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": ""
        }
    ],
    "X86_INTERNODE_CACHE_SHIFT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 12 )[!(y) && (X86_VSMP)] || ( X86_L1_CACHE_SHIFT )[!(y)]"
        }
    ],
    "X86_L1_CACHE_SHIFT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 7 )[!(y) && (MPENTIUM4 || MPSC)] || ( 6 )[!(y) && (MK7 || MK8 || MPENTIUMM || MCORE2 || MATOM || MVIAC7 || X86_GENERIC || GENERIC_CPU)] || ( 4 )[!(y) && (MELAN || M486SX || M486 || MGEODEGX1)] || ( 5 )[!(y) && (MWINCHIP3D || MWINCHIPC6 || MCRUSOE || MEFFICEON || MCYRIXIII || MK6 || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || M586 || MVIAC3_2 || MGEODE_LX)]"
        }
    ],
    "X86_F00F_BUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(M586MMX || M586TSC || M586 || M486SX || M486)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_INVD_BUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(M486SX || M486)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_ALIGNMENT_16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MELAN || MK6 || M586MMX || M586TSC || M586 || M486SX || M486 || MVIAC3_2 || MGEODEGX1)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_INTEL_USERCOPY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M586MMX || X86_GENERIC || MK8 || MK7 || MEFFICEON || MCORE2)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_USE_PPRO_CHECKSUM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MK8 || MVIAC3_2 || MVIAC7 || MEFFICEON || MGEODE_LX || MCORE2 || MATOM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_P6_NOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && (( MCORE2 || MPENTIUM4 || MPSC ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_TSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( MWINCHIP3D || MCRUSOE || MEFFICEON || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || MK8 || MVIAC3_2 || MVIAC7 || MGEODEGX1 || MGEODE_LX || MCORE2 || MATOM ) || X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_CMPXCHG64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_PAE || X86_64 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || M586TSC || M586MMX || MATOM || MGEODE_LX || MGEODEGX1 || MK6 || MK7 || MK8)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_CMOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( MK8 || MK7 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MVIAC3_2 || MVIAC7 || MCRUSOE || MEFFICEON || X86_64 || MATOM || MGEODE_LX ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_MINIMUM_CPU_FAMILY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 64 )[!(y) && (X86_64)] || ( 6 )[!(y) && (X86_32 && ( MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MVIAC3_2 || MVIAC7 || MEFFICEON || MATOM || MCRUSOE || MCORE2 || MK7 || MK8 ))] || ( 5 )[!(y) && (X86_32 && X86_CMPXCHG64)] || ( 4 )[!(y)]"
        }
    ],
    "X86_DEBUGCTLMSR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! ( MK6 || MWINCHIPC6 || MWINCHIP3D || MCYRIXIII || M586MMX || M586TSC || M586 || M486SX || M486 ) && ! UML)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IA32_FEAT_CTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_SUP_INTEL || CPU_SUP_CENTAUR || CPU_SUP_ZHAOXIN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_VMX_FEATURE_NAMES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IA32_FEAT_CTL && X86_FEATURE_NAMES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PROCESSOR_SELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CPU_SUP_INTEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_CYRIX_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(M486SX || M486 || M586 || M586TSC || M586MMX || ( EXPERT && ! 64BIT ))",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_AMD": [
        {
            "type": "bool",
            "rev_select": "CPU_SUP_HYGON",
            "dep": "",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_HYGON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_CENTAUR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_TRANSMETA_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! 64BIT)",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_UMC_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(M486SX || M486 || ( EXPERT && ! 64BIT ))",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_ZHAOXIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "CPU_SUP_VORTEX_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": "( y )[!(PROCESSOR_SELECT)]"
        }
    ],
    "HPET_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( X86_64 )[!(X86_32)]"
        }
    ],
    "HPET_EMULATE_RTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HPET_TIMER && ( RTC_DRV_CMOS = m || RTC_DRV_CMOS = y ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMI": [
        {
            "type": "bool",
            "rev_select": "EDAC_SKX || EDAC_I10NM",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "GART_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && PCI && AMD_NB)",
            "restrict": ""
        }
    ],
    "BOOT_VESA_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "SYSFB || FB_INTEL[FB_INTEL = y] || FB_SIS[FB_SIS = y]",
            "dep": "",
            "restrict": ""
        }
    ],
    "MAXSMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && SMP && DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "NR_CPUS_RANGE_BEGIN": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( NR_CPUS_RANGE_END )[!(y) && (MAXSMP)] || ( 1 )[!(y) && (! SMP)] || ( 2 )[!(y)]"
        }
    ],
    "NR_CPUS_RANGE_END": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": "( 64 )[!(y) && (SMP && X86_BIGSMP)] || ( 8 )[!(y) && (SMP && ! X86_BIGSMP)] || ( 1 )[!(y) && (! SMP)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "(X86_64)",
            "restrict": "( 8192 )[!(y) && (SMP && CPUMASK_OFFSTACK)] || ( 512 )[!(y) && (SMP && ! CPUMASK_OFFSTACK)] || ( 1 )[!(y) && (! SMP)]"
        }
    ],
    "NR_CPUS_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": "( 32 )[!(y) && (X86_BIGSMP)] || ( 8 )[!(y) && (SMP)] || ( 1 )[!(y) && (! SMP)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "(X86_64)",
            "restrict": "( 8192 )[!(y) && (MAXSMP)] || ( 64 )[!(y) && (SMP)] || ( 1 )[!(y) && (! SMP)]"
        }
    ],
    "NR_CPUS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( NR_CPUS_RANGE_BEGIN NR_CPUS_RANGE_END ) || ( NR_CPUS_DEFAULT )[!(SMP && ! MAXSMP)]"
        }
    ],
    "SCHED_CLUSTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCHED_SMT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (SMP)]"
        }
    ],
    "SCHED_MC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCHED_MC_PRIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCHED_MC && CPU_SUP_INTEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "UP_LATE_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! SMP && X86_LOCAL_APIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_UP_APIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && ! SMP && ! X86_32_NON_STANDARD)",
            "restrict": "( PCI_MSI )[!(! PCI_MSI)]"
        }
    ],
    "X86_UP_IOAPIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_UP_APIC)",
            "restrict": ""
        }
    ],
    "X86_LOCAL_APIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC || PCI_MSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_IO_APIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_LOCAL_APIC || X86_UP_IOAPIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_REROUTE_FOR_BROKEN_BOOT_IRQS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_IO_APIC)",
            "restrict": ""
        }
    ],
    "X86_MCE": [
        {
            "type": "bool",
            "rev_select": "INTEL_TDX_GUEST",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_MCELOG_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_MCE)",
            "restrict": ""
        }
    ],
    "X86_MCE_INTEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_MCE && X86_LOCAL_APIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_MCE_AMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_MCE && X86_LOCAL_APIC && AMD_NB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_ANCIENT_MCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && X86_MCE)",
            "restrict": ""
        }
    ],
    "X86_MCE_THRESHOLD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_MCE_AMD || X86_MCE_INTEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_MCE_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_MCE && X86_LOCAL_APIC && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "PERF_EVENTS_INTEL_UNCORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PERF_EVENTS && CPU_SUP_INTEL && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PERF_EVENTS_INTEL_RAPL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PERF_EVENTS && ( CPU_SUP_INTEL || CPU_SUP_AMD ) && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PERF_EVENTS_INTEL_CSTATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PERF_EVENTS && CPU_SUP_INTEL && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PERF_EVENTS_AMD_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PERF_EVENTS && CPU_SUP_AMD)",
            "restrict": ""
        }
    ],
    "PERF_EVENTS_AMD_UNCORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PERF_EVENTS && CPU_SUP_AMD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PERF_EVENTS_AMD_BRS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PERF_EVENTS && CPU_SUP_AMD)",
            "restrict": ""
        }
    ],
    "X86_LEGACY_VM86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": ""
        }
    ],
    "VM86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( X86_LEGACY_VM86 )[!(y)]"
        }
    ],
    "X86_16BIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MODIFY_LDT_SYSCALL)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "X86_ESPFIX32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_16BIT && X86_32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_ESPFIX64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_16BIT && X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_VSYSCALL_EMULATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "X86_IOPL_IOPERM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TOSHIBA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": ""
        }
    ],
    "X86_REBOOTFIXUPS": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_CE || X86_RDC321X",
            "dep": "(X86_32)",
            "restrict": ""
        }
    ],
    "MICROCODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_SUP_AMD || CPU_SUP_INTEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MICROCODE_INTEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_SUP_INTEL && MICROCODE)",
            "restrict": "( MICROCODE )[!(y)]"
        }
    ],
    "MICROCODE_AMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_SUP_AMD && MICROCODE)",
            "restrict": ""
        }
    ],
    "MICROCODE_LATE_LOADING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MICROCODE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "X86_MSR": [
        {
            "type": "tristate",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "",
            "restrict": ""
        }
    ],
    "X86_CPUID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "NOHIGHMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && ( NOHIGHMEM &&  !HIGHMEM4G &&  !HIGHMEM64G )",
            "restrict": ""
        }
    ],
    "HIGHMEM4G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && ( HIGHMEM4G &&  !NOHIGHMEM &&  !HIGHMEM64G )",
            "restrict": ""
        }
    ],
    "HIGHMEM64G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && (! M486SX && ! M486 && ! M586 && ! M586TSC && ! M586MMX && ! MGEODE_LX && ! MGEODEGX1 && ! MCYRIXIII && ! MELAN && ! MWINCHIPC6 && ! MWINCHIP3D && ! MK6) && ( HIGHMEM64G &&  !NOHIGHMEM &&  !HIGHMEM4G )",
            "restrict": ""
        }
    ],
    "VMSPLIT_3G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && ( VMSPLIT_3G &&  !VMSPLIT_3G_OPT &&  !VMSPLIT_2G &&  !VMSPLIT_2G_OPT &&  !VMSPLIT_1G )",
            "restrict": ""
        }
    ],
    "VMSPLIT_3G_OPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && (! X86_PAE) && ( VMSPLIT_3G_OPT &&  !VMSPLIT_3G &&  !VMSPLIT_2G &&  !VMSPLIT_2G_OPT &&  !VMSPLIT_1G )",
            "restrict": ""
        }
    ],
    "VMSPLIT_2G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && ( VMSPLIT_2G &&  !VMSPLIT_3G &&  !VMSPLIT_3G_OPT &&  !VMSPLIT_2G_OPT &&  !VMSPLIT_1G )",
            "restrict": ""
        }
    ],
    "VMSPLIT_2G_OPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && (! X86_PAE) && ( VMSPLIT_2G_OPT &&  !VMSPLIT_3G &&  !VMSPLIT_3G_OPT &&  !VMSPLIT_2G &&  !VMSPLIT_1G )",
            "restrict": ""
        }
    ],
    "VMSPLIT_1G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 ) ) && ( VMSPLIT_1G &&  !VMSPLIT_3G &&  !VMSPLIT_3G_OPT &&  !VMSPLIT_2G &&  !VMSPLIT_2G_OPT )",
            "restrict": ""
        }
    ],
    "PAGE_OFFSET": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": "( 0xB0000000 )[!(y) && (VMSPLIT_3G_OPT)] || ( 0x80000000 )[!(y) && (VMSPLIT_2G)] || ( 0x78000000 )[!(y) && (VMSPLIT_2G_OPT)] || ( 0x40000000 )[!(y) && (VMSPLIT_1G)] || ( 0xC0000000 )[!(y)]"
        }
    ],
    "HIGHMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && ( HIGHMEM64G || HIGHMEM4G ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_PAE": [
        {
            "type": "bool",
            "rev_select": "HIGHMEM64G",
            "dep": "(X86_32 && ! HIGHMEM4G)",
            "restrict": ""
        }
    ],
    "X86_5LEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_DIRECT_GBPAGES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_CPA_STATISTICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS)",
            "restrict": ""
        }
    ],
    "X86_MEM_ENCRYPT": [
        {
            "type": "bool",
            "rev_select": "INTEL_TDX_GUEST || AMD_MEM_ENCRYPT",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "AMD_MEM_ENCRYPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && CPU_SUP_AMD)",
            "restrict": ""
        }
    ],
    "AMD_MEM_ENCRYPT_ACTIVE_BY_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(AMD_MEM_ENCRYPT)",
            "restrict": ""
        }
    ],
    "NUMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP) && (X86_64 || ( X86_32 && HIGHMEM64G && X86_BIGSMP ))",
            "restrict": "( y )[!(y) && (X86_BIGSMP)]"
        }
    ],
    "AMD_NUMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && NUMA && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_64_ACPI_NUMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && NUMA && ACPI && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NUMA_EMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NUMA)",
            "restrict": ""
        }
    ],
    "NODES_SHIFT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(NUMA)",
            "restrict": "( 1 10 ) || ( 10 )[!(! MAXSMP) && (MAXSMP)] || ( 6 )[!(! MAXSMP) && (X86_64)] || ( 3 )[!(! MAXSMP)]"
        }
    ],
    "ARCH_FLATMEM_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && ! NUMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_SPARSEMEM_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 || NUMA || X86_32 || X86_32_NON_STANDARD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_SPARSEMEM_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( X86_64 || ( NUMA && X86_32 ) )[!(y)]"
        }
    ],
    "ARCH_SELECT_MEMORY_MODEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SPARSEMEM_ENABLE && ARCH_FLATMEM_ENABLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_MEMORY_PROBE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MEMORY_HOTPLUG)",
            "restrict": ""
        }
    ],
    "ARCH_PROC_KCORE_TEXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && PROC_KCORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ILLEGAL_POINTER_VALUE": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "",
            "restrict": "( 0 )[!(y) && (X86_32)] || ( 0xdead000000000000 )[!(y) && (X86_64)]"
        }
    ],
    "X86_PMEM_LEGACY_DEVICE": [
        {
            "type": "bool",
            "rev_select": "X86_PMEM_LEGACY",
            "dep": "",
            "restrict": ""
        }
    ],
    "X86_PMEM_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PHYS_ADDR_T_64BIT) && (BLK_DEV)",
            "restrict": ""
        }
    ],
    "HIGHPTE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HIGHMEM)",
            "restrict": ""
        }
    ],
    "X86_CHECK_BIOS_CORRUPTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_CHECK_BIOS_CORRUPTION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MATH_EMULATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MODIFY_LDT_SYSCALL)",
            "restrict": ""
        }
    ],
    "MTRR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MTRR_SANITIZER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MTRR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MTRR_SANITIZER_ENABLE_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(MTRR_SANITIZER)",
            "restrict": "( 0 1 ) || ( 0 )[!(y)]"
        }
    ],
    "MTRR_SANITIZER_SPARE_REG_NR_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(MTRR_SANITIZER)",
            "restrict": "( 0 7 ) || ( 1 )[!(y)]"
        }
    ],
    "X86_PAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MTRR)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ARCH_USES_PG_UNCACHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_PAT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_UMIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "CC_HAS_IBT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ( ( CC_IS_GCC && SP_WORD ) || ( CC_IS_CLANG && CLANG_VERSION >= 140000 ) ) && SP_WORD )[!(y)]"
        }
    ],
    "X86_KERNEL_IBT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && CC_HAS_IBT && HAVE_OBJTOOL) && (! LD_IS_LLD || LLD_VERSION >= 140000)",
            "restrict": ""
        }
    ],
    "X86_INTEL_MEMORY_PROTECTION_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && ( CPU_SUP_INTEL || CPU_SUP_AMD ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_INTEL_TSX_MODE_OFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CPU_SUP_INTEL ) ) && ( X86_INTEL_TSX_MODE_OFF &&  !X86_INTEL_TSX_MODE_ON &&  !X86_INTEL_TSX_MODE_AUTO )",
            "restrict": ""
        }
    ],
    "X86_INTEL_TSX_MODE_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CPU_SUP_INTEL ) ) && ( X86_INTEL_TSX_MODE_ON &&  !X86_INTEL_TSX_MODE_OFF &&  !X86_INTEL_TSX_MODE_AUTO )",
            "restrict": ""
        }
    ],
    "X86_INTEL_TSX_MODE_AUTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CPU_SUP_INTEL ) ) && ( X86_INTEL_TSX_MODE_AUTO &&  !X86_INTEL_TSX_MODE_OFF &&  !X86_INTEL_TSX_MODE_ON )",
            "restrict": ""
        }
    ],
    "X86_SGX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && CPU_SUP_INTEL && X86_X2APIC) && (CRYPTO = y) && (CRYPTO_SHA256 = y)",
            "restrict": ""
        }
    ],
    "EFI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ACPI)",
            "restrict": ""
        }
    ],
    "EFI_STUB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EFI)",
            "restrict": ""
        }
    ],
    "EFI_MIXED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EFI_STUB && X86_64)",
            "restrict": ""
        }
    ],
    "HZ_100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HZ_100 &&  !HZ_250 &&  !HZ_300 &&  !HZ_1000 )",
            "restrict": ""
        }
    ],
    "HZ_250": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HZ_250 &&  !HZ_100 &&  !HZ_300 &&  !HZ_1000 )",
            "restrict": ""
        }
    ],
    "HZ_300": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HZ_300 &&  !HZ_100 &&  !HZ_250 &&  !HZ_1000 )",
            "restrict": ""
        }
    ],
    "HZ_1000": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HZ_1000 &&  !HZ_100 &&  !HZ_250 &&  !HZ_300 )",
            "restrict": ""
        }
    ],
    "HZ": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 100 )[!(y) && (HZ_100)] || ( 250 )[!(y) && (HZ_250)] || ( 300 )[!(y) && (HZ_300)] || ( 1000 )[!(y) && (HZ_1000)]"
        }
    ],
    "SCHED_HRTICK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( HIGH_RES_TIMERS )[!(y)]"
        }
    ],
    "KEXEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEXEC_FILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && (CRYPTO = y) && (CRYPTO_SHA256 = y)",
            "restrict": ""
        }
    ],
    "ARCH_HAS_KEXEC_PURGATORY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( KEXEC_FILE )[!(y)]"
        }
    ],
    "KEXEC_SIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEXEC_FILE)",
            "restrict": ""
        }
    ],
    "KEXEC_SIG_FORCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEXEC_SIG)",
            "restrict": ""
        }
    ],
    "KEXEC_BZIMAGE_VERIFY_SIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEXEC_SIG) && (SIGNED_PE_FILE_VERIFICATION)",
            "restrict": ""
        }
    ],
    "CRASH_DUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 || ( X86_32 && HIGHMEM ))",
            "restrict": ""
        }
    ],
    "KEXEC_JUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEXEC && HIBERNATION)",
            "restrict": ""
        }
    ],
    "PHYSICAL_START": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"0x1000000\" )[!(( EXPERT || CRASH_DUMP ))]"
        }
    ],
    "RELOCATABLE": [
        {
            "type": "bool",
            "rev_select": "EFI_STUB",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RANDOMIZE_BASE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RELOCATABLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_NEED_RELOCS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RANDOMIZE_BASE || ( X86_32 && RELOCATABLE ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PHYSICAL_ALIGN": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "",
            "restrict": "( 0x2000 0x1000000 )[X86_32] || ( 0x200000 0x1000000 )[X86_64] || ( \"0x200000\" )[!(y)]"
        }
    ],
    "DYNAMIC_MEMORY_LAYOUT": [
        {
            "type": "bool",
            "rev_select": "X86_5LEVEL || RANDOMIZE_MEMORY",
            "dep": "",
            "restrict": ""
        }
    ],
    "RANDOMIZE_MEMORY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && (RANDOMIZE_BASE)",
            "restrict": "( RANDOMIZE_BASE )[!(y)]"
        }
    ],
    "RANDOMIZE_MEMORY_PHYSICAL_PADDING": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "(RANDOMIZE_MEMORY)",
            "restrict": "( 0x1 0x40 )[MEMORY_HOTPLUG] || ( 0x0 0x40 ) || ( \"0xa\" )[!(EXPERT) && (MEMORY_HOTPLUG)] || ( \"0x0\" )[!(EXPERT)]"
        }
    ],
    "HOTPLUG_CPU": [
        {
            "type": "bool",
            "rev_select": "PM_SLEEP_SMP",
            "dep": "(SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BOOTPARAM_HOTPLUG_CPU0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HOTPLUG_CPU)",
            "restrict": ""
        }
    ],
    "DEBUG_HOTPLUG_CPU0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HOTPLUG_CPU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "COMPAT_VDSO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(COMPAT_32)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "LEGACY_VSYSCALL_XONLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_64 ) ) && ( LEGACY_VSYSCALL_XONLY &&  !LEGACY_VSYSCALL_NONE )",
            "restrict": ""
        }
    ],
    "LEGACY_VSYSCALL_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_64 ) ) && ( LEGACY_VSYSCALL_NONE &&  !LEGACY_VSYSCALL_XONLY )",
            "restrict": ""
        }
    ],
    "CMDLINE_BOOL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CMDLINE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(CMDLINE_BOOL)",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "CMDLINE_OVERRIDE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CMDLINE_BOOL && CMDLINE != \"\")",
            "restrict": ""
        }
    ],
    "MODIFY_LDT_SYSCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "STRICT_SIGALTSTACK_SIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DYNAMIC_SIGFRAME)",
            "restrict": ""
        }
    ],
    "HAVE_LIVEPATCH": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "LIVEPATCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DYNAMIC_FTRACE_WITH_REGS || DYNAMIC_FTRACE_WITH_ARGS) && (MODULES) && (SYSFS) && (KALLSYMS_ALL) && (HAVE_LIVEPATCH) && (! TRIM_UNUSED_KSYMS)",
            "restrict": ""
        }
    ],
    "CC_HAS_SLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_RETURN_THUNK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "SPECULATION_MITIGATIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PAGE_TABLE_ISOLATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS ) && (( X86_64 || X86_PAE ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RETPOLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RETHUNK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS ) && (RETPOLINE && CC_HAS_RETURN_THUNK)",
            "restrict": "( y )[!(y) && (X86_64)]"
        }
    ],
    "CPU_UNRET_ENTRY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS ) && (CPU_SUP_AMD && RETHUNK && X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CPU_IBPB_ENTRY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS ) && (CPU_SUP_AMD && X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CPU_IBRS_ENTRY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS ) && (CPU_SUP_INTEL && X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPECULATION_MITIGATIONS ) && (CC_HAS_SLS && X86_64)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_ADD_PAGES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_ENABLE_MEMORY_HOTPLUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_HIBERNATION_HEADER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HIBERNATION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SUSPEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SUSPEND_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SUSPEND_FREEZER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SUSPEND)",
            "restrict": "( y )[!(ARCH_WANTS_FREEZER_CONTROL || BROKEN)]"
        }
    ],
    "SUSPEND_SKIP_SYNC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SUSPEND) && (EXPERT)",
            "restrict": ""
        }
    ],
    "HIBERNATE_CALLBACKS": [
        {
            "type": "bool",
            "rev_select": "XEN_SAVE_RESTORE || HIBERNATION",
            "dep": "",
            "restrict": ""
        }
    ],
    "HIBERNATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SWAP && ARCH_HIBERNATION_POSSIBLE)",
            "restrict": ""
        }
    ],
    "HIBERNATION_SNAPSHOT_DEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HIBERNATION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM_STD_PARTITION": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(HIBERNATION)",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "PM_SLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SUSPEND || HIBERNATE_CALLBACKS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM_SLEEP_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP) && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && (PM_SLEEP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM_SLEEP_SMP_NONZERO_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP_SMP) && (ARCH_SUSPEND_NONZERO_CPU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM_AUTOSLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP)",
            "restrict": ""
        }
    ],
    "PM_USERSPACE_AUTOSLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP)",
            "restrict": ""
        }
    ],
    "PM_WAKELOCKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP)",
            "restrict": ""
        }
    ],
    "PM_WAKELOCKS_LIMIT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(PM_WAKELOCKS)",
            "restrict": "( 0 100000 ) || ( 100 )[!(y)]"
        }
    ],
    "PM_WAKELOCKS_GC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_WAKELOCKS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM": [
        {
            "type": "bool",
            "rev_select": "PM_SLEEP || SOC_K210_SYSCTL || ARCH_RCAR_GEN1 || ARCH_RCAR_GEN2 || ARCH_RCAR_GEN3 || ARCH_RMOBILE || ARCH_RZG2L || ARCH_RZN1 || ARCH_R7S72100 || ARCH_R7S9210 || ARCH_R9A09G011",
            "dep": "",
            "restrict": ""
        }
    ],
    "PM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM)",
            "restrict": ""
        }
    ],
    "PM_ADVANCED_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_DEBUG)",
            "restrict": ""
        }
    ],
    "PM_TEST_SUSPEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SUSPEND && PM_DEBUG && RTC_CLASS = y)",
            "restrict": ""
        }
    ],
    "PM_SLEEP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_DEBUG && PM_SLEEP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DPM_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_DEBUG && PSTORE && EXPERT)",
            "restrict": ""
        }
    ],
    "DPM_WATCHDOG_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(DPM_WATCHDOG)",
            "restrict": "( 1 120 ) || ( 120 )[!(y)]"
        }
    ],
    "PM_TRACE": [
        {
            "type": "bool",
            "rev_select": "PM_TRACE_RTC",
            "dep": "",
            "restrict": ""
        }
    ],
    "PM_TRACE_RTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP_DEBUG) && (X86)",
            "restrict": ""
        }
    ],
    "APM_EMULATION": [
        {
            "type": "tristate",
            "rev_select": "PMAC_APM_EMU",
            "dep": "(SYS_SUPPORTS_APM_EMULATION)",
            "restrict": ""
        }
    ],
    "PM_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM && HAVE_CLK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM_GENERIC_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "ARM_SCMI_POWER_DOMAIN[PM] || ARM_SCPI_POWER_DOMAIN[PM] || DRM_AMD_ACP[PM] || QCOM_GDSC[PM] || OWL_PM_DOMAINS || MESON_GX_PM_DOMAINS || MESON_EE_PM_DOMAINS || MESON_SECURE_PM_DOMAINS || APPLE_PMGR_PWRSTATE || BCM2835_POWER[PM] || RASPBERRYPI_POWER[PM] || BCM63XX_POWER[PM] || BCM_PMB[PM] || IMX_GPCV2_PM_DOMAINS || MTK_SCPSYS[PM] || MTK_SCPSYS_PM_DOMAINS || QCOM_AOSS_QMP || QCOM_RPMPD || ARCH_RCAR_GEN1 || ARCH_RCAR_GEN2 || ARCH_RCAR_GEN3 || ARCH_RMOBILE || ARCH_RZG2L || ARCH_RZN1 || ARCH_R7S72100 || ARCH_R7S9210 || ARCH_R9A09G011 || ROCKCHIP_PM_DOMAINS || SOC_TEGRA_PMC || ZYNQMP_PM_DOMAINS",
            "dep": "(PM)",
            "restrict": ""
        }
    ],
    "WQ_POWER_EFFICIENT_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM)",
            "restrict": ""
        }
    ],
    "PM_GENERIC_DOMAINS_SLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP && PM_GENERIC_DOMAINS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PM_GENERIC_DOMAINS_OF": [
        {
            "type": "bool",
            "rev_select": "MESON_GX_PM_DOMAINS || MESON_EE_PM_DOMAINS || MESON_SECURE_PM_DOMAINS || QCOM_RPMPD",
            "dep": "(PM_GENERIC_DOMAINS && OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CPU_PM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ENERGY_MODEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP) && (CPU_FREQ)",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_ACPI": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SUPPORTS_ACPI)",
            "restrict": ""
        }
    ],
    "ACPI_LEGACY_TABLES_LOOKUP": [
        {
            "type": "bool",
            "rev_select": "X86[ACPI]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ARCH_MIGHT_HAVE_ACPI_PDC": [
        {
            "type": "bool",
            "rev_select": "X86[ACPI]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_GENERIC_GSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_SYSTEM_POWER_STATES_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "X86[ACPI]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_CCA_REQUIRED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_TABLE_LIB": [
        {
            "type": "bool",
            "rev_select": "CXL_ACPI",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_DEBUGGER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_DEBUGGER_USER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && ( ACPI_DEBUGGER ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ACPI_SPCR_TABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": "( y )[!(y) && (X86)]"
        }
    ],
    "ACPI_FPDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (X86_64)",
            "restrict": ""
        }
    ],
    "ACPI_LPIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_SLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (SUSPEND || HIBERNATION) && (ACPI_SYSTEM_POWER_STATES_SUPPORT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_REV_OVERRIDE_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_EC_DEBUGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_AC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_BATTERY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_BUTTON": [
        {
            "type": "tristate",
            "rev_select": "DRM_I915[ACPI]",
            "dep": "( ACPI ) && (INPUT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_TINY_POWER_BUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (! ACPI_BUTTON)",
            "restrict": ""
        }
    ],
    "ACPI_TINY_POWER_BUTTON_SIGNAL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_TINY_POWER_BUTTON)",
            "restrict": "( 38 )[!(y)]"
        }
    ],
    "ACPI_VIDEO": [
        {
            "type": "tristate",
            "rev_select": "DRM_NOUVEAU[ACPI && X86] || DRM_I915[ACPI] || DRM_GMA500[ACPI] || ACER_WMI",
            "dep": "( ACPI ) && (BACKLIGHT_CLASS_DEVICE) && (INPUT)",
            "restrict": ""
        }
    ],
    "ACPI_FAN": [
        {
            "type": "tristate",
            "rev_select": "INT340X_THERMAL",
            "dep": "( ACPI ) && (THERMAL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_TAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (SYSFS && PM_SLEEP)",
            "restrict": ""
        }
    ],
    "ACPI_DOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_CPU_FREQ_PSS": [
        {
            "type": "bool",
            "rev_select": "ACPI_PROCESSOR[X86 || IA64 || LOONGARCH]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_PROCESSOR_CSTATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_PROCESSOR) && (IA64 || X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_PROCESSOR_IDLE": [
        {
            "type": "bool",
            "rev_select": "ACPI_PROCESSOR",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_MCFG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_CPPC_LIB": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_PSTATE[X86_64 && ACPI && SCHED_MC_PRIO] || X86_AMD_PSTATE[X86_64] || ACPI_CPPC_CPUFREQ",
            "dep": "( ACPI ) && (ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "ACPI_PROCESSOR": [
        {
            "type": "tristate",
            "rev_select": "X86_INTEL_PSTATE[ACPI] || X86_AMD_PSTATE",
            "dep": "( ACPI ) && (X86 || IA64 || ARM64 || LOONGARCH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_IPMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (IPMI_HANDLER)",
            "restrict": ""
        }
    ],
    "ACPI_HOTPLUG_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_PROCESSOR && HOTPLUG_CPU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_PROCESSOR_AGGREGATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_PROCESSOR) && (X86)",
            "restrict": ""
        }
    ],
    "ACPI_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_PROCESSOR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_PLATFORM_PROFILE": [
        {
            "type": "tristate",
            "rev_select": "SURFACE_PLATFORM_PROFILE || ASUS_WMI || HP_WMI || IDEAPAD_LAPTOP || THINKPAD_ACPI",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_CUSTOM_DSDT_FILE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( ACPI ) && (! STANDALONE)",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "ACPI_CUSTOM_DSDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": "( ACPI_CUSTOM_DSDT_FILE != \"\" )[!(y)]"
        }
    ],
    "ARCH_HAS_ACPI_TABLE_UPGRADE": [
        {
            "type": "bool",
            "rev_select": "X86[ACPI]",
            "dep": "( ACPI )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ACPI_TABLE_UPGRADE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (BLK_DEV_INITRD && ARCH_HAS_ACPI_TABLE_UPGRADE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_TABLE_OVERRIDE_VIA_BUILTIN_INITRD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_TABLE_UPGRADE) && (INITRAMFS_SOURCE != \"\" && INITRAMFS_COMPRESSION_NONE)",
            "restrict": ""
        }
    ],
    "ACPI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "ACPI_DEBUGGER",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_PCI_SLOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (SYSFS && PCI)",
            "restrict": ""
        }
    ],
    "ACPI_CONTAINER": [
        {
            "type": "bool",
            "rev_select": "ACPI_HOTPLUG_CPU",
            "dep": "( ACPI )",
            "restrict": "( ( ACPI_HOTPLUG_MEMORY || ACPI_HOTPLUG_CPU ) )[!(y)]"
        }
    ],
    "ACPI_HOTPLUG_MEMORY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (MEMORY_HOTPLUG)",
            "restrict": ""
        }
    ],
    "ACPI_HOTPLUG_IOAPIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (PCI) && (X86_IO_APIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_SBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (X86)",
            "restrict": ""
        }
    ],
    "ACPI_HED": [
        {
            "type": "tristate",
            "rev_select": "ACPI_APEI_GHES",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_CUSTOM_METHOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ACPI_BGRT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (EFI && ( X86 || ARM64 ))",
            "restrict": ""
        }
    ],
    "ACPI_REDUCED_HARDWARE_ONLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": "( n )[!(EXPERT)]"
        }
    ],
    "ACPI_NFIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (PHYS_ADDR_T_64BIT) && (BLK_DEV) && (ARCH_HAS_PMEM_API)",
            "restrict": ""
        }
    ],
    "NFIT_SECURITY_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_NFIT)",
            "restrict": ""
        }
    ],
    "ACPI_NUMA": [
        {
            "type": "bool",
            "rev_select": "X86_64_ACPI_NUMA",
            "dep": "( ACPI ) && (NUMA) && (( X86 || IA64 || ARM64 || LOONGARCH ))",
            "restrict": "( y )[!(y) && (IA64 || ARM64)]"
        }
    ],
    "ACPI_HMAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_NUMA)",
            "restrict": ""
        }
    ],
    "HAVE_ACPI_APEI": [
        {
            "type": "bool",
            "rev_select": "X86[ACPI]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "HAVE_ACPI_APEI_NMI": [
        {
            "type": "bool",
            "rev_select": "X86[ACPI]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_APEI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (HAVE_ACPI_APEI)",
            "restrict": ""
        }
    ],
    "ACPI_APEI_GHES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_APEI)",
            "restrict": ""
        }
    ],
    "ACPI_APEI_PCIEAER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_APEI && PCIEAER)",
            "restrict": ""
        }
    ],
    "ACPI_APEI_SEA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ARM64 && ACPI_APEI_GHES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACPI_APEI_MEMORY_FAILURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_APEI && MEMORY_FAILURE)",
            "restrict": ""
        }
    ],
    "ACPI_APEI_EINJ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_APEI && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ACPI_APEI_ERST_DEBUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (ACPI_APEI)",
            "restrict": ""
        }
    ],
    "ACPI_DPTF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (X86)",
            "restrict": ""
        }
    ],
    "DPTF_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && ( ACPI_DPTF )",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DPTF_PCH_FIVR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && ( ACPI_DPTF )",
            "restrict": "( m )[!(y)]"
        }
    ],
    "ACPI_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "WDAT_WDT",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_EXTLOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (X86_MCE && X86_LOCAL_APIC && EDAC)",
            "restrict": ""
        }
    ],
    "ACPI_ADXL": [
        {
            "type": "bool",
            "rev_select": "EDAC_SKX || EDAC_I10NM",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_CONFIGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_PFRUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACPI ) && (64BIT)",
            "restrict": ""
        }
    ],
    "ACPI_IORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ACPI_GTDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ACPI_AGDI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( ARM64 ) && (ARM_SDE_INTERFACE)",
            "restrict": ""
        }
    ],
    "ACPI_PPTT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ACPI_PCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (PCC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "BYTCRC_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( PMIC_OPREGION ) && (INTEL_SOC_PMIC)",
            "restrict": ""
        }
    ],
    "CHTCRC_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( PMIC_OPREGION ) && (INTEL_SOC_PMIC)",
            "restrict": ""
        }
    ],
    "XPOWER_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( PMIC_OPREGION ) && (MFD_AXP20X_I2C && IOSF_MBI = y)",
            "restrict": ""
        }
    ],
    "BXT_WC_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( PMIC_OPREGION ) && (INTEL_SOC_PMIC_BXTWC)",
            "restrict": ""
        }
    ],
    "CHT_WC_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( PMIC_OPREGION ) && (INTEL_SOC_PMIC_CHTWC)",
            "restrict": ""
        }
    ],
    "CHT_DC_TI_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && ( PMIC_OPREGION ) && (INTEL_SOC_PMIC_CHTDC_TI)",
            "restrict": ""
        }
    ],
    "TPS68470_PMIC_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (INTEL_SKL_INT3472)",
            "restrict": ""
        }
    ],
    "ACPI_VIOT": [
        {
            "type": "bool",
            "rev_select": "VIRTIO_IOMMU[ACPI]",
            "dep": "( ACPI )",
            "restrict": ""
        }
    ],
    "ACPI_PRMT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACPI ) && (EFI && ( X86_64 || ARM64 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_PM_TIMER": [
        {
            "type": "bool",
            "rev_select": "JAILHOUSE_GUEST",
            "dep": "(X86 && ( ACPI || JAILHOUSE_GUEST ))",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "X86_APM_BOOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(APM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "APM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_32 && PM_SLEEP)",
            "restrict": ""
        }
    ],
    "APM_IGNORE_USER_SUSPEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( APM )",
            "restrict": ""
        }
    ],
    "APM_DO_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( APM )",
            "restrict": ""
        }
    ],
    "APM_CPU_IDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( APM ) && (CPU_IDLE)",
            "restrict": ""
        }
    ],
    "APM_DISPLAY_BLANK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( APM )",
            "restrict": ""
        }
    ],
    "APM_ALLOW_INTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( APM )",
            "restrict": ""
        }
    ],
    "CPU_FREQ": [
        {
            "type": "bool",
            "rev_select": "SCHED_MC_PRIO",
            "dep": "",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_ATTR_SET": [
        {
            "type": "bool",
            "rev_select": "CPU_FREQ_GOV_COMMON || CPU_FREQ_GOV_SCHEDUTIL",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_COMMON": [
        {
            "type": "bool",
            "rev_select": "CPU_FREQ_GOV_ONDEMAND || CPU_FREQ_GOV_CONSERVATIVE",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_STAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_DEFAULT_GOV_PERFORMANCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( CPU_FREQ_DEFAULT_GOV_PERFORMANCE &&  !CPU_FREQ_DEFAULT_GOV_POWERSAVE &&  !CPU_FREQ_DEFAULT_GOV_USERSPACE &&  !CPU_FREQ_DEFAULT_GOV_ONDEMAND &&  !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE &&  !CPU_FREQ_DEFAULT_GOV_SCHEDUTIL )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_DEFAULT_GOV_POWERSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( CPU_FREQ_DEFAULT_GOV_POWERSAVE &&  !CPU_FREQ_DEFAULT_GOV_PERFORMANCE &&  !CPU_FREQ_DEFAULT_GOV_USERSPACE &&  !CPU_FREQ_DEFAULT_GOV_ONDEMAND &&  !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE &&  !CPU_FREQ_DEFAULT_GOV_SCHEDUTIL )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_DEFAULT_GOV_USERSPACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( CPU_FREQ_DEFAULT_GOV_USERSPACE &&  !CPU_FREQ_DEFAULT_GOV_PERFORMANCE &&  !CPU_FREQ_DEFAULT_GOV_POWERSAVE &&  !CPU_FREQ_DEFAULT_GOV_ONDEMAND &&  !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE &&  !CPU_FREQ_DEFAULT_GOV_SCHEDUTIL )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_DEFAULT_GOV_ONDEMAND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && (! ( X86_INTEL_PSTATE && SMP )) && ( CPU_FREQ_DEFAULT_GOV_ONDEMAND &&  !CPU_FREQ_DEFAULT_GOV_PERFORMANCE &&  !CPU_FREQ_DEFAULT_GOV_POWERSAVE &&  !CPU_FREQ_DEFAULT_GOV_USERSPACE &&  !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE &&  !CPU_FREQ_DEFAULT_GOV_SCHEDUTIL )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_DEFAULT_GOV_CONSERVATIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && (! ( X86_INTEL_PSTATE && SMP )) && ( CPU_FREQ_DEFAULT_GOV_CONSERVATIVE &&  !CPU_FREQ_DEFAULT_GOV_PERFORMANCE &&  !CPU_FREQ_DEFAULT_GOV_POWERSAVE &&  !CPU_FREQ_DEFAULT_GOV_USERSPACE &&  !CPU_FREQ_DEFAULT_GOV_ONDEMAND &&  !CPU_FREQ_DEFAULT_GOV_SCHEDUTIL )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_DEFAULT_GOV_SCHEDUTIL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && (SMP) && ( CPU_FREQ_DEFAULT_GOV_SCHEDUTIL &&  !CPU_FREQ_DEFAULT_GOV_PERFORMANCE &&  !CPU_FREQ_DEFAULT_GOV_POWERSAVE &&  !CPU_FREQ_DEFAULT_GOV_USERSPACE &&  !CPU_FREQ_DEFAULT_GOV_ONDEMAND &&  !CPU_FREQ_DEFAULT_GOV_CONSERVATIVE )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_PERFORMANCE": [
        {
            "type": "tristate",
            "rev_select": "CPU_FREQ_DEFAULT_GOV_PERFORMANCE || CPU_FREQ_DEFAULT_GOV_ONDEMAND || CPU_FREQ_DEFAULT_GOV_CONSERVATIVE || CPU_FREQ_DEFAULT_GOV_SCHEDUTIL || X86_INTEL_PSTATE",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_POWERSAVE": [
        {
            "type": "tristate",
            "rev_select": "CPU_FREQ_DEFAULT_GOV_POWERSAVE",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_USERSPACE": [
        {
            "type": "tristate",
            "rev_select": "CPU_FREQ_DEFAULT_GOV_USERSPACE",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_ONDEMAND": [
        {
            "type": "tristate",
            "rev_select": "CPU_FREQ_DEFAULT_GOV_ONDEMAND",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_CONSERVATIVE": [
        {
            "type": "tristate",
            "rev_select": "CPU_FREQ_DEFAULT_GOV_CONSERVATIVE",
            "dep": "( CPU_FREQ ) && (CPU_FREQ)",
            "restrict": ""
        }
    ],
    "CPU_FREQ_GOV_SCHEDUTIL": [
        {
            "type": "bool",
            "rev_select": "CPU_FREQ_DEFAULT_GOV_SCHEDUTIL || X86_INTEL_PSTATE[SMP] || X86_AMD_PSTATE[SMP]",
            "dep": "( CPU_FREQ ) && (CPU_FREQ && SMP)",
            "restrict": ""
        }
    ],
    "CPUFREQ_DT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && (HAVE_CLK && OF)",
            "restrict": ""
        }
    ],
    "CPUFREQ_DT_PLATDEV": [
        {
            "type": "bool",
            "rev_select": "CPUFREQ_DT",
            "dep": "( CPU_FREQ )",
            "restrict": ""
        }
    ],
    "X86_INTEL_PSTATE": [
        {
            "type": "bool",
            "rev_select": "SCHED_MC_PRIO",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86)",
            "restrict": ""
        }
    ],
    "X86_PCC_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (ACPI && ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "X86_AMD_PSTATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "X86_ACPI_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "X86_ACPI_CPUFREQ_CPB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_ACPI_CPUFREQ && CPU_SUP_AMD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ELAN_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (MELAN)",
            "restrict": ""
        }
    ],
    "SC520_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (MELAN)",
            "restrict": ""
        }
    ],
    "X86_POWERNOW_K6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32)",
            "restrict": ""
        }
    ],
    "X86_POWERNOW_K7": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32)",
            "restrict": ""
        }
    ],
    "X86_POWERNOW_K7_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_POWERNOW_K7 && ACPI_PROCESSOR) && (! ( X86_POWERNOW_K7 = y && ACPI_PROCESSOR = m )) && (X86_32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_POWERNOW_K8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (ACPI && ACPI_PROCESSOR && X86_ACPI_CPUFREQ)",
            "restrict": ""
        }
    ],
    "X86_AMD_FREQ_SENSITIVITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (CPU_FREQ_GOV_ONDEMAND && X86_ACPI_CPUFREQ && CPU_SUP_AMD)",
            "restrict": ""
        }
    ],
    "X86_GX_SUSPMOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32 && PCI)",
            "restrict": ""
        }
    ],
    "X86_SPEEDSTEP_CENTRINO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32 || ( X86_64 && ACPI_PROCESSOR ))",
            "restrict": ""
        }
    ],
    "X86_SPEEDSTEP_CENTRINO_TABLE": [
        {
            "type": "bool",
            "rev_select": "X86_SPEEDSTEP_CENTRINO[X86_32]",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32 && X86_SPEEDSTEP_CENTRINO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_SPEEDSTEP_ICH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32)",
            "restrict": ""
        }
    ],
    "X86_SPEEDSTEP_SMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32)",
            "restrict": ""
        }
    ],
    "X86_P4_CLOCKMOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 )",
            "restrict": ""
        }
    ],
    "X86_CPUFREQ_NFORCE2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32)",
            "restrict": ""
        }
    ],
    "X86_LONGRUN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32)",
            "restrict": ""
        }
    ],
    "X86_LONGHAUL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32 && ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "X86_E_POWERSAVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32 && ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "X86_SPEEDSTEP_LIB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 )",
            "restrict": "( ( X86_SPEEDSTEP_ICH || X86_SPEEDSTEP_SMI || X86_P4_CLOCKMOD ) )[!(y)]"
        }
    ],
    "X86_SPEEDSTEP_RELAXED_CAP_CHECK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( X86 ) && (X86_32 && ( X86_SPEEDSTEP_SMI || X86_SPEEDSTEP_ICH ))",
            "restrict": ""
        }
    ],
    "ACPI_CPPC_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "ACPI_CPPC_CPUFREQ_FIE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ACPI_CPPC_CPUFREQ && GENERIC_ARCH_TOPOLOGY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_ALLWINNER_SUN50I_CPUFREQ_NVMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_SUNXI) && (NVMEM_SUNXI_SID)",
            "restrict": ""
        }
    ],
    "ARM_ARMADA_37XX_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_MVEBU && CPUFREQ_DT)",
            "restrict": ""
        }
    ],
    "ARM_ARMADA_8K_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_MVEBU && CPUFREQ_DT)",
            "restrict": ""
        }
    ],
    "ARM_SCPI_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_SCPI_PROTOCOL && COMMON_CLK_SCPI)",
            "restrict": ""
        }
    ],
    "ARM_VEXPRESS_SPC_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_CPU_TOPOLOGY && HAVE_CLK) && (ARCH_VEXPRESS_SPC)",
            "restrict": ""
        }
    ],
    "ARM_BRCMSTB_AVS_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_HIGHBANK_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_HIGHBANK && CPUFREQ_DT && REGULATOR)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "ARM_IMX6Q_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_MXC) && (REGULATOR_ANATOP) && (NVMEM_IMX_OCOTP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_IMX_CPUFREQ_DT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_MXC && CPUFREQ_DT)",
            "restrict": ""
        }
    ],
    "ARM_KIRKWOOD_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 )",
            "restrict": "( MACH_KIRKWOOD )[!(y)]"
        }
    ],
    "ARM_MEDIATEK_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_MEDIATEK && REGULATOR)",
            "restrict": ""
        }
    ],
    "ARM_MEDIATEK_CPUFREQ_HW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "ARM_OMAP2PLUS_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_OMAP2PLUS)",
            "restrict": "( ARCH_OMAP2PLUS )[!(y)]"
        }
    ],
    "ARM_QCOM_CPUFREQ_NVMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_QCOM) && (QCOM_QFPROM) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "ARM_QCOM_CPUFREQ_HW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_RASPBERRYPI_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (CLK_RASPBERRYPI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_S3C_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "ARM_S3C24XX_CPUFREQ",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 )",
            "restrict": ""
        }
    ],
    "ARM_S3C24XX_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_S3C24XX)",
            "restrict": ""
        }
    ],
    "ARM_S3C24XX_CPUFREQ_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C24XX_CPUFREQ)",
            "restrict": ""
        }
    ],
    "ARM_S3C24XX_CPUFREQ_IODEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C24XX_CPUFREQ)",
            "restrict": ""
        }
    ],
    "ARM_S3C24XX_CPUFREQ_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C24XX_CPUFREQ && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ARM_S3C2410_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C24XX_CPUFREQ && CPU_S3C2410)",
            "restrict": ""
        }
    ],
    "ARM_S3C2412_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C24XX_CPUFREQ && CPU_S3C2412)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_S3C2416_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (CPU_S3C2416)",
            "restrict": ""
        }
    ],
    "ARM_S3C2416_CPUFREQ_VCORESCALE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C2416_CPUFREQ && REGULATOR)",
            "restrict": ""
        }
    ],
    "ARM_S3C2440_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_S3C24XX_CPUFREQ && ( CPU_S3C2440 || CPU_S3C2442 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_S3C64XX_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (CPU_S3C6410)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_S5PV210_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (CPU_S5PV210)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SA1100_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 )",
            "restrict": ""
        }
    ],
    "ARM_SA1110_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 )",
            "restrict": ""
        }
    ],
    "ARM_SCMI_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARM_SCMI_PROTOCOL || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_SPEAR_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (PLAT_SPEAR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_STI_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (CPUFREQ_DT && SOC_STIH407)",
            "restrict": ""
        }
    ],
    "ARM_TEGRA20_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_TEGRA && CPUFREQ_DT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_TEGRA124_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_TEGRA && CPUFREQ_DT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_TEGRA186_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_TEGRA && TEGRA_BPMP)",
            "restrict": ""
        }
    ],
    "ARM_TEGRA194_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_TEGRA_194_SOC && TEGRA_BPMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_TI_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (ARCH_OMAP2PLUS)",
            "restrict": "( ARCH_OMAP2PLUS )[!(y)]"
        }
    ],
    "ARM_PXA2xx_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( ARM || ARM64 ) && (PXA27x || PXA25x)",
            "restrict": ""
        }
    ],
    "CPU_FREQ_CBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (CBE_RAS && PPC_CELL)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "CPU_FREQ_CBE_PMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (CPU_FREQ_CBE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CPU_FREQ_MAPLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (PPC_MAPLE)",
            "restrict": ""
        }
    ],
    "CPU_FREQ_PMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (ADB_PMU && PPC32)",
            "restrict": ""
        }
    ],
    "CPU_FREQ_PMAC64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (PPC_PMAC && PPC64)",
            "restrict": ""
        }
    ],
    "PPC_PASEMI_CPUFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (PPC_PASEMI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "POWERNV_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( PPC32 || PPC64 ) && (PPC_POWERNV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IA64_ACPI_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( IA64 ) && (ACPI_PROCESSOR)",
            "restrict": ""
        }
    ],
    "BMIPS_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( MIPS )",
            "restrict": ""
        }
    ],
    "LOONGSON2_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( MIPS ) && (LEMOTE_MACH2F)",
            "restrict": ""
        }
    ],
    "LOONGSON1_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( MIPS ) && (LOONGSON1_LS1B)",
            "restrict": ""
        }
    ],
    "SPARC_US3_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( SPARC64 )",
            "restrict": ""
        }
    ],
    "SPARC_US2E_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( SPARC64 )",
            "restrict": ""
        }
    ],
    "SH_CPU_FREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && ( SUPERH )",
            "restrict": ""
        }
    ],
    "QORIQ_CPUFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_FREQ ) && (OF && COMMON_CLK) && (PPC_E500MC || SOC_LS1021A || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CPU_IDLE": [
        {
            "type": "bool",
            "rev_select": "ACPI_PROCESSOR_IDLE",
            "dep": "",
            "restrict": "( y )[!(y) && (ACPI || PPC_PSERIES)]"
        }
    ],
    "CPU_IDLE_MULTIPLE_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "ARM_CPUIDLE || ARM_PSCI_CPUIDLE || ARM_BIG_LITTLE_CPUIDLE || ARM_QCOM_SPM_CPUIDLE || RISCV_SBI_CPUIDLE",
            "dep": "( CPU_IDLE )",
            "restrict": ""
        }
    ],
    "CPU_IDLE_GOV_LADDER": [
        {
            "type": "bool",
            "rev_select": "CPU_IDLE[( ! NO_HZ && ! NO_HZ_IDLE )]",
            "dep": "( CPU_IDLE )",
            "restrict": ""
        }
    ],
    "CPU_IDLE_GOV_MENU": [
        {
            "type": "bool",
            "rev_select": "CPU_IDLE[( NO_HZ || NO_HZ_IDLE ) && ! CPU_IDLE_GOV_TEO]",
            "dep": "( CPU_IDLE )",
            "restrict": ""
        }
    ],
    "CPU_IDLE_GOV_TEO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE )",
            "restrict": ""
        }
    ],
    "CPU_IDLE_GOV_HALTPOLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && (KVM_GUEST)",
            "restrict": ""
        }
    ],
    "DT_IDLE_STATES": [
        {
            "type": "bool",
            "rev_select": "ARM_CPUIDLE || ARM_PSCI_CPUIDLE || ARM_BIG_LITTLE_CPUIDLE || ARM_QCOM_SPM_CPUIDLE || RISCV_SBI_CPUIDLE",
            "dep": "( CPU_IDLE )",
            "restrict": ""
        }
    ],
    "DT_IDLE_GENPD": [
        {
            "type": "bool",
            "rev_select": "ARM_PSCI_CPUIDLE_DOMAIN || RISCV_SBI_CPUIDLE[PM_GENERIC_DOMAINS_OF]",
            "dep": "( CPU_IDLE ) && (PM_GENERIC_DOMAINS_OF)",
            "restrict": ""
        }
    ],
    "ARM_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARM)",
            "restrict": ""
        }
    ],
    "ARM_PSCI_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARM_PSCI_FW)",
            "restrict": ""
        }
    ],
    "ARM_PSCI_CPUIDLE_DOMAIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARM_PSCI_CPUIDLE) && (PM_GENERIC_DOMAINS_OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_BIG_LITTLE_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARCH_VEXPRESS_TC2_PM || ARCH_EXYNOS || COMPILE_TEST) && (MCPM && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_CLPS711X_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARCH_CLPS711X && ! ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_HIGHBANK_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARM_PSCI && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_KIRKWOOD_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( MACH_KIRKWOOD || COMPILE_TEST ) && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_ZYNQ_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( ARCH_ZYNQ || COMPILE_TEST ) && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_U8500_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (ARCH_U8500 && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_AT91_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( ARCH_AT91 || COMPILE_TEST ) && ! ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_EXYNOS_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( ARCH_EXYNOS || COMPILE_TEST ) && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_MVEBU_V7_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( ARCH_MVEBU || COMPILE_TEST ) && ! ARM64)",
            "restrict": ""
        }
    ],
    "ARM_TEGRA_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( ARCH_TEGRA || COMPILE_TEST ) && ! ARM64 && MMU)",
            "restrict": ""
        }
    ],
    "ARM_QCOM_SPM_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( ARM || ARM64 ) ) && (( ARCH_QCOM || COMPILE_TEST ) && ! ARM64 && MMU)",
            "restrict": ""
        }
    ],
    "MIPS_CPS_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( MIPS ) ) && (CPU_IDLE && MIPS_CPS) && (SYS_SUPPORTS_MIPS_CPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PSERIES_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( PPC ) ) && (CPU_IDLE) && (PPC_PSERIES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "POWERNV_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( PPC ) ) && (CPU_IDLE) && (PPC_POWERNV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RISCV_SBI_CPUIDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && ( ( RISCV ) ) && (RISCV_SBI)",
            "restrict": ""
        }
    ],
    "HALTPOLL_CPUIDLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CPU_IDLE ) && (X86 && KVM_GUEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_NEEDS_CPU_IDLE_COUPLED": [
        {
            "type": "bool",
            "rev_select": "ARM_EXYNOS_CPUIDLE[SMP] || ARM_TEGRA_CPUIDLE[SMP] || MIPS_CPS_CPUIDLE[MIPS_MT || CPU_MIPSR6] || ARCH_TEGRA_2x_SOC[SMP]",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INTEL_IDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_IDLE) && (X86) && (CPU_SUP_INTEL)",
            "restrict": ""
        }
    ],
    "PCI_GOBIOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 && PCI ) ) && ( PCI_GOBIOS &&  !PCI_GOMMCONFIG &&  !PCI_GODIRECT &&  !PCI_GOOLPC &&  !PCI_GOANY )",
            "restrict": ""
        }
    ],
    "PCI_GOMMCONFIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 && PCI ) ) && ( PCI_GOMMCONFIG &&  !PCI_GOBIOS &&  !PCI_GODIRECT &&  !PCI_GOOLPC &&  !PCI_GOANY )",
            "restrict": ""
        }
    ],
    "PCI_GODIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 && PCI ) ) && ( PCI_GODIRECT &&  !PCI_GOBIOS &&  !PCI_GOMMCONFIG &&  !PCI_GOOLPC &&  !PCI_GOANY )",
            "restrict": ""
        }
    ],
    "PCI_GOOLPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 && PCI ) ) && (OLPC) && ( PCI_GOOLPC &&  !PCI_GOBIOS &&  !PCI_GOMMCONFIG &&  !PCI_GODIRECT &&  !PCI_GOANY )",
            "restrict": ""
        }
    ],
    "PCI_GOANY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( X86_32 && PCI ) ) && ( PCI_GOANY &&  !PCI_GOBIOS &&  !PCI_GOMMCONFIG &&  !PCI_GODIRECT &&  !PCI_GOOLPC )",
            "restrict": ""
        }
    ],
    "PCI_BIOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32 && PCI && ( PCI_GOBIOS || PCI_GOANY ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_DIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI && ( X86_64 || ( PCI_GODIRECT || PCI_GOANY || PCI_GOOLPC || PCI_GOMMCONFIG ) ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_MMCONFIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI && ( ACPI || JAILHOUSE_GUEST )) && (X86_64 || ( PCI_GOANY || PCI_GOMMCONFIG ))",
            "restrict": "( y )[!(X86_64)]"
        }
    ],
    "PCI_OLPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI && OLPC && ( PCI_GOOLPC || PCI_GOANY ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_XEN": [
        {
            "type": "bool",
            "rev_select": "XEN_PCIDEV_FRONTEND",
            "dep": "(PCI && XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMCONF_FAM10H": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64 && PCI_MMCONFIG && ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_CNB20LE_QUIRK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "ISA_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ISA_DMA_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(( X86_64 && EXPERT ))]"
        }
    ],
    "ISA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 )",
            "restrict": ""
        },
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EISA)",
            "restrict": ""
        }
    ],
    "SCx200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_32 )",
            "restrict": ""
        }
    ],
    "SCx200HR_TIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_32 ) && (SCx200)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OLPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (! X86_PAE)",
            "restrict": ""
        }
    ],
    "OLPC_XO1_PM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (OLPC && MFD_CS5535 = y && PM_SLEEP)",
            "restrict": ""
        }
    ],
    "OLPC_XO1_RTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (OLPC_XO1_PM && RTC_DRV_CMOS)",
            "restrict": ""
        }
    ],
    "OLPC_XO1_SCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (OLPC && OLPC_XO1_PM && GPIO_CS5535 = y) && (INPUT = y)",
            "restrict": ""
        }
    ],
    "OLPC_XO15_SCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (OLPC && ACPI)",
            "restrict": ""
        }
    ],
    "ALIX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 )",
            "restrict": ""
        }
    ],
    "NET5501": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 )",
            "restrict": ""
        }
    ],
    "GEOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (DMI)",
            "restrict": ""
        }
    ],
    "TS5500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_32 ) && (MELAN)",
            "restrict": ""
        }
    ],
    "AMD_NB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_SUP_AMD && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IA32_EMULATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64)",
            "restrict": ""
        }
    ],
    "X86_X32_ABI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "COMPAT_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IA32_EMULATION || X86_32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IA32_EMULATION || X86_X32_ABI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMPAT_FOR_U64_ALIGNMENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(COMPAT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_ATOMIC_IOMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_KVM": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_PFNCACHE": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_IRQFD": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_IRQ_ROUTING": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_DIRTY_RING": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_EVENTFD": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_MMIO": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_ASYNC_PF": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_ASYNC_PF_SYNC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_MSI": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_CPU_RELAX_INTERCEPT": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_VFIO": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_ARCH_TLB_FLUSH_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_INVALID_WAKEUPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_GENERIC_DIRTYLOG_READ_PROTECT": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KVM && COMPAT && ! ( S390 || ARM64 || RISCV ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_KVM_IRQ_BYPASS": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_VCPU_ASYNC_IOCTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_VCPU_RUN_PID_CHANGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_NO_POLL": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KVM_XFER_TO_GUEST_WORK": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KVM_PM_NOTIFIER": [
        {
            "type": "bool",
            "rev_select": "KVM[PM]",
            "dep": "",
            "restrict": ""
        }
    ],
    "VIRTUALIZATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_KVM || X86)",
            "restrict": ""
        }
    ],
    "KVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (HAVE_KVM) && (HIGH_RES_TIMERS) && (X86_LOCAL_APIC)",
            "restrict": ""
        }
    ],
    "KVM_WERROR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (KVM) && (( X86_64 && ! KASAN ) || ! COMPILE_TEST) && (EXPERT)",
            "restrict": "( y )[!(y) && (X86_64 && ! KASAN)]"
        }
    ],
    "KVM_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (KVM && IA32_FEAT_CTL)",
            "restrict": ""
        }
    ],
    "X86_SGX_KVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (X86_SGX && KVM_INTEL)",
            "restrict": ""
        }
    ],
    "KVM_AMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (KVM)",
            "restrict": ""
        }
    ],
    "KVM_AMD_SEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (KVM_AMD && X86_64) && (CRYPTO_DEV_SP_PSP && ! ( KVM_AMD = y && CRYPTO_DEV_CCP_DD = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KVM_XEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTUALIZATION ) && (KVM)",
            "restrict": ""
        }
    ],
    "KVM_EXTERNAL_WRITE_TRACKING": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_GVT_KVMGT",
            "dep": "( VIRTUALIZATION )",
            "restrict": ""
        }
    ],
    "AS_AVX512": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "AS_SHA1_NI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "AS_SHA256_NI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "AS_TPAUSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CRASH_CORE": [
        {
            "type": "bool",
            "rev_select": "KEXEC_CORE || PROC_KCORE",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEXEC_CORE": [
        {
            "type": "bool",
            "rev_select": "KEXEC || KEXEC_FILE",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEXEC_ELF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_IMA_KEXEC": [
        {
            "type": "bool",
            "rev_select": "KEXEC_FILE[IMA]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SUBPAGE_FAULTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HOTPLUG_SMT": [
        {
            "type": "bool",
            "rev_select": "X86[SMP]",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_ENTRY": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "KPROBES": [
        {
            "type": "bool",
            "rev_select": "KGDB_HONOUR_BLOCKLIST",
            "dep": "(MODULES) && (HAVE_KPROBES)",
            "restrict": ""
        }
    ],
    "JUMP_LABEL": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_DYNAMIC[HAVE_PREEMPT_DYNAMIC_KEY]",
            "dep": "(HAVE_ARCH_JUMP_LABEL)",
            "restrict": ""
        }
    ],
    "STATIC_KEYS_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(JUMP_LABEL)",
            "restrict": ""
        }
    ],
    "STATIC_CALL_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_STATIC_CALL)",
            "restrict": ""
        }
    ],
    "OPTPROBES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KPROBES && HAVE_OPTPROBES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KPROBES_ON_FTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KPROBES && HAVE_KPROBES_ON_FTRACE) && (DYNAMIC_FTRACE_WITH_REGS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "UPROBES": [
        {
            "type": "bool",
            "rev_select": "UPROBE_EVENTS",
            "dep": "(ARCH_SUPPORTS_UPROBES)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HAVE_64BIT_ALIGNED_ACCESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( 64BIT && ! HAVE_EFFICIENT_UNALIGNED_ACCESS )[!(y)]"
        }
    ],
    "HAVE_EFFICIENT_UNALIGNED_ACCESS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USE_BUILTIN_BSWAP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "KRETPROBES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KPROBES && ( HAVE_KRETPROBES || HAVE_RETHOOK ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KRETPROBE_ON_RETHOOK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_RETHOOK) && (KRETPROBES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USER_RETURN_NOTIFIER": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "(HAVE_USER_RETURN_NOTIFIER)",
            "restrict": ""
        }
    ],
    "HAVE_IOREMAP_PROT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KPROBES": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KRETPROBES": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_OPTPROBES": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KPROBES_ON_FTRACE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_CORRECT_STACKTRACE_ON_KRETPROBE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FUNCTION_ERROR_INJECTION": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_NMI": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FUNCTION_DESCRIPTORS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "TRACE_IRQFLAGS_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "TRACE_IRQFLAGS_NMI_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_TRACEHOOK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_DMA_CONTIGUOUS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_SMP_IDLE_THREAD": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IDLE_POLL_SETUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_FORTIFY_SOURCE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_KEEPINITRD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SET_MEMORY": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SET_DIRECT_MAP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DMA_SET_UNCACHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DMA_CLEAR_UNCACHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_TASK_STRUCT_ON_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_TASK_STRUCT_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_THREAD_STRUCT_WHITELIST": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "(! ARCH_TASK_STRUCT_ALLOCATOR)",
            "restrict": ""
        }
    ],
    "ARCH_THREAD_STACK_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANTS_DYNAMIC_TASK_STRUCT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANTS_NO_INSTR": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_32BIT_OFF_T": [
        {
            "type": "bool",
            "rev_select": "X86[X86_32] || X86_32",
            "dep": "(! 64BIT)",
            "restrict": ""
        }
    ],
    "ARCH_32BIT_USTAT_F_TINODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ASM_MODVERSIONS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_REGS_AND_STACK_ACCESS_API": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_RSEQ": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "(HAVE_REGS_AND_STACK_ACCESS_API)",
            "restrict": ""
        }
    ],
    "HAVE_FUNCTION_ARG_ACCESS_API": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_HW_BREAKPOINT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "(PERF_EVENTS)",
            "restrict": ""
        }
    ],
    "HAVE_MIXED_BREAKPOINTS_REGS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "(HAVE_HW_BREAKPOINT)",
            "restrict": ""
        }
    ],
    "HAVE_USER_RETURN_NOTIFIER": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_PERF_EVENTS_NMI": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_HARDLOCKUP_DETECTOR_PERF": [
        {
            "type": "bool",
            "rev_select": "X86[PERF_EVENTS && HAVE_PERF_EVENTS_NMI]",
            "dep": "(HAVE_PERF_EVENTS_NMI)",
            "restrict": ""
        }
    ],
    "HAVE_NMI_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "HAVE_HARDLOCKUP_DETECTOR_ARCH",
            "dep": "(HAVE_NMI)",
            "restrict": ""
        }
    ],
    "HAVE_HARDLOCKUP_DETECTOR_ARCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_PERF_REGS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_PERF_USER_STACK_DUMP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_JUMP_LABEL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_JUMP_LABEL_RELATIVE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_TABLE_FREE": [
        {
            "type": "bool",
            "rev_select": "MMU_GATHER_RCU_TABLE_FREE",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_RCU_TABLE_FREE": [
        {
            "type": "bool",
            "rev_select": "X86[PARAVIRT]",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_PAGE_SIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_NO_RANGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_NO_FLUSH_CACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_MERGE_VMAS": [
        {
            "type": "bool",
            "rev_select": "X86 || MMU_GATHER_NO_RANGE",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMU_GATHER_NO_GATHER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU_GATHER_TABLE_FREE)",
            "restrict": ""
        }
    ],
    "ARCH_WANT_IRQS_OFF_ACTIVATE_MM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAVE_NMI_SAFE_CMPXCHG": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ALIGNED_STRUCT_PAGE": [
        {
            "type": "bool",
            "rev_select": "X86[SLUB]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_CMPXCHG_LOCAL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_CMPXCHG_DOUBLE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WEAK_RELEASE_ACQUIRE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANT_IPC_PARSE_VERSION": [
        {
            "type": "bool",
            "rev_select": "X86_32 || X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANT_COMPAT_IPC_PARSE_VERSION": [
        {
            "type": "bool",
            "rev_select": "ARCH_WANT_OLD_COMPAT_IPC",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANT_OLD_COMPAT_IPC": [
        {
            "type": "bool",
            "rev_select": "IA32_EMULATION",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_SECCOMP": [
        {
            "type": "bool",
            "rev_select": "HAVE_ARCH_SECCOMP_FILTER",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_SECCOMP_FILTER": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "SECCOMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_SECCOMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECCOMP_FILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_SECCOMP_FILTER && SECCOMP && NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECCOMP_CACHE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECCOMP_FILTER && ! HAVE_SPARSE_SYSCALL_NR) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_STACKLEAK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_STACKPROTECTOR": [
        {
            "type": "bool",
            "rev_select": "X86[CC_HAS_SANE_STACKPROTECTOR]",
            "dep": "",
            "restrict": ""
        }
    ],
    "STACKPROTECTOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_STACKPROTECTOR) && (SP_WORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "STACKPROTECTOR_STRONG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(STACKPROTECTOR) && (SP_WORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_SHADOW_CALL_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SHADOW_CALL_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SUPPORTS_SHADOW_CALL_STACK) && (DYNAMIC_FTRACE_WITH_REGS || ! FUNCTION_GRAPH_TRACER)",
            "restrict": ""
        }
    ],
    "LTO": [
        {
            "type": "bool",
            "rev_select": "LTO_CLANG",
            "dep": "",
            "restrict": ""
        }
    ],
    "LTO_CLANG": [
        {
            "type": "bool",
            "rev_select": "LTO_CLANG_FULL || LTO_CLANG_THIN",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_LTO_CLANG": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_LTO_CLANG_THIN": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAS_LTO_CLANG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_IS_CLANG && LD_IS_LLD && AS_IS_LLVM) && (SP_WORD) && (SP_WORD) && (ARCH_SUPPORTS_LTO_CLANG) && (! FTRACE_MCOUNT_USE_RECORDMCOUNT) && (! KASAN || KASAN_HW_TAGS) && (! GCOV_KERNEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LTO_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( LTO_NONE &&  !LTO_CLANG_FULL &&  !LTO_CLANG_THIN )",
            "restrict": ""
        }
    ],
    "LTO_CLANG_FULL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_LTO_CLANG) && (! COMPILE_TEST) && ( LTO_CLANG_FULL &&  !LTO_NONE &&  !LTO_CLANG_THIN )",
            "restrict": ""
        }
    ],
    "LTO_CLANG_THIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_LTO_CLANG && ARCH_SUPPORTS_LTO_CLANG_THIN) && ( LTO_CLANG_THIN &&  !LTO_NONE &&  !LTO_CLANG_FULL )",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_CFI_CLANG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CFI_CLANG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(LTO_CLANG && ARCH_SUPPORTS_CFI_CLANG) && (CLANG_VERSION >= 140000)",
            "restrict": ""
        }
    ],
    "CFI_CLANG_SHADOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CFI_CLANG && MODULES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CFI_PERMISSIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CFI_CLANG)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_WITHIN_STACK_FRAMES": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_CONTEXT_TRACKING_USER": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_CONTEXT_TRACKING_USER_OFFSTACK": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_CONTEXT_TRACKING_USER]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_TIF_NOHZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_VIRT_CPU_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_VIRT_CPU_ACCOUNTING_IDLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SCALED_CPUTIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_VIRT_CPU_ACCOUNTING_GEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (64BIT)]"
        }
    ],
    "HAVE_IRQ_TIME_ACCOUNTING": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_MOVE_PUD": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_MOVE_PMD": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_TRANSPARENT_HUGEPAGE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_TRANSPARENT_HUGEPAGE_PUD": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_HUGE_VMAP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 || X86_PAE]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_HUGE_VMALLOC": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "(HAVE_ARCH_HUGE_VMAP)",
            "restrict": ""
        }
    ],
    "ARCH_WANT_HUGE_PMD_SHARE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_SOFT_DIRTY": [
        {
            "type": "bool",
            "rev_select": "X86_64",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_MOD_ARCH_SPECIFIC": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "MODULES_USE_ELF_RELA": [
        {
            "type": "bool",
            "rev_select": "X86_64 || X86_64",
            "dep": "",
            "restrict": ""
        }
    ],
    "MODULES_USE_ELF_REL": [
        {
            "type": "bool",
            "rev_select": "X86_32 || X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANTS_MODULES_DATA_IN_VMALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_IRQ_EXIT_ON_IRQ_STACK": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_SOFTIRQ_ON_OWN_STACK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "SOFTIRQ_ON_OWN_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( HAVE_SOFTIRQ_ON_OWN_STACK && ! PREEMPT_RT )[!(y)]"
        }
    ],
    "ALTERNATE_USER_ADDRESS_SPACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_ELF_RANDOMIZE": [
        {
            "type": "bool",
            "rev_select": "X86 || ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_MMAP_RND_BITS": [
        {
            "type": "bool",
            "rev_select": "X86[MMU]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_EXIT_THREAD": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_BITS_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(HAVE_ARCH_MMAP_RND_BITS)",
            "restrict": "( ARCH_MMAP_RND_BITS_MIN ARCH_MMAP_RND_BITS_MAX ) || ( ARCH_MMAP_RND_BITS_DEFAULT )[!(EXPERT) && (ARCH_MMAP_RND_BITS_DEFAULT)] || ( ARCH_MMAP_RND_BITS_MIN )[!(EXPERT)]"
        }
    ],
    "HAVE_ARCH_MMAP_RND_COMPAT_BITS": [
        {
            "type": "bool",
            "rev_select": "X86[MMU && COMPAT]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_COMPAT_BITS_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_MMAP_RND_COMPAT_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(HAVE_ARCH_MMAP_RND_COMPAT_BITS)",
            "restrict": "( ARCH_MMAP_RND_COMPAT_BITS_MIN ARCH_MMAP_RND_COMPAT_BITS_MAX ) || ( ARCH_MMAP_RND_COMPAT_BITS_DEFAULT )[!(EXPERT) && (ARCH_MMAP_RND_COMPAT_BITS_DEFAULT)] || ( ARCH_MMAP_RND_COMPAT_BITS_MIN )[!(EXPERT)]"
        }
    ],
    "HAVE_ARCH_COMPAT_MMAP_BASES": [
        {
            "type": "bool",
            "rev_select": "X86[MMU && COMPAT]",
            "dep": "",
            "restrict": ""
        }
    ],
    "PAGE_SIZE_LESS_THAN_64KB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! ARM64_64K_PAGES) && (! IA64_PAGE_SIZE_64KB) && (! PAGE_SIZE_64KB) && (! PARISC_PAGE_SIZE_64KB) && (PAGE_SIZE_LESS_THAN_256KB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PAGE_SIZE_LESS_THAN_256KB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! PAGE_SIZE_256KB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_WANT_DEFAULT_TOPDOWN_MMAP_LAYOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "HAVE_OBJTOOL": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_JUMP_LABEL_HACK": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_NOINSTR_HACK": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_NOINSTR_VALIDATION": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_UACCESS_VALIDATION": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_STACK_VALIDATION": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_RELIABLE_STACKTRACE": [
        {
            "type": "bool",
            "rev_select": "X86[UNWINDER_ORC || STACK_VALIDATION]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_HASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HAVE_ARCH_NVRAM_OPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ISA_BUS_API": [
        {
            "type": "bool",
            "rev_select": "GPIO_104_DIO_48E || GPIO_104_IDIO_16 || GPIO_104_IDI_48 || GPIO_GPIO_MM || GPIO_WINBOND || GPIO_WS16C48 || EBC_C384_WDT || STX104 || CIO_DAC || 104_QUAD_8",
            "dep": "",
            "restrict": "( ISA )[!(y)]"
        }
    ],
    "CLONE_BACKWARDS": [
        {
            "type": "bool",
            "rev_select": "X86_32 || X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "CLONE_BACKWARDS2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CLONE_BACKWARDS3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ODD_RT_SIGACTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "OLD_SIGSUSPEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "OLD_SIGSUSPEND3": [
        {
            "type": "bool",
            "rev_select": "COMPAT_32 || X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "OLD_SIGACTION": [
        {
            "type": "bool",
            "rev_select": "X86_32 || X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "COMPAT_OLD_SIGACTION": [
        {
            "type": "bool",
            "rev_select": "IA32_EMULATION",
            "dep": "",
            "restrict": ""
        }
    ],
    "COMPAT_32BIT_TIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! 64BIT || COMPAT )[!(y)]"
        }
    ],
    "ARCH_NO_PREEMPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_EPHEMERAL_INODES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_RT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CPU_NO_EFFICIENT_FFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HAVE_ARCH_VMAP_STACK": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VMAP_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_VMAP_STACK) && (! KASAN || KASAN_HW_TAGS || KASAN_VMALLOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RANDOMIZE_KSTACK_OFFSET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_RANDOMIZE_KSTACK_OFFSET) && (INIT_STACK_NONE || ! CC_IS_CLANG || CLANG_VERSION >= 140000)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "RANDOMIZE_KSTACK_OFFSET_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RANDOMIZE_KSTACK_OFFSET)",
            "restrict": ""
        }
    ],
    "ARCH_OPTIONAL_KERNEL_RWX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_OPTIONAL_KERNEL_RWX_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_STRICT_KERNEL_RWX": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "STRICT_KERNEL_RWX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_STRICT_KERNEL_RWX)",
            "restrict": "( ! ARCH_OPTIONAL_KERNEL_RWX || ARCH_OPTIONAL_KERNEL_RWX_DEFAULT )[!(ARCH_OPTIONAL_KERNEL_RWX)]"
        }
    ],
    "ARCH_HAS_STRICT_MODULE_RWX": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "STRICT_MODULE_RWX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_STRICT_MODULE_RWX && MODULES)",
            "restrict": "( ! ARCH_OPTIONAL_KERNEL_RWX || ARCH_OPTIONAL_KERNEL_RWX_DEFAULT )[!(ARCH_OPTIONAL_KERNEL_RWX)]"
        }
    ],
    "ARCH_HAS_PHYS_TO_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_COMPILER_H": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_PREL32_RELOCATIONS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USE_MEMREMAP_PROT": [
        {
            "type": "bool",
            "rev_select": "AMD_MEM_ENCRYPT || EFI || EFI_EARLYCON",
            "dep": "",
            "restrict": ""
        }
    ],
    "LOCK_EVENT_COUNTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ARCH_HAS_RELR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "RELR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_RELR && TOOLS_SUPPORT_RELR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_HAS_MEM_ENCRYPT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_CC_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "INTEL_TDX_GUEST || AMD_MEM_ENCRYPT",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_SPARSE_SYSCALL_NR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_VDSO_DATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_STATIC_CALL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_STATIC_CALL_INLINE": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "(HAVE_STATIC_CALL)",
            "restrict": ""
        }
    ],
    "HAVE_PREEMPT_DYNAMIC": [
        {
            "type": "bool",
            "rev_select": "HAVE_PREEMPT_DYNAMIC_CALL || HAVE_PREEMPT_DYNAMIC_KEY",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_PREEMPT_DYNAMIC_CALL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "(HAVE_STATIC_CALL)",
            "restrict": ""
        }
    ],
    "HAVE_PREEMPT_DYNAMIC_KEY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_JUMP_LABEL)",
            "restrict": ""
        }
    ],
    "ARCH_WANT_LD_ORPHAN_WARN": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_PFN_VALID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_DEBUG_PAGEALLOC": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_PAGE_TABLE_CHECK": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_SPLIT_ARG64": [
        {
            "type": "bool",
            "rev_select": "X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_ELFCORE_COMPAT": [
        {
            "type": "bool",
            "rev_select": "X86_64",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_PARANOID_L1D_FLUSH": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAVE_TRACE_MMIO_ACCESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DYNAMIC_SIGFRAME": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_NODE_DEV_GROUP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_SGX]",
            "dep": "",
            "restrict": ""
        }
    ],
    "GCOV_KERNEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS) && (! ARCH_WANTS_NO_INSTR || CC_HAS_NO_PROFILE_FN_ATTR)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_GCOV_PROFILE_ALL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GCOV_PROFILE_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! COMPILE_TEST) && (GCOV_KERNEL) && (ARCH_HAS_GCOV_PROFILE_ALL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RT_MUTEXES": [
        {
            "type": "bool",
            "rev_select": "I2C",
            "dep": "",
            "restrict": "( y )[!(y) && (PREEMPT_RT)]"
        }
    ],
    "BASE_SMALL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 0 )[!(y) && (BASE_FULL)] || ( 1 )[!(y) && (! BASE_FULL)]"
        }
    ],
    "MODULE_SIG_FORMAT": [
        {
            "type": "bool",
            "rev_select": "MODULE_SIG || IMA_APPRAISE_MODSIG",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MODULES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MODULE_FORCE_LOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MODULE_UNLOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES )",
            "restrict": ""
        }
    ],
    "MODULE_FORCE_UNLOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (MODULE_UNLOAD)",
            "restrict": ""
        }
    ],
    "MODULE_UNLOAD_TAINT_TRACKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (MODULE_UNLOAD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MODVERSIONS": [
        {
            "type": "bool",
            "rev_select": "RANDSTRUCT_FULL[MODULES] || RANDSTRUCT_PERFORMANCE[MODULES]",
            "dep": "( MODULES )",
            "restrict": ""
        }
    ],
    "ASM_MODVERSIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES )",
            "restrict": "( HAVE_ASM_MODVERSIONS && MODVERSIONS )[!(y)]"
        }
    ],
    "MODULE_SRCVERSION_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES )",
            "restrict": ""
        }
    ],
    "MODULE_SIG": [
        {
            "type": "bool",
            "rev_select": "SECURITY_LOCKDOWN_LSM[MODULES]",
            "dep": "( MODULES )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_FORCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (MODULE_SIG)",
            "restrict": ""
        }
    ],
    "MODULE_SIG_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (MODULE_SIG || IMA_APPRAISE_MODSIG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MODULE_SIG_SHA1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( ( MODULE_SIG || IMA_APPRAISE_MODSIG ) ) && ( MODULE_SIG_SHA1 &&  !MODULE_SIG_SHA224 &&  !MODULE_SIG_SHA256 &&  !MODULE_SIG_SHA384 &&  !MODULE_SIG_SHA512 )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_SHA224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( ( MODULE_SIG || IMA_APPRAISE_MODSIG ) ) && ( MODULE_SIG_SHA224 &&  !MODULE_SIG_SHA1 &&  !MODULE_SIG_SHA256 &&  !MODULE_SIG_SHA384 &&  !MODULE_SIG_SHA512 )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_SHA256": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( ( MODULE_SIG || IMA_APPRAISE_MODSIG ) ) && ( MODULE_SIG_SHA256 &&  !MODULE_SIG_SHA1 &&  !MODULE_SIG_SHA224 &&  !MODULE_SIG_SHA384 &&  !MODULE_SIG_SHA512 )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_SHA384": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( ( MODULE_SIG || IMA_APPRAISE_MODSIG ) ) && ( MODULE_SIG_SHA384 &&  !MODULE_SIG_SHA1 &&  !MODULE_SIG_SHA224 &&  !MODULE_SIG_SHA256 &&  !MODULE_SIG_SHA512 )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_SHA512": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( ( MODULE_SIG || IMA_APPRAISE_MODSIG ) ) && ( MODULE_SIG_SHA512 &&  !MODULE_SIG_SHA1 &&  !MODULE_SIG_SHA224 &&  !MODULE_SIG_SHA256 &&  !MODULE_SIG_SHA384 )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_HASH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( MODULES ) && (MODULE_SIG || IMA_APPRAISE_MODSIG)",
            "restrict": "( \"sha1\" )[!(y) && (MODULE_SIG_SHA1)] || ( \"sha224\" )[!(y) && (MODULE_SIG_SHA224)] || ( \"sha256\" )[!(y) && (MODULE_SIG_SHA256)] || ( \"sha384\" )[!(y) && (MODULE_SIG_SHA384)] || ( \"sha512\" )[!(y) && (MODULE_SIG_SHA512)]"
        }
    ],
    "MODULE_COMPRESS_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( MODULE_COMPRESS_NONE &&  !MODULE_COMPRESS_GZIP &&  !MODULE_COMPRESS_XZ &&  !MODULE_COMPRESS_ZSTD )",
            "restrict": ""
        }
    ],
    "MODULE_COMPRESS_GZIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( MODULE_COMPRESS_GZIP &&  !MODULE_COMPRESS_NONE &&  !MODULE_COMPRESS_XZ &&  !MODULE_COMPRESS_ZSTD )",
            "restrict": ""
        }
    ],
    "MODULE_COMPRESS_XZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( MODULE_COMPRESS_XZ &&  !MODULE_COMPRESS_NONE &&  !MODULE_COMPRESS_GZIP &&  !MODULE_COMPRESS_ZSTD )",
            "restrict": ""
        }
    ],
    "MODULE_COMPRESS_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && ( MODULE_COMPRESS_ZSTD &&  !MODULE_COMPRESS_NONE &&  !MODULE_COMPRESS_GZIP &&  !MODULE_COMPRESS_XZ )",
            "restrict": ""
        }
    ],
    "MODULE_DECOMPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (MODULE_COMPRESS_GZIP || MODULE_COMPRESS_XZ)",
            "restrict": ""
        }
    ],
    "MODULE_ALLOW_MISSING_NAMESPACE_IMPORTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES )",
            "restrict": ""
        }
    ],
    "MODPROBE_PATH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( MODULES )",
            "restrict": "( \"/sbin/modprobe\" )[!(y)]"
        }
    ],
    "TRIM_UNUSED_KSYMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (! COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "UNUSED_KSYMS_WHITELIST": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( MODULES ) && (TRIM_UNUSED_KSYMS)",
            "restrict": ""
        }
    ],
    "MODULES_TREE_LOOKUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MODULES ) && (PERF_EVENTS || TRACING || CFI_CLANG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INIT_ALL_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BLOCK_LEGACY_AUTOLOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_RQ_ALLOC_TIME": [
        {
            "type": "bool",
            "rev_select": "BLK_CGROUP_IOCOST",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_CGROUP_RWSTAT": [
        {
            "type": "bool",
            "rev_select": "BLK_DEV_THROTTLING || BFQ_GROUP_IOSCHED",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_DEV_BSG_COMMON": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_BSGLIB || SCSI[BLK_DEV_BSG]",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_ICQ": [
        {
            "type": "bool",
            "rev_select": "IOSCHED_BFQ",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_DEV_BSGLIB": [
        {
            "type": "bool",
            "rev_select": "SCSI_FC_ATTRS || SCSI_ISCSI_ATTRS || SCSI_SAS_ATTRS || SCSI_MPI3MR || SCSI_UFS_BSG",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_DEV_INTEGRITY": [
        {
            "type": "bool",
            "rev_select": "SCSI_HISI_SAS || DM_INTEGRITY || TCM_IBLOCK",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_DEV_INTEGRITY_T10": [
        {
            "type": "tristate",
            "rev_select": "NVME_CORE[BLK_DEV_INTEGRITY] || NVME_TARGET[BLK_DEV_INTEGRITY] || BLK_DEV_SD[BLK_DEV_INTEGRITY]",
            "dep": "( BLOCK ) && (BLK_DEV_INTEGRITY)",
            "restrict": ""
        }
    ],
    "BLK_DEV_ZONED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_DEV_THROTTLING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_CGROUP)",
            "restrict": ""
        }
    ],
    "BLK_DEV_THROTTLING_LOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_DEV_THROTTLING)",
            "restrict": ""
        }
    ],
    "BLK_WBT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_WBT_MQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_WBT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_CGROUP_IOLATENCY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_CGROUP)",
            "restrict": ""
        }
    ],
    "BLK_CGROUP_FC_APPID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_CGROUP && NVME_FC)",
            "restrict": ""
        }
    ],
    "BLK_CGROUP_IOCOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_CGROUP)",
            "restrict": ""
        }
    ],
    "BLK_CGROUP_IOPRIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_CGROUP)",
            "restrict": ""
        }
    ],
    "BLK_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (DEBUG_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_DEBUG_FS_ZONED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( BLK_DEBUG_FS && BLK_DEV_ZONED )[!(y)]"
        }
    ],
    "BLK_SED_OPAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_INLINE_ENCRYPTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_INLINE_ENCRYPTION_FALLBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLK_INLINE_ENCRYPTION)",
            "restrict": ""
        }
    ],
    "PARTITION_ADVANCED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "ACORN_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "ACORN_PARTITION_CUMANA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ACORN_PARTITION)",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "ACORN_PARTITION_EESOX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ACORN_PARTITION)",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "ACORN_PARTITION_ICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ACORN_PARTITION)",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "ACORN_PARTITION_ADFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ACORN_PARTITION)",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "ACORN_PARTITION_POWERTEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ACORN_PARTITION)",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "ACORN_PARTITION_RISCIX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ACORN_PARTITION)",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ARCH_ACORN)]"
        }
    ],
    "AIX_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "OSF_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ALPHA)]"
        }
    ],
    "AMIGA_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (( AMIGA || AFFS_FS = y ))]"
        }
    ],
    "ATARI_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (ATARI)]"
        }
    ],
    "IBM_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED && S390)",
            "restrict": ""
        }
    ],
    "MAC_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (( MAC || PPC_PMAC ))]"
        }
    ],
    "MSDOS_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED)]"
        }
    ],
    "BSD_DISKLABEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED && MSDOS_PARTITION)",
            "restrict": ""
        }
    ],
    "MINIX_SUBPARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED && MSDOS_PARTITION)",
            "restrict": ""
        }
    ],
    "SOLARIS_X86_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED && MSDOS_PARTITION)",
            "restrict": ""
        }
    ],
    "UNIXWARE_DISKLABEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED && MSDOS_PARTITION)",
            "restrict": ""
        }
    ],
    "LDM_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED)",
            "restrict": ""
        }
    ],
    "LDM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (LDM_PARTITION)",
            "restrict": ""
        }
    ],
    "SGI_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (DEFAULT_SGI_PARTITION)]"
        }
    ],
    "ULTRIX_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (MACH_DECSTATION)]"
        }
    ],
    "SUN_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (( SPARC || SUN3 || SUN3X ))]"
        }
    ],
    "KARMA_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (PARTITION_ADVANCED)",
            "restrict": ""
        }
    ],
    "EFI_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED)]"
        }
    ],
    "SYSV68_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(PARTITION_ADVANCED) && (VME)]"
        }
    ],
    "CMDLINE_PARTITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLOCK_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( COMPAT )[!(y)]"
        }
    ],
    "BLK_MQ_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( PCI )[!(y)]"
        }
    ],
    "BLK_MQ_VIRTIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (VIRTIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_MQ_RDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (INFINIBAND)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_PM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( PM )[!(y)]"
        }
    ],
    "BLOCK_HOLDER_DEPRECATED": [
        {
            "type": "bool",
            "rev_select": "BLK_DEV_MD[SYSFS] || BCACHE[SYSFS] || BLK_DEV_DM[SYSFS]",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BLK_MQ_STACKING": [
        {
            "type": "bool",
            "rev_select": "BLK_DEV_DM",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "MQ_IOSCHED_DEADLINE": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_ZONED",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MQ_IOSCHED_KYBER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IOSCHED_BFQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "BFQ_GROUP_IOSCHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (IOSCHED_BFQ && BLK_CGROUP)",
            "restrict": ""
        }
    ],
    "BFQ_CGROUP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BFQ_GROUP_IOSCHED)",
            "restrict": ""
        }
    ],
    "PREEMPT_NOTIFIERS": [
        {
            "type": "bool",
            "rev_select": "KVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "PADATA": [
        {
            "type": "bool",
            "rev_select": "DEFERRED_STRUCT_PAGE_INIT || CRYPTO_PCRYPT",
            "dep": "(SMP)",
            "restrict": ""
        }
    ],
    "ASN1": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || NF_NAT_SNMP_BASIC || CIFS || SMB_SERVER || TRUSTED_KEYS_TPM || CRYPTO_RSA || CRYPTO_ECDSA || CRYPTO_ECRDSA || CRYPTO_SM2 || X509_CERTIFICATE_PARSER || PKCS8_PRIVATE_KEY_PARSER || PKCS7_MESSAGE_PARSER || SIGNED_PE_FILE_VERIFICATION",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_TRYLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_TRYLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_LOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_LOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_LOCK_IRQSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_UNLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_UNLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_UNLOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_SPIN_UNLOCK_IRQRESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_TRYLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_LOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_LOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_LOCK_IRQSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_UNLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_UNLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_UNLOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_READ_UNLOCK_IRQRESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_TRYLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_LOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_LOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_LOCK_IRQSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_UNLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_UNLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_UNLOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_INLINE_WRITE_UNLOCK_IRQRESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "UNINLINE_SPIN_UNLOCK": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_BUILD[! ARCH_INLINE_SPIN_UNLOCK] || DEBUG_SPINLOCK",
            "dep": "",
            "restrict": ""
        }
    ],
    "INLINE_SPIN_TRYLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_SPIN_TRYLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_TRYLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_SPIN_TRYLOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_SPIN_LOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_LOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_SPIN_LOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_LOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_SPIN_LOCK_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_LOCK_IRQSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_SPIN_LOCK_IRQSAVE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_UNLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_SPIN_UNLOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_UNLOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! PREEMPTION || ARCH_INLINE_SPIN_UNLOCK_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_SPIN_UNLOCK_IRQRESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_SPIN_UNLOCK_IRQRESTORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_TRYLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_READ_TRYLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_READ_LOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_LOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_READ_LOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_LOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_READ_LOCK_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_LOCK_IRQSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_READ_LOCK_IRQSAVE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_UNLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! PREEMPTION || ARCH_INLINE_READ_UNLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_UNLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_READ_UNLOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_UNLOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! PREEMPTION || ARCH_INLINE_READ_UNLOCK_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_READ_UNLOCK_IRQRESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_READ_UNLOCK_IRQRESTORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_TRYLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_WRITE_TRYLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_WRITE_LOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_LOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_WRITE_LOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_LOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_WRITE_LOCK_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_LOCK_IRQSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! GENERIC_LOCKBREAK && ARCH_INLINE_WRITE_LOCK_IRQSAVE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_UNLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! PREEMPTION || ARCH_INLINE_WRITE_UNLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_UNLOCK_BH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_WRITE_UNLOCK_BH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_UNLOCK_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (! PREEMPTION || ARCH_INLINE_WRITE_UNLOCK_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INLINE_WRITE_UNLOCK_IRQRESTORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ! DEBUG_SPINLOCK ) && (ARCH_INLINE_WRITE_UNLOCK_IRQRESTORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_ATOMIC_RMW": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "MUTEX_SPIN_ON_OWNER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP && ARCH_SUPPORTS_ATOMIC_RMW)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RWSEM_SPIN_ON_OWNER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP && ARCH_SUPPORTS_ATOMIC_RMW)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOCK_SPIN_ON_OWNER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MUTEX_SPIN_ON_OWNER || RWSEM_SPIN_ON_OWNER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_USE_QUEUED_SPINLOCKS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "QUEUED_SPINLOCKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP)",
            "restrict": "( y )[!(y) && (ARCH_USE_QUEUED_SPINLOCKS)]"
        }
    ],
    "BPF_ARCH_SPINLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USE_QUEUED_RWLOCKS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "QUEUED_RWLOCKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP && ! PREEMPT_RT)",
            "restrict": "( y )[!(y) && (ARCH_USE_QUEUED_RWLOCKS)]"
        }
    ],
    "ARCH_HAS_MMIOWB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MMIOWB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SMP)",
            "restrict": "( y )[!(y) && (ARCH_HAS_MMIOWB)]"
        }
    ],
    "ARCH_HAS_NON_OVERLAPPING_ADDRESS_SPACE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SYNC_CORE_BEFORE_USERMODE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SYSCALL_WRAPPER": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FREEZER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( PM_SLEEP || CGROUP_FREEZER )[!(y)]"
        }
    ],
    "BINFMT_ELF": [
        {
            "type": "bool",
            "rev_select": "IA32_EMULATION",
            "dep": "(MMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BINFMT_ELF_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KUNIT = y && BINFMT_ELF = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "COMPAT_BINFMT_ELF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(COMPAT && BINFMT_ELF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_BINFMT_ELF_STATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_BINFMT_ELF_EXTRA_PHDRS": [
        {
            "type": "bool",
            "rev_select": "UML_X86[X86_32]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAVE_ELF_PROT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USE_GNU_PROPERTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BINFMT_ELF_FDPIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM || ( ( M68K || SUPERH ) && ! MMU ))",
            "restrict": "( y )[!(y) && (! BINFMT_ELF)]"
        }
    ],
    "ELFCORE": [
        {
            "type": "bool",
            "rev_select": "BINFMT_ELF || COMPAT_BINFMT_ELF || BINFMT_ELF_FDPIC",
            "dep": "",
            "restrict": ""
        }
    ],
    "CORE_DUMP_DEFAULT_ELF_HEADERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BINFMT_ELF && ELF_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BINFMT_SCRIPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_HAS_BINFMT_FLAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BINFMT_FLAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_BINFMT_FLAT)",
            "restrict": ""
        }
    ],
    "BINFMT_FLAT_ARGVP_ENVP_ON_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BINFMT_FLAT_OLD_ALWAYS_RAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BINFMT_FLAT_NO_DATA_START_OFFSET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BINFMT_FLAT_OLD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BINFMT_FLAT)",
            "restrict": ""
        }
    ],
    "BINFMT_ZFLAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BINFMT_FLAT)",
            "restrict": ""
        }
    ],
    "HAVE_AOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BINFMT_AOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAVE_AOUT)",
            "restrict": ""
        }
    ],
    "OSF4_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ALPHA && BINFMT_AOUT)",
            "restrict": ""
        }
    ],
    "BINFMT_MISC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "COREDUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ARCH_NO_SWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZPOOL": [
        {
            "type": "bool",
            "rev_select": "ZSWAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "SWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU && BLOCK && ! ARCH_NO_SWAP)",
            "restrict": ""
        }
    ],
    "ZSWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SWAP)",
            "restrict": ""
        }
    ],
    "ZSWAP_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ZSWAP)",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT_DEFLATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_COMPRESSOR_DEFAULT_DEFLATE &&  !ZSWAP_COMPRESSOR_DEFAULT_LZO &&  !ZSWAP_COMPRESSOR_DEFAULT_842 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4HC &&  !ZSWAP_COMPRESSOR_DEFAULT_ZSTD )",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_COMPRESSOR_DEFAULT_LZO &&  !ZSWAP_COMPRESSOR_DEFAULT_DEFLATE &&  !ZSWAP_COMPRESSOR_DEFAULT_842 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4HC &&  !ZSWAP_COMPRESSOR_DEFAULT_ZSTD )",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT_842": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_COMPRESSOR_DEFAULT_842 &&  !ZSWAP_COMPRESSOR_DEFAULT_DEFLATE &&  !ZSWAP_COMPRESSOR_DEFAULT_LZO &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4HC &&  !ZSWAP_COMPRESSOR_DEFAULT_ZSTD )",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_COMPRESSOR_DEFAULT_LZ4 &&  !ZSWAP_COMPRESSOR_DEFAULT_DEFLATE &&  !ZSWAP_COMPRESSOR_DEFAULT_LZO &&  !ZSWAP_COMPRESSOR_DEFAULT_842 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4HC &&  !ZSWAP_COMPRESSOR_DEFAULT_ZSTD )",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT_LZ4HC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_COMPRESSOR_DEFAULT_LZ4HC &&  !ZSWAP_COMPRESSOR_DEFAULT_DEFLATE &&  !ZSWAP_COMPRESSOR_DEFAULT_LZO &&  !ZSWAP_COMPRESSOR_DEFAULT_842 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4 &&  !ZSWAP_COMPRESSOR_DEFAULT_ZSTD )",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_COMPRESSOR_DEFAULT_ZSTD &&  !ZSWAP_COMPRESSOR_DEFAULT_DEFLATE &&  !ZSWAP_COMPRESSOR_DEFAULT_LZO &&  !ZSWAP_COMPRESSOR_DEFAULT_842 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4 &&  !ZSWAP_COMPRESSOR_DEFAULT_LZ4HC )",
            "restrict": ""
        }
    ],
    "ZSWAP_COMPRESSOR_DEFAULT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(ZSWAP)",
            "restrict": "( \"deflate\" )[!(y) && (ZSWAP_COMPRESSOR_DEFAULT_DEFLATE)] || ( \"lzo\" )[!(y) && (ZSWAP_COMPRESSOR_DEFAULT_LZO)] || ( 842 )[!(y) && (ZSWAP_COMPRESSOR_DEFAULT_842)] || ( \"lz4\" )[!(y) && (ZSWAP_COMPRESSOR_DEFAULT_LZ4)] || ( \"lz4hc\" )[!(y) && (ZSWAP_COMPRESSOR_DEFAULT_LZ4HC)] || ( \"zstd\" )[!(y) && (ZSWAP_COMPRESSOR_DEFAULT_ZSTD)] || ( \"\" )[!(y)]"
        }
    ],
    "ZSWAP_ZPOOL_DEFAULT_ZBUD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_ZPOOL_DEFAULT_ZBUD &&  !ZSWAP_ZPOOL_DEFAULT_Z3FOLD &&  !ZSWAP_ZPOOL_DEFAULT_ZSMALLOC )",
            "restrict": ""
        }
    ],
    "ZSWAP_ZPOOL_DEFAULT_Z3FOLD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_ZPOOL_DEFAULT_Z3FOLD &&  !ZSWAP_ZPOOL_DEFAULT_ZBUD &&  !ZSWAP_ZPOOL_DEFAULT_ZSMALLOC )",
            "restrict": ""
        }
    ],
    "ZSWAP_ZPOOL_DEFAULT_ZSMALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ZSWAP ) ) && ( ZSWAP_ZPOOL_DEFAULT_ZSMALLOC &&  !ZSWAP_ZPOOL_DEFAULT_ZBUD &&  !ZSWAP_ZPOOL_DEFAULT_Z3FOLD )",
            "restrict": ""
        }
    ],
    "ZSWAP_ZPOOL_DEFAULT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(ZSWAP)",
            "restrict": "( \"zbud\" )[!(y) && (ZSWAP_ZPOOL_DEFAULT_ZBUD)] || ( \"z3fold\" )[!(y) && (ZSWAP_ZPOOL_DEFAULT_Z3FOLD)] || ( \"zsmalloc\" )[!(y) && (ZSWAP_ZPOOL_DEFAULT_ZSMALLOC)] || ( \"\" )[!(y)]"
        }
    ],
    "ZBUD": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_ZPOOL_DEFAULT_ZBUD",
            "dep": "(ZSWAP)",
            "restrict": ""
        }
    ],
    "Z3FOLD": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_ZPOOL_DEFAULT_Z3FOLD",
            "dep": "(ZSWAP)",
            "restrict": ""
        }
    ],
    "ZSMALLOC": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_ZPOOL_DEFAULT_ZSMALLOC || ZRAM",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "ZSMALLOC_STAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ZSMALLOC)",
            "restrict": ""
        }
    ],
    "SLAB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! PREEMPT_RT) && ( SLAB &&  !SLUB &&  !SLOB )",
            "restrict": ""
        }
    ],
    "SLUB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SLUB &&  !SLAB &&  !SLOB )",
            "restrict": ""
        }
    ],
    "SLOB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EXPERT) && (! PREEMPT_RT) && ( SLOB &&  !SLAB &&  !SLUB )",
            "restrict": ""
        }
    ],
    "SLAB_MERGE_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SLAB || SLUB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SLAB_FREELIST_RANDOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SLAB || SLUB)",
            "restrict": ""
        }
    ],
    "SLAB_FREELIST_HARDENED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SLAB || SLUB)",
            "restrict": ""
        }
    ],
    "SLUB_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SLUB && SYSFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SLUB_CPU_PARTIAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SLUB && SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SHUFFLE_PAGE_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SLAB_FREELIST_RANDOM && ACPI_NUMA )[!(y)]"
        }
    ],
    "COMPAT_BRK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMAP_ALLOW_UNINITIALIZED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EXPERT && ! MMU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SELECT_MEMORY_MODEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SELECT_MEMORY_MODEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FLATMEM_MANUAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SELECT_MEMORY_MODEL ) ) && (! ARCH_SPARSEMEM_ENABLE || ARCH_FLATMEM_ENABLE) && ( FLATMEM_MANUAL &&  !SPARSEMEM_MANUAL )",
            "restrict": ""
        }
    ],
    "SPARSEMEM_MANUAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SELECT_MEMORY_MODEL ) ) && (ARCH_SPARSEMEM_ENABLE) && ( SPARSEMEM_MANUAL &&  !FLATMEM_MANUAL )",
            "restrict": ""
        }
    ],
    "SPARSEMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ! SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE ) || SPARSEMEM_MANUAL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FLATMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! SPARSEMEM || FLATMEM_MANUAL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SPARSEMEM_STATIC": [
        {
            "type": "bool",
            "rev_select": "ARCH_SPARSEMEM_ENABLE[X86_32]",
            "dep": "",
            "restrict": ""
        }
    ],
    "SPARSEMEM_EXTREME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SPARSEMEM && ! SPARSEMEM_STATIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SPARSEMEM_VMEMMAP_ENABLE": [
        {
            "type": "bool",
            "rev_select": "ARCH_SPARSEMEM_ENABLE[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "SPARSEMEM_VMEMMAP": [
        {
            "type": "bool",
            "rev_select": "X86_5LEVEL",
            "dep": "(SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_MEMBLOCK_PHYS_MAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FAST_GUP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "ARCH_KEEP_MEMBLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "NUMA_KEEP_MEMINFO": [
        {
            "type": "bool",
            "rev_select": "X86_PMEM_LEGACY[NUMA] || X86_SGX[NUMA] || MEMORY_HOTPLUG[NUMA] || DEV_DAX_HMEM[( NUMA && X86 )]",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMORY_ISOLATION": [
        {
            "type": "bool",
            "rev_select": "MEMORY_HOTPLUG || MEMORY_FAILURE || CMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "EXCLUSIVE_SYSTEM_RAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! DEVMEM || STRICT_DEVMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_BOOTMEM_INFO_NODE": [
        {
            "type": "bool",
            "rev_select": "MEMORY_HOTREMOVE[( X86_64 || PPC64 )]",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_ENABLE_MEMORY_HOTPLUG": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_ENABLE_MEMORY_HOTREMOVE": [
        {
            "type": "bool",
            "rev_select": "X86[MEMORY_HOTPLUG]",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMORY_HOTPLUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SPARSEMEM) && (ARCH_ENABLE_MEMORY_HOTPLUG) && (64BIT)",
            "restrict": ""
        }
    ],
    "MEMORY_HOTPLUG_DEFAULT_ONLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY_HOTPLUG ) && (MEMORY_HOTPLUG)",
            "restrict": ""
        }
    ],
    "MEMORY_HOTREMOVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY_HOTPLUG ) && (MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE) && (MIGRATION)",
            "restrict": ""
        }
    ],
    "MHP_MEMMAP_ON_MEMORY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY_HOTPLUG ) && (MEMORY_HOTPLUG && SPARSEMEM_VMEMMAP) && (ARCH_MHP_MEMMAP_ON_MEMORY_ENABLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SPLIT_PTLOCK_CPUS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 999999 )[!(y) && (! MMU)] || ( 999999 )[!(y) && (ARM && ! CPU_CACHE_VIPT)] || ( 999999 )[!(y) && (PARISC && ! PA20)] || ( 999999 )[!(y) && (SPARC32)] || ( 4 )[!(y)]"
        }
    ],
    "ARCH_ENABLE_SPLIT_PMD_PTLOCK": [
        {
            "type": "bool",
            "rev_select": "X86[( PGTABLE_LEVELS > 2 ) && ( X86_64 || X86_PAE )]",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMORY_BALLOON": [
        {
            "type": "bool",
            "rev_select": "VMWARE_BALLOON || VIRTIO_BALLOON",
            "dep": "",
            "restrict": ""
        }
    ],
    "BALLOON_COMPACTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(COMPACTION && MEMORY_BALLOON)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMPACTION": [
        {
            "type": "bool",
            "rev_select": "TRANSPARENT_HUGEPAGE",
            "dep": "(MMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PAGE_REPORTING": [
        {
            "type": "bool",
            "rev_select": "VIRTIO_BALLOON || HYPERV_BALLOON",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MIGRATION": [
        {
            "type": "bool",
            "rev_select": "COMPACTION || CMA",
            "dep": "(( NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE || COMPACTION || CMA ) && MMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DEVICE_MIGRATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( MIGRATION && ZONE_DEVICE )[!(y)]"
        }
    ],
    "ARCH_ENABLE_HUGEPAGE_MIGRATION": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 && HUGETLB_PAGE && MIGRATION]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_ENABLE_THP_MIGRATION": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 && TRANSPARENT_HUGEPAGE]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HUGETLB_PAGE_SIZE_VARIABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CONTIG_ALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ( MEMORY_ISOLATION && COMPACTION ) || CMA )[!(y)]"
        }
    ],
    "PHYS_ADDR_T_64BIT": [
        {
            "type": "bool",
            "rev_select": "X86_PAE",
            "dep": "",
            "restrict": "( 64BIT )[!(y)]"
        }
    ],
    "BOUNCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BLOCK && MMU && HIGHMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMU_NOTIFIER": [
        {
            "type": "bool",
            "rev_select": "X86_SGX || KVM || SGI_GRU || DRM_RADEON_USERPTR || DRM_AMDGPU_USERPTR || HSA_AMD || HSA_AMD_SVM || DRM_NOUVEAU_SVM || DRM_I915_USERPTR || INFINIBAND_ON_DEMAND_PAGING || INFINIBAND_HFI1 || XEN_GNTDEV || AMD_IOMMU_V2 || INTEL_IOMMU_SVM || ARM_SMMU_V3_SVA || TEST_HMM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KSM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "DEFAULT_MMAP_MIN_ADDR": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(MMU)",
            "restrict": "( 4096 )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_MEMORY_FAILURE": [
        {
            "type": "bool",
            "rev_select": "X86_SUPPORTS_MEMORY_FAILURE",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMORY_FAILURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU) && (ARCH_SUPPORTS_MEMORY_FAILURE)",
            "restrict": ""
        }
    ],
    "HWPOISON_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS)",
            "restrict": ""
        }
    ],
    "NOMMU_INITIAL_TRIM_EXCESS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(! MMU)",
            "restrict": "( 1 )[!(y)]"
        }
    ],
    "ARCH_WANT_GENERAL_HUGETLB": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_WANTS_THP_SWAP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TRANSPARENT_HUGEPAGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_TRANSPARENT_HUGEPAGE && ! PREEMPT_RT)",
            "restrict": ""
        }
    ],
    "TRANSPARENT_HUGEPAGE_ALWAYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRANSPARENT_HUGEPAGE ) && ( ( TRANSPARENT_HUGEPAGE ) ) && ( TRANSPARENT_HUGEPAGE_ALWAYS &&  !TRANSPARENT_HUGEPAGE_MADVISE )",
            "restrict": ""
        }
    ],
    "TRANSPARENT_HUGEPAGE_MADVISE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRANSPARENT_HUGEPAGE ) && ( ( TRANSPARENT_HUGEPAGE ) ) && ( TRANSPARENT_HUGEPAGE_MADVISE &&  !TRANSPARENT_HUGEPAGE_ALWAYS )",
            "restrict": ""
        }
    ],
    "THP_SWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRANSPARENT_HUGEPAGE ) && (TRANSPARENT_HUGEPAGE && ARCH_WANTS_THP_SWAP && SWAP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "READ_ONLY_THP_FOR_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRANSPARENT_HUGEPAGE ) && (TRANSPARENT_HUGEPAGE && SHMEM)",
            "restrict": ""
        }
    ],
    "NEED_PER_CPU_KM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! SMP || ! MMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NEED_PER_CPU_EMBED_FIRST_CHUNK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "NEED_PER_CPU_PAGE_FIRST_CHUNK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "USE_PERCPU_NUMA_NODE_ID": [
        {
            "type": "bool",
            "rev_select": "NUMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_SETUP_PER_CPU_AREA": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "FRONTSWAP": [
        {
            "type": "bool",
            "rev_select": "ZSWAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "CMA": [
        {
            "type": "bool",
            "rev_select": "VMCP || DRM_ETNAVIV[HAVE_DMA_CONTIGUOUS] || DRM_ASPEED_GFX[HAVE_DMA_CONTIGUOUS]",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "CMA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && CMA)",
            "restrict": ""
        }
    ],
    "CMA_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CMA && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CMA_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CMA && SYSFS)",
            "restrict": ""
        }
    ],
    "CMA_AREAS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(CMA)",
            "restrict": "( 19 )[!(y) && (NUMA)] || ( 7 )[!(y)]"
        }
    ],
    "MEM_SOFT_DIRTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CHECKPOINT_RESTORE && HAVE_ARCH_SOFT_DIRTY && PROC_FS)",
            "restrict": ""
        }
    ],
    "GENERIC_EARLY_IOREMAP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "STACK_MAX_DEFAULT_SIZE_MB": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(STACK_GROWSUP && ( ! 64BIT || COMPAT ))",
            "restrict": "( 8 2048 ) || ( 100 )[!(y)]"
        }
    ],
    "DEFERRED_STRUCT_PAGE_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SPARSEMEM) && (! NEED_PER_CPU_KM) && (64BIT)",
            "restrict": ""
        }
    ],
    "PAGE_IDLE_FLAG": [
        {
            "type": "bool",
            "rev_select": "IDLE_PAGE_TRACKING || DAMON_VADDR || DAMON_PADDR",
            "dep": "",
            "restrict": ""
        }
    ],
    "IDLE_PAGE_TRACKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SYSFS && MMU)",
            "restrict": ""
        }
    ],
    "ARCH_HAS_CACHE_LINE_SIZE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_CURRENT_STACK_POINTER": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_PTE_DEVMAP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_ZONE_DMA_SET": [
        {
            "type": "bool",
            "rev_select": "X86[EXPERT]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZONE_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(ARCH_HAS_ZONE_DMA_SET) && (ARM64 || X86)]"
        }
    ],
    "ZONE_DMA32": [
        {
            "type": "bool",
            "rev_select": "X86_64",
            "dep": "(! X86_32)",
            "restrict": "( y )[!(ARCH_HAS_ZONE_DMA_SET) && (ARM64)]"
        }
    ],
    "ZONE_DEVICE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MEMORY_HOTPLUG) && (MEMORY_HOTREMOVE) && (SPARSEMEM_VMEMMAP) && (ARCH_HAS_PTE_DEVMAP)",
            "restrict": ""
        }
    ],
    "HMM_MIRROR": [
        {
            "type": "bool",
            "rev_select": "DRM_AMDGPU_USERPTR || HSA_AMD || HSA_AMD_SVM || DRM_NOUVEAU_SVM || INFINIBAND_ON_DEMAND_PAGING || TEST_HMM",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "GET_FREE_REGION": [
        {
            "type": "bool",
            "rev_select": "DEVICE_PRIVATE || CXL_REGION",
            "dep": "(SPARSEMEM)",
            "restrict": ""
        }
    ],
    "DEVICE_PRIVATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ZONE_DEVICE)",
            "restrict": ""
        }
    ],
    "VMAP_PFN": [
        {
            "type": "bool",
            "rev_select": "DRM_I915 || HYPERV",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USES_HIGH_VMA_FLAGS": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_MEMORY_PROTECTION_KEYS",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_PKEYS": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_MEMORY_PROTECTION_KEYS",
            "dep": "",
            "restrict": ""
        }
    ],
    "VM_EVENT_COUNTERS": [
        {
            "type": "bool",
            "rev_select": "CHASSIS_LCD_LED",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PERCPU_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GUP_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS)",
            "restrict": ""
        }
    ],
    "GUP_GET_PTE_LOW_HIGH": [
        {
            "type": "bool",
            "rev_select": "X86[X86_PAE]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_PTE_SPECIAL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_HUGEPD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MAPPING_DIRTY_HELPERS": [
        {
            "type": "bool",
            "rev_select": "DRM_VMWGFX",
            "dep": "",
            "restrict": ""
        }
    ],
    "KMAP_LOCAL": [
        {
            "type": "bool",
            "rev_select": "X86_32 || DEBUG_KMAP_LOCAL_FORCE_MAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "KMAP_LOCAL_NON_LINEAR_PTE_ARRAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IO_MAPPING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SECRETMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ARCH_HAS_SET_DIRECT_MAP && ! EMBEDDED )[!(y)]"
        }
    ],
    "ANON_VMA_NAME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROC_FS && ADVISE_SYSCALLS && MMU)",
            "restrict": ""
        }
    ],
    "USERFAULTFD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_USERFAULTFD_WP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 && USERFAULTFD]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_USERFAULTFD_MINOR": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 && USERFAULTFD]",
            "dep": "",
            "restrict": ""
        }
    ],
    "PTE_MARKER": [
        {
            "type": "bool",
            "rev_select": "PTE_MARKER_UFFD_WP",
            "dep": "",
            "restrict": ""
        }
    ],
    "PTE_MARKER_UFFD_WP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_USERFAULTFD_WP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DAMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DAMON_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "DAMON_VADDR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON && MMU)",
            "restrict": ""
        }
    ],
    "DAMON_PADDR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON && MMU)",
            "restrict": ""
        }
    ],
    "DAMON_VADDR_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON_VADDR && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "DAMON_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON && SYSFS)",
            "restrict": ""
        }
    ],
    "DAMON_DBGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON_VADDR && DAMON_PADDR && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "DAMON_DBGFS_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON_DBGFS && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "DAMON_RECLAIM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON_PADDR)",
            "restrict": ""
        }
    ],
    "DAMON_LRU_SORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DAMON_PADDR)",
            "restrict": ""
        }
    ],
    "NET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "WANT_COMPAT_NETLINK_MESSAGES": [
        {
            "type": "bool",
            "rev_select": "XFRM_USER_COMPAT",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "COMPAT_NETLINK_MESSAGES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (COMPAT) && (WEXT_CORE || WANT_COMPAT_NETLINK_MESSAGES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_INGRESS": [
        {
            "type": "bool",
            "rev_select": "NETFILTER_INGRESS || NET_SCH_INGRESS",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_EGRESS": [
        {
            "type": "bool",
            "rev_select": "NETFILTER_EGRESS || NET_SCH_INGRESS",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_REDIRECT": [
        {
            "type": "bool",
            "rev_select": "IFB",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "SKB_EXTENSIONS": [
        {
            "type": "bool",
            "rev_select": "XFRM || MPTCP || BRIDGE_NETFILTER || NET_TC_SKB_EXT || MCTP_FLOWS",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "PACKET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "PACKET_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (PACKET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "UNIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "UNIX_SCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (UNIX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AF_UNIX_OOB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (UNIX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "UNIX_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (UNIX)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TLS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TLS_DEVICE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (TLS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TLS_TOE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (TLS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XFRM": [
        {
            "type": "bool",
            "rev_select": "XFRM_ALGO || NET_IPVTI || IPV6_MIP6 || IPV6_VTI",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "XFRM_OFFLOAD": [
        {
            "type": "bool",
            "rev_select": "INET_ESP_OFFLOAD || INET6_ESP_OFFLOAD",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "XFRM_ALGO": [
        {
            "type": "tristate",
            "rev_select": "XFRM_USER || XFRM_AH || XFRM_ESP || XFRM_IPCOMP || NET_KEY || IXGBE_IPSEC || IXGBEVF_IPSEC",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "XFRM_USER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "XFRM_USER_COMPAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (XFRM_USER && COMPAT_FOR_U64_ALIGNMENT && HAVE_EFFICIENT_UNALIGNED_ACCESS)",
            "restrict": ""
        }
    ],
    "XFRM_INTERFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (XFRM && IPV6)",
            "restrict": ""
        }
    ],
    "XFRM_SUB_POLICY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (XFRM)",
            "restrict": ""
        }
    ],
    "XFRM_MIGRATE": [
        {
            "type": "bool",
            "rev_select": "NET_KEY_MIGRATE",
            "dep": "( NET ) && ( INET ) && (XFRM)",
            "restrict": ""
        }
    ],
    "XFRM_STATISTICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (XFRM && PROC_FS)",
            "restrict": ""
        }
    ],
    "XFRM_AH": [
        {
            "type": "tristate",
            "rev_select": "INET_AH || INET6_AH",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "XFRM_ESP": [
        {
            "type": "tristate",
            "rev_select": "INET_ESP || INET6_ESP",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "XFRM_IPCOMP": [
        {
            "type": "tristate",
            "rev_select": "INET_IPCOMP || INET6_IPCOMP",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "NET_KEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "NET_KEY_MIGRATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (NET_KEY)",
            "restrict": ""
        }
    ],
    "XFRM_ESPINTCP": [
        {
            "type": "bool",
            "rev_select": "INET_ESPINTCP || INET6_ESPINTCP",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IUCV": [
        {
            "type": "tristate",
            "rev_select": "HVC_IUCV",
            "dep": "( NET ) && (S390)",
            "restrict": "( y )[!(y) && (S390)]"
        }
    ],
    "AFIUCV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (S390)",
            "restrict": "( m )[!(y) && (QETH_L3 || IUCV)]"
        }
    ],
    "SMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET && INFINIBAND)",
            "restrict": ""
        }
    ],
    "SMC_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (SMC)",
            "restrict": ""
        }
    ],
    "XDP_SOCKETS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BPF_SYSCALL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XDP_SOCKETS_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (XDP_SOCKETS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "IP_MULTICAST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IP_ADVANCED_ROUTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IP_FIB_TRIE_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_ADVANCED_ROUTER)",
            "restrict": ""
        }
    ],
    "IP_MULTIPLE_TABLES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_ADVANCED_ROUTER)",
            "restrict": ""
        }
    ],
    "IP_ROUTE_MULTIPATH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_ADVANCED_ROUTER)",
            "restrict": ""
        }
    ],
    "IP_ROUTE_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_ADVANCED_ROUTER)",
            "restrict": ""
        }
    ],
    "IP_ROUTE_CLASSID": [
        {
            "type": "bool",
            "rev_select": "NETFILTER_XT_MATCH_REALM || NET_CLS_ROUTE4",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IP_PNP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IP_PNP_DHCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_PNP)",
            "restrict": ""
        }
    ],
    "IP_PNP_BOOTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_PNP)",
            "restrict": ""
        }
    ],
    "IP_PNP_RARP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_PNP)",
            "restrict": ""
        }
    ],
    "NET_IPIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "NET_IPGRE_DEMUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "NET_IP_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "NET_IPIP || NET_IPGRE || NET_IPVTI || NET_UDP_TUNNEL || IPV6_VTI || IPV6_SIT || IPV6_GRE",
            "dep": "( NET ) && ( INET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_IPGRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (( IPV6 || IPV6 = n ) && NET_IPGRE_DEMUX)",
            "restrict": ""
        }
    ],
    "NET_IPGRE_BROADCAST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_MULTICAST && NET_IPGRE)",
            "restrict": ""
        }
    ],
    "IP_MROUTE_COMMON": [
        {
            "type": "bool",
            "rev_select": "IP_MROUTE || IPV6_MROUTE",
            "dep": "( NET ) && ( INET ) && (IP_MROUTE || IPV6_MROUTE)",
            "restrict": ""
        }
    ],
    "IP_MROUTE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_MULTICAST)",
            "restrict": ""
        }
    ],
    "IP_MROUTE_MULTIPLE_TABLES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_MROUTE && IP_ADVANCED_ROUTER)",
            "restrict": ""
        }
    ],
    "IP_PIMSM_V1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_MROUTE)",
            "restrict": ""
        }
    ],
    "IP_PIMSM_V2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IP_MROUTE)",
            "restrict": ""
        }
    ],
    "SYN_COOKIES": [
        {
            "type": "bool",
            "rev_select": "NFT_SYNPROXY || IP_NF_TARGET_SYNPROXY || IP6_NF_TARGET_SYNPROXY",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "NET_IPVTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (IPV6 || IPV6 = n)",
            "restrict": ""
        }
    ],
    "NET_UDP_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "NET_FOU || IP_SCTP || TIPC_MEDIA_UDP || L2TP || AF_RXRPC || WIREGUARD || VXLAN || GENEVE || BAREUDP || GTP || AMT || RDMA_RXE",
            "dep": "( NET ) && ( INET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_FOU": [
        {
            "type": "tristate",
            "rev_select": "NET_FOU_IP_TUNNELS",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "NET_FOU_IP_TUNNELS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (NET_IPIP || NET_IPGRE || IPV6_SIT)",
            "restrict": ""
        }
    ],
    "INET_AH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "INET_ESP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "INET_ESP_OFFLOAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (INET_ESP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET_ESPINTCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (XFRM && INET_ESP)",
            "restrict": ""
        }
    ],
    "INET_IPCOMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "INET_XFRM_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "INET_IPCOMP",
            "dep": "( NET ) && ( INET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "NET_IPIP || NET_IPVTI || INET_XFRM_TUNNEL || IPV6_SIT",
            "dep": "( NET ) && ( INET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INET_TCP_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (INET_DIAG)",
            "restrict": "( INET_DIAG )[!(y)]"
        }
    ],
    "INET_UDP_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (INET_DIAG && ( IPV6 || IPV6 = n ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET_RAW_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (INET_DIAG && ( IPV6 || IPV6 = n ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET_DIAG_DESTROY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (INET_DIAG)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_ADVANCED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "TCP_CONG_BIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( m )[!(y)]"
        }
    ],
    "TCP_CONG_CUBIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( y )[!(y)]"
        },
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (! TCP_CONG_ADVANCED)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TCP_CONG_WESTWOOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( m )[!(y)]"
        }
    ],
    "TCP_CONG_HTCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( m )[!(y)]"
        }
    ],
    "TCP_CONG_HSTCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_HYBLA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_VEGAS": [
        {
            "type": "tristate",
            "rev_select": "TCP_CONG_YEAH",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_NV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_SCALABLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_LP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_VENO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_YEAH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_ILLINOIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_DCTCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_CDG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCP_CONG_BBR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DEFAULT_BIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_CUBIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_CUBIC &&  !DEFAULT_BIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_HTCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_HTCP &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_HYBLA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_HYBLA &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_VEGAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_VEGAS &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_VENO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_VENO &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_WESTWOOD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_WESTWOOD &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_DCTCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_DCTCP &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_CDG &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_CDG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_CDG &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_BBR &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_BBR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_BBR &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_RENO )",
            "restrict": ""
        }
    ],
    "DEFAULT_RENO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( TCP_CONG_ADVANCED ) && ( DEFAULT_RENO &&  !DEFAULT_BIC &&  !DEFAULT_CUBIC &&  !DEFAULT_HTCP &&  !DEFAULT_HYBLA &&  !DEFAULT_VEGAS &&  !DEFAULT_VENO &&  !DEFAULT_WESTWOOD &&  !DEFAULT_DCTCP &&  !DEFAULT_CDG &&  !DEFAULT_BBR )",
            "restrict": ""
        }
    ],
    "DEFAULT_TCP_CONG": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": "( \"bic\" )[!(y) && (DEFAULT_BIC)] || ( \"cubic\" )[!(y) && (DEFAULT_CUBIC)] || ( \"htcp\" )[!(y) && (DEFAULT_HTCP)] || ( \"hybla\" )[!(y) && (DEFAULT_HYBLA)] || ( \"vegas\" )[!(y) && (DEFAULT_VEGAS)] || ( \"westwood\" )[!(y) && (DEFAULT_WESTWOOD)] || ( \"veno\" )[!(y) && (DEFAULT_VENO)] || ( \"reno\" )[!(y) && (DEFAULT_RENO)] || ( \"dctcp\" )[!(y) && (DEFAULT_DCTCP)] || ( \"cdg\" )[!(y) && (DEFAULT_CDG)] || ( \"bbr\" )[!(y) && (DEFAULT_BBR)] || ( \"cubic\" )[!(y)]"
        }
    ],
    "TCP_MD5SIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IPV6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET )",
            "restrict": ""
        }
    ],
    "IPV6_ROUTER_PREF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_ROUTE_INFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6_ROUTER_PREF)",
            "restrict": ""
        }
    ],
    "IPV6_OPTIMISTIC_DAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "INET6_AH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "INET6_ESP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "INET6_ESP_OFFLOAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (INET6_ESP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET6_ESPINTCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (XFRM && INET6_ESP)",
            "restrict": ""
        }
    ],
    "INET6_IPCOMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_MIP6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_ILA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (NETFILTER)",
            "restrict": ""
        }
    ],
    "INET6_XFRM_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "INET6_IPCOMP",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INET6_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "INET6_XFRM_TUNNEL || IPV6_TUNNEL",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IPV6_VTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_SIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IPV6_SIT_6RD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6_SIT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IPV6_NDISC_NODETYPE": [
        {
            "type": "bool",
            "rev_select": "IPV6_SIT",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "IPV6_VTI || IPV6_GRE || IPV6_FOU_TUNNEL",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_GRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (NET_IPGRE_DEMUX)",
            "restrict": ""
        }
    ],
    "IPV6_FOU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": "( NET_FOU && IPV6 )[!(y)]"
        }
    ],
    "IPV6_FOU_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": "( NET_FOU_IP_TUNNELS && IPV6_FOU )[!(y)]"
        }
    ],
    "IPV6_MULTIPLE_TABLES": [
        {
            "type": "bool",
            "rev_select": "IPV6_SEG6_LWTUNNEL",
            "dep": "( NET ) && ( INET ) && ( IPV6 )",
            "restrict": ""
        }
    ],
    "IPV6_SUBTREES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6_MULTIPLE_TABLES)",
            "restrict": ""
        }
    ],
    "IPV6_MROUTE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6)",
            "restrict": ""
        }
    ],
    "IPV6_MROUTE_MULTIPLE_TABLES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6_MROUTE)",
            "restrict": ""
        }
    ],
    "IPV6_PIMSM_V2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6_MROUTE)",
            "restrict": ""
        }
    ],
    "IPV6_SEG6_LWTUNNEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6)",
            "restrict": ""
        }
    ],
    "IPV6_SEG6_HMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6)",
            "restrict": ""
        }
    ],
    "IPV6_SEG6_BPF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6_SEG6_LWTUNNEL) && (IPV6 = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IPV6_RPL_LWTUNNEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6)",
            "restrict": ""
        }
    ],
    "IPV6_IOAM6_LWTUNNEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( IPV6 ) && (IPV6)",
            "restrict": ""
        }
    ],
    "NETLABEL": [
        {
            "type": "bool",
            "rev_select": "SECURITY_SMACK",
            "dep": "( NET ) && ( INET ) && (SECURITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MPTCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && (INET)",
            "restrict": ""
        }
    ],
    "INET_MPTCP_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( MPTCP ) && (INET_DIAG)",
            "restrict": "( INET_DIAG )[!(y)]"
        }
    ],
    "MPTCP_IPV6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( MPTCP ) && (IPV6 = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MPTCP_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( INET ) && ( MPTCP ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "NETWORK_SECMARK": [
        {
            "type": "bool",
            "rev_select": "SECURITY_SELINUX",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_PTP_CLASSIFY": [
        {
            "type": "bool",
            "rev_select": "NETWORK_PHY_TIMESTAMPING || IXP4XX_ETH || MLXSW_SPECTRUM[PTP_1588_CLOCK] || PCH_GBE || PTP_1588_CLOCK",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NETWORK_PHY_TIMESTAMPING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NETFILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NETFILTER_ADVANCED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (NETFILTER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BRIDGE_NETFILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (BRIDGE) && (NETFILTER && INET) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_INGRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NETFILTER_EGRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NETFILTER_SKIP_EGRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( NETFILTER_EGRESS && ( NET_CLS_ACT || IFB ) )[!(y)]"
        }
    ],
    "NETFILTER_NETLINK": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_NETLINK_HOOK || NETFILTER_NETLINK_ACCT || NETFILTER_NETLINK_QUEUE || NETFILTER_NETLINK_LOG || NETFILTER_NETLINK_OSF || NF_CT_NETLINK || NF_CT_NETLINK_TIMEOUT || NF_CT_NETLINK_HELPER || NF_TABLES || IP_SET",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NETFILTER_FAMILY_BRIDGE": [
        {
            "type": "bool",
            "rev_select": "BRIDGE_NETFILTER || NF_TABLES_BRIDGE || BRIDGE_NF_EBTABLES",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NETFILTER_FAMILY_ARP": [
        {
            "type": "bool",
            "rev_select": "NF_TABLES_ARP || IP_NF_TARGET_CLUSTERIP || IP_NF_ARPTABLES",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NETFILTER_NETLINK_HOOK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NETFILTER_ADVANCED) && (NF_TABLES)",
            "restrict": ""
        }
    ],
    "NETFILTER_NETLINK_ACCT": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_MATCH_NFACCT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_NETLINK_QUEUE": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_NFQUEUE",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_NETLINK_LOG": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_NFLOG",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_NETLINK_OSF": [
        {
            "type": "tristate",
            "rev_select": "NFT_OSF || NETFILTER_XT_MATCH_OSF",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_LOG_SYSLOG": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_LOG || NF_LOG_ARP || NF_LOG_IPV4 || NF_LOG_IPV6",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_CONNCOUNT": [
        {
            "type": "tristate",
            "rev_select": "NFT_CONNLIMIT || NETFILTER_XT_MATCH_CONNLIMIT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_MARK": [
        {
            "type": "bool",
            "rev_select": "NETFILTER_XT_CONNMARK || IP_NF_TARGET_CLUSTERIP",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_SECMARK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETWORK_SECMARK)",
            "restrict": "( y )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_CONNTRACK_ZONES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_PROCFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_TIMEOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_TIMESTAMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_LABELS": [
        {
            "type": "bool",
            "rev_select": "NETFILTER_XT_MATCH_CONNLABEL",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_CT_PROTO_DCCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NF_CT_PROTO_GRE": [
        {
            "type": "bool",
            "rev_select": "NF_CONNTRACK_PPTP",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_CT_PROTO_SCTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NF_CT_PROTO_UDPLITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NF_CONNTRACK_AMANDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_FTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_CONNTRACK_H323": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (IPV6 || IPV6 = n) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_IRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_CONNTRACK_BROADCAST": [
        {
            "type": "tristate",
            "rev_select": "NF_CONNTRACK_NETBIOS_NS || NF_CONNTRACK_SNMP",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_NETBIOS_NS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_SNMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_PPTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_SANE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_SIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_CONNTRACK_TFTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_CT_NETLINK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_CT_NETLINK_TIMEOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NETFILTER_ADVANCED) && (NF_CONNTRACK_TIMEOUT)",
            "restrict": ""
        }
    ],
    "NF_CT_NETLINK_HELPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CT_NETLINK) && (NETFILTER_NETLINK_QUEUE) && (NETFILTER_NETLINK_GLUE_CT) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_NETLINK_GLUE_CT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (( NETFILTER_NETLINK_QUEUE || NETFILTER_NETLINK_LOG ) && NF_CT_NETLINK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NF_NAT": [
        {
            "type": "tristate",
            "rev_select": "NFT_NAT || IP_NF_NAT || IP6_NF_NAT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CONNTRACK)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_NAT_AMANDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CONNTRACK && NF_NAT)",
            "restrict": "( NF_NAT && NF_CONNTRACK_AMANDA )[!(y)]"
        }
    ],
    "NF_NAT_FTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CONNTRACK && NF_NAT)",
            "restrict": "( NF_NAT && NF_CONNTRACK_FTP )[!(y)]"
        }
    ],
    "NF_NAT_IRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CONNTRACK && NF_NAT)",
            "restrict": "( NF_NAT && NF_CONNTRACK_IRC )[!(y)]"
        }
    ],
    "NF_NAT_SIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CONNTRACK && NF_NAT)",
            "restrict": "( NF_NAT && NF_CONNTRACK_SIP )[!(y)]"
        }
    ],
    "NF_NAT_TFTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK ) && (NF_CONNTRACK && NF_NAT)",
            "restrict": "( NF_NAT && NF_CONNTRACK_TFTP )[!(y)]"
        }
    ],
    "NF_NAT_REDIRECT": [
        {
            "type": "bool",
            "rev_select": "NFT_REDIR || NETFILTER_XT_TARGET_REDIRECT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_NAT_MASQUERADE": [
        {
            "type": "bool",
            "rev_select": "NFT_MASQ || NETFILTER_XT_TARGET_MASQUERADE",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NETFILTER_SYNPROXY": [
        {
            "type": "tristate",
            "rev_select": "NFT_SYNPROXY || IP_NF_TARGET_SYNPROXY || IP6_NF_TARGET_SYNPROXY",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_CONNTRACK )",
            "restrict": ""
        }
    ],
    "NF_TABLES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NF_TABLES_INET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (IPV6)",
            "restrict": ""
        }
    ],
    "NF_TABLES_NETDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_NUMGEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_CT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "NFT_FLOW_OFFLOAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK && NF_FLOW_TABLE)",
            "restrict": ""
        }
    ],
    "NFT_CONNLIMIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NFT_LOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_LIMIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_MASQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK) && (NF_NAT)",
            "restrict": ""
        }
    ],
    "NFT_REDIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK) && (NF_NAT)",
            "restrict": ""
        }
    ],
    "NFT_NAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK) && (NF_TABLES_IPV4 || NF_TABLES_IPV6)",
            "restrict": ""
        }
    ],
    "NFT_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_OBJREF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_QUEUE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NETFILTER_NETLINK_QUEUE)",
            "restrict": ""
        }
    ],
    "NFT_QUOTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_REJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (! NF_TABLES_INET || ( IPV6 != m || m ))",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NFT_REJECT_INET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_TABLES_INET)",
            "restrict": "( NFT_REJECT )[!(y)]"
        }
    ],
    "NFT_COMPAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NETFILTER_XTABLES)",
            "restrict": ""
        }
    ],
    "NFT_HASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_FIB": [
        {
            "type": "tristate",
            "rev_select": "NFT_FIB_IPV4 || NFT_FIB_IPV6",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_FIB_INET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_TABLES_INET) && (NFT_FIB_IPV4) && (NFT_FIB_IPV6)",
            "restrict": ""
        }
    ],
    "NFT_XFRM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (XFRM)",
            "restrict": ""
        }
    ],
    "NFT_SOCKET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (IPV6 || IPV6 = n)",
            "restrict": ""
        }
    ],
    "NFT_OSF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NFT_TPROXY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (IPV6 || IPV6 = n)",
            "restrict": ""
        }
    ],
    "NFT_SYNPROXY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && (NF_CONNTRACK && NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NF_DUP_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "NFT_DUP_NETDEV || NFT_FWD_NETDEV",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_NETDEV )",
            "restrict": ""
        }
    ],
    "NFT_DUP_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_NETDEV )",
            "restrict": ""
        }
    ],
    "NFT_FWD_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_NETDEV )",
            "restrict": ""
        }
    ],
    "NFT_FIB_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_NETDEV ) && (NFT_FIB_IPV4) && (NFT_FIB_IPV6)",
            "restrict": ""
        }
    ],
    "NFT_REJECT_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_NETDEV ) && (NFT_REJECT_IPV4) && (NFT_REJECT_IPV6)",
            "restrict": ""
        }
    ],
    "NF_FLOW_TABLE_INET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NF_FLOW_TABLE)",
            "restrict": ""
        }
    ],
    "NF_FLOW_TABLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NETFILTER_INGRESS) && (NF_CONNTRACK) && (NF_TABLES)",
            "restrict": ""
        }
    ],
    "NF_FLOW_TABLE_PROCFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NF_FLOW_TABLE) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "NETFILTER_XTABLES": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_IPTABLES || IP_NF_ARPTABLES || IP6_NF_IPTABLES",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XTABLES_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (COMPAT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NETFILTER_XT_MARK": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_MARK || NETFILTER_XT_MATCH_MARK",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_CONNMARK": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_CONNMARK || NETFILTER_XT_MATCH_CONNMARK",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_SET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_SET) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_AUDIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (AUDIT) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_CHECKSUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_NF_MANGLE || IP6_NF_MANGLE) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_CLASSIFY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_CONNMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_CONNSECMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK && NF_CONNTRACK_SECMARK)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_TARGET_CT": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_NOTRACK",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (IP_NF_RAW || IP6_NF_RAW) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_DSCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_NF_MANGLE || IP6_NF_MANGLE) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_HL": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_TARGET_TTL || IP6_NF_TARGET_HL",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_NF_MANGLE || IP6_NF_MANGLE) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_HMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP6_NF_IPTABLES || IP6_NF_IPTABLES = n) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_IDLETIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_LED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (LEDS_CLASS && LEDS_TRIGGERS) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_LOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_TARGET_MARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_NAT": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_NAT || IP6_NF_NAT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_NAT)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_NETMAP": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_TARGET_NETMAP",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_NAT)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_NFLOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_TARGET_NFQUEUE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_NOTRACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (IP_NF_RAW || IP6_NF_RAW) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_RATEEST": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_MATCH_RATEEST",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_REDIRECT": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_TARGET_REDIRECT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_NAT)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_MASQUERADE": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_TARGET_MASQUERADE || IP6_NF_TARGET_MASQUERADE",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_NAT)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_TARGET_TEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED) && (IPV6 || IPV6 = n) && (! NF_CONNTRACK || NF_CONNTRACK) && (IP6_NF_IPTABLES || ! IP6_NF_IPTABLES)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_TPROXY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_XTABLES) && (NETFILTER_ADVANCED) && (IPV6 || IPV6 = n) && (IP6_NF_IPTABLES || IP6_NF_IPTABLES = n) && (IP_NF_MANGLE)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_TRACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_NF_RAW || IP6_NF_RAW) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_TARGET_SECMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETWORK_SECMARK)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_TARGET_TCPMSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IPV6 || IPV6 = n)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_TARGET_TCPOPTSTRIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_NF_MANGLE || IP6_NF_MANGLE) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_ADDRTYPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_MATCH_BPF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CGROUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED) && (CGROUPS)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CLUSTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_COMMENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CONNBYTES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CONNLABEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CONNLIMIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CONNMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_CONNTRACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_MATCH_CPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_DCCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": "( IP_DCCP )[!(y)]"
        }
    ],
    "NETFILTER_XT_MATCH_DEVGROUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_DSCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_ECN": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_MATCH_ECN",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_ESP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_HASHLIMIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP6_NF_IPTABLES || IP6_NF_IPTABLES = n) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_HELPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_HL": [
        {
            "type": "tristate",
            "rev_select": "IP_NF_MATCH_TTL || IP6_NF_MATCH_HL",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_IPCOMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_IPRANGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_IPVS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (IP_VS) && (NETFILTER_ADVANCED) && (NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_L2TP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": "( L2TP )[!(y)]"
        }
    ],
    "NETFILTER_XT_MATCH_LENGTH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_LIMIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_MAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_MARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_MULTIPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_NFACCT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_OSF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_OWNER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_POLICY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (XFRM)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_MATCH_PHYSDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (BRIDGE && BRIDGE_NETFILTER) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_PKTTYPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_QUOTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_RATEEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_REALM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_RECENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_SCTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": "( IP_SCTP )[!(y)]"
        }
    ],
    "NETFILTER_XT_MATCH_SOCKET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_XTABLES) && (NETFILTER_ADVANCED) && (IPV6 || IPV6 = n) && (IP6_NF_IPTABLES || IP6_NF_IPTABLES = n)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_STATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NF_CONNTRACK)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NETFILTER_XT_MATCH_STATISTIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_STRING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_TCPMSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_TIME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "NETFILTER_XT_MATCH_U32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NETFILTER_XTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_SET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (INET && NETFILTER)",
            "restrict": ""
        }
    ],
    "IP_SET_MAX": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": "( 2 65534 ) || ( 256 )[!(y)]"
        }
    ],
    "IP_SET_BITMAP_IP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_BITMAP_IPMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_BITMAP_PORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_IP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_IPMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_IPPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_IPPORTIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_IPPORTNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_IPMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_MAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_NETPORTNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_NETNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_NETPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_HASH_NETIFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_SET_LIST_SET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_SET ) && (IP_SET)",
            "restrict": ""
        }
    ],
    "IP_VS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (INET && NETFILTER) && (( NF_CONNTRACK || NF_CONNTRACK = n ))",
            "restrict": ""
        }
    ],
    "IP_VS_IPV6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS ) && (IPV6 = y || IP_VS = IPV6)",
            "restrict": ""
        }
    ],
    "IP_VS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_TAB_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": "( 8 20 ) || ( 12 )[!(y)]"
        }
    ],
    "IP_VS_PROTO_TCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_PROTO_UDP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_PROTO_AH_ESP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": "( IP_VS_PROTO_ESP || IP_VS_PROTO_AH )[!(y)]"
        }
    ],
    "IP_VS_PROTO_ESP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_PROTO_AH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_PROTO_SCTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_RR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_WRR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_LC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_WLC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_FO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_OVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_LBLC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_LBLCR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_DH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_SH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_MH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_SED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_NQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_TWOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": ""
        }
    ],
    "IP_VS_SH_TAB_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": "( 4 20 ) || ( 8 )[!(y)]"
        }
    ],
    "IP_VS_MH_TAB_INDEX": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS )",
            "restrict": "( 8 17 ) || ( 12 )[!(y)]"
        }
    ],
    "IP_VS_FTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS ) && (IP_VS_PROTO_TCP && NF_CONNTRACK && NF_NAT && NF_CONNTRACK_FTP)",
            "restrict": ""
        }
    ],
    "IP_VS_NFCT": [
        {
            "type": "bool",
            "rev_select": "IP_VS_FTP",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS ) && (NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "IP_VS_PE_SIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( IP_VS ) && (IP_VS_PROTO_UDP) && (NF_CONNTRACK_SIP)",
            "restrict": ""
        }
    ],
    "NF_DEFRAG_IPV4": [
        {
            "type": "tristate",
            "rev_select": "NF_CONNTRACK || NFT_TPROXY || NETFILTER_XT_TARGET_TPROXY || NETFILTER_XT_MATCH_SOCKET",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NF_SOCKET_IPV4": [
        {
            "type": "tristate",
            "rev_select": "NFT_SOCKET || NETFILTER_XT_MATCH_SOCKET",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NF_TPROXY_IPV4": [
        {
            "type": "tristate",
            "rev_select": "NFT_TPROXY || NETFILTER_XT_TARGET_TPROXY",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NF_TABLES_IPV4": [
        {
            "type": "bool",
            "rev_select": "NF_TABLES_INET",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_REJECT_IPV4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_IPV4 )",
            "restrict": "( NFT_REJECT )[!(y)]"
        }
    ],
    "NFT_DUP_IPV4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_IPV4 ) && (! NF_CONNTRACK || NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "NFT_FIB_IPV4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_IPV4 )",
            "restrict": ""
        }
    ],
    "NF_TABLES_ARP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NF_DUP_IPV4": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_TEE || NFT_DUP_IPV4",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (! NF_CONNTRACK || NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "NF_LOG_ARP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_LOG_IPV4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_REJECT_IPV4": [
        {
            "type": "tristate",
            "rev_select": "NFT_REJECT_IPV4 || IP_NF_TARGET_REJECT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_NAT_SNMP_BASIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_NAT ) && (NF_CONNTRACK_SNMP) && (NETFILTER_ADVANCED)",
            "restrict": "( NF_NAT && NF_CONNTRACK_SNMP )[!(y)]"
        }
    ],
    "NF_NAT_PPTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_NAT ) && (NF_CONNTRACK)",
            "restrict": "( NF_CONNTRACK_PPTP )[!(y)]"
        }
    ],
    "NF_NAT_H323": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( NF_NAT ) && (NF_CONNTRACK)",
            "restrict": "( NF_CONNTRACK_H323 )[!(y)]"
        }
    ],
    "IP_NF_IPTABLES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP_NF_MATCH_AH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_MATCH_ECN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_MATCH_RPFILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NETFILTER_ADVANCED) && (IP_NF_MANGLE || IP_NF_RAW)",
            "restrict": ""
        }
    ],
    "IP_NF_MATCH_TTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_FILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP_NF_TARGET_REJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (IP_NF_FILTER)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP_NF_TARGET_SYNPROXY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NF_CONNTRACK && NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_NAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NF_CONNTRACK)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP_NF_TARGET_MASQUERADE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && ( IP_NF_NAT )",
            "restrict": ""
        }
    ],
    "IP_NF_TARGET_NETMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && ( IP_NF_NAT ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_TARGET_REDIRECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && ( IP_NF_NAT ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_MANGLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP_NF_TARGET_CLUSTERIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (IP_NF_MANGLE) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_TARGET_ECN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (IP_NF_MANGLE) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_TARGET_TTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (NETFILTER_ADVANCED && IP_NF_MANGLE)",
            "restrict": ""
        }
    ],
    "IP_NF_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES )",
            "restrict": ""
        }
    ],
    "IP_NF_SECURITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_IPTABLES ) && (SECURITY) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_ARPTABLES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP_NF_ARPFILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_ARPTABLES )",
            "restrict": ""
        }
    ],
    "IP_NF_ARP_MANGLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && NETFILTER ) ) && ( IP_NF_ARPTABLES )",
            "restrict": ""
        }
    ],
    "NF_SOCKET_IPV6": [
        {
            "type": "tristate",
            "rev_select": "NFT_SOCKET[NF_TABLES_IPV6] || NETFILTER_XT_MATCH_SOCKET[IP6_NF_IPTABLES]",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NF_TPROXY_IPV6": [
        {
            "type": "tristate",
            "rev_select": "NFT_TPROXY[NF_TABLES_IPV6] || NETFILTER_XT_TARGET_TPROXY[IP6_NF_IPTABLES]",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) )",
            "restrict": ""
        }
    ],
    "NF_TABLES_IPV6": [
        {
            "type": "bool",
            "rev_select": "NF_TABLES_INET",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( NF_TABLES )",
            "restrict": ""
        }
    ],
    "NFT_REJECT_IPV6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_IPV6 )",
            "restrict": "( NFT_REJECT )[!(y)]"
        }
    ],
    "NFT_DUP_IPV6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_IPV6 ) && (! NF_CONNTRACK || NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "NFT_FIB_IPV6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( NF_TABLES ) && ( NF_TABLES_IPV6 )",
            "restrict": ""
        }
    ],
    "NF_DUP_IPV6": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_TEE[IP6_NF_IPTABLES] || NFT_DUP_IPV6",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && (! NF_CONNTRACK || NF_CONNTRACK)",
            "restrict": ""
        }
    ],
    "NF_REJECT_IPV6": [
        {
            "type": "tristate",
            "rev_select": "NFT_REJECT_IPV6 || IP6_NF_TARGET_REJECT",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "NF_LOG_IPV6": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_TARGET_LOG[IP6_NF_IPTABLES]",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP6_NF_IPTABLES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && (INET && IPV6)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP6_NF_MATCH_AH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_EUI64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_FRAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_OPTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_HL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_IPV6HEADER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP6_NF_MATCH_MH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_RPFILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED) && (IP6_NF_MANGLE || IP6_NF_RAW)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_RT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MATCH_SRH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_TARGET_HL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NETFILTER_ADVANCED && IP6_NF_MANGLE)",
            "restrict": ""
        }
    ],
    "IP6_NF_FILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP6_NF_TARGET_REJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (IP6_NF_FILTER)",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP6_NF_TARGET_SYNPROXY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NF_CONNTRACK && NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_MANGLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES )",
            "restrict": "( m )[!(y) && (NETFILTER_ADVANCED = n)]"
        }
    ],
    "IP6_NF_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES )",
            "restrict": ""
        }
    ],
    "IP6_NF_SECURITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (SECURITY) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_NAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && (NF_CONNTRACK) && (NETFILTER_ADVANCED)",
            "restrict": ""
        }
    ],
    "IP6_NF_TARGET_MASQUERADE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && ( IP6_NF_NAT )",
            "restrict": ""
        }
    ],
    "IP6_NF_TARGET_NPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( INET && IPV6 && NETFILTER ) ) && ( IP6_NF_IPTABLES ) && ( IP6_NF_NAT )",
            "restrict": ""
        }
    ],
    "NF_DEFRAG_IPV6": [
        {
            "type": "tristate",
            "rev_select": "NF_CONNTRACK[IPV6 != n] || NFT_TPROXY[NF_TABLES_IPV6] || NETFILTER_XT_TARGET_TPROXY[IP6_NF_IPTABLES != n] || NETFILTER_XT_MATCH_SOCKET[IP6_NF_IPTABLES != n] || IP_VS_IPV6",
            "dep": "( NET ) && ( NETFILTER )",
            "restrict": ""
        }
    ],
    "DECNET_NF_GRABULATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( ( DECNET && NETFILTER ) && ( NETFILTER_ADVANCED ) )",
            "restrict": ""
        }
    ],
    "NF_TABLES_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (BRIDGE && NETFILTER && NF_TABLES)",
            "restrict": ""
        }
    ],
    "NFT_BRIDGE_META": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( NF_TABLES_BRIDGE )",
            "restrict": ""
        }
    ],
    "NFT_BRIDGE_REJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( NF_TABLES_BRIDGE ) && (NFT_REJECT) && (NF_REJECT_IPV4) && (NF_REJECT_IPV6)",
            "restrict": ""
        }
    ],
    "NF_CONNTRACK_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (NF_CONNTRACK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BRIDGE_NF_EBTABLES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && (BRIDGE && NETFILTER && NETFILTER_XTABLES)",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_BROUTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_T_FILTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_T_NAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_802_3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_AMONG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_ARP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_IP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_IP6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES ) && (BRIDGE_NF_EBTABLES && IPV6)",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_LIMIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_MARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_PKTTYPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_STP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_VLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_ARPREPLY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES ) && (BRIDGE_NF_EBTABLES && INET)",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_DNAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_MARK_T": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_REDIRECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_SNAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_LOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BRIDGE_EBT_NFLOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NETFILTER ) && ( BRIDGE_NF_EBTABLES )",
            "restrict": ""
        }
    ],
    "BPFILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BPF && INET)",
            "restrict": ""
        }
    ],
    "BPFILTER_UMH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( BPFILTER ) && (CC_CAN_LINK) && (m || CC_CAN_LINK_STATIC)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "IP_DCCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "INET_DCCP_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP ) && (INET_DIAG)",
            "restrict": "( y )[!(y) && (( IP_DCCP = y && INET_DIAG = y ))] || ( m )[!(y)]"
        }
    ],
    "IP_DCCP_CCID2_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP )",
            "restrict": ""
        }
    ],
    "IP_DCCP_CCID3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP )",
            "restrict": "( y )[!(y) && (( IP_DCCP = y || IP_DCCP = m ))]"
        }
    ],
    "IP_DCCP_CCID3_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP ) && (IP_DCCP_CCID3)",
            "restrict": ""
        }
    ],
    "IP_DCCP_TFRC_LIB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP )",
            "restrict": "( y )[!(y) && (IP_DCCP_CCID3)]"
        }
    ],
    "IP_DCCP_TFRC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP )",
            "restrict": "( y )[!(y) && (IP_DCCP_CCID3_DEBUG)]"
        }
    ],
    "IP_DCCP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_DCCP ) && ( ( DEBUG_KERNEL = y ) )",
            "restrict": ""
        }
    ],
    "IP_SCTP": [
        {
            "type": "tristate",
            "rev_select": "DLM",
            "dep": "( NET ) && (INET) && (IPV6 || IPV6 = n)",
            "restrict": ""
        }
    ],
    "SCTP_DBG_OBJCNT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP ) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "SCTP_DEFAULT_COOKIE_HMAC_MD5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP ) && ( SCTP_DEFAULT_COOKIE_HMAC_MD5 &&  !SCTP_DEFAULT_COOKIE_HMAC_SHA1 &&  !SCTP_DEFAULT_COOKIE_HMAC_NONE )",
            "restrict": ""
        }
    ],
    "SCTP_DEFAULT_COOKIE_HMAC_SHA1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP ) && ( SCTP_DEFAULT_COOKIE_HMAC_SHA1 &&  !SCTP_DEFAULT_COOKIE_HMAC_MD5 &&  !SCTP_DEFAULT_COOKIE_HMAC_NONE )",
            "restrict": ""
        }
    ],
    "SCTP_DEFAULT_COOKIE_HMAC_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP ) && ( SCTP_DEFAULT_COOKIE_HMAC_NONE &&  !SCTP_DEFAULT_COOKIE_HMAC_MD5 &&  !SCTP_DEFAULT_COOKIE_HMAC_SHA1 )",
            "restrict": ""
        }
    ],
    "SCTP_COOKIE_HMAC_MD5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP )",
            "restrict": ""
        }
    ],
    "SCTP_COOKIE_HMAC_SHA1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP )",
            "restrict": ""
        }
    ],
    "INET_SCTP_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( IP_SCTP ) && (INET_DIAG)",
            "restrict": "( INET_DIAG )[!(y)]"
        }
    ],
    "RDS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "RDS_RDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (RDS && INFINIBAND && INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "RDS_TCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (RDS) && (IPV6 || ! IPV6)",
            "restrict": ""
        }
    ],
    "RDS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (RDS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TIPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET) && (IPV6 || IPV6 = n)",
            "restrict": ""
        }
    ],
    "TIPC_MEDIA_IB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (TIPC && INFINIBAND_IPOIB)",
            "restrict": ""
        }
    ],
    "TIPC_MEDIA_UDP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (TIPC)",
            "restrict": ""
        }
    ],
    "TIPC_CRYPTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (TIPC)",
            "restrict": ""
        }
    ],
    "TIPC_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (TIPC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "ATM_CLIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (ATM && INET)",
            "restrict": ""
        }
    ],
    "ATM_CLIP_NO_ICMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (ATM_CLIP)",
            "restrict": ""
        }
    ],
    "ATM_LANE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (ATM)",
            "restrict": ""
        }
    ],
    "ATM_MPOA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (ATM && INET && ATM_LANE != n)",
            "restrict": ""
        }
    ],
    "ATM_BR2684": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (ATM && INET)",
            "restrict": ""
        }
    ],
    "ATM_BR2684_IPFILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (ATM_BR2684)",
            "restrict": ""
        }
    ],
    "L2TP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (( IPV6 || IPV6 = n )) && (INET)",
            "restrict": ""
        }
    ],
    "L2TP_DEBUGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (L2TP && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "L2TP_V3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (L2TP)",
            "restrict": ""
        }
    ],
    "L2TP_IP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (L2TP_V3)",
            "restrict": ""
        }
    ],
    "L2TP_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (L2TP_V3)",
            "restrict": ""
        }
    ],
    "STP": [
        {
            "type": "tristate",
            "rev_select": "GARP || BRIDGE",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "GARP": [
        {
            "type": "tristate",
            "rev_select": "VLAN_8021Q_GVRP",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "MRP": [
        {
            "type": "tristate",
            "rev_select": "VLAN_8021Q_MVRP",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (IPV6 || IPV6 = n)",
            "restrict": ""
        }
    ],
    "BRIDGE_IGMP_SNOOPING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BRIDGE) && (INET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BRIDGE_VLAN_FILTERING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BRIDGE) && (VLAN_8021Q)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BRIDGE_MRP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BRIDGE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BRIDGE_CFM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BRIDGE)",
            "restrict": ""
        }
    ],
    "NET_DSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (BRIDGE || BRIDGE = n) && (HSR || HSR = n) && (INET && NETDEVICES)",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_AR9331": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_AR9331",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_BRCM_COMMON": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_TAG_BRCM || NET_DSA_TAG_BRCM_LEGACY || NET_DSA_TAG_BRCM_PREPEND",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_DSA_TAG_BRCM": [
        {
            "type": "tristate",
            "rev_select": "B53 || NET_DSA_BCM_SF2",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_BRCM_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "B53",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_BRCM_PREPEND": [
        {
            "type": "tristate",
            "rev_select": "B53",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_HELLCREEK": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_HIRSCHMANN_HELLCREEK",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_GSWIP": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_LANTIQ_GSWIP",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_DSA_COMMON": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_TAG_DSA || NET_DSA_TAG_EDSA",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_DSA": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MV88E6XXX",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_EDSA": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MV88E6XXX",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_MTK": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MT7530",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_KSZ": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MICROCHIP_KSZ_COMMON",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_OCELOT": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MSCC_FELIX || NET_DSA_MSCC_SEVILLE",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_OCELOT_8021Q": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MSCC_FELIX || NET_DSA_MSCC_SEVILLE",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_QCA": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_QCA8K",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_RTL4_A": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_REALTEK_RTL8366RB",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_RTL8_4": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_REALTEK_RTL8365MB",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_RZN1_A5PSW": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_RZN1_A5PSW",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_LAN9303": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_SMSC_LAN9303",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_SJA1105": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_SJA1105",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_TRAILER": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MV88E6060",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "NET_DSA_TAG_XRS700X": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_XRS700X",
            "dep": "( NET ) && ( NET_DSA )",
            "restrict": ""
        }
    ],
    "VLAN_8021Q": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "VLAN_8021Q_GVRP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (VLAN_8021Q)",
            "restrict": ""
        }
    ],
    "VLAN_8021Q_MVRP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (VLAN_8021Q)",
            "restrict": ""
        }
    ],
    "DECNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "DECNET_ROUTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (DECNET)",
            "restrict": ""
        }
    ],
    "LLC": [
        {
            "type": "tristate",
            "rev_select": "STP || BRIDGE || LLC2 || ATALK",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "LLC2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "ATALK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "DEV_APPLETALK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (ATALK)",
            "restrict": ""
        }
    ],
    "COPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (DEV_APPLETALK && ISA) && (NETDEVICES)",
            "restrict": ""
        }
    ],
    "COPS_DAYNA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (COPS)",
            "restrict": ""
        }
    ],
    "COPS_TANGENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (COPS)",
            "restrict": ""
        }
    ],
    "IPDDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (DEV_APPLETALK && ATALK)",
            "restrict": ""
        }
    ],
    "IPDDP_ENCAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (IPDDP)",
            "restrict": ""
        }
    ],
    "X25": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "LAPB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "PHONET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "6LOWPAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (IPV6)",
            "restrict": ""
        }
    ],
    "6LOWPAN_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (6LOWPAN) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "6LOWPAN_NHC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (6LOWPAN)",
            "restrict": ""
        }
    ],
    "6LOWPAN_NHC_DEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_NHC_FRAGMENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_NHC_HOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_NHC_IPV6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_NHC_MOBILITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_NHC_ROUTING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_NHC_UDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "6LOWPAN_GHC_EXT_HDR_HOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": ""
        }
    ],
    "6LOWPAN_GHC_UDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": ""
        }
    ],
    "6LOWPAN_GHC_ICMPV6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": ""
        }
    ],
    "6LOWPAN_GHC_EXT_HDR_DEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": ""
        }
    ],
    "6LOWPAN_GHC_EXT_HDR_FRAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": ""
        }
    ],
    "6LOWPAN_GHC_EXT_HDR_ROUTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( 6LOWPAN_NHC )",
            "restrict": ""
        }
    ],
    "IEEE802154": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "IEEE802154_NL802154_EXPERIMENTAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( IEEE802154 )",
            "restrict": ""
        }
    ],
    "IEEE802154_SOCKET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( IEEE802154 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IEEE802154_6LOWPAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( IEEE802154 ) && (6LOWPAN)",
            "restrict": ""
        }
    ],
    "MAC802154": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (IEEE802154)",
            "restrict": ""
        }
    ],
    "NET_SCHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_SCH_CBQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_HTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_HFSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_ATM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (ATM)",
            "restrict": ""
        }
    ],
    "NET_SCH_PRIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_MULTIQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_RED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_SFB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_SFQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_TEQL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_TBF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_CBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_ETF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_TAPRIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_GRED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_DSMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_NETEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_DRR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_MQPRIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_SKBPRIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_CHOKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_QFQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_CODEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_FQ_CODEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_CAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_FQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_HHF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_PIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_FQ_PIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_SCH_PIE)",
            "restrict": ""
        }
    ],
    "NET_SCH_INGRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_SCH_PLUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_ETS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_SCH_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "DEFAULT_FQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT ) && ( DEFAULT_FQ &&  !DEFAULT_CODEL &&  !DEFAULT_FQ_CODEL &&  !DEFAULT_FQ_PIE &&  !DEFAULT_SFQ &&  !DEFAULT_PFIFO_FAST )",
            "restrict": ""
        }
    ],
    "DEFAULT_CODEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT ) && ( DEFAULT_CODEL &&  !DEFAULT_FQ &&  !DEFAULT_FQ_CODEL &&  !DEFAULT_FQ_PIE &&  !DEFAULT_SFQ &&  !DEFAULT_PFIFO_FAST )",
            "restrict": ""
        }
    ],
    "DEFAULT_FQ_CODEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT ) && ( DEFAULT_FQ_CODEL &&  !DEFAULT_FQ &&  !DEFAULT_CODEL &&  !DEFAULT_FQ_PIE &&  !DEFAULT_SFQ &&  !DEFAULT_PFIFO_FAST )",
            "restrict": ""
        }
    ],
    "DEFAULT_FQ_PIE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT ) && ( DEFAULT_FQ_PIE &&  !DEFAULT_FQ &&  !DEFAULT_CODEL &&  !DEFAULT_FQ_CODEL &&  !DEFAULT_SFQ &&  !DEFAULT_PFIFO_FAST )",
            "restrict": ""
        }
    ],
    "DEFAULT_SFQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT ) && ( DEFAULT_SFQ &&  !DEFAULT_FQ &&  !DEFAULT_CODEL &&  !DEFAULT_FQ_CODEL &&  !DEFAULT_FQ_PIE &&  !DEFAULT_PFIFO_FAST )",
            "restrict": ""
        }
    ],
    "DEFAULT_PFIFO_FAST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT ) && ( DEFAULT_PFIFO_FAST &&  !DEFAULT_FQ &&  !DEFAULT_CODEL &&  !DEFAULT_FQ_CODEL &&  !DEFAULT_FQ_PIE &&  !DEFAULT_SFQ )",
            "restrict": ""
        }
    ],
    "DEFAULT_NET_SCH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && ( NET_SCH_DEFAULT )",
            "restrict": "( \"pfifo_fast\" )[!(y) && (DEFAULT_PFIFO_FAST)] || ( \"fq\" )[!(y) && (DEFAULT_FQ)] || ( \"fq_codel\" )[!(y) && (DEFAULT_FQ_CODEL)] || ( \"fq_pie\" )[!(y) && (DEFAULT_FQ_PIE)] || ( \"sfq\" )[!(y) && (DEFAULT_SFQ)] || ( \"pfifo_fast\" )[!(y)]"
        }
    ],
    "NET_CLS": [
        {
            "type": "bool",
            "rev_select": "NET_CLS_BASIC || NET_CLS_TCINDEX || NET_CLS_ROUTE4 || NET_CLS_FW || NET_CLS_U32 || NET_CLS_RSVP || NET_CLS_RSVP6 || NET_CLS_FLOW || NET_CLS_CGROUP || NET_CLS_BPF || NET_CLS_FLOWER || NET_CLS_MATCHALL || NET_EMATCH || NET_CLS_ACT",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_BASIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_TCINDEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_ROUTE4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (INET)",
            "restrict": ""
        }
    ],
    "NET_CLS_FW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_U32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "CLS_U32_PERF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_U32)",
            "restrict": ""
        }
    ],
    "CLS_U32_MARK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_U32)",
            "restrict": ""
        }
    ],
    "NET_CLS_RSVP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_RSVP6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_FLOW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_CGROUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (CGROUPS)",
            "restrict": ""
        }
    ],
    "NET_CLS_BPF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_FLOWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_CLS_MATCHALL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_EMATCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_EMATCH_STACK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH)",
            "restrict": "( 32 )[!(y)]"
        }
    ],
    "NET_EMATCH_CMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH)",
            "restrict": ""
        }
    ],
    "NET_EMATCH_NBYTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH)",
            "restrict": ""
        }
    ],
    "NET_EMATCH_U32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH)",
            "restrict": ""
        }
    ],
    "NET_EMATCH_META": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH)",
            "restrict": ""
        }
    ],
    "NET_EMATCH_TEXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH)",
            "restrict": ""
        }
    ],
    "NET_EMATCH_CANID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH && ( CAN = y || CAN = m ))",
            "restrict": ""
        }
    ],
    "NET_EMATCH_IPSET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH && IP_SET)",
            "restrict": ""
        }
    ],
    "NET_EMATCH_IPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_EMATCH && NETFILTER && NETFILTER_XTABLES)",
            "restrict": ""
        }
    ],
    "NET_CLS_ACT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED )",
            "restrict": ""
        }
    ],
    "NET_ACT_POLICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_GACT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "GACT_PROB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_ACT_GACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_MIRRED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_SAMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_IPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT && NETFILTER && NETFILTER_XTABLES)",
            "restrict": ""
        }
    ],
    "NET_ACT_NAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_PEDIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_SIMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_SKBEDIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_CSUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT && INET)",
            "restrict": ""
        }
    ],
    "NET_ACT_MPLS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_VLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_BPF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_CONNMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT && NETFILTER) && (NF_CONNTRACK && NF_CONNTRACK_MARK)",
            "restrict": ""
        }
    ],
    "NET_ACT_CTINFO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT && NETFILTER) && (NF_CONNTRACK && NF_CONNTRACK_MARK)",
            "restrict": ""
        }
    ],
    "NET_ACT_SKBMOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_IFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_TUNNEL_KEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_ACT_CT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT && NF_CONNTRACK && NF_NAT && NF_FLOW_TABLE)",
            "restrict": ""
        }
    ],
    "NET_ACT_GATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_IFE_SKBMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_ACT_IFE)",
            "restrict": ""
        }
    ],
    "NET_IFE_SKBPRIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_ACT_IFE)",
            "restrict": ""
        }
    ],
    "NET_IFE_SKBTCINDEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_ACT_IFE)",
            "restrict": ""
        }
    ],
    "NET_TC_SKB_EXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_SCHED ) && (NET_CLS_ACT)",
            "restrict": ""
        }
    ],
    "NET_SCH_FIFO": [
        {
            "type": "bool",
            "rev_select": "NET_SCHED",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DNS_RESOLVER": [
        {
            "type": "tristate",
            "rev_select": "CEPH_LIB_USE_DNS_RESOLVER || NFS_USE_KERNEL_DNS || CIFS || AFS_FS",
            "dep": "( NET ) && (KEYS)",
            "restrict": ""
        }
    ],
    "BATMAN_ADV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "BATMAN_ADV_BATMAN_V": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV && ! ( CFG80211 = m && BATMAN_ADV = y ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BATMAN_ADV_BLA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV && INET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BATMAN_ADV_DAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV && INET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BATMAN_ADV_NC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV)",
            "restrict": ""
        }
    ],
    "BATMAN_ADV_MCAST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV && INET && ! ( BRIDGE = m && BATMAN_ADV = y ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BATMAN_ADV_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV)",
            "restrict": ""
        }
    ],
    "BATMAN_ADV_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BATMAN_ADV) && (EVENT_TRACING)",
            "restrict": ""
        }
    ],
    "OPENVSWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET) && (! NF_CONNTRACK || ( NF_CONNTRACK && ( ( ! NF_DEFRAG_IPV6 || NF_DEFRAG_IPV6 ) && ( ! NF_NAT || NF_NAT ) && ( ! NETFILTER_CONNCOUNT || NETFILTER_CONNCOUNT ) ) ))",
            "restrict": ""
        }
    ],
    "OPENVSWITCH_GRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (OPENVSWITCH) && (NET_IPGRE)",
            "restrict": "( OPENVSWITCH )[!(y)]"
        }
    ],
    "OPENVSWITCH_VXLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (OPENVSWITCH) && (VXLAN)",
            "restrict": "( OPENVSWITCH )[!(y)]"
        }
    ],
    "OPENVSWITCH_GENEVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (OPENVSWITCH) && (GENEVE)",
            "restrict": "( OPENVSWITCH )[!(y)]"
        }
    ],
    "VSOCKETS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "VSOCKETS_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (VSOCKETS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VSOCKETS_LOOPBACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (VSOCKETS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VMWARE_VMCI_VSOCKETS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (VSOCKETS && VMWARE_VMCI)",
            "restrict": ""
        }
    ],
    "VIRTIO_VSOCKETS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (VSOCKETS && VIRTIO)",
            "restrict": ""
        }
    ],
    "VIRTIO_VSOCKETS_COMMON": [
        {
            "type": "tristate",
            "rev_select": "VSOCKETS_LOOPBACK || VIRTIO_VSOCKETS || VHOST_VSOCK",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "HYPERV_VSOCKETS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (VSOCKETS && HYPERV)",
            "restrict": ""
        }
    ],
    "NETLINK_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MPLS": [
        {
            "type": "bool",
            "rev_select": "OPENVSWITCH",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_MPLS_GSO": [
        {
            "type": "tristate",
            "rev_select": "OPENVSWITCH",
            "dep": "( NET ) && ( MPLS )",
            "restrict": ""
        }
    ],
    "MPLS_ROUTING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( MPLS ) && (NET_IP_TUNNEL || NET_IP_TUNNEL = n) && (PROC_SYSCTL)",
            "restrict": ""
        }
    ],
    "MPLS_IPTUNNEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( MPLS ) && (LWTUNNEL && MPLS_ROUTING)",
            "restrict": ""
        }
    ],
    "NET_NSH": [
        {
            "type": "tristate",
            "rev_select": "OPENVSWITCH",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "HSR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_SWITCHDEV": [
        {
            "type": "bool",
            "rev_select": "NET_DSA",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "NET_L3_MASTER_DEV": [
        {
            "type": "bool",
            "rev_select": "IPVLAN_L3S",
            "dep": "( NET ) && (INET || IPV6)",
            "restrict": ""
        }
    ],
    "QRTR": [
        {
            "type": "tristate",
            "rev_select": "ATH11K_PCI",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "QRTR_SMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( QRTR ) && (RPMSG || ( COMPILE_TEST && RPMSG = n ))",
            "restrict": ""
        }
    ],
    "QRTR_TUN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( QRTR )",
            "restrict": ""
        }
    ],
    "QRTR_MHI": [
        {
            "type": "tristate",
            "rev_select": "ATH11K_PCI",
            "dep": "( NET ) && ( QRTR ) && (MHI_BUS)",
            "restrict": ""
        }
    ],
    "NET_NCSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "NCSI_OEM_CMD_GET_MAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (NET_NCSI)",
            "restrict": ""
        }
    ],
    "NCSI_OEM_CMD_KEEP_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (NET_NCSI)",
            "restrict": ""
        }
    ],
    "PCPU_DEV_REFCNT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (SMP && SYSFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RFS_ACCEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (RPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SOCK_RX_QUEUE_MAPPING": [
        {
            "type": "bool",
            "rev_select": "TLS_DEVICE || XPS",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "XPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (SMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HWBM": [
        {
            "type": "bool",
            "rev_select": "MVNETA_BM",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "CGROUP_NET_PRIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (CGROUPS)",
            "restrict": ""
        }
    ],
    "CGROUP_NET_CLASSID": [
        {
            "type": "bool",
            "rev_select": "NETFILTER_XT_MATCH_CGROUP || NET_CLS_CGROUP",
            "dep": "( NET ) && (CGROUPS)",
            "restrict": ""
        }
    ],
    "NET_RX_BUSY_POLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": "( y )[!(y) && (! PREEMPT_RT)]"
        }
    ],
    "BQL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (SYSFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BPF_STREAM_PARSER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (INET) && (BPF_SYSCALL) && (CGROUP_BPF)",
            "restrict": ""
        }
    ],
    "NET_FLOW_LIMIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (RPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_PKTGEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET && PROC_FS)",
            "restrict": ""
        }
    ],
    "NET_DROP_MONITOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET && TRACEPOINTS)",
            "restrict": ""
        }
    ],
    "HAMRADIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (NET && ! S390)",
            "restrict": ""
        }
    ],
    "AX25": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (HAMRADIO)",
            "restrict": ""
        }
    ],
    "AX25_DAMA_SLAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (AX25)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AX25_DAMA_MASTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (AX25_DAMA_SLAVE && BROKEN)",
            "restrict": ""
        }
    ],
    "NETROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (AX25)",
            "restrict": ""
        }
    ],
    "ROSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (AX25)",
            "restrict": ""
        }
    ],
    "MKISS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (AX25 && TTY)",
            "restrict": ""
        }
    ],
    "6PACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (AX25 && TTY)",
            "restrict": ""
        }
    ],
    "BPQETHER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (AX25)",
            "restrict": ""
        }
    ],
    "SCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (ISA && AX25 && ISA_DMA_API)",
            "restrict": ""
        }
    ],
    "SCC_DELAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (SCC)",
            "restrict": ""
        }
    ],
    "SCC_TRXECHO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (SCC)",
            "restrict": ""
        }
    ],
    "BAYCOM_SER_FDX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (AX25 && ! S390)",
            "restrict": ""
        }
    ],
    "BAYCOM_SER_HDX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (AX25 && ! S390)",
            "restrict": ""
        }
    ],
    "BAYCOM_PAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (PARPORT && AX25)",
            "restrict": ""
        }
    ],
    "BAYCOM_EPP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (PARPORT && AX25 && ! 64BIT)",
            "restrict": ""
        }
    ],
    "YAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( HAMRADIO && AX25 ) ) && (AX25 && ! S390)",
            "restrict": ""
        }
    ],
    "CAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "CAN_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( CAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CAN_BCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( CAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CAN_GW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( CAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CAN_J1939": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( CAN ) && (CAN)",
            "restrict": ""
        }
    ],
    "CAN_ISOTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( CAN )",
            "restrict": ""
        }
    ],
    "BT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (! S390) && (RFKILL || ! RFKILL)",
            "restrict": ""
        }
    ],
    "BT_BREDR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BT_RFCOMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (BT_BREDR)",
            "restrict": ""
        }
    ],
    "BT_RFCOMM_TTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT_RFCOMM) && (TTY)",
            "restrict": ""
        }
    ],
    "BT_BNEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (BT_BREDR)",
            "restrict": ""
        }
    ],
    "BT_BNEP_MC_FILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT_BNEP)",
            "restrict": ""
        }
    ],
    "BT_BNEP_PROTO_FILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT_BNEP)",
            "restrict": ""
        }
    ],
    "BT_CMTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (BT_BREDR && ISDN_CAPI)",
            "restrict": ""
        }
    ],
    "BT_HIDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (BT_BREDR && INPUT)",
            "restrict": ""
        }
    ],
    "BT_HS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT_BREDR)",
            "restrict": ""
        }
    ],
    "BT_LE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BT_6LOWPAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (BT_LE && 6LOWPAN)",
            "restrict": ""
        }
    ],
    "BT_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "BT_MSFTEXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT)",
            "restrict": ""
        }
    ],
    "BT_AOSPEXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT)",
            "restrict": ""
        }
    ],
    "BT_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT && DEBUG_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BT_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT && DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "BT_SELFTEST_ECDH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT_LE && BT_SELFTEST)",
            "restrict": ""
        }
    ],
    "BT_SELFTEST_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT_LE && BT_SELFTEST)",
            "restrict": ""
        }
    ],
    "BT_FEATURE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (BT && ! DYNAMIC_DEBUG)",
            "restrict": ""
        }
    ],
    "BT_INTEL": [
        {
            "type": "tristate",
            "rev_select": "BT_HCIBTUSB || BT_HCIUART_INTEL || BT_HCIUART_AG6XX",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_BCM": [
        {
            "type": "tristate",
            "rev_select": "BT_HCIBTUSB_BCM || BT_HCIUART_NOKIA || BT_HCIUART_BCM",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_RTL": [
        {
            "type": "tristate",
            "rev_select": "BT_HCIBTUSB_RTL || BT_HCIUART_RTL",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_QCA": [
        {
            "type": "tristate",
            "rev_select": "BT_HCIUART_QCA || BT_QCOMSMD",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_MTK": [
        {
            "type": "tristate",
            "rev_select": "BT_HCIBTUSB_MTK || BT_MTKSDIO || BT_MTKUART",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_HCIBTUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (USB)",
            "restrict": ""
        }
    ],
    "BT_HCIBTUSB_AUTOSUSPEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIBTUSB)",
            "restrict": ""
        }
    ],
    "BT_HCIBTUSB_BCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIBTUSB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BT_HCIBTUSB_MTK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIBTUSB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BT_HCIBTUSB_RTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIBTUSB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BT_HCIBTSDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (MMC)",
            "restrict": ""
        }
    ],
    "BT_HCIUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (SERIAL_DEV_BUS || ! SERIAL_DEV_BUS) && (NVMEM || ! NVMEM) && (TTY)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_SERDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (SERIAL_DEV_BUS && BT_HCIUART)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BT_HCIUART_H4": [
        {
            "type": "bool",
            "rev_select": "BT_HCIUART_NOKIA || BT_HCIUART_ATH3K || BT_HCIUART_LL || BT_HCIUART_INTEL || BT_HCIUART_BCM || BT_HCIUART_QCA || BT_HCIUART_AG6XX || BT_HCIUART_MRVL",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_NOKIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (BT_HCIUART_SERDEV) && (GPIOLIB) && (PM)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_BCSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_ATH3K": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_LL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART_SERDEV)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_3WIRE": [
        {
            "type": "bool",
            "rev_select": "BT_HCIUART_RTL",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (BT_HCIUART_SERDEV)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_INTEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_BCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (BT_HCIUART_SERDEV) && (( ! ACPI || SERIAL_DEV_CTRL_TTYPORT )) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_RTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (BT_HCIUART_SERDEV) && (GPIOLIB) && (( ACPI || SERIAL_DEV_CTRL_TTYPORT ))",
            "restrict": ""
        }
    ],
    "BT_HCIUART_QCA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (BT_HCIUART_SERDEV)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_AG6XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART)",
            "restrict": ""
        }
    ],
    "BT_HCIUART_MRVL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIUART) && (BT_HCIUART_SERDEV)",
            "restrict": ""
        }
    ],
    "BT_HCIBCM203X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (USB)",
            "restrict": ""
        }
    ],
    "BT_HCIBPA10X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (USB)",
            "restrict": ""
        }
    ],
    "BT_HCIBFUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (USB)",
            "restrict": ""
        }
    ],
    "BT_HCIDTL1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "BT_HCIBT3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "BT_HCIBLUECARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "BT_HCIVHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_MRVL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_MRVL_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_MRVL && MMC)",
            "restrict": ""
        }
    ],
    "BT_ATH3K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (BT_HCIBTUSB)",
            "restrict": ""
        }
    ],
    "BT_MTKSDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (MMC)",
            "restrict": ""
        }
    ],
    "BT_MTKUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "BT_QCOMSMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (RPMSG || ( COMPILE_TEST && RPMSG = n )) && (QCOM_WCNSS_CTRL || ( COMPILE_TEST && QCOM_WCNSS_CTRL = n ))",
            "restrict": ""
        }
    ],
    "BT_HCIRSI": [
        {
            "type": "tristate",
            "rev_select": "RSI_91X[RSI_COEX]",
            "dep": "( NET ) && ( ( BT ) )",
            "restrict": ""
        }
    ],
    "BT_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( BT ) ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "AF_RXRPC": [
        {
            "type": "tristate",
            "rev_select": "AFS_FS",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "AF_RXRPC_IPV6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( AF_RXRPC ) && (( IPV6 = m && AF_RXRPC = m ) || ( IPV6 = y && AF_RXRPC ))",
            "restrict": ""
        }
    ],
    "AF_RXRPC_INJECT_LOSS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( AF_RXRPC )",
            "restrict": ""
        }
    ],
    "AF_RXRPC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( AF_RXRPC )",
            "restrict": ""
        }
    ],
    "RXKAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( AF_RXRPC )",
            "restrict": ""
        }
    ],
    "AF_KCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (INET)",
            "restrict": ""
        }
    ],
    "STREAM_PARSER": [
        {
            "type": "bool",
            "rev_select": "TLS || INET_ESPINTCP || INET6_ESPINTCP || BPF_STREAM_PARSER || AF_KCM",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MCTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (NET)",
            "restrict": ""
        }
    ],
    "MCTP_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (MCTP = y && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "MCTP_FLOWS": [
        {
            "type": "bool",
            "rev_select": "MCTP_TRANSPORT_I2C",
            "dep": "( NET ) && (MCTP)",
            "restrict": ""
        }
    ],
    "FIB_RULES": [
        {
            "type": "bool",
            "rev_select": "IP_MULTIPLE_TABLES || IP_MROUTE_MULTIPLE_TABLES || IPV6_MULTIPLE_TABLES || IPV6_MROUTE_MULTIPLE_TABLES || DECNET_ROUTER",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "WIRELESS": [
        {
            "type": "bool",
            "rev_select": "WLAN",
            "dep": "( NET ) && (! S390)",
            "restrict": ""
        }
    ],
    "WIRELESS_EXT": [
        {
            "type": "bool",
            "rev_select": "GELIC_WIRELESS || ATMEL || PCMCIA_ATMEL || AIRO || AIRO_CS || IPW2100 || IPW2200 || LIBIPW || HOSTAP || HERMES || LIBERTAS || USB_ZD1201 || PCMCIA_RAYCS || PCMCIA_WL3501 || PRISM2_USB || RTL8192U || RTL8192E || R8712U || R8188EU || KS7010",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": ""
        }
    ],
    "WEXT_CORE": [
        {
            "type": "bool",
            "rev_select": "CFG80211_WEXT",
            "dep": "( NET ) && ( WIRELESS ) && (CFG80211_WEXT || WIRELESS_EXT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WEXT_PROC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (PROC_FS) && (WEXT_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WEXT_SPY": [
        {
            "type": "bool",
            "rev_select": "AIRO || AIRO_CS || IPW2100 || IPW2200 || LIBIPW || HOSTAP || HERMES || LIBERTAS || PCMCIA_RAYCS || PCMCIA_WL3501",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": ""
        }
    ],
    "WEXT_PRIV": [
        {
            "type": "bool",
            "rev_select": "ATMEL || AIRO || AIRO_CS || IPW2100 || IPW2200 || HOSTAP || HERMES || USB_ZD1201 || PCMCIA_RAYCS || PRISM2_USB || RTL8192U || RTL8192E || R8712U || R8188EU || KS7010",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": ""
        }
    ],
    "CFG80211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (RFKILL || ! RFKILL)",
            "restrict": ""
        }
    ],
    "NL80211_TESTMODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": ""
        }
    ],
    "CFG80211_DEVELOPER_WARNINGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CFG80211_CERTIFICATION_ONUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 ) && (EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CFG80211_REQUIRE_SIGNED_REGDB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": "( y )[!(CFG80211_CERTIFICATION_ONUS)]"
        }
    ],
    "CFG80211_USE_KERNEL_REGDB_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 ) && (CFG80211_REQUIRE_SIGNED_REGDB)",
            "restrict": "( y )[!(CFG80211_CERTIFICATION_ONUS)]"
        }
    ],
    "CFG80211_EXTRA_REGDB_KEYDIR": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 ) && (CFG80211_REQUIRE_SIGNED_REGDB)",
            "restrict": ""
        }
    ],
    "CFG80211_REG_CELLULAR_HINTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 ) && (CFG80211_CERTIFICATION_ONUS)",
            "restrict": ""
        }
    ],
    "CFG80211_REG_RELAX_NO_IR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 ) && (CFG80211_CERTIFICATION_ONUS)",
            "restrict": ""
        }
    ],
    "CFG80211_DEFAULT_PS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CFG80211_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CFG80211_CRDA_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "CFG80211_WEXT": [
        {
            "type": "bool",
            "rev_select": "RTL8723BS",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": "( y )[!(! CFG80211_WEXT_EXPORT) && (CFG80211_WEXT_EXPORT)]"
        }
    ],
    "CFG80211_WEXT_EXPORT": [
        {
            "type": "bool",
            "rev_select": "IPW2200 || HERMES",
            "dep": "( NET ) && ( WIRELESS ) && ( CFG80211 )",
            "restrict": ""
        }
    ],
    "LIB80211": [
        {
            "type": "tristate",
            "rev_select": "IPW2100 || IPW2200 || LIBIPW || HOSTAP || LIBERTAS || RTLLIB || R8188EU",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "LIB80211_CRYPT_WEP": [
        {
            "type": "tristate",
            "rev_select": "LIBIPW || HOSTAP || R8188EU",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": ""
        }
    ],
    "LIB80211_CRYPT_CCMP": [
        {
            "type": "tristate",
            "rev_select": "LIBIPW || HOSTAP || R8188EU",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": ""
        }
    ],
    "LIB80211_CRYPT_TKIP": [
        {
            "type": "tristate",
            "rev_select": "LIBIPW || HOSTAP",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": ""
        }
    ],
    "LIB80211_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (LIB80211)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MAC80211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (CFG80211)",
            "restrict": ""
        }
    ],
    "MAC80211_HAS_RC": [
        {
            "type": "bool",
            "rev_select": "MAC80211_RC_MINSTREL",
            "dep": "( NET ) && ( WIRELESS ) && ( MAC80211 != n )",
            "restrict": ""
        }
    ],
    "MAC80211_RC_MINSTREL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( MAC80211 != n )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MAC80211_RC_DEFAULT_MINSTREL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( MAC80211 != n ) && ( ( MAC80211_HAS_RC ) ) && (MAC80211_RC_MINSTREL) && ( MAC80211_RC_DEFAULT_MINSTREL )",
            "restrict": ""
        }
    ],
    "MAC80211_RC_DEFAULT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && ( MAC80211 != n )",
            "restrict": "( \"minstrel_ht\" )[!(y) && (MAC80211_RC_DEFAULT_MINSTREL)] || ( \"\" )[!(y)]"
        }
    ],
    "MAC80211_MESH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "MAC80211_LEDS": [
        {
            "type": "bool",
            "rev_select": "ATH5K[LEDS_CLASS = y || LEDS_CLASS = MAC80211] || ATH9K[LEDS_CLASS = y || LEDS_CLASS = MAC80211] || ATH9K_HTC[LEDS_CLASS = y || LEDS_CLASS = MAC80211] || IWLEGACY || IWLWIFI_LEDS",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211) && (LEDS_CLASS = y || LEDS_CLASS = MAC80211)",
            "restrict": ""
        }
    ],
    "MAC80211_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "ATH9K_DEBUGFS || ATH9K_STATION_STATISTICS",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211 && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "MAC80211_MESSAGE_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "MAC80211_DEBUG_MENU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "MAC80211_NOINLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_VERBOSE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_MLME_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_STA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_HT_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_OCB_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_IBSS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_PS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_MPL_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_MESH)",
            "restrict": ""
        }
    ],
    "MAC80211_MPATH_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_MESH)",
            "restrict": ""
        }
    ],
    "MAC80211_MHWMP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_MESH)",
            "restrict": ""
        }
    ],
    "MAC80211_MESH_SYNC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_MESH)",
            "restrict": ""
        }
    ],
    "MAC80211_MESH_CSA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_MESH)",
            "restrict": ""
        }
    ],
    "MAC80211_MESH_PS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_MESH)",
            "restrict": ""
        }
    ],
    "MAC80211_TDLS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU)",
            "restrict": ""
        }
    ],
    "MAC80211_DEBUG_COUNTERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS ) && (MAC80211_DEBUG_MENU) && (MAC80211_DEBUGFS)",
            "restrict": ""
        }
    ],
    "MAC80211_STA_HASH_MAX_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NET ) && ( WIRELESS )",
            "restrict": "( 0 )[!(MAC80211_DEBUG_MENU)]"
        }
    ],
    "RFKILL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "RFKILL_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (RFKILL) && (LEDS_TRIGGERS = y || RFKILL = LEDS_TRIGGERS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RFKILL_INPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (RFKILL) && (INPUT = y || RFKILL = INPUT)",
            "restrict": "( y )[!(EXPERT) && (! EXPERT)]"
        }
    ],
    "RFKILL_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (RFKILL) && (GPIOLIB || COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_9P": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_9P_FD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_9P )",
            "restrict": "( NET_9P )[!(y)]"
        }
    ],
    "NET_9P_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_9P ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "NET_9P_XEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_9P ) && (XEN)",
            "restrict": ""
        }
    ],
    "NET_9P_RDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( NET_9P ) && (INET && INFINIBAND && INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "NET_9P_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && ( NET_9P )",
            "restrict": ""
        }
    ],
    "CAIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "CAIF_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (CAIF)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CAIF_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (CAIF)",
            "restrict": "( CAIF )[!(y)]"
        }
    ],
    "CAIF_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (CAIF)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CEPH_LIB": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_RBD || CEPH_FS",
            "dep": "( NET ) && (INET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CEPH_LIB_PRETTYDEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (CEPH_LIB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CEPH_LIB_USE_DNS_RESOLVER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (CEPH_LIB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (RFKILL || ! RFKILL)",
            "restrict": ""
        }
    ],
    "NFC_DIGITAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (NFC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_NCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (NFC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_NCI_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (NFC_NCI && SPI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_NCI_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (NFC_NCI && TTY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_HCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (NFC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_SHDLC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (NFC_HCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_TRF7970A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (SPI && NFC_DIGITAL && GPIOLIB)",
            "restrict": ""
        }
    ],
    "NFC_MEI_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (INTEL_MEI && NFC_HCI)",
            "restrict": ""
        }
    ],
    "NFC_SIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_DIGITAL)",
            "restrict": ""
        }
    ],
    "NFC_PORT100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (USB) && (NFC_DIGITAL)",
            "restrict": ""
        }
    ],
    "NFC_VIRTUAL_NCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI)",
            "restrict": ""
        }
    ],
    "NFC_FDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_FDP_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_FDP && I2C)",
            "restrict": ""
        }
    ],
    "NFC_PN544": [
        {
            "type": "tristate",
            "rev_select": "NFC_PN544_I2C || NFC_PN544_MEI",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_PN544_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_HCI && I2C && NFC_SHDLC)",
            "restrict": ""
        }
    ],
    "NFC_PN544_MEI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_HCI && NFC_MEI_PHY)",
            "restrict": ""
        }
    ],
    "NFC_PN533": [
        {
            "type": "tristate",
            "rev_select": "NFC_PN533_USB || NFC_PN533_I2C || NFC_PN532_UART",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_PN533_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (USB)",
            "restrict": ""
        }
    ],
    "NFC_PN533_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (I2C)",
            "restrict": ""
        }
    ],
    "NFC_PN532_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "NFC_MICROREAD": [
        {
            "type": "tristate",
            "rev_select": "NFC_MICROREAD_I2C || NFC_MICROREAD_MEI",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_MICROREAD_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_HCI && I2C && NFC_SHDLC)",
            "restrict": ""
        }
    ],
    "NFC_MICROREAD_MEI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_HCI && NFC_MEI_PHY)",
            "restrict": ""
        }
    ],
    "NFC_MRVL": [
        {
            "type": "tristate",
            "rev_select": "NFC_MRVL_USB || NFC_MRVL_UART",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_MRVL_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI && USB)",
            "restrict": ""
        }
    ],
    "NFC_MRVL_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI && NFC_NCI_UART)",
            "restrict": ""
        }
    ],
    "NFC_MRVL_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_MRVL && I2C)",
            "restrict": ""
        }
    ],
    "NFC_MRVL_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_MRVL && NFC_NCI_SPI)",
            "restrict": ""
        }
    ],
    "NFC_ST21NFCA": [
        {
            "type": "tristate",
            "rev_select": "NFC_ST21NFCA_I2C",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_ST21NFCA_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_HCI && I2C && NFC_SHDLC)",
            "restrict": ""
        }
    ],
    "NFC_ST_NCI": [
        {
            "type": "tristate",
            "rev_select": "NFC_ST_NCI_I2C || NFC_ST_NCI_SPI",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_ST_NCI_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI && I2C)",
            "restrict": ""
        }
    ],
    "NFC_ST_NCI_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI && SPI)",
            "restrict": ""
        }
    ],
    "NFC_NXP_NCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI)",
            "restrict": ""
        }
    ],
    "NFC_NXP_NCI_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NXP_NCI && I2C)",
            "restrict": ""
        }
    ],
    "NFC_S3FWRN5": [
        {
            "type": "tristate",
            "rev_select": "NFC_S3FWRN5_I2C || NFC_S3FWRN82_UART",
            "dep": "( NET ) && ( ( NFC ) )",
            "restrict": ""
        }
    ],
    "NFC_S3FWRN5_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI && I2C)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFC_S3FWRN82_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (NFC_NCI && SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "NFC_ST95HF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && ( ( NFC ) ) && (SPI && NFC_DIGITAL)",
            "restrict": ""
        }
    ],
    "PSAMPLE": [
        {
            "type": "tristate",
            "rev_select": "NET_ACT_SAMPLE",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_IFE": [
        {
            "type": "tristate",
            "rev_select": "NET_ACT_IFE",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "LWTUNNEL": [
        {
            "type": "bool",
            "rev_select": "IPV6_ILA || IPV6_SEG6_LWTUNNEL || IPV6_RPL_LWTUNNEL || IPV6_IOAM6_LWTUNNEL",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "LWTUNNEL_BPF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET ) && (LWTUNNEL && INET)",
            "restrict": "( y )[!(y) && (LWTUNNEL = y)]"
        }
    ],
    "DST_CACHE": [
        {
            "type": "bool",
            "rev_select": "NET_IP_TUNNEL || IPV6_ILA || IPV6_TUNNEL || IPV6_SEG6_LWTUNNEL || IPV6_IOAM6_LWTUNNEL || OPENVSWITCH || WIREGUARD",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GRO_CELLS": [
        {
            "type": "bool",
            "rev_select": "XFRM || NET_IP_TUNNEL || IPV6_TUNNEL || NET_DSA || VXLAN || GENEVE || BAREUDP || MACSEC || RMNET",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SOCK_VALIDATE_XMIT": [
        {
            "type": "bool",
            "rev_select": "TLS_DEVICE",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "NET_SELFTESTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (PHYLIB && INET)",
            "restrict": "( PHYLIB )[!(y)] || ( AG71XX ) || ( FEC ) || ( USB_NET_AX8817X ) || ( USB_NET_SMSC95XX )"
        }
    ],
    "NET_SOCK_MSG": [
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL[NET] || TLS || INET_ESPINTCP || INET6_ESPINTCP || BPF_STREAM_PARSER",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_DEVLINK": [
        {
            "type": "bool",
            "rev_select": "NET_DSA || BNXT || LIQUIDIO || FSL_DPAA2_ETH || FUN_ETH || HNS3 || HINIC || ICE || OCTEONTX2_AF || OCTEONTX2_PF || PRESTERA || MLX4_CORE || MLX5_CORE || MLXSW_CORE || MSCC_OCELOT_SWITCH_LIB || NFP || IONIC || QED || TI_CPSW_SWITCHDEV || TI_K3_AM65_CPSW_NUSS || IOSM || NETDEVSIM || PTP_1588_CLOCK_OCP || QLGE || CRYPTO_DEV_OCTEONTX2_CPT",
            "dep": "( NET )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PAGE_POOL": [
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL[NET] || BNXT || HNS3 || MVNETA || MVPP2 || NET_MEDIATEK_SOC || MLX5_CORE_EN || SNI_NETSEC || STMMAC_ETH || TI_CPSW || TI_CPSW_SWITCHDEV || XEN_NETDEV_FRONTEND",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "PAGE_POOL_STATS": [
        {
            "type": "bool",
            "rev_select": "MVNETA || NET_MEDIATEK_SOC",
            "dep": "( NET ) && (PAGE_POOL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FAILOVER": [
        {
            "type": "tristate",
            "rev_select": "NET_FAILOVER",
            "dep": "( NET )",
            "restrict": ""
        }
    ],
    "ETHTOOL_NETLINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NETDEV_ADDR_LIST_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NET ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(y)]"
        }
    ],
    "ARM_AMBA": [
        {
            "type": "bool",
            "rev_select": "ARCH_RZN1 || CORESIGHT",
            "dep": "",
            "restrict": ""
        }
    ],
    "TEGRA_AHB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_AMBA )",
            "restrict": "( y )[!(y) && (ARCH_TEGRA)]"
        }
    ],
    "HAVE_EISA": [
        {
            "type": "bool",
            "rev_select": "X86 || GSC",
            "dep": "",
            "restrict": ""
        }
    ],
    "EISA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_EISA)",
            "restrict": ""
        }
    ],
    "EISA_VLB_PRIMING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 && EISA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EISA_PCI_EISA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! PARISC && PCI && EISA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EISA_VIRTUAL_ROOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EISA && ( ALPHA || X86 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EISA_NAMES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EISA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_PCI": [
        {
            "type": "bool",
            "rev_select": "X86 || FORCE_PCI",
            "dep": "",
            "restrict": ""
        }
    ],
    "FORCE_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PCI": [
        {
            "type": "bool",
            "rev_select": "FORCE_PCI",
            "dep": "(HAVE_PCI)",
            "restrict": ""
        }
    ],
    "PCI_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "X86[PCI] || PCI_DOMAINS_GENERIC",
            "dep": "( PCI ) && (PCI)",
            "restrict": ""
        }
    ],
    "PCI_DOMAINS_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_SYSCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCIEPORTBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_PCIE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (HOTPLUG_PCI && PCIEPORTBUS)",
            "restrict": ""
        }
    ],
    "PCIEAER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCIEPORTBUS)",
            "restrict": ""
        }
    ],
    "PCIEAER_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (PCIEAER)",
            "restrict": ""
        }
    ],
    "PCIE_ECRC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCIEAER)",
            "restrict": ""
        }
    ],
    "PCIEASPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PCIEASPM_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCIEASPM ) ) && (PCIEASPM) && ( PCIEASPM_DEFAULT &&  !PCIEASPM_POWERSAVE &&  !PCIEASPM_POWER_SUPERSAVE &&  !PCIEASPM_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "PCIEASPM_POWERSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCIEASPM ) ) && (PCIEASPM) && ( PCIEASPM_POWERSAVE &&  !PCIEASPM_DEFAULT &&  !PCIEASPM_POWER_SUPERSAVE &&  !PCIEASPM_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "PCIEASPM_POWER_SUPERSAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCIEASPM ) ) && (PCIEASPM) && ( PCIEASPM_POWER_SUPERSAVE &&  !PCIEASPM_DEFAULT &&  !PCIEASPM_POWERSAVE &&  !PCIEASPM_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "PCIEASPM_PERFORMANCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCIEASPM ) ) && (PCIEASPM) && ( PCIEASPM_PERFORMANCE &&  !PCIEASPM_DEFAULT &&  !PCIEASPM_POWERSAVE &&  !PCIEASPM_POWER_SUPERSAVE )",
            "restrict": ""
        }
    ],
    "PCIE_PME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCIEPORTBUS && PM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCIE_DPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCIEPORTBUS && PCIEAER)",
            "restrict": ""
        }
    ],
    "PCIE_PTM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCIE_EDR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCIE_DPC && ACPI)",
            "restrict": ""
        }
    ],
    "PCI_MSI": [
        {
            "type": "bool",
            "rev_select": "AMD_IOMMU || ARM_GIC_V2M || ARMADA_370_XP_IRQ[PCI] || ALPINE_MSI || LOONGSON_PCH_MSI",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_MSI_IRQ_DOMAIN": [
        {
            "type": "bool",
            "rev_select": "X86_LOCAL_APIC[PCI_MSI] || PCIE_MICROCHIP_HOST",
            "dep": "( PCI ) && (PCI_MSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_MSI_ARCH_FALLBACKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_QUIRKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PCI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PCI_REALLOC_ENABLE_AUTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCI_IOV)",
            "restrict": ""
        }
    ],
    "PCI_STUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_PF_STUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (PCI_IOV)",
            "restrict": ""
        }
    ],
    "XEN_PCIDEV_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (XEN_PV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_ATS": [
        {
            "type": "bool",
            "rev_select": "PCI_IOV || PCI_PRI || PCI_PASID || AMD_IOMMU || INTEL_IOMMU",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_DOE": [
        {
            "type": "bool",
            "rev_select": "CXL_BUS",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_ECAM": [
        {
            "type": "bool",
            "rev_select": "PCI_HOST_COMMON || PCIE_AL",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_LOCKLESS_CONFIG": [
        {
            "type": "bool",
            "rev_select": "X86[PCI]",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_BRIDGE_EMUL": [
        {
            "type": "bool",
            "rev_select": "PCI_MVEBU || PCI_AARDVARK",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_IOV": [
        {
            "type": "bool",
            "rev_select": "INFINIBAND_USNIC || CRYPTO_DEV_QAT_DH895xCCVF || CRYPTO_DEV_QAT_C3XXXVF || CRYPTO_DEV_QAT_C62XVF",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_PRI": [
        {
            "type": "bool",
            "rev_select": "AMD_IOMMU || INTEL_IOMMU_SVM",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_PASID": [
        {
            "type": "bool",
            "rev_select": "AMD_IOMMU || INTEL_IOMMU_SVM",
            "dep": "( PCI )",
            "restrict": ""
        }
    ],
    "PCI_P2PDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (ZONE_DEVICE) && (64BIT)",
            "restrict": ""
        }
    ],
    "PCI_LABEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI )",
            "restrict": "( y )[!(y) && (( DMI || ACPI ))]"
        }
    ],
    "PCI_HYPERV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (( ( X86 && X86_64 ) || ARM64 ) && HYPERV && PCI_MSI && PCI_MSI_IRQ_DOMAIN && SYSFS)",
            "restrict": ""
        }
    ],
    "PCIE_BUS_TUNE_OFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI && EXPERT ) ) && (PCI) && ( PCIE_BUS_TUNE_OFF &&  !PCIE_BUS_DEFAULT &&  !PCIE_BUS_SAFE &&  !PCIE_BUS_PERFORMANCE &&  !PCIE_BUS_PEER2PEER )",
            "restrict": ""
        }
    ],
    "PCIE_BUS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI && EXPERT ) ) && (PCI) && ( PCIE_BUS_DEFAULT &&  !PCIE_BUS_TUNE_OFF &&  !PCIE_BUS_SAFE &&  !PCIE_BUS_PERFORMANCE &&  !PCIE_BUS_PEER2PEER )",
            "restrict": ""
        }
    ],
    "PCIE_BUS_SAFE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI && EXPERT ) ) && (PCI) && ( PCIE_BUS_SAFE &&  !PCIE_BUS_TUNE_OFF &&  !PCIE_BUS_DEFAULT &&  !PCIE_BUS_PERFORMANCE &&  !PCIE_BUS_PEER2PEER )",
            "restrict": ""
        }
    ],
    "PCIE_BUS_PERFORMANCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI && EXPERT ) ) && (PCI) && ( PCIE_BUS_PERFORMANCE &&  !PCIE_BUS_TUNE_OFF &&  !PCIE_BUS_DEFAULT &&  !PCIE_BUS_SAFE &&  !PCIE_BUS_PEER2PEER )",
            "restrict": ""
        }
    ],
    "PCIE_BUS_PEER2PEER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI && EXPERT ) ) && (PCI) && ( PCIE_BUS_PEER2PEER &&  !PCIE_BUS_TUNE_OFF &&  !PCIE_BUS_DEFAULT &&  !PCIE_BUS_SAFE &&  !PCIE_BUS_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "VGA_ARB": [
        {
            "type": "bool",
            "rev_select": "VGA_SWITCHEROO",
            "dep": "( PCI ) && (( PCI && ! S390 ))",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "VGA_ARB_MAX_GPUS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( PCI ) && (VGA_ARB)",
            "restrict": "( 16 )[!(y)]"
        }
    ],
    "HOTPLUG_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCI && SYSFS)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_COMPAQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (X86 && PCI_BIOS)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_COMPAQ_NVRAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (HOTPLUG_PCI_COMPAQ)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_IBM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (X86_IO_APIC && X86 && PCI_BIOS)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (HOTPLUG_PCI = y && ( ( ! ACPI_DOCK && ACPI ) || ( ACPI_DOCK ) ))",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_ACPI_IBM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (HOTPLUG_PCI_ACPI)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_CPCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI )",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_CPCI_ZT5550": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (HOTPLUG_PCI_CPCI && X86)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_CPCI_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (HOTPLUG_PCI_CPCI && X86)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_SHPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI )",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_POWERNV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (PPC_POWERNV && EEH)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_RPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (PPC_PSERIES && EEH)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_RPA_DLPAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (HOTPLUG_PCI_RPA)",
            "restrict": ""
        }
    ],
    "HOTPLUG_PCI_S390": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( HOTPLUG_PCI ) && (S390 && 64BIT)",
            "restrict": ""
        }
    ],
    "PCI_MVEBU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_MVEBU || ARCH_DOVE || COMPILE_TEST) && (MVEBU_MBUS) && (ARM) && (OF)",
            "restrict": ""
        }
    ],
    "PCI_AARDVARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (( ARCH_MVEBU && ARM64 ) || COMPILE_TEST) && (OF) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_XILINX_NWL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_ZYNQMP || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_FTPCI100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (OF)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "PCI_IXP4XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARM && OF) && (ARCH_IXP4XX || COMPILE_TEST)",
            "restrict": "( ARCH_IXP4XX )[!(y)]"
        }
    ],
    "PCI_TEGRA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_TEGRA || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_RCAR_GEN2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_RENESAS || COMPILE_TEST) && (ARM)",
            "restrict": ""
        }
    ],
    "PCIE_RCAR_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_RENESAS || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_RCAR_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_RENESAS || COMPILE_TEST) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_HOST_COMMON": [
        {
            "type": "tristate",
            "rev_select": "PCI_HOST_GENERIC || PCIE_XILINX_CPM || PCI_HOST_THUNDER_PEM || PCI_HOST_THUNDER_ECAM || PCIE_MICROCHIP_HOST || PCIE_APPLE || PCI_HISI",
            "dep": "( PCI ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCI_HOST_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PCIE_XILINX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (OF || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_XILINX_CPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_ZYNQMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCI_XGENE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARM64 || COMPILE_TEST) && (OF || ( ACPI && PCI_QUIRKS ))",
            "restrict": ""
        }
    ],
    "PCI_XGENE_MSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCI_XGENE) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCI_V3_SEMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (OF) && (ARM || COMPILE_TEST)",
            "restrict": "( ARCH_INTEGRATOR_AP )[!(y)]"
        }
    ],
    "PCI_VERSATILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_VERSATILE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCIE_IPROC": [
        {
            "type": "tristate",
            "rev_select": "PCIE_IPROC_PLATFORM || PCIE_IPROC_BCMA",
            "dep": "( PCI ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_IPROC_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_BCM_IPROC || ( ARM && COMPILE_TEST )) && (OF)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PCIE_IPROC_BCMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARM && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_5301X )[!(y)]"
        }
    ],
    "PCIE_IPROC_MSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCIE_IPROC_PLATFORM || PCIE_IPROC_BCMA) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PCIE_ALTERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARM || NIOS2 || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCIE_ALTERA_MSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCIE_ALTERA) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_HOST_THUNDER_PEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARM64 || COMPILE_TEST) && (OF || ( ACPI && PCI_QUIRKS ))",
            "restrict": ""
        }
    ],
    "PCI_HOST_THUNDER_ECAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARM64 || COMPILE_TEST) && (OF || ( ACPI && PCI_QUIRKS ))",
            "restrict": ""
        }
    ],
    "PCIE_ROCKCHIP": [
        {
            "type": "bool",
            "rev_select": "PCIE_ROCKCHIP_HOST || PCIE_ROCKCHIP_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "PCIE_ROCKCHIP_HOST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (OF) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_ROCKCHIP_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (OF) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_AIROHA || ARCH_MEDIATEK || COMPILE_TEST) && (OF) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_MEDIATEK_GEN3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_MEDIATEK || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "VMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCI_MSI && X86_64 && SRCU && ! UML)",
            "restrict": ""
        }
    ],
    "PCIE_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_BRCMSTB || ARCH_BCM2835 || ARCH_BCM4908 || BMIPS_GENERIC || COMPILE_TEST) && (OF) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": "( ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PCI_HYPERV_INTERFACE": [
        {
            "type": "tristate",
            "rev_select": "PCI_HYPERV",
            "dep": "( PCI ) && ( ( PCI ) ) && (( ( X86 && X86_64 ) || ARM64 ) && HYPERV && PCI_MSI && PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_LOONGSON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (MACH_LOONGSON64 || COMPILE_TEST) && (OF || ACPI) && (PCI_QUIRKS)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "PCIE_MICROCHIP_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCI_MSI && OF)",
            "restrict": ""
        }
    ],
    "PCIE_HISI_ERR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ACPI_APEI_GHES && ( ARM64 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PCIE_APPLE_MSI_DOORBELL_ADDR": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (PCIE_APPLE)",
            "restrict": "( 0xfffff000 )[!(y)]"
        }
    ],
    "PCIE_APPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (ARCH_APPLE || COMPILE_TEST) && (OF) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_MT7621": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && (SOC_MT7621 || COMPILE_TEST)",
            "restrict": "( SOC_MT7621 )[!(y)]"
        }
    ],
    "PCIE_DW": [
        {
            "type": "bool",
            "rev_select": "PCIE_DW_HOST || PCIE_DW_EP || PCIE_ROCKCHIP_DW_HOST",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_DW_HOST": [
        {
            "type": "bool",
            "rev_select": "PCI_DRA7XX_HOST || PCIE_DW_PLAT_HOST || PCI_EXYNOS || PCI_IMX6 || PCIE_SPEAR13XX || PCI_KEYSTONE_HOST || PCI_LAYERSCAPE || PCI_HISI || PCIE_QCOM || PCIE_ARMADA_8K || PCIE_ARTPEC6_HOST || PCIE_ROCKCHIP_DW_HOST || PCIE_INTEL_GW || PCIE_KEEMBAY_HOST || PCIE_KIRIN || PCIE_HISI_STB || PCI_MESON || PCIE_TEGRA194_HOST || PCIE_VISCONTI_HOST || PCIE_UNIPHIER || PCIE_AL || PCIE_FU740",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_DW_EP": [
        {
            "type": "bool",
            "rev_select": "PCI_DRA7XX_EP || PCIE_DW_PLAT_EP || PCI_KEYSTONE_EP || PCI_LAYERSCAPE_EP || PCIE_QCOM_EP || PCIE_ARTPEC6_EP || PCIE_KEEMBAY_EP || PCIE_TEGRA194_EP || PCIE_UNIPHIER_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCI_DRA7XX": [
        {
            "type": "tristate",
            "rev_select": "PCI_DRA7XX_HOST || PCI_DRA7XX_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCI_DRA7XX_HOST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (SOC_DRA7XX || COMPILE_TEST) && (OF && HAS_IOMEM && TI_PIPE3) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": "( y )[!(y) && (SOC_DRA7XX)]"
        }
    ],
    "PCI_DRA7XX_EP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (SOC_DRA7XX || COMPILE_TEST) && (OF && HAS_IOMEM && TI_PIPE3) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_DW_PLAT": [
        {
            "type": "bool",
            "rev_select": "PCIE_DW_PLAT_HOST || PCIE_DW_PLAT_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_DW_PLAT_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_DW_PLAT_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (PCI && PCI_MSI_IRQ_DOMAIN) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_EXYNOS || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_IMX6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_MXC || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_SPEAR13XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_SPEAR13XX || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_KEYSTONE": [
        {
            "type": "bool",
            "rev_select": "PCI_KEYSTONE_HOST || PCI_KEYSTONE_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCI_KEYSTONE_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_KEYSTONE_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_LAYERSCAPE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARM || ARCH_LAYERSCAPE || COMPILE_TEST )) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_LAYERSCAPE_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARM || ARCH_LAYERSCAPE || COMPILE_TEST )) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_HISI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARM64 || COMPILE_TEST )) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_QCOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARCH_QCOM || COMPILE_TEST )) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_QCOM_EP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARCH_QCOM || COMPILE_TEST )) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_ARMADA_8K": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_MVEBU || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_ARTPEC6": [
        {
            "type": "bool",
            "rev_select": "PCIE_ARTPEC6_HOST || PCIE_ARTPEC6_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_ARTPEC6_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (MACH_ARTPEC6 || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_ARTPEC6_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (MACH_ARTPEC6 || COMPILE_TEST) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_ROCKCHIP_DW_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (PCI_MSI_IRQ_DOMAIN) && (ARCH_ROCKCHIP || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PCIE_INTEL_GW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( X86 || COMPILE_TEST )) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_KEEMBAY": [
        {
            "type": "bool",
            "rev_select": "PCIE_KEEMBAY_HOST || PCIE_KEEMBAY_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_KEEMBAY_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_KEEMBAY || COMPILE_TEST) && (PCI && PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_KEEMBAY_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_KEEMBAY || COMPILE_TEST) && (PCI && PCI_MSI_IRQ_DOMAIN) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_KIRIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARM64 || COMPILE_TEST )) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_HISI_STB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_HISI || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCI_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": "( m )[!(y) && (ARCH_MESON)]"
        }
    ],
    "PCIE_TEGRA194": [
        {
            "type": "tristate",
            "rev_select": "PCIE_TEGRA194_HOST || PCIE_TEGRA194_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_TEGRA194_HOST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_TEGRA_194_SOC || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_TEGRA194_EP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_TEGRA_194_SOC || COMPILE_TEST) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_VISCONTI_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_VISCONTI || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_UNIPHIER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF && HAS_IOMEM) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_UNIPHIER_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF && HAS_IOMEM) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_AL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF && ( ARM64 || COMPILE_TEST )) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_FU740": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (PCI_MSI_IRQ_DOMAIN) && (SOC_SIFIVE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCIE_MOBIVEIL": [
        {
            "type": "bool",
            "rev_select": "PCIE_MOBIVEIL_HOST",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_MOBIVEIL_HOST": [
        {
            "type": "bool",
            "rev_select": "PCIE_MOBIVEIL_PLAT || PCIE_LAYERSCAPE_GEN4",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_MOBIVEIL_PLAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_ZYNQMP || COMPILE_TEST) && (OF) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_LAYERSCAPE_GEN4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (ARCH_LAYERSCAPE || COMPILE_TEST) && (PCI_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "PCIE_CADENCE": [
        {
            "type": "bool",
            "rev_select": "PCIE_CADENCE_HOST || PCIE_CADENCE_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_CADENCE_HOST": [
        {
            "type": "bool",
            "rev_select": "PCIE_CADENCE_PLAT_HOST || PCI_J721E_HOST",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PCIE_CADENCE_EP": [
        {
            "type": "bool",
            "rev_select": "PCIE_CADENCE_PLAT_EP || PCI_J721E_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCIE_CADENCE_PLAT": [
        {
            "type": "bool",
            "rev_select": "PCIE_CADENCE_PLAT_HOST || PCIE_CADENCE_PLAT_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCIE_CADENCE_PLAT_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PCIE_CADENCE_PLAT_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_J721E": [
        {
            "type": "bool",
            "rev_select": "PCI_J721E_HOST || PCI_J721E_EP",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "PCI_J721E_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PCI_J721E_EP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && ( ( PCI ) ) && ( ( PCI ) ) && (OF) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_ENDPOINT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (HAVE_PCI)",
            "restrict": ""
        }
    ],
    "PCI_ENDPOINT_CONFIGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCI ) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_EPF_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_EPF_NTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (PCI_ENDPOINT)",
            "restrict": ""
        }
    ],
    "PCI_EPF_VNTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCI ) && (PCI_ENDPOINT) && (NTB)",
            "restrict": ""
        }
    ],
    "PCI_SW_SWITCHTEC": [
        {
            "type": "tristate",
            "rev_select": "NTB_SWITCHTEC",
            "dep": "( PCI ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "CXL_BUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "CXL_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CXL_BUS )",
            "restrict": "( CXL_BUS )[!(y)]"
        }
    ],
    "CXL_MEM_RAW_COMMANDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CXL_BUS ) && (CXL_PCI)",
            "restrict": ""
        }
    ],
    "CXL_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CXL_BUS ) && (ACPI)",
            "restrict": "( CXL_BUS )[!(y)]"
        }
    ],
    "CXL_PMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CXL_BUS ) && (LIBNVDIMM)",
            "restrict": "( CXL_BUS )[!(y)]"
        }
    ],
    "CXL_MEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CXL_BUS ) && (CXL_PCI)",
            "restrict": "( CXL_BUS )[!(y)]"
        }
    ],
    "CXL_PORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CXL_BUS )",
            "restrict": "( CXL_BUS )[!(y)]"
        }
    ],
    "CXL_SUSPEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CXL_BUS ) && (SUSPEND && CXL_MEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CXL_REGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CXL_BUS ) && (SPARSEMEM)",
            "restrict": "( CXL_BUS )[!(y)]"
        }
    ],
    "PCCARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(! UML)",
            "restrict": ""
        }
    ],
    "PCMCIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCMCIA_LOAD_CIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CARDBUS": [
        {
            "type": "bool",
            "rev_select": "YENTA[! EXPERT]",
            "dep": "( PCCARD ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCMCIA_MAX1600": [
        {
            "type": "tristate",
            "rev_select": "PCMCIA_SA1111[ASSABET_NEPONSET] || PCMCIA_SA1111[ARCH_LUBBOCK && SA1111] || PCMCIA_PXA2XX[MACH_MAINSTONE]",
            "dep": "( PCCARD )",
            "restrict": ""
        }
    ],
    "YENTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCI)",
            "restrict": ""
        }
    ],
    "YENTA_O2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (YENTA)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "YENTA_RICOH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (YENTA)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "YENTA_TI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (YENTA)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "YENTA_ENE_TUNE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (YENTA_TI && CARDBUS)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "YENTA_TOSHIBA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (YENTA)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PD6729": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA && PCI)",
            "restrict": ""
        }
    ],
    "I82092": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA && PCI)",
            "restrict": ""
        }
    ],
    "I82365": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA && ISA)",
            "restrict": ""
        }
    ],
    "TCIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA && ISA)",
            "restrict": ""
        }
    ],
    "PCMCIA_ALCHEMY_DEVBOARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (MIPS_DB1XXX && PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_XXS1500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA && MIPS_XXS1500)",
            "restrict": ""
        }
    ],
    "PCMCIA_BCM63XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (BCM63XX && PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_SOC_COMMON": [
        {
            "type": "tristate",
            "rev_select": "PCMCIA_SA1100 || PCMCIA_SA1111 || PCMCIA_PXA2XX",
            "dep": "( PCCARD )",
            "restrict": ""
        }
    ],
    "PCMCIA_SA11XX_BASE": [
        {
            "type": "tristate",
            "rev_select": "PCMCIA_SA1100 || PCMCIA_SA1111[ARCH_SA1100]",
            "dep": "( PCCARD )",
            "restrict": ""
        }
    ],
    "PCMCIA_SA1100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (ARM && ARCH_SA1100 && PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_SA1111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (ARM && SA1111 && PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_PXA2XX": [
        {
            "type": "tristate",
            "rev_select": "PCMCIA_SA1111[ARCH_LUBBOCK && SA1111]",
            "dep": "( PCCARD ) && (ARM && ARCH_PXA && PCMCIA) && (( ARCH_LUBBOCK || MACH_MAINSTONE || PXA_SHARPSL || ARCH_PXA_PALM || TRIZEPS_PCMCIA || ARCOM_PCMCIA || ARCH_PXA_ESERIES || MACH_VPAC270 || MACH_BALLOON3 || MACH_COLIBRI || MACH_COLIBRI320 || MACH_H4700 ))",
            "restrict": ""
        }
    ],
    "PCMCIA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD ) && (( PCMCIA_SA1111 || PCMCIA_SA1100 || PCMCIA_PXA2XX ))",
            "restrict": ""
        }
    ],
    "PCMCIA_PROBE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD )",
            "restrict": "( y )[!(y) && (ISA && ! ARCH_SA1100 && ! PARISC)]"
        }
    ],
    "PCMCIA_VRC4171": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (CPU_VR41XX && ISA && PCMCIA)",
            "restrict": ""
        }
    ],
    "OMAP_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA) && (ARCH_OMAP16XX || ( ARM && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "AT91_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCI) && (OF) && (PCMCIA && ARCH_AT91)",
            "restrict": ""
        }
    ],
    "ELECTRA_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PCCARD ) && (PCMCIA && PPC_PASEMI)",
            "restrict": ""
        }
    ],
    "PCCARD_NONSTATIC": [
        {
            "type": "bool",
            "rev_select": "YENTA[PCMCIA != n] || PD6729 || I82092 || I82365 || TCIC",
            "dep": "( PCCARD )",
            "restrict": ""
        }
    ],
    "PCCARD_IODYN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PCCARD )",
            "restrict": ""
        }
    ],
    "HAVE_RAPIDIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "RAPIDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAVE_RAPIDIO || PCI)",
            "restrict": ""
        }
    ],
    "RAPIDIO_TSI721": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RAPIDIO && PCIEPORTBUS)",
            "restrict": "( \"n\" )[!(y)]"
        }
    ],
    "RAPIDIO_DISC_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(RAPIDIO)",
            "restrict": "( 30 )[!(y)]"
        }
    ],
    "RAPIDIO_ENABLE_RX_TX_PORTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RAPIDIO)",
            "restrict": ""
        }
    ],
    "RAPIDIO_DMA_ENGINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RAPIDIO) && (DMADEVICES)",
            "restrict": ""
        }
    ],
    "RAPIDIO_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RAPIDIO)",
            "restrict": ""
        }
    ],
    "RAPIDIO_ENUM_BASIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( RAPIDIO ) )",
            "restrict": ""
        }
    ],
    "RAPIDIO_CHMAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RAPIDIO)",
            "restrict": ""
        }
    ],
    "RAPIDIO_MPORT_CDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RAPIDIO)",
            "restrict": ""
        }
    ],
    "RAPIDIO_CPS_XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( RAPIDIO ) )",
            "restrict": ""
        }
    ],
    "RAPIDIO_CPS_GEN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( RAPIDIO ) )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RAPIDIO_RXS_GEN3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( RAPIDIO ) )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "AUXILIARY_BUS": [
        {
            "type": "bool",
            "rev_select": "I40E || ICE || MLX5_CORE || MLXSW_CORE || DRM_I915 || DRM_TI_SN65DSI86 || SND_SOC_SOF_CLIENT || INFINIBAND_IRDMA || INTEL_VSEC || SOUNDWIRE_INTEL || PECI_CPU",
            "dep": "",
            "restrict": ""
        }
    ],
    "UEVENT_HELPER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "UEVENT_HELPER_PATH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(UEVENT_HELPER)",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "DEVTMPFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEVTMPFS_MOUNT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEVTMPFS)",
            "restrict": ""
        }
    ],
    "DEVTMPFS_SAFE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEVTMPFS)",
            "restrict": ""
        }
    ],
    "STANDALONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PREVENT_FIRMWARE_BUILD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FW_LOADER": [
        {
            "type": "tristate",
            "rev_select": "BT_BCM || BT_RTL || BT_QCA || BT_MTK || BT_HCIBCM203X || BT_HCIBFUSB || BT_HCIBT3C || BT_MRVL_SDIO || BT_ATH3K || CFG80211 || PCMCIA_LOAD_CIS || GEHC_ACHC || LATTICE_ECP3_CONFIG || TI_ST || SCSI_AIC94XX || SCSI_MVSAS || SCSI_IPR || SCSI_QLA_FC || SCSI_CHELSIO_FCOE || ATM_FORE200E || ATM_SOLOS || BNX2 || BNX2X || BNXT || LIQUIDIO || CHELSIO_T3 || CHELSIO_T4 || MYRI10GE || QLCNIC || NETXEN_NIC || R8169 || SPIDER_NET || CARL9170 || AR5523 || ATMEL || PCMCIA_ATMEL || AT76C50X_USB || B43 || B43LEGACY || BRCMSMAC || BRCMFMAC_SDIO || BRCMFMAC_USB || BRCMFMAC_PCIE || IPW2100 || IPW2200 || IWLEGACY || IWLWIFI || HERMES || ORINOCO_USB || P54_COMMON || LIBERTAS || LIBERTAS_THINFIRM || MWIFIEX_SDIO || MWIFIEX_PCIE || MWIFIEX_USB || RT2X00_LIB_FIRMWARE || RTLWIFI || WL1251 || WLCORE || USB_ZD1201 || ZD1211RW || QTNFMAC_PCIE || TOUCHSCREEN_ATMEL_MXT || RMI4_F34 || SERIAL_ICOM || SERIAL_QE || MOXA_INTELLIO || DVB_AS102 || VIDEO_SAA7164 || RADIO_WL1273 || VIDEO_EXYNOS4_FIMC_IS || DVB_C8SECTPFE || DVB_LGS8GXX || DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || DRM_STI || DRM_R128 || DRM_MGA || SND_VX_LIB || SND_SB16_CSP || SND_SSCAPE || SND_WAVEFRONT || SND_MSND_PINNACLE || SND_MSND_CLASSIC || SND_ASIHPI || SND_CS46XX || SND_DARLA20 || SND_GINA20 || SND_LAYLA20 || SND_DARLA24 || SND_GINA24 || SND_LAYLA24 || SND_MONA || SND_MIA || SND_ECHO3G || SND_INDIGO || SND_INDIGOIO || SND_INDIGODJ || SND_INDIGOIOX || SND_INDIGODJX || SND_EMU10K1 || SND_HDSP || SND_MIXART || SND_PCXHR || SND_RIPTIDE || SND_HDA_PATCH_LOADER || SND_HDA_CODEC_CA0132_DSP || SND_USB_6FIRE || SND_SOC_SH4_SIU || USB_XHCI_TEGRA || USB_ISIGHTFW || USB_SPEEDTOUCH || USB_CXACRU || USB_UEAGLEATM || LEDS_LP55XX_COMMON || RTL8192E || R8712U || VT6656 || KS7010 || DELL_RBU || REMOTEPROC || IXP4XX_NPE || CRYPTO_DEV_QAT || CRYPTO_DEV_NITROX",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "FW_LOADER_PAGED_BUF": [
        {
            "type": "bool",
            "rev_select": "FW_LOADER_USER_HELPER || FW_LOADER_COMPRESS_XZ || FW_UPLOAD",
            "dep": "( FW_LOADER )",
            "restrict": ""
        }
    ],
    "FW_LOADER_SYSFS": [
        {
            "type": "bool",
            "rev_select": "FW_LOADER_USER_HELPER || FW_UPLOAD",
            "dep": "( FW_LOADER )",
            "restrict": ""
        }
    ],
    "EXTRA_FIRMWARE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( FW_LOADER )",
            "restrict": ""
        }
    ],
    "EXTRA_FIRMWARE_DIR": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( FW_LOADER ) && (EXTRA_FIRMWARE != \"\")",
            "restrict": "( \"/lib/firmware\" )[!(y)]"
        }
    ],
    "FW_LOADER_USER_HELPER": [
        {
            "type": "bool",
            "rev_select": "LEDS_LP55XX_COMMON || DELL_RBU",
            "dep": "( FW_LOADER )",
            "restrict": ""
        }
    ],
    "FW_LOADER_USER_HELPER_FALLBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FW_LOADER ) && (FW_LOADER_USER_HELPER)",
            "restrict": ""
        }
    ],
    "FW_LOADER_COMPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FW_LOADER )",
            "restrict": ""
        }
    ],
    "FW_LOADER_COMPRESS_XZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FW_LOADER ) && ( FW_LOADER_COMPRESS )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FW_LOADER_COMPRESS_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FW_LOADER ) && ( FW_LOADER_COMPRESS )",
            "restrict": ""
        }
    ],
    "FW_CACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FW_LOADER ) && (PM_SLEEP)",
            "restrict": "( y )[!(y) && (PM_SLEEP)]"
        }
    ],
    "FW_UPLOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FW_LOADER )",
            "restrict": ""
        }
    ],
    "WANT_DEV_COREDUMP": [
        {
            "type": "bool",
            "rev_select": "BT_MRVL_SDIO || CAN_MCP251XFD || WIL6210 || ATH10K || BRCMDBG[BRCMFMAC] || IWLMVM || MWIFIEX_SDIO || MWIFIEX_PCIE || MT7615_COMMON || MT7921_COMMON || DRM_MSM || DRM_ETNAVIV || SND_SOC_INTEL_CATPT || SND_SOC_INTEL_AVS || REMOTEPROC",
            "dep": "",
            "restrict": ""
        }
    ],
    "ALLOW_DEV_COREDUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "DEV_COREDUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ALLOW_DEV_COREDUMP)",
            "restrict": "( y )[!(y) && (WANT_DEV_COREDUMP)]"
        }
    ],
    "DEBUG_DRIVER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_DEVRES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_TEST_DRIVER_REMOVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PM_QOS_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "HMEM_REPORTING": [
        {
            "type": "bool",
            "rev_select": "ACPI_HMAT",
            "dep": "(NUMA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TEST_ASYNC_DRIVER_PROBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(m)",
            "restrict": ""
        }
    ],
    "DRIVER_PE_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "SYS_HYPERVISOR": [
        {
            "type": "bool",
            "rev_select": "XEN_SYS_HYPERVISOR",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GENERIC_CPU_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GENERIC_CPU_AUTOPROBE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_CPU_VULNERABILITIES": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "SOC_BUS": [
        {
            "type": "bool",
            "rev_select": "IMX_SCU || ARM_SMCCC_SOC_ID || MESON_GX_SOCINFO || MESON_MX_SOCINFO || ASPEED_SOCINFO || SOC_BRCMSTB || FSL_GUTS || FSL_MC_DPIO || SOC_IMX8M || QCOM_SOCINFO || SOC_RENESAS || EXYNOS_CHIPID || SOC_TEGRA_FUSE || TI_K3_SOCINFO || SOC_INTEGRATOR_CM || SOC_REALVIEW || CRYPTO_DEV_FSL_CAAM",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGMAP": [
        {
            "type": "bool",
            "rev_select": "BT_INTEL || SUNXI_RSB || VEXPRESS_CONFIG || EEPROM_93XX46 || NET_DSA_AR9331 || NET_DSA_QCA8K || NET_DSA_XRS700X || NET_DSA_REALTEK || NET_DSA_SMSC_LAN9303 || TI_CPSW || TI_CPSW_SWITCHDEV || CAN_MCP251XFD || MT7622_WMAC || MT7986_WMAC || I2C_DESIGNWARE_CORE || SPI_ALTERA_CORE || PINCTRL_SX150X || PINCTRL_BCM63XX || PINCTRL_IMX || SENSORS_ADT7X10 || SENSORS_ASPEED || SENSORS_LAN966X || SENSORS_MLXREG_FAN || SENSORS_LM83 || SENSORS_NCT6775_CORE || SENSORS_TMP401 || KHADAS_MCU_FAN_THERMAL || MLX_WDT || MFD_MADERA || MFD_PM8XXX || MFD_TI_AM335X_TSCADC || MFD_TPS65086 || MFD_TPS65912 || MFD_ARIZONA || MFD_STM32_LPTIMER || MFD_STM32_TIMERS || MFD_WCD934X || MFD_ATC260X || MFD_ACER_A500_EC || REGULATOR_HI6421V600 || CEC_MESON_G12A_AO || CEC_STM32 || DVB_USB_AF9015 || VIDEO_MUX || DVB_AF9013 || DVB_RTL2830 || DRM_PANEL_ILITEK_IL9322 || DRM_SSD130X_SPI || BACKLIGHT_QCOM_WLED || SND_HDA_CORE || SND_PXA2XX_SOC_TOSA || SND_PXA2XX_SOC_E740 || SND_PXA2XX_SOC_E750 || SND_PXA2XX_SOC_E800 || SND_PXA2XX_SOC_EM_X270 || SND_PXA2XX_SOC_PALM27X || SND_SOC_ZYLONITE || SND_PXA2XX_SOC_MIOA701 || SND_SUN8I_ADDA_PR_REGMAP || SND_SOC_CS35L45_SPI || SND_SOC_CS35L45_I2C || SND_SOC_JZ4725B_CODEC || SND_SOC_JZ4760_CODEC || SND_SOC_JZ4770_CODEC || SND_SOC_WM8731_I2C || SND_SOC_WM8731_SPI || SND_SOC_ZL38060 || RTC_DRV_GAMECUBE || HMS_ANYBUSS_BUS || INTEL_BXTWC_PMIC_TMU || COMMON_CLK_MESON_REGMAP || APPLE_PMGR_PWRSTATE || ASPEED_LPC_CTRL || ASPEED_LPC_SNOOP || ASPEED_UART_ROUTING || ASPEED_P2A_CTRL || MTK_INFRACFG || MTK_PMIC_WRAP || MTK_SCPSYS || MTK_SCPSYS_PM_DOMAINS || QCOM_CPR || SOC_TEGRA_PMC || BMA400 || BMC150_ACCEL || BMI088_ACCEL || STM32_DFSDM_CORE || BME680 || LTC2688 || MPU3050 || GP2AP002 || BMP280 || BMP280_SPI || ZPA2326 || ST_IRQCHIP || PHY_TI_GMII_SEL || PHY_INTEL_LGM_COMBO || FPGA_DFL_NIOS_INTEL_PAC_N3000",
            "dep": "",
            "restrict": "( y )[!(y) && (( REGMAP_I2C || REGMAP_SPI || REGMAP_SPMI || REGMAP_W1 || REGMAP_AC97 || REGMAP_MMIO || REGMAP_IRQ || REGMAP_SOUNDWIRE || REGMAP_SOUNDWIRE_MBQ || REGMAP_SCCB || REGMAP_I3C || REGMAP_SPI_AVMM || REGMAP_MDIO ))]"
        }
    ],
    "REGCACHE_COMPRESSED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGMAP_AC97": [
        {
            "type": "tristate",
            "rev_select": "MFD_WM97xx || SND_SOC_AD1980 || SND_SOC_WM9705 || SND_SOC_WM9712 || SND_SOC_WM9713",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGMAP_I2C": [
        {
            "type": "tristate",
            "rev_select": "EEPROM_AT24 || NET_DSA_MICROCHIP_KSZ9477_I2C || NET_DSA_XRS700X_I2C || NET_DSA_SMSC_LAN9303_I2C || KEYBOARD_QT1050 || KEYBOARD_CAP11XX || TOUCHSCREEN_AD7879_I2C || TOUCHSCREEN_TSC2004 || INPUT_DA7280_HAPTICS || INPUT_IQS269A || INPUT_IQS626A || INPUT_DRV260X_HAPTICS || INPUT_DRV2665_HAPTICS || INPUT_DRV2667_HAPTICS || SERIAL_MAX310X[I2C] || SERIAL_SC16IS7XX_I2C[I2C] || I2C_MUX_LTC4306 || PINCTRL_MCP23S08_I2C || GPIO_PCA953X || GPIO_TS4900 || IP5XXX_POWER || CHARGER_ADP5061 || BATTERY_CW2015 || CHARGER_SBS || BATTERY_MAX17040 || BATTERY_MAX17042 || CHARGER_LTC4162L || CHARGER_MAX77976 || CHARGER_BQ24257 || CHARGER_BQ2515X || CHARGER_BQ25890 || CHARGER_BQ25980 || CHARGER_BQ256XX || CHARGER_SMB347 || BATTERY_RT5033 || CHARGER_RT9455 || CHARGER_UCS1002 || SENSORS_LTC2945 || SENSORS_LTC2947_I2C || SENSORS_LTC4222 || SENSORS_LTC4260 || SENSORS_MAX6621 || SENSORS_TPS23861 || SENSORS_LM75 || SENSORS_LM95245 || SENSORS_NCT6775_I2C || SENSORS_NCT7802 || SENSORS_EMC1403 || SENSORS_ADS7828 || SENSORS_INA2XX || SENSORS_INA238 || SENSORS_INA3221 || SENSORS_TMP102 || SENSORS_TMP103 || SENSORS_TMP108 || SENSORS_TMP464 || SENSORS_W83773G || MFD_ACT8945A || MFD_AS3711 || MFD_AS3722 || MFD_BCM590XX || MFD_BD9571MWV || MFD_AXP20X_I2C || MFD_MADERA_I2C || MFD_DA9052_I2C || MFD_DA9055 || MFD_DA9062 || MFD_DA9063 || MFD_DA9150 || MFD_GATEWORKS_GSC || MFD_MC13XXX_I2C || MFD_MP2629 || INTEL_SOC_PMIC || INTEL_SOC_PMIC_CHTWC || INTEL_SOC_PMIC_CHTDC_TI || MFD_IQS62X || MFD_88PM800 || MFD_88PM805 || MFD_88PM860X || MFD_MAX14577 || MFD_MAX77620 || MFD_MAX77650 || MFD_MAX77686 || MFD_MAX77693 || MFD_MAX77714 || MFD_MAX77843 || MFD_MAX8907 || MFD_MT6360 || MFD_NTXEC || MFD_PCF50633 || MFD_RT4831 || MFD_RT5033 || MFD_RC5T583 || MFD_RK808 || MFD_RN5T618 || MFD_SEC_CORE || MFD_SI476X_CORE || MFD_SIMPLE_MFD_I2C || MFD_SKY81452 || MFD_LP3943 || MFD_LP8788 || MFD_TI_LMU || MFD_PALMAS || TPS6105X || MFD_TPS65086 || MFD_TPS65090 || MFD_TPS65217 || MFD_TI_LP873X || MFD_TI_LP87565 || MFD_TPS65218 || MFD_TPS6586X || MFD_TPS65910 || MFD_TPS65912_I2C || TWL4030_CORE || TWL6040_CORE || MFD_LM3533 || MFD_LOCHNAGAR || MFD_ARIZONA_I2C || MFD_WM8400 || MFD_WM831X_I2C || MFD_WM8350_I2C || MFD_WM8994 || MFD_STW481X || MFD_ROHM_BD718XX || MFD_ROHM_BD71828 || MFD_ROHM_BD957XMUF || MFD_STPMIC1 || MFD_STMFX || MFD_ATC260X_I2C || MFD_KHADAS_MCU || MFD_QCOM_PM8008 || MFD_RSMU_I2C || REGULATOR_88PG86X || REGULATOR_ACT8865 || REGULATOR_DA9121 || REGULATOR_DA9210 || REGULATOR_DA9211 || REGULATOR_FAN53555 || REGULATOR_FAN53880 || REGULATOR_ISL9305 || REGULATOR_LP872X || REGULATOR_LP8755 || REGULATOR_LTC3589 || REGULATOR_LTC3676 || REGULATOR_MAX8649 || REGULATOR_MAX8893 || REGULATOR_MAX8973 || REGULATOR_MAX20086 || REGULATOR_MAX77826 || REGULATOR_MCP16502 || REGULATOR_MP5416 || REGULATOR_MP8859 || REGULATOR_MP886X || REGULATOR_MPQ7920 || REGULATOR_MT6311 || REGULATOR_PCA9450 || REGULATOR_PF8X00 || REGULATOR_PFUZE100 || REGULATOR_PV88060 || REGULATOR_PV88080 || REGULATOR_PV88090 || REGULATOR_RASPBERRYPI_TOUCHSCREEN_ATTINY || REGULATOR_RT4801 || REGULATOR_RT5190A || REGULATOR_RT5759 || REGULATOR_RT6160 || REGULATOR_RT6245 || REGULATOR_RTQ2134 || REGULATOR_RTMV20 || REGULATOR_RTQ6752 || REGULATOR_SLG51000 || REGULATOR_SY8106A || REGULATOR_SY8824X || REGULATOR_SY8827N || REGULATOR_TPS51632 || REGULATOR_TPS62360 || REGULATOR_TPS6286X || REGULATOR_TPS65023 || REGULATOR_TPS65132 || CEC_CH7322 || VIDEO_IMX214 || VIDEO_IMX274 || VIDEO_IMX290 || VIDEO_MT9V032 || VIDEO_OV2740 || VIDEO_LM3560 || VIDEO_LM3646 || VIDEO_ADV748X || VIDEO_ADV7604 || VIDEO_TVP5150 || SDR_MAX2175 || MEDIA_TUNER_E4000 || MEDIA_TUNER_FC2580 || MEDIA_TUNER_IT913X || MEDIA_TUNER_M88RS6000T || MEDIA_TUNER_TDA18212 || MEDIA_TUNER_TUA9001 || DVB_M88DS3103 || DVB_MN88472 || DVB_MN88473 || DVB_SI2165 || DVB_TDA10071 || DVB_TS2020 || DVB_CXD2820R || DVB_RTL2832 || DVB_MN88443X || DVB_AF9033 || DVB_CXD2099 || DRM_CHIPONE_ICN6211 || DRM_CROS_EC_ANX7688 || DRM_LONTIUM_LT8912B || DRM_LONTIUM_LT9211 || DRM_LONTIUM_LT9611 || DRM_LONTIUM_LT9611UXC || DRM_ITE_IT66121 || DRM_SII902X || DRM_TOSHIBA_TC358767 || DRM_TOSHIBA_TC358768 || DRM_TOSHIBA_TC358775 || DRM_TI_SN65DSI83 || DRM_TI_SN65DSI86 || DRM_ANALOGIX_ANX6345 || DRM_ANALOGIX_ANX78XX || DRM_I2C_ADV7511 || DRM_SSD130X_I2C || BACKLIGHT_LM3630A || BACKLIGHT_LM3639 || SND_SOC[I2C] || SND_SOC_ADAU1372_I2C || SND_SOC_ADAU1761_I2C || SND_SOC_ADAU1781_I2C || SND_SOC_ADAU1977_I2C || SND_SOC_ADAU7118_I2C || SND_SOC_AK4118 || SND_SOC_AK4375 || SND_SOC_AK4458 || SND_SOC_AK5558 || SND_SOC_CS35L41_I2C || SND_SOC_CS35L45_I2C || SND_SOC_CS4234 || SND_SOC_CS4265 || SND_SOC_CS4271_I2C || SND_SOC_CS42XX8_I2C || SND_SOC_CS4341[I2C] || SND_SOC_MAX9860 || SND_SOC_PCM186X_I2C || SND_SOC_PCM3060_I2C || SND_SOC_PCM3168A_I2C || SND_SOC_PCM512x_I2C || SND_SOC_RK817 || SND_SOC_RT5677 || SND_SOC_RT9120 || SND_SOC_SSM2602_I2C || SND_SOC_STA32X || SND_SOC_TDA7419 || SND_SOC_TFA989X || SND_SOC_TLV320AIC31XX || SND_SOC_TLV320AIC3X_I2C || SND_SOC_TLV320ADCX140 || SND_SOC_TSCS42XX || SND_SOC_TSCS454 || SND_SOC_WM8804_I2C || USB_HSIC_USB3503 || TYPEC_TCPCI || TYPEC_TPS6598X || TYPEC_RT1719 || TYPEC_STUSB160X || TYPEC_WUSB3801 || TYPEC_MUX_FSA4480 || LEDS_LM3532 || LEDS_LM3642 || LEDS_LM3692X || LEDS_LP3952 || LEDS_LP8860 || LEDS_TLC591XX || LEDS_LM355x || LEDS_IS31FL319X || LEDS_LM3601X || LEDS_RT4505 || RTC_DRV_ABB5ZES3 || RTC_DRV_ABEOZ9 || RTC_DRV_DS1307 || RTC_DRV_PCF8523 || RTC_DRV_PCF85063 || RTC_DRV_PCF85363 || RTC_DRV_RX8010 || RTC_DRV_RX8581 || RTC_DRV_RV3028 || RTC_DRV_RV3032 || RTC_DRV_S5M || RTC_DRV_SD3078 || RTC_DRV_DS3232[I2C] || RTC_DRV_PCF2127[I2C] || RTC_DRV_RV3029C2[I2C] || RTC_DRV_RX6110[I2C] || INTEL_SKL_INT3472 || COMMON_CLK_SI5341 || COMMON_CLK_SI5351 || COMMON_CLK_SI514 || COMMON_CLK_SI544 || COMMON_CLK_SI570 || COMMON_CLK_CDCE706 || COMMON_CLK_TPS68470 || COMMON_CLK_CDCE925 || COMMON_CLK_CS2000_CP || COMMON_CLK_RS9_PCIE || COMMON_CLK_VC5 || EXTCON_FSA9480 || EXTCON_MAX14577 || EXTCON_MAX77693 || EXTCON_MAX77843 || EXTCON_PTN5150 || EXTCON_RT8973A || EXTCON_SM5502 || EXTCON_USBC_TUSB320 || ADXL313_I2C || ADXL345_I2C || ADXL355_I2C || ADXL367_I2C || ADXL372_I2C || BMC150_ACCEL_I2C || FXLS8962AF_I2C || KXSD9_I2C || MMA7455_I2C || MXC4005 || MXC6255 || AD7091R5 || INA2XX_ADC || TI_ADS1015 || ATLAS_PH_SENSOR || BME680_I2C || SENSEAIR_SUNRISE_CO2 || IIO_ST_SENSORS_I2C || AD5380[I2C] || BMG160_I2C || FXAS21002C_I2C || MPU3050_I2C || AFE4404 || MAX30100 || MAX30102 || HTS221_I2C || BMI160_I2C || FXOS8700_I2C || INV_ICM42600_I2C || INV_MPU6050_I2C || IIO_ST_LSM6DSX_I2C || IIO_ST_LSM9DS0_I2C || ADUX1020 || APDS9960 || GP2AP020A00F || SENSORS_ISL29018 || SENSORS_ISL29028 || JSA1212 || RPR0521 || LTR501 || MAX44000 || MAX44009 || NOA1305 || PA12203001 || SI1133 || STK3310 || ST_UVIS25_I2C || VCNL4035 || VEML6030 || AK8974 || BMC150_MAGN_I2C || MMC35240 || SENSORS_HMC5843_I2C || SENSORS_RM3100_I2C || YAMAHA_YAS530 || TPL0102 || LMP91000 || BMP280_I2C || DPS310 || HP03 || ZPA2326_I2C || SX9310 || SX9324 || SX9360 || SX9500 || VCNL3020 || MLX90632 || PWM_PCA9685",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "REGMAP_SLIMBUS": [
        {
            "type": "tristate",
            "rev_select": "MFD_WCD934X || SND_SOC_WCD9335",
            "dep": "(SLIMBUS)",
            "restrict": ""
        }
    ],
    "REGMAP_SPI": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MICROCHIP_KSZ_SPI || DM9051 || CAN_M_CAN_TCAN4X5X || IEEE802154_AT86RF230 || IEEE802154_MRF24J40 || TOUCHSCREEN_AD7879_SPI || TOUCHSCREEN_TSC2005 || SERIAL_MAX310X[SPI_MASTER] || SERIAL_SC16IS7XX_SPI[SPI_MASTER] || PINCTRL_MCP23S08_SPI || GPIO_XRA1403 || SENSORS_LTC2947_SPI || MFD_ALTERA_A10SR || MFD_MADERA_SPI || MFD_DA9052_SPI || MFD_MC13XXX_SPI || MFD_CPCAP || MFD_SC27XX_PMIC || MFD_TPS65912_SPI || MFD_ARIZONA_SPI || MFD_WM831X_SPI || MFD_RSMU_SPI || DRM_PANEL_ABT_Y030XX067A || DRM_PANEL_INNOLUX_EJ030NA || DRM_PANEL_NOVATEK_NT39016 || SND_SOC[SPI_MASTER] || SND_SOC_ADAU1372_SPI || SND_SOC_ADAU1761_SPI || SND_SOC_ADAU1781_SPI || SND_SOC_ADAU1977_SPI || SND_SOC_CS35L41_SPI || SND_SOC_CS35L45_SPI || SND_SOC_CS4271_SPI || SND_SOC_CS4341[SPI_MASTER] || SND_SOC_PCM186X_SPI || SND_SOC_PCM3060_SPI || SND_SOC_PCM3168A_SPI || SND_SOC_PCM512x_SPI || SND_SOC_SSM2602_SPI || SND_SOC_TLV320AIC3X_SPI || SND_SOC_WM8804_SPI || RTC_DRV_DS1343 || RTC_DRV_DS1347 || RTC_DRV_PCF2123 || RTC_DRV_DS3232[SPI_MASTER] || RTC_DRV_PCF2127[SPI_MASTER] || RTC_DRV_RV3029C2[SPI_MASTER] || RTC_DRV_RX6110[SPI_MASTER] || LMK04832 || ADXL313_SPI || ADXL345_SPI || ADXL355_SPI || ADXL367_SPI || ADXL372_SPI || BMC150_ACCEL_SPI || BMI088_ACCEL_SPI || FXLS8962AF_SPI || KXSD9_SPI || MMA7455_SPI || AD74413R || BME680_SPI || IIO_ST_SENSORS_SPI || AD5380[SPI_MASTER] || ADMV8818 || ADF4371 || BMG160_SPI || FXAS21002C_SPI || AFE4403 || HTS221_SPI || BMI160_SPI || FXOS8700_SPI || INV_ICM42600_SPI || INV_MPU6050_SPI || IIO_ST_LSM6DSX_SPI || IIO_ST_LSM9DS0_SPI || ST_UVIS25_SPI || BMC150_MAGN_SPI || SENSORS_HMC5843_SPI || SENSORS_RM3100_SPI || ZPA2326_SPI || LTC2983",
            "dep": "(SPI)",
            "restrict": ""
        }
    ],
    "REGMAP_SPMI": [
        {
            "type": "tristate",
            "rev_select": "HI6421V600_IRQ || PINCTRL_QCOM_SPMI_PMIC || QCOM_SPMI_ADC_TM5 || QCOM_SPMI_TEMP_ALARM || MFD_HI6421_SPMI || MFD_SPMI_PMIC || REGULATOR_MT6315 || QCOM_SPMI_IADC || QCOM_SPMI_VADC || QCOM_SPMI_ADC5",
            "dep": "(SPMI)",
            "restrict": ""
        }
    ],
    "REGMAP_W1": [
        {
            "type": "tristate",
            "rev_select": "BATTERY_MAX1721X",
            "dep": "(W1)",
            "restrict": ""
        }
    ],
    "REGMAP_MDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGMAP_MMIO": [
        {
            "type": "tristate",
            "rev_select": "BT1_APB || NET_MEDIATEK_STAR_EMAC || MSCC_OCELOT_SWITCH_LIB || KEYBOARD_MT6779 || ASPEED_KCS_IPMI_BMC || NPCM7XX_KCS_IPMI_BMC || SPI_ALTERA || SPI_FSL_DSPI || SPI_MESON_SPIFC || PINCTRL_INGENIC || PINCTRL_K210 || PINCTRL_OCELOT || PINCTRL_ASPEED || PINCTRL_BCM281XX || PINCTRL_BERLIN || PINCTRL_MESON || PINCTRL_TI_IODELAY || GPIO_EXAR || GPIO_MVEBU || GPIO_SIFIVE || SENSORS_MR75203 || QORIQ_THERMAL || IMX2_WDT || MFD_SUN4I_GPADC || MFD_ATMEL_HLCDC || MFD_EXYNOS_LPASS || MFD_MX25_TSADC || MFD_HI6421_PMIC || MFD_HI655X_PMIC || MFD_STA2X11 || MFD_SYSCON || MFD_DAVINCI_VOICECODEC || MFD_TI_AM335X_TSCADC || MFD_STM32_LPTIMER || MFD_STM32_TIMERS || REGULATOR_UNIPHIER || CEC_MESON_G12A_AO || CEC_STM32 || VIDEO_ALLEGRO_DVT || VIDEO_ATMEL_ISC || VIDEO_ATMEL_XISC || VIDEO_SUN6I_CSI || VIDEO_SUN6I_MIPI_CSI2 || VIDEO_SUN8I_A83T_MIPI_CSI2 || DRM_SUN4I || DRM_FSL_DCU || DRM_NWL_MIPI_DSI || DRM_DW_HDMI || DRM_IMX_TVE || DRM_MESON || SND_SOC_ADI_AXI_I2S || SND_SOC_ADI_AXI_SPDIF || SND_ATMEL_SOC_CLASSD || SND_ATMEL_SOC_PDMIC || SND_ATMEL_SOC_I2S || SND_MCHP_SOC_I2S_MCC || SND_MCHP_SOC_SPDIFTX || SND_MCHP_SOC_SPDIFRX || SND_MCHP_SOC_PDMC || SND_BCM2835_SOC_I2S || SND_BCM63XX_I2S_WHISTLER || SND_SOC_FSL_ASRC || SND_SOC_FSL_SAI || SND_SOC_FSL_MQS || SND_SOC_FSL_AUDMIX || SND_SOC_FSL_SSI || SND_SOC_FSL_SPDIF || SND_SOC_FSL_ESAI || SND_SOC_FSL_MICFIL || SND_SOC_FSL_EASRC || SND_SOC_FSL_XCVR || SND_SOC_MEDIATEK || SND_MESON_AXG_FIFO || SND_MESON_AXG_TDM_FORMATTER || SND_MESON_G12A_TOACODEC || SND_MESON_G12A_TOHDMITX || SND_SOC_MESON_T9015 || SND_SOC_LPASS_CPU || SND_SOC_LPASS_HDMI || SND_SOC_LPASS_PLATFORM || SND_SOC_LPASS_CDC_DMA || SND_SOC_RCAR || SND_SOC_STM32_SAI || SND_SOC_STM32_I2S || SND_SOC_STM32_SPDIFRX || SND_SUN4I_CODEC || SND_SUN8I_CODEC || SND_SUN4I_I2S || SND_SUN4I_SPDIF || SND_SOC_TEGRA || SND_SOC_UNIPHIER_AIO || SND_SOC_UNIPHIER_EVEA_CODEC || SND_SOC_XTFPGA_I2S || SND_SOC_JZ4740_CODEC || SND_SOC_INNO_RK3036 || SND_SOC_MSM8916_WCD_DIGITAL || SND_SOC_RK3328 || SND_SOC_LPASS_WSA_MACRO || SND_SOC_LPASS_VA_MACRO || SND_SOC_LPASS_RX_MACRO || SND_SOC_LPASS_TX_MACRO || USB_DWC3_MESON_G12A || USB_ISP1760 || MMC_SDHCI_AM654 || RTC_DRV_MESON || RTC_DRV_SNVS || RTC_DRV_R7301 || RTC_DRV_STM32 || RTC_DRV_TI_K3 || AXI_DMAC || ARCX_ANYBUS_CONTROLLER || CLK_ICST || CLK_VEXPRESS_OSC || COMMON_CLK_NXP[ARCH_LPC32XX] || CLK_ACTIONS || COMMON_CLK_AXG_AUDIO || MSTAR_MSC313_MPLL || COMMON_CLK_QCOM || S3C2410_COMMON_DCLK || SPRD_COMMON_CLK || XILINX_VCU || MESON_CLK_MEASURE || IMX_GPCV2_PM_DOMAINS || SUNXI_SRAM || DEVFREQ_EVENT_EXYNOS_NOCP || RENESAS_RPCIF || MESON_SARADC || STM32_DFSDM_CORE || STM32_DFSDM_ADC || PWM_ATMEL_TCB || PWM_FSL_FTM || PWM_INTEL_LGM || PWM_XILINX || RESET_INTEL_GW || PHY_SUN6I_MIPI_DPHY || PHY_MESON8B_USB2 || PHY_MESON_GXL_USB2 || PHY_MESON_G12A_USB2 || PHY_MESON_G12A_USB3_PCIE || PHY_MESON_AXG_PCIE || PHY_MESON_AXG_MIPI_PCIE_ANALOG || PHY_MESON_AXG_MIPI_DPHY || PHY_MIXEL_LVDS_PHY || PHY_MIXEL_MIPI_DPHY || PHY_LANTIQ_VRX200_PCIE || PHY_MT7621_PCI || PHY_AM654_SERDES || PHY_J721E_WIZ || PHY_INTEL_KEEMBAY_EMMC || PHY_INTEL_KEEMBAY_USB || JZ4780_EFUSE || NVMEM_LAYERSCAPE_SFP || FPGA_MGR_SOCFPGA_A10 || TI_EQEP || MICROCHIP_TCB_CAPTURE",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGMAP_IRQ": [
        {
            "type": "bool",
            "rev_select": "GPIO_SL28CPLD || MFD_SUN4I_GPADC || MFD_AS3711 || MFD_AS3722 || MFD_BD9571MWV || MFD_AXP20X || MFD_MADERA || MFD_DA9052_SPI || MFD_DA9052_I2C || MFD_DA9055 || MFD_DA9062 || MFD_DA9063 || MFD_DA9150 || MFD_GATEWORKS_GSC || MFD_MC13XXX || MFD_HI655X_PMIC || INTEL_SOC_PMIC || INTEL_SOC_PMIC_BXTWC || INTEL_SOC_PMIC_CHTWC || INTEL_SOC_PMIC_CHTDC_TI || INTEL_SOC_PMIC_MRFLD || MFD_88PM800 || MFD_88PM805 || MFD_MAX14577 || MFD_MAX77620 || MFD_MAX77650 || MFD_MAX77686 || MFD_MAX77693 || MFD_MAX77843 || MFD_MAX8907 || MFD_MT6360 || MFD_CPCAP || MFD_RETU || MFD_RT5033 || MFD_RK808 || MFD_RN5T618 || MFD_SEC_CORE || MFD_SC27XX_PMIC || MFD_PALMAS || MFD_TPS65086 || MFD_TPS65090 || MFD_TPS65218 || MFD_TPS65910 || MFD_TPS65912 || TWL6040_CORE || MFD_ARIZONA || MFD_WM8994 || MFD_ROHM_BD718XX || MFD_ROHM_BD71828 || MFD_STPMIC1 || MFD_WCD934X || MFD_ATC260X || MFD_QCOM_PM8008 || SND_HDA_SCODEC_CS35L41 || SND_SOC_RT5677 || SND_SOC_WCD9335 || SND_SOC_WCD938X_SDW || RTC_DRV_MAX8907 || RTC_DRV_S5M || EXTCON_RT8973A || EXTCON_SM5502 || SUN4I_GPADC || SL28CPLD_INTC",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGMAP_SOUNDWIRE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MAX98373_SDW || SND_SOC_RT1308_SDW || SND_SOC_RT1316_SDW || SND_SOC_RT5682_SDW || SND_SOC_RT700_SDW || SND_SOC_RT711_SDW || SND_SOC_RT711_SDCA_SDW || SND_SOC_RT715_SDW || SND_SOC_RT715_SDCA_SDW || SND_SOC_WCD938X_SDW || SND_SOC_WSA881X || SND_SOC_WSA883X",
            "dep": "(SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "REGMAP_SOUNDWIRE_MBQ": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_RT711_SDCA_SDW || SND_SOC_RT715_SDCA_SDW",
            "dep": "(SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "REGMAP_SCCB": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_OV772X || VIDEO_OV7740 || VIDEO_OV9650",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "REGMAP_I3C": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM6DSX_I3C",
            "dep": "(I3C)",
            "restrict": ""
        }
    ],
    "REGMAP_SPI_AVMM": [
        {
            "type": "tristate",
            "rev_select": "MFD_INTEL_M10_BMC",
            "dep": "(SPI)",
            "restrict": ""
        }
    ],
    "DMA_SHARED_BUFFER": [
        {
            "type": "bool",
            "rev_select": "QCOM_FASTRPC || HABANA_AI || VIDEO_TEGRA_VDE || VIDEOBUF2_CORE || VIDEOBUF2_DMA_CONTIG || VIDEOBUF2_VMALLOC || TEGRA_HOST1X || DRM || INFINIBAND_USER_MEM || SYNC_FILE || DMABUF_HEAPS || XEN_GNTDEV_DMABUF || TEE || SAMPLE_VFIO_MDEV_MBOCHS",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DMA_FENCE_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMA_SHARED_BUFFER)",
            "restrict": ""
        }
    ],
    "GENERIC_ARCH_TOPOLOGY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_ARCH_NUMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_CCI": [
        {
            "type": "bool",
            "rev_select": "ARM_CCI400_COMMON || ARM_CCI_PMU",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_CCI400_COMMON": [
        {
            "type": "bool",
            "rev_select": "ARM_CCI400_PORT_CTRL || ARM_CCI400_PMU",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_CCI400_PORT_CTRL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM && OF && CPU_V7)",
            "restrict": ""
        }
    ],
    "ARM_INTEGRATOR_LM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (ARCH_INTEGRATOR || COMPILE_TEST)",
            "restrict": "( ARCH_INTEGRATOR )[!(y)]"
        }
    ],
    "BRCMSTB_GISB_ARB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM || ARM64 || MIPS)",
            "restrict": "( ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "BT1_APB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MIPS_BAIKAL_T1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BT1_AXI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MIPS_BAIKAL_T1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MOXTET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPI_MASTER && OF)",
            "restrict": ""
        }
    ],
    "HISILICON_LPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ARM64 && ARCH_HISI ) || ( COMPILE_TEST && ! ALPHA && ! HEXAGON && ! PARISC )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "IMX_WEIM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_MXC)",
            "restrict": ""
        }
    ],
    "INTEL_IXP4XX_EB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (ARCH_IXP4XX || COMPILE_TEST)",
            "restrict": "( ARCH_IXP4XX )[!(y)]"
        }
    ],
    "MIPS_CDMM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CPU_MIPSR2 || CPU_MIPSR5)",
            "restrict": ""
        }
    ],
    "MVEBU_MBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PLAT_ORION)",
            "restrict": ""
        }
    ],
    "OMAP_INTERCONNECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "OMAP_OCP2SCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "QCOM_EBI2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": "( ARCH_QCOM )[!(y)]"
        }
    ],
    "QCOM_SSC_BLOCK_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "SUN50I_DE2_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SUNXI)",
            "restrict": "( ARM64 )[!(y)]"
        }
    ],
    "SUNXI_RSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_SUNXI)",
            "restrict": "( MACH_SUN8I || MACH_SUN9I || ARM64 )[!(y)]"
        }
    ],
    "TEGRA_ACONNECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_TEGRA_210_SOC) && (OF && PM)",
            "restrict": ""
        }
    ],
    "TEGRA_GMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_TEGRA)",
            "restrict": ""
        }
    ],
    "TI_PWMSS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (( ARCH_OMAP2PLUS ) && ( PWM_TIECAP || PWM_TIEHRPWM || TI_EQEP ))]"
        }
    ],
    "TI_SYSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "TS_NBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SOC_IMX28) && (OF_GPIO && PWM)",
            "restrict": ""
        }
    ],
    "UNIPHIER_SYSTEM_BUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_UNIPHIER && OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VEXPRESS_CONFIG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM || ARM64) && (OF)",
            "restrict": "( y )[!(y) && (ARCH_VEXPRESS)]"
        }
    ],
    "DA8XX_MSTPRI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_DAVINCI_DA8XX)",
            "restrict": ""
        }
    ],
    "FSL_MC_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF && ( ARCH_LAYERSCAPE || ( COMPILE_TEST && ( ARM || ARM64 || X86_LOCAL_APIC || PPC ) ) ))",
            "restrict": "( CRYPTO_DEV_FSL_CAAM )"
        }
    ],
    "FSL_MC_UAPI_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FSL_MC_BUS)",
            "restrict": ""
        }
    ],
    "MHI_BUS": [
        {
            "type": "tristate",
            "rev_select": "ATH11K_PCI",
            "dep": "",
            "restrict": ""
        }
    ],
    "MHI_BUS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MHI_BUS && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "MHI_BUS_PCI_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MHI_BUS) && (PCI)",
            "restrict": ""
        }
    ],
    "MHI_BUS_EP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CONNECTOR": [
        {
            "type": "tristate",
            "rev_select": "DM_LOG_USERSPACE",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "PROC_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CONNECTOR ) && (CONNECTOR = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SCMI_PROTOCOL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_SCMI_HAVE_TRANSPORT": [
        {
            "type": "bool",
            "rev_select": "ARM_SCMI_TRANSPORT_MAILBOX || ARM_SCMI_TRANSPORT_OPTEE || ARM_SCMI_TRANSPORT_SMC || ARM_SCMI_TRANSPORT_VIRTIO",
            "dep": "( ARM_SCMI_PROTOCOL )",
            "restrict": ""
        }
    ],
    "ARM_SCMI_HAVE_SHMEM": [
        {
            "type": "bool",
            "rev_select": "ARM_SCMI_TRANSPORT_MAILBOX || ARM_SCMI_TRANSPORT_OPTEE || ARM_SCMI_TRANSPORT_SMC",
            "dep": "( ARM_SCMI_PROTOCOL )",
            "restrict": ""
        }
    ],
    "ARM_SCMI_HAVE_MSG": [
        {
            "type": "bool",
            "rev_select": "ARM_SCMI_TRANSPORT_OPTEE || ARM_SCMI_TRANSPORT_VIRTIO",
            "dep": "( ARM_SCMI_PROTOCOL )",
            "restrict": ""
        }
    ],
    "ARM_SCMI_TRANSPORT_MAILBOX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (MAILBOX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SCMI_TRANSPORT_OPTEE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (OPTEE = y || OPTEE = ARM_SCMI_PROTOCOL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SCMI_TRANSPORT_SMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (HAVE_ARM_SMCCC_DISCOVERY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SCMI_TRANSPORT_SMC_ATOMIC_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (ARM_SCMI_TRANSPORT_SMC)",
            "restrict": ""
        }
    ],
    "ARM_SCMI_TRANSPORT_VIRTIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (VIRTIO = y || VIRTIO = ARM_SCMI_PROTOCOL)",
            "restrict": ""
        }
    ],
    "ARM_SCMI_TRANSPORT_VIRTIO_VERSION1_COMPLIANCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (ARM_SCMI_TRANSPORT_VIRTIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SCMI_TRANSPORT_VIRTIO_ATOMIC_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARM_SCMI_PROTOCOL ) && (ARM_SCMI_TRANSPORT_VIRTIO)",
            "restrict": ""
        }
    ],
    "ARM_SCMI_POWER_DOMAIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM_SCMI_PROTOCOL || ( COMPILE_TEST && OF ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SCMI_POWER_CONTROL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM_SCMI_PROTOCOL || ( COMPILE_TEST && OF ))",
            "restrict": ""
        }
    ],
    "ARM_SCPI_PROTOCOL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM || ARM64 || COMPILE_TEST) && (MAILBOX)",
            "restrict": ""
        }
    ],
    "ARM_SCPI_POWER_DOMAIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM_SCPI_PROTOCOL || ( COMPILE_TEST && OF ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SDE_INTERFACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM64) && (ACPI_APEI_GHES)",
            "restrict": ""
        }
    ],
    "EDD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86)",
            "restrict": ""
        }
    ],
    "EDD_OFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EDD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FIRMWARE_MEMMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( X86 )[!(EXPERT)]"
        }
    ],
    "EFI_PCDP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ACPI && EFI && IA64)",
            "restrict": "( y )[!(y) && (IA64)]"
        }
    ],
    "DMIID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMI_SYSFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SYSFS && DMI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DMI_SCAN_MACHINE_NON_EFI_FALLBACK": [
        {
            "type": "bool",
            "rev_select": "DMI",
            "dep": "",
            "restrict": ""
        }
    ],
    "ISCSI_IBFT_FIND": [
        {
            "type": "bool",
            "rev_select": "ISCSI_IBFT[X86]",
            "dep": "(X86 && ISCSI_IBFT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ISCSI_IBFT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ACPI && SCSI && SCSI_LOWLEVEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RASPBERRYPI_FIRMWARE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(BCM2835_MBOX)",
            "restrict": ""
        }
    ],
    "FW_CFG_SYSFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SYSFS && ( ARM || ARM64 || PARISC || PPC_PMAC || SPARC || X86 )) && (HAS_IOPORT_MAP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FW_CFG_SYSFS_CMDLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FW_CFG_SYSFS)",
            "restrict": ""
        }
    ],
    "INTEL_STRATIX10_SERVICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_INTEL_SOCFPGA && ARM64 && HAVE_ARM_SMCCC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INTEL_STRATIX10_RSU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INTEL_STRATIX10_SERVICE)",
            "restrict": ""
        }
    ],
    "MTK_ADSP_IPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MTK_ADSP_MBOX)",
            "restrict": ""
        }
    ],
    "QCOM_SCM": [
        {
            "type": "tristate",
            "rev_select": "ARM_QCOM_SPM_CPUIDLE || QCOM_FASTRPC || QCOM_IPA || ATH10K_SNOC || PINCTRL_MSM || VIDEO_QCOM_VENUS || DRM_MSM || MMC_SDHCI_MSM[MMC_CRYPTO] || SCSI_UFS_QCOM[SCSI_UFS_CRYPTO] || ARM_SMMU_QCOM || QCOM_IOMMU || QCOM_Q6V5_MSS || QCOM_Q6V5_PAS || QCOM_Q6V5_WCSS || QCOM_WCNSS_PIL || QCOM_MDT_LOADER || QCOM_OCMEM || QCOM_RMTFS_MEM || QCOM_SPM",
            "dep": "",
            "restrict": ""
        }
    ],
    "QCOM_SCM_DOWNLOAD_MODE_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(QCOM_SCM)",
            "restrict": ""
        }
    ],
    "SYSFB": [
        {
            "type": "bool",
            "rev_select": "SYSFB_SIMPLEFB || FB_VESA || FB_EFI",
            "dep": "",
            "restrict": ""
        }
    ],
    "SYSFB_SIMPLEFB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 || EFI)",
            "restrict": ""
        }
    ],
    "TI_SCI_PROTOCOL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(TI_MESSAGE_MANAGER)",
            "restrict": ""
        }
    ],
    "TRUSTED_FOUNDATIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM && CPU_V7)",
            "restrict": ""
        }
    ],
    "TURRIS_MOX_RWTM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MVEBU || COMPILE_TEST) && (HAS_DMA && OF) && (MAILBOX)",
            "restrict": ""
        }
    ],
    "ARM_FFA_TRANSPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (ARM64)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARM_FFA_SMCCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM64 && HAVE_ARM_SMCCC_DISCOVERY)",
            "restrict": "( ARM_FFA_TRANSPORT )[!(y)]"
        }
    ],
    "BCM47XX_NVRAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BCM47XX || ARCH_BCM_5301X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM47XX_SPROM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BCM47XX_NVRAM)",
            "restrict": ""
        }
    ],
    "TEE_BNXT_FW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_BCM_IPROC && OPTEE ) || ( COMPILE_TEST && TEE ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "CS_DSP": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_CS_DSP_CONTROLS || SND_SOC_WM_ADSP",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GOOGLE_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GOOGLE_SMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE ) && (X86 && ACPI && DMI)",
            "restrict": ""
        }
    ],
    "GOOGLE_COREBOOT_TABLE": [
        {
            "type": "tristate",
            "rev_select": "GOOGLE_COREBOOT_TABLE_ACPI || GOOGLE_COREBOOT_TABLE_OF",
            "dep": "( GOOGLE_FIRMWARE ) && (HAS_IOMEM && ( ACPI || OF ))",
            "restrict": ""
        }
    ],
    "GOOGLE_COREBOOT_TABLE_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE )",
            "restrict": ""
        }
    ],
    "GOOGLE_COREBOOT_TABLE_OF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE )",
            "restrict": ""
        }
    ],
    "GOOGLE_MEMCONSOLE": [
        {
            "type": "tristate",
            "rev_select": "GOOGLE_MEMCONSOLE_X86_LEGACY || GOOGLE_MEMCONSOLE_COREBOOT",
            "dep": "( GOOGLE_FIRMWARE ) && (GOOGLE_MEMCONSOLE_X86_LEGACY || GOOGLE_MEMCONSOLE_COREBOOT)",
            "restrict": ""
        }
    ],
    "GOOGLE_MEMCONSOLE_X86_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE ) && (X86 && ACPI && DMI)",
            "restrict": ""
        }
    ],
    "GOOGLE_FRAMEBUFFER_COREBOOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE ) && (FB_SIMPLE) && (GOOGLE_COREBOOT_TABLE)",
            "restrict": ""
        }
    ],
    "GOOGLE_MEMCONSOLE_COREBOOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE ) && (GOOGLE_COREBOOT_TABLE)",
            "restrict": ""
        }
    ],
    "GOOGLE_VPD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOOGLE_FIRMWARE ) && (GOOGLE_COREBOOT_TABLE)",
            "restrict": ""
        }
    ],
    "EFI_ESRT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI && ! IA64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_VARS_PSTORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (PSTORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_VARS_PSTORE_DEFAULT_DISABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI_VARS_PSTORE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EFI_RUNTIME_MAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (X86 && EFI && KEXEC_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_FAKE_MEMMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI && X86)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EFI_MAX_FAKE_MEM": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI_FAKE_MEMMAP)",
            "restrict": "( 1 128 ) || ( 8 )[!(y)]"
        }
    ],
    "EFI_SOFT_RESERVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI && EFI_STUB && ACPI_HMAT)",
            "restrict": "( ACPI_HMAT )[!(y)]"
        }
    ],
    "EFI_DXE_MEM_ATTRIBUTES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI && EFI_STUB && X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_PARAMS_FROM_FDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "EFI_RUNTIME_WRAPPERS": [
        {
            "type": "bool",
            "rev_select": "EFI",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "EFI_GENERIC_STUB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "EFI_ARMSTUB_DTB_LOADER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI_GENERIC_STUB && ! RISCV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_GENERIC_STUB_INITRD_CMDLINE_LOADER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI_STUB && ( EFI_GENERIC_STUB || X86 )) && (! RISCV)",
            "restrict": "( y )[!(! X86) && (X86)]"
        }
    ],
    "EFI_BOOTLOADER_CONTROL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( EFI ) )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EFI_CAPSULE_LOADER": [
        {
            "type": "tristate",
            "rev_select": "EFI_CAPSULE_QUIRK_QUARK_CSH",
            "dep": "( ( EFI ) ) && (EFI && ! IA64)",
            "restrict": ""
        }
    ],
    "EFI_CAPSULE_QUIRK_QUARK_CSH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (X86 && ! 64BIT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EFI_DEV_PATH_PARSER": [
        {
            "type": "bool",
            "rev_select": "APPLE_PROPERTIES",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "APPLE_PROPERTIES": [
        {
            "type": "bool",
            "rev_select": "USB4[EFI_STUB && X86]",
            "dep": "( ( EFI ) ) && (EFI_STUB && X86)",
            "restrict": ""
        }
    ],
    "RESET_ATTACK_MITIGATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (EFI_STUB)",
            "restrict": ""
        }
    ],
    "EFI_RCI2_TABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EFI_DISABLE_PCI_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "EFI_EARLYCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (SERIAL_EARLYCON && ! ARM && ! IA64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EFI_CUSTOM_SSDT_OVERLAYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) ) && (ACPI)",
            "restrict": "( ACPI_TABLE_UPGRADE )[!(y)]"
        }
    ],
    "EFI_DISABLE_RUNTIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( EFI ) )",
            "restrict": "( y )[!(y) && (PREEMPT_RT)]"
        }
    ],
    "EFI_COCO_SECRET": [
        {
            "type": "bool",
            "rev_select": "EFI_SECRET",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "EFI_EMBEDDED_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "TOUCHSCREEN_DMI[EFI]",
            "dep": "( ( EFI ) )",
            "restrict": ""
        }
    ],
    "UEFI_CPER": [
        {
            "type": "bool",
            "rev_select": "ACPI_APEI || ACPI_EXTLOG || EDAC_GHES",
            "dep": "",
            "restrict": ""
        }
    ],
    "UEFI_CPER_ARM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(UEFI_CPER && ( ARM || ARM64 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "UEFI_CPER_X86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(UEFI_CPER && X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMX_DSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(IMX_MBOX)",
            "restrict": ""
        }
    ],
    "IMX_SCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IMX_MBOX)",
            "restrict": ""
        }
    ],
    "IMX_SCU_PD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IMX_SCU)",
            "restrict": ""
        }
    ],
    "MESON_SM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MESON || COMPILE_TEST) && (ARM64_4K_PAGES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_PSCI_FW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_PSCI_CHECKER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM_PSCI_FW && HOTPLUG_CPU && CPU_IDLE && ! TORTURE_TEST)",
            "restrict": ""
        }
    ],
    "HAVE_ARM_SMCCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARM_SMCCC_DISCOVERY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM_PSCI_FW)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SMCCC_SOC_ID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARM_SMCCC_DISCOVERY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA_IVC": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC || ARCH_TEGRA_234_SOC",
            "dep": "(ARCH_TEGRA)",
            "restrict": ""
        }
    ],
    "TEGRA_BPMP": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC || ARCH_TEGRA_234_SOC",
            "dep": "(ARCH_TEGRA && TEGRA_HSP_MBOX && TEGRA_IVC)",
            "restrict": ""
        }
    ],
    "ZYNQMP_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ARCH_ZYNQMP ) ) && (ARCH_ZYNQMP)",
            "restrict": "( y )[!(y) && (ARCH_ZYNQMP)]"
        }
    ],
    "ZYNQMP_FIRMWARE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ARCH_ZYNQMP ) ) && (ZYNQMP_FIRMWARE && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "GNSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GNSS_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "GNSS_MTK_SERIAL || GNSS_UBX_SERIAL",
            "dep": "( GNSS )",
            "restrict": ""
        }
    ],
    "GNSS_MTK_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GNSS ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "GNSS_SIRF_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GNSS ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "GNSS_UBX_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GNSS ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "GNSS_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GNSS ) && (USB)",
            "restrict": ""
        }
    ],
    "MTD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MTD_TESTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (m)",
            "restrict": ""
        }
    ],
    "MTD_AR7_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_BCM47XX_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BCM47XX || ARCH_BCM_5301X)",
            "restrict": ""
        }
    ],
    "MTD_BCM63XX_PARTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && (BCM63XX || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_CMDLINE_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD)",
            "restrict": ""
        }
    ],
    "MTD_OF_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MTD_OF_PARTS_BCM4908": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && (MTD_OF_PARTS && ( ARCH_BCM4908 || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM4908 )[!(y)]"
        }
    ],
    "MTD_OF_PARTS_LINKSYS_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && (MTD_OF_PARTS && ( ARCH_BCM_5301X || ARCH_BCM4908 || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_5301X )[!(y)]"
        }
    ],
    "MTD_PARSER_IMAGETAG": [
        {
            "type": "tristate",
            "rev_select": "MTD_BCM63XX_PARTS",
            "dep": "( MTD ) && (BCM63XX || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_AFS_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (( ARM || ARM64 ))",
            "restrict": ""
        }
    ],
    "MTD_PARSER_TRX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD && ( BCM47XX || ARCH_BCM_5301X || ARCH_MEDIATEK || RALINK || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "MTD_SHARPSL_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD_NAND_SHARPSL || MTD_NAND_TMIO || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_REDBOOT_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_REDBOOT_DIRECTORY_BLOCK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_REDBOOT_PARTS )",
            "restrict": "( -1 )[!(y)]"
        }
    ],
    "MTD_REDBOOT_PARTS_UNALLOCATED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_REDBOOT_PARTS )",
            "restrict": ""
        }
    ],
    "MTD_REDBOOT_PARTS_READONLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_REDBOOT_PARTS )",
            "restrict": ""
        }
    ],
    "MTD_QCOMSMEM_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "MTD_SERCOMM_PARTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD && RALINK)",
            "restrict": ""
        }
    ],
    "MTD_BLKDEVS": [
        {
            "type": "tristate",
            "rev_select": "MTD_BLOCK || MTD_BLOCK_RO || FTL || NFTL || INFTL || RFD_FTL || SSFDC || SM_FTL || MTD_SWAP",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MTD_BLOCK_RO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD_BLOCK != y && BLOCK)",
            "restrict": ""
        }
    ],
    "FTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "NFTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "NFTL_RW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && (NFTL)",
            "restrict": ""
        }
    ],
    "INFTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "RFD_FTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "SSFDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "SM_FTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MTD_OOPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_PSTORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (PSTORE_BLK)",
            "restrict": ""
        }
    ],
    "MTD_SWAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD && SWAP)",
            "restrict": ""
        }
    ],
    "MTD_PARTITIONED_MASTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && (MTD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_CFI": [
        {
            "type": "tristate",
            "rev_select": "MTD_HYPERBUS",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_JEDECPROBE": [
        {
            "type": "tristate",
            "rev_select": "MTD_TS5500",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_GEN_PROBE": [
        {
            "type": "tristate",
            "rev_select": "MTD_CFI || MTD_JEDECPROBE",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_CFI_ADV_OPTIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (MTD_GEN_PROBE)",
            "restrict": ""
        }
    ],
    "MTD_CFI_NOSWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && ( ( MTD_CFI_ADV_OPTIONS ) ) && (! ARCH_IXP4XX || CPU_BIG_ENDIAN) && ( MTD_CFI_NOSWAP &&  !MTD_CFI_BE_BYTE_SWAP &&  !MTD_CFI_LE_BYTE_SWAP )",
            "restrict": ""
        }
    ],
    "MTD_CFI_BE_BYTE_SWAP": [
        {
            "type": "bool",
            "rev_select": "MTD_PHYSMAP_IXP4XX[CPU_BIG_ENDIAN]",
            "dep": "( MTD ) && ( ( MTD != n ) ) && ( ( MTD_CFI_ADV_OPTIONS ) ) && ( MTD_CFI_BE_BYTE_SWAP &&  !MTD_CFI_NOSWAP &&  !MTD_CFI_LE_BYTE_SWAP )",
            "restrict": ""
        }
    ],
    "MTD_CFI_LE_BYTE_SWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && ( ( MTD_CFI_ADV_OPTIONS ) ) && (! ARCH_IXP4XX) && ( MTD_CFI_LE_BYTE_SWAP &&  !MTD_CFI_NOSWAP &&  !MTD_CFI_BE_BYTE_SWAP )",
            "restrict": ""
        }
    ],
    "MTD_CFI_GEOMETRY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (MTD_CFI_ADV_OPTIONS)",
            "restrict": ""
        }
    ],
    "MTD_MAP_BANK_WIDTH_1": [
        {
            "type": "bool",
            "rev_select": "MTD_CFI_GEOMETRY[! ( MTD_MAP_BANK_WIDTH_2 || MTD_MAP_BANK_WIDTH_4 || MTD_MAP_BANK_WIDTH_8 || MTD_MAP_BANK_WIDTH_16 || MTD_MAP_BANK_WIDTH_32 )]",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( y )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_MAP_BANK_WIDTH_2": [
        {
            "type": "bool",
            "rev_select": "MTD_HYPERBUS",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( y )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_MAP_BANK_WIDTH_4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( y )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_MAP_BANK_WIDTH_8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( n )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_MAP_BANK_WIDTH_16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( n )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_MAP_BANK_WIDTH_32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( n )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_CFI_I1": [
        {
            "type": "bool",
            "rev_select": "MTD_CFI_GEOMETRY[! ( MTD_CFI_I2 || MTD_CFI_I4 || MTD_CFI_I8 )]",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( y )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_CFI_I2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( y )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_CFI_I4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( n )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_CFI_I8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": "( n )[!(MTD_CFI_GEOMETRY)]"
        }
    ],
    "MTD_OTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (MTD_CFI_ADV_OPTIONS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_CFI_INTELEXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (MTD_GEN_PROBE)",
            "restrict": ""
        }
    ],
    "MTD_CFI_AMDSTD": [
        {
            "type": "tristate",
            "rev_select": "MTD_TS5500 || MTD_HYPERBUS",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (MTD_GEN_PROBE)",
            "restrict": ""
        }
    ],
    "MTD_CFI_STAA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (MTD_GEN_PROBE)",
            "restrict": ""
        }
    ],
    "MTD_CFI_UTIL": [
        {
            "type": "tristate",
            "rev_select": "MTD_CFI || MTD_JEDECPROBE || MTD_CFI_INTELEXT || MTD_CFI_AMDSTD || MTD_CFI_STAA",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_RAM": [
        {
            "type": "tristate",
            "rev_select": "MTD_PLATRAM",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_ROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_ABSENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) )",
            "restrict": ""
        }
    ],
    "MTD_XIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) ) && (! SMP && ( MTD_CFI_INTELEXT || MTD_CFI_AMDSTD ) && ARCH_MTD_XIP)",
            "restrict": "( y )[!(y) && (XIP_KERNEL)]"
        }
    ],
    "MTD_COMPLEX_MAPPINGS": [
        {
            "type": "bool",
            "rev_select": "MTD_MAP_BANK_WIDTH_32[HAS_IOMEM] || MTD_PHYSMAP_BT1_ROM || MTD_PHYSMAP_GEMINI || MTD_PHYSMAP_IXP4XX || MTD_HYPERBUS",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "MTD_PHYSMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_CFI || MTD_JEDECPROBE || MTD_ROM || MTD_RAM || MTD_LPDDR)",
            "restrict": ""
        }
    ],
    "MTD_PHYSMAP_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_PHYSMAP_START": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_COMPAT)",
            "restrict": "( \"0x8000000\" )[!(y)]"
        }
    ],
    "MTD_PHYSMAP_LEN": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_COMPAT)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "MTD_PHYSMAP_BANKWIDTH": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_COMPAT)",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "MTD_PHYSMAP_OF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (OF && MTD_PHYSMAP)",
            "restrict": ""
        }
    ],
    "MTD_PHYSMAP_BT1_ROM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_OF) && (MIPS_BAIKAL_T1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_PHYSMAP_VERSATILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_OF) && (MFD_SYSCON)",
            "restrict": "( y )[!(y) && (( ARCH_INTEGRATOR || ARCH_VERSATILE || ARCH_REALVIEW ))]"
        }
    ],
    "MTD_PHYSMAP_GEMINI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_OF) && (MFD_SYSCON)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "MTD_PHYSMAP_IXP4XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP_OF) && (ARM)",
            "restrict": "( ARCH_IXP4XX )[!(y)]"
        }
    ],
    "MTD_PHYSMAP_GPIO_ADDR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PHYSMAP) && (GPIOLIB || COMPILE_TEST) && (MTD_COMPLEX_MAPPINGS)",
            "restrict": ""
        }
    ],
    "MTD_SUN_UFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SPARC && MTD_CFI && PCI)",
            "restrict": ""
        }
    ],
    "MTD_SC520CDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (( MELAN || COMPILE_TEST ) && MTD_CFI)",
            "restrict": ""
        }
    ],
    "MTD_NETSC520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (( MELAN || COMPILE_TEST ) && MTD_CFI)",
            "restrict": ""
        }
    ],
    "MTD_TS5500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (TS5500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_SBC_GXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_CFI_INTELEXT && MTD_COMPLEX_MAPPINGS)",
            "restrict": ""
        }
    ],
    "MTD_PXA2XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (( PXA25x || PXA27x ) && MTD_CFI_INTELEXT)",
            "restrict": ""
        }
    ],
    "MTD_SCx200_DOCFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SCx200 && MTD_CFI)",
            "restrict": ""
        }
    ],
    "MTD_AMD76XROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE)",
            "restrict": ""
        }
    ],
    "MTD_ICHXROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE)",
            "restrict": ""
        }
    ],
    "MTD_ESB2ROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE && PCI)",
            "restrict": ""
        }
    ],
    "MTD_CK804XROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE && PCI)",
            "restrict": ""
        }
    ],
    "MTD_SCB2_FLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE && PCI)",
            "restrict": ""
        }
    ],
    "MTD_TSUNAMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (ALPHA_TSUNAMI && MTD_COMPLEX_MAPPINGS)",
            "restrict": ""
        }
    ],
    "MTD_NETtel": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE)",
            "restrict": ""
        }
    ],
    "MTD_LANTIQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (LANTIQ)",
            "restrict": ""
        }
    ],
    "MTD_L440GX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (X86 && MTD_JEDECPROBE)",
            "restrict": ""
        }
    ],
    "MTD_CFI_FLAGADM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PPC_8xx && MTD_CFI)",
            "restrict": ""
        }
    ],
    "MTD_SOLUTIONENGINE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SOLUTION_ENGINE && MTD_CFI && MTD_REDBOOT_PARTS)",
            "restrict": ""
        }
    ],
    "MTD_SA1100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_CFI && ARCH_SA1100)",
            "restrict": ""
        }
    ],
    "MTD_DC21285": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_CFI && ARCH_FOOTBRIDGE && MTD_COMPLEX_MAPPINGS)",
            "restrict": ""
        }
    ],
    "MTD_IMPA7": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (ARM && MTD_JEDECPROBE)",
            "restrict": ""
        }
    ],
    "MTD_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PCI && MTD_COMPLEX_MAPPINGS)",
            "restrict": ""
        }
    ],
    "MTD_PCMCIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PCMCIA && MTD_COMPLEX_MAPPINGS)",
            "restrict": ""
        }
    ],
    "MTD_PCMCIA_ANONYMOUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PCMCIA)",
            "restrict": ""
        }
    ],
    "MTD_UCLINUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (( MTD_RAM = y || MTD_ROM = y ) && ( ! MMU || COLDFIRE ))",
            "restrict": ""
        }
    ],
    "MTD_INTEL_VR_NOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "MTD_PLATRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "MTD_VMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MAPLE)",
            "restrict": ""
        }
    ],
    "MTD_PISMO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (I2C) && (ARCH_VERSATILE)",
            "restrict": ""
        }
    ],
    "MTD_PMC551": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "MTD_PMC551_BUGFIX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PMC551)",
            "restrict": ""
        }
    ],
    "MTD_PMC551_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_PMC551)",
            "restrict": ""
        }
    ],
    "MTD_MS02NV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MACH_DECSTATION)",
            "restrict": ""
        }
    ],
    "MTD_DATAFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MTD_DATAFLASH_WRITE_VERIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_DATAFLASH)",
            "restrict": ""
        }
    ],
    "MTD_DATAFLASH_OTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_DATAFLASH)",
            "restrict": ""
        }
    ],
    "MTD_MCHP23K256": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MTD_MCHP48L640": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MTD_SPEAR_SMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PLAT_SPEAR || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MTD_SST25L": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MTD_BCM47XXSFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (BCMA_SFLASH && ( MIPS || ARM ))",
            "restrict": ""
        }
    ],
    "MTD_SLRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "MTD_PHRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "MTD_LART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (SA1100_LART)",
            "restrict": ""
        }
    ],
    "MTD_MTDRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "MTDRAM_TOTAL_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_MTDRAM)",
            "restrict": "( 4096 )[!(y)]"
        }
    ],
    "MTDRAM_ERASE_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (MTD_MTDRAM)",
            "restrict": "( 128 )[!(y)]"
        }
    ],
    "MTD_BLOCK2MTD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MTD_POWERNV_FLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (PPC_POWERNV)",
            "restrict": ""
        }
    ],
    "MTD_DOCG3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "MTD_ST_SPI_FSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && (ARCH_STI)",
            "restrict": ""
        }
    ],
    "BCH_CONST_M": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && ( MTD_DOCG3 )",
            "restrict": "( 14 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 5 15 )"
        }
    ],
    "BCH_CONST_T": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD != n ) && ( HAS_IOMEM ) ) && ( MTD_DOCG3 )",
            "restrict": "( 4 )[!(y)]"
        },
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MTD_NAND_CORE": [
        {
            "type": "tristate",
            "rev_select": "SM_FTL || MTD_RAW_NAND || MTD_SPI_NAND || MTD_NAND_ECC",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_ONENAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_ONENAND_VERIFY_WRITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_ONENAND )",
            "restrict": ""
        }
    ],
    "MTD_ONENAND_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_ONENAND )",
            "restrict": ""
        }
    ],
    "MTD_ONENAND_OMAP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_ONENAND ) && (ARCH_OMAP2 || ARCH_OMAP3 || ( COMPILE_TEST && ARM )) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_ONENAND_SAMSUNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_ONENAND ) && (ARCH_S3C64XX || ARCH_S5PV210 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_ONENAND_OTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_ONENAND )",
            "restrict": ""
        }
    ],
    "MTD_ONENAND_2X_PROGRAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_ONENAND )",
            "restrict": ""
        }
    ],
    "MTD_RAW_NAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_NAND_DENALI": [
        {
            "type": "tristate",
            "rev_select": "MTD_NAND_DENALI_PCI || MTD_NAND_DENALI_DT",
            "dep": "( MTD ) && ( MTD_RAW_NAND )",
            "restrict": ""
        }
    ],
    "MTD_NAND_DENALI_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PCI)",
            "restrict": ""
        }
    ],
    "MTD_NAND_DENALI_DT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (HAS_DMA && HAVE_CLK && OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_AMS_DELTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MACH_AMS_DELTA || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MTD_NAND_OMAP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_OMAP2PLUS || ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST) && (HAS_IOMEM) && (OMAP_GPMC)",
            "restrict": ""
        }
    ],
    "MTD_NAND_OMAP_BCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_OMAP2)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_NAND_OMAP_BCH_BUILD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND )",
            "restrict": "( MTD_NAND_OMAP2 && MTD_NAND_OMAP_BCH )[!(y)]"
        }
    ],
    "MTD_NAND_AU1550": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "MTD_NAND_NDFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (4xx)",
            "restrict": ""
        }
    ],
    "MTD_NAND_S3C2410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_S3C24XX || ARCH_S3C64XX)",
            "restrict": ""
        }
    ],
    "MTD_NAND_S3C2410_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_S3C2410)",
            "restrict": ""
        }
    ],
    "MTD_NAND_S3C2410_CLKSTOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_S3C2410)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_NAND_SHARPSL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_PXA || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_CAFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PCI)",
            "restrict": ""
        }
    ],
    "MTD_NAND_CS553X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (X86_32) && (! UML && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_AT91 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_ORION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PLAT_ORION)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MARVELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PXA3xx || ARCH_MMP || PLAT_ORION || ARCH_MVEBU || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_SLC_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_LPC32XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MLC_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_LPC32XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_PASEMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PPC_PASEMI)",
            "restrict": ""
        }
    ],
    "MTD_NAND_TMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MFD_TMIO)",
            "restrict": ""
        }
    ],
    "MTD_NAND_BRCMNAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARM || ARM64 || MIPS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_BRCMNAND_BCMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && ( MTD_NAND_BRCMNAND ) && (BCMA_NFLASH) && (BCMA)",
            "restrict": ""
        }
    ],
    "MTD_NAND_BCM47XXNFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (BCMA_NFLASH) && (BCMA)",
            "restrict": ""
        }
    ],
    "MTD_NAND_OXNAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_OXNAS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MPC5121_NFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PPC_MPC512x)",
            "restrict": ""
        }
    ],
    "MTD_NAND_GPMI_NAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MXS_DMA)",
            "restrict": ""
        }
    ],
    "MTD_NAND_FSL_ELBC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "MTD_NAND_FSL_IFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (FSL_SOC || ARCH_LAYERSCAPE || SOC_LS1021A || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_FSL_UPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PPC_83xx || PPC_85xx)",
            "restrict": ""
        }
    ],
    "MTD_NAND_VF610_NFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (( SOC_VF610 || COMPILE_TEST )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MXC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "MTD_NAND_SH_FLCTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (SUPERH || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_DAVINCI || ( ARCH_KEYSTONE && TI_AEMIF ) || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_TXX9NDFMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (SOC_TX4938 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_SOCRATES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (SOCRATES)",
            "restrict": ""
        }
    ],
    "MTD_NAND_JZ4780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MIPS || COMPILE_TEST) && (JZ4780_NEMC)",
            "restrict": ""
        }
    ],
    "MTD_NAND_INGENIC_ECC": [
        {
            "type": "bool",
            "rev_select": "MTD_NAND_JZ4740_ECC || MTD_NAND_JZ4725B_BCH || MTD_NAND_JZ4780_BCH",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && ( MTD_NAND_JZ4780 )",
            "restrict": ""
        }
    ],
    "MTD_NAND_JZ4740_ECC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && ( MTD_NAND_JZ4780 )",
            "restrict": ""
        }
    ],
    "MTD_NAND_JZ4725B_BCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && ( MTD_NAND_JZ4780 )",
            "restrict": ""
        }
    ],
    "MTD_NAND_JZ4780_BCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && ( MTD_NAND_JZ4780 )",
            "restrict": ""
        }
    ],
    "MTD_NAND_FSMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (OF && HAS_IOMEM) && (PLAT_SPEAR || ARCH_NOMADIK || ARCH_U8500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_NAND_XWAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (LANTIQ && SOC_TYPE_XWAY)",
            "restrict": ""
        }
    ],
    "MTD_NAND_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_HISI504": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_HISI || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_QCOM || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_ECC_MEDIATEK) && (ARCH_MEDIATEK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MXIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (HAS_IOMEM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_NAND_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_TEGRA || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_STM32_FMC2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MACH_STM32MP157 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_NAND_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_NAND_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (GPIOLIB || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (( OF || COMPILE_TEST ) && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_ARASAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "MTD_NAND_INTEL_LGM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (OF || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_ROCKCHIP && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_PL35X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (OF || COMPILE_TEST) && (PL353_SMC)",
            "restrict": ""
        }
    ],
    "MTD_NAND_RENESAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_SM_COMMON": [
        {
            "type": "tristate",
            "rev_select": "MTD_NAND_RICOH",
            "dep": "( MTD ) && ( MTD_RAW_NAND )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_NAND_NANDSIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND )",
            "restrict": ""
        }
    ],
    "MTD_NAND_RICOH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (PCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_NAND_DISKONCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_NAND_DISKONCHIP_PROBE_ADVANCED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_DISKONCHIP)",
            "restrict": ""
        }
    ],
    "MTD_NAND_DISKONCHIP_PROBE_ADDRESS": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_DISKONCHIP)",
            "restrict": "( 0 )[!(MTD_NAND_DISKONCHIP_PROBE_ADVANCED)]"
        }
    ],
    "MTD_NAND_DISKONCHIP_PROBE_HIGH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_DISKONCHIP_PROBE_ADVANCED)",
            "restrict": ""
        }
    ],
    "MTD_NAND_DISKONCHIP_BBTWRITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_RAW_NAND ) && (MTD_NAND_DISKONCHIP)",
            "restrict": ""
        }
    ],
    "MTD_SPI_NAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MTD_NAND_ECC": [
        {
            "type": "bool",
            "rev_select": "MTD_RAW_NAND || MTD_SPI_NAND || MTD_NAND_ECC_SW_HAMMING || MTD_NAND_ECC_SW_BCH || MTD_NAND_ECC_MXIC || MTD_NAND_ECC_MEDIATEK",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_NAND_ECC_SW_HAMMING": [
        {
            "type": "bool",
            "rev_select": "SM_FTL || MTD_NAND_NDFC",
            "dep": "( MTD )",
            "restrict": "( y )[!(y) && (MTD_RAW_NAND)]"
        }
    ],
    "MTD_NAND_ECC_SW_HAMMING_SMC": [
        {
            "type": "bool",
            "rev_select": "MTD_NAND_NDFC",
            "dep": "( MTD ) && (MTD_NAND_ECC_SW_HAMMING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_NAND_ECC_SW_BCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_NAND_ECC_MXIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && (HAS_IOMEM)",
            "restrict": "( SPI_MXIC )"
        }
    ],
    "MTD_NAND_ECC_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (HAS_IOMEM) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTD_LPDDR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD ) )",
            "restrict": ""
        }
    ],
    "MTD_QINFO_PROBE": [
        {
            "type": "tristate",
            "rev_select": "MTD_LPDDR",
            "dep": "( MTD ) && ( ( MTD ) ) && (MTD_LPDDR)",
            "restrict": ""
        }
    ],
    "MTD_LPDDR2_NVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( ( MTD ) ) && (MTD && ARM)",
            "restrict": ""
        }
    ],
    "MTD_SPI_NOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (MTD) && (MTD && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MTD_SPI_NOR_USE_4K_SECTORS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_SPI_NOR )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MTD_SPI_NOR_SWP_DISABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_SPI_NOR ) && ( MTD_SPI_NOR_SWP_DISABLE &&  !MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE &&  !MTD_SPI_NOR_SWP_KEEP )",
            "restrict": ""
        }
    ],
    "MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_SPI_NOR ) && ( MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE &&  !MTD_SPI_NOR_SWP_DISABLE &&  !MTD_SPI_NOR_SWP_KEEP )",
            "restrict": ""
        }
    ],
    "MTD_SPI_NOR_SWP_KEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_SPI_NOR ) && ( MTD_SPI_NOR_SWP_KEEP &&  !MTD_SPI_NOR_SWP_DISABLE &&  !MTD_SPI_NOR_SWP_DISABLE_ON_VOLATILE )",
            "restrict": ""
        }
    ],
    "SPI_HISI_SFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_SPI_NOR ) && (ARCH_HISI || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_NXP_SPIFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_SPI_NOR ) && (OF && ( ARCH_LPC18XX || COMPILE_TEST )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTD_UBI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD )",
            "restrict": ""
        }
    ],
    "MTD_UBI_WL_THRESHOLD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_UBI )",
            "restrict": "( 2 65536 ) || ( 4096 )[!(y)]"
        }
    ],
    "MTD_UBI_BEB_LIMIT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_UBI )",
            "restrict": "( 0 768 ) || ( 20 )[!(y)]"
        }
    ],
    "MTD_UBI_FASTMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_UBI )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_UBI_GLUEBI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_UBI )",
            "restrict": ""
        }
    ],
    "MTD_UBI_BLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_UBI ) && (BLOCK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MTD_HYPERBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HBMC_AM654": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_HYPERBUS ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RPCIF_HYPERBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MTD ) && ( MTD_HYPERBUS ) && (RENESAS_RPCIF) && (MTD_CFI_BE_BYTE_SWAP)",
            "restrict": ""
        }
    ],
    "DTC": [
        {
            "type": "bool",
            "rev_select": "OF_ALL_DTBS || OF_FLATTREE",
            "dep": "",
            "restrict": ""
        }
    ],
    "OF": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_CE || OLPC",
            "dep": "",
            "restrict": ""
        }
    ],
    "OF_UNITTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF ) && (! SPARC)",
            "restrict": ""
        }
    ],
    "OF_ALL_DTBS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF ) && (COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OF_FLATTREE": [
        {
            "type": "bool",
            "rev_select": "OF_EARLY_FLATTREE || OF_OVERLAY || DRM_RCAR_LVDS",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_EARLY_FLATTREE": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_CE || OF_UNITTEST || CLK_LGM_CGU",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_PROMTREE": [
        {
            "type": "bool",
            "rev_select": "OLPC",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_KOBJ": [
        {
            "type": "bool",
            "rev_select": "OF_DYNAMIC",
            "dep": "( OF )",
            "restrict": "( SYSFS )[!(y)]"
        }
    ],
    "OF_DYNAMIC": [
        {
            "type": "bool",
            "rev_select": "HOTPLUG_PCI_POWERNV || OF_OVERLAY || I2C_DEMUX_PINCTRL",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_ADDRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF ) && (! SPARC && ( HAS_IOMEM || UML ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OF_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF ) && (! SPARC && IRQ_DOMAIN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OF_RESERVED_MEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF )",
            "restrict": "( OF_EARLY_FLATTREE )[!(y)]"
        }
    ],
    "OF_RESOLVE": [
        {
            "type": "bool",
            "rev_select": "OF_UNITTEST || OF_OVERLAY",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_OVERLAY": [
        {
            "type": "bool",
            "rev_select": "DRM_RCAR_LVDS",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_NUMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "OF_DMA_DEFAULT_COHERENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( OF )",
            "restrict": ""
        }
    ],
    "ARCH_MIGHT_HAVE_PC_PARPORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "PARPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PARPORT_PC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (ARCH_MIGHT_HAVE_PC_PARPORT || ( PCI && ! S390 ))",
            "restrict": ""
        }
    ],
    "PARPORT_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (SERIAL_8250_PCI && PARPORT_PC && PCI)",
            "restrict": ""
        }
    ],
    "PARPORT_PC_FIFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PARPORT ) && (PARPORT_PC)",
            "restrict": ""
        }
    ],
    "PARPORT_PC_SUPERIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PARPORT ) && (ARCH_MIGHT_HAVE_PC_PARPORT && PARPORT_PC && ! PARISC)",
            "restrict": ""
        }
    ],
    "PARPORT_PC_PCMCIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (PCMCIA && PARPORT_PC)",
            "restrict": ""
        }
    ],
    "PARPORT_IP32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (SGI_IP32)",
            "restrict": ""
        }
    ],
    "PARPORT_AMIGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (AMIGA)",
            "restrict": ""
        }
    ],
    "PARPORT_MFC3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "PARPORT_ATARI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (ATARI)",
            "restrict": ""
        }
    ],
    "PARPORT_GSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT )",
            "restrict": "( GSC )[!(y)]"
        }
    ],
    "PARPORT_SUNBPP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT ) && (SBUS)",
            "restrict": ""
        }
    ],
    "PARPORT_AX88796": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PARPORT )",
            "restrict": ""
        }
    ],
    "PARPORT_1284": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PARPORT )",
            "restrict": ""
        }
    ],
    "PARPORT_NOT_PC": [
        {
            "type": "bool",
            "rev_select": "PARPORT_IP32 || PARPORT_AMIGA || PARPORT_MFC3 || PARPORT_ATARI || PARPORT_GSC || PARPORT_SUNBPP || PARPORT_AX88796 || USB_USS720 || USB_SERIAL_MOS7715_PARPORT",
            "dep": "( PARPORT )",
            "restrict": ""
        }
    ],
    "PNP": [
        {
            "type": "bool",
            "rev_select": "ACPI",
            "dep": "(HAS_IOMEM) && (ISA || ACPI)",
            "restrict": ""
        }
    ],
    "PNP_DEBUG_MESSAGES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PNP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ISAPNP": [
        {
            "type": "bool",
            "rev_select": "SND_AD1816A || SND_ALS100 || SND_AZT2320",
            "dep": "( PNP ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PNPBIOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PNP ) && (ISA && X86_32)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PNPBIOS_PROC_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PNP ) && (PNPBIOS && PROC_FS)",
            "restrict": ""
        }
    ],
    "PNPACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PNP )",
            "restrict": "( ( PNP && ACPI ) )[!(y)]"
        }
    ],
    "BLK_DEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BLOCK)",
            "restrict": ""
        }
    ],
    "BLK_DEV_NULL_BLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV )",
            "restrict": ""
        }
    ],
    "BLK_DEV_NULL_BLK_FAULT_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_NULL_BLK && FAULT_INJECTION)",
            "restrict": ""
        }
    ],
    "BLK_DEV_FD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (ARCH_MAY_HAVE_PC_FDC)",
            "restrict": ""
        }
    ],
    "BLK_DEV_FD_RAWCMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_FD)",
            "restrict": ""
        }
    ],
    "AMIGA_FLOPPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (AMIGA)",
            "restrict": ""
        }
    ],
    "ATARI_FLOPPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (ATARI)",
            "restrict": ""
        }
    ],
    "MAC_FLOPPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PPC_PMAC && ! PPC_PMAC64)",
            "restrict": ""
        }
    ],
    "BLK_DEV_SWIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (M68K && MAC && ! HIGHMEM)",
            "restrict": ""
        }
    ],
    "AMIGA_Z2RAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "N64CART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (MACH_NINTENDO64)",
            "restrict": ""
        }
    ],
    "CDROM": [
        {
            "type": "tristate",
            "rev_select": "GDROM || PARIDE_PCD || CDROM_PKTCDVD || BLK_DEV_SR",
            "dep": "( BLK_DEV )",
            "restrict": ""
        }
    ],
    "GDROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (SH_DREAMCAST)",
            "restrict": ""
        }
    ],
    "PARIDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARPORT_PC)",
            "restrict": ""
        }
    ],
    "PARIDE_PD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_PCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_PF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_PT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_PG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_ATEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_BPCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_BPCK6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE && ! 64BIT)",
            "restrict": ""
        }
    ],
    "PARIDE_COMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_DSTR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_FIT2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_FIT3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_EPAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_EPATC8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE_EPAT)",
            "restrict": ""
        }
    ],
    "PARIDE_EPIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_FRIQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_FRPW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_KBIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_KTTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_ON20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "PARIDE_ON26": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PARIDE)",
            "restrict": ""
        }
    ],
    "BLK_DEV_PCIESSD_MTIP32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PCI)",
            "restrict": ""
        }
    ],
    "ZRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLOCK && SYSFS && MMU) && (CRYPTO_LZO || CRYPTO_ZSTD || CRYPTO_LZ4 || CRYPTO_LZ4HC || CRYPTO_842)",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP_LZORLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && ( ( ZRAM ) ) && (CRYPTO_LZO) && ( ZRAM_DEF_COMP_LZORLE &&  !ZRAM_DEF_COMP_ZSTD &&  !ZRAM_DEF_COMP_LZ4 &&  !ZRAM_DEF_COMP_LZO &&  !ZRAM_DEF_COMP_LZ4HC &&  !ZRAM_DEF_COMP_842 )",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && ( ( ZRAM ) ) && (CRYPTO_ZSTD) && ( ZRAM_DEF_COMP_ZSTD &&  !ZRAM_DEF_COMP_LZORLE &&  !ZRAM_DEF_COMP_LZ4 &&  !ZRAM_DEF_COMP_LZO &&  !ZRAM_DEF_COMP_LZ4HC &&  !ZRAM_DEF_COMP_842 )",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && ( ( ZRAM ) ) && (CRYPTO_LZ4) && ( ZRAM_DEF_COMP_LZ4 &&  !ZRAM_DEF_COMP_LZORLE &&  !ZRAM_DEF_COMP_ZSTD &&  !ZRAM_DEF_COMP_LZO &&  !ZRAM_DEF_COMP_LZ4HC &&  !ZRAM_DEF_COMP_842 )",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && ( ( ZRAM ) ) && (CRYPTO_LZO) && ( ZRAM_DEF_COMP_LZO &&  !ZRAM_DEF_COMP_LZORLE &&  !ZRAM_DEF_COMP_ZSTD &&  !ZRAM_DEF_COMP_LZ4 &&  !ZRAM_DEF_COMP_LZ4HC &&  !ZRAM_DEF_COMP_842 )",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP_LZ4HC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && ( ( ZRAM ) ) && (CRYPTO_LZ4HC) && ( ZRAM_DEF_COMP_LZ4HC &&  !ZRAM_DEF_COMP_LZORLE &&  !ZRAM_DEF_COMP_ZSTD &&  !ZRAM_DEF_COMP_LZ4 &&  !ZRAM_DEF_COMP_LZO &&  !ZRAM_DEF_COMP_842 )",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP_842": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && ( ( ZRAM ) ) && (CRYPTO_842) && ( ZRAM_DEF_COMP_842 &&  !ZRAM_DEF_COMP_LZORLE &&  !ZRAM_DEF_COMP_ZSTD &&  !ZRAM_DEF_COMP_LZ4 &&  !ZRAM_DEF_COMP_LZO &&  !ZRAM_DEF_COMP_LZ4HC )",
            "restrict": ""
        }
    ],
    "ZRAM_DEF_COMP": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( BLK_DEV )",
            "restrict": "( \"lzo-rle\" )[!(y) && (ZRAM_DEF_COMP_LZORLE)] || ( \"zstd\" )[!(y) && (ZRAM_DEF_COMP_ZSTD)] || ( \"lz4\" )[!(y) && (ZRAM_DEF_COMP_LZ4)] || ( \"lzo\" )[!(y) && (ZRAM_DEF_COMP_LZO)] || ( \"lz4hc\" )[!(y) && (ZRAM_DEF_COMP_LZ4HC)] || ( 842 )[!(y) && (ZRAM_DEF_COMP_842)]"
        }
    ],
    "ZRAM_WRITEBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (ZRAM)",
            "restrict": ""
        }
    ],
    "ZRAM_MEMORY_TRACKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (ZRAM && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "BLK_DEV_UBD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (UML)",
            "restrict": ""
        }
    ],
    "BLK_DEV_UBD_SYNC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_UBD)",
            "restrict": ""
        }
    ],
    "BLK_DEV_COW_COMMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV )",
            "restrict": "( BLK_DEV_UBD )[!(y)]"
        }
    ],
    "BLK_DEV_LOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV )",
            "restrict": ""
        }
    ],
    "BLK_DEV_LOOP_MIN_COUNT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_LOOP)",
            "restrict": "( 8 )[!(y)]"
        }
    ],
    "BLK_DEV_DRBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (PROC_FS && INET)",
            "restrict": ""
        }
    ],
    "DRBD_FAULT_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_DRBD)",
            "restrict": ""
        }
    ],
    "BLK_DEV_NBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (NET)",
            "restrict": ""
        }
    ],
    "BLK_DEV_RAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV )",
            "restrict": ""
        }
    ],
    "BLK_DEV_RAM_COUNT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_RAM)",
            "restrict": "( 16 )[!(y)]"
        }
    ],
    "BLK_DEV_RAM_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (BLK_DEV_RAM)",
            "restrict": "( 4096 )[!(y)]"
        }
    ],
    "CDROM_PKTCDVD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (! UML) && (SCSI)",
            "restrict": ""
        }
    ],
    "CDROM_PKTCDVD_BUFFERS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (CDROM_PKTCDVD)",
            "restrict": "( 8 )[!(y)]"
        }
    ],
    "CDROM_PKTCDVD_WCACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (CDROM_PKTCDVD)",
            "restrict": ""
        }
    ],
    "ATA_OVER_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (NET)",
            "restrict": ""
        }
    ],
    "SUNVDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (SUN_LDOMS)",
            "restrict": ""
        }
    ],
    "DCSSBLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (S390 && BLOCK)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DASD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (CCW && BLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DASD_PROFILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (DASD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DASD_ECKD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (DASD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DASD_FBA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (DASD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DASD_DIAG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (DASD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DASD_EER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (DASD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCM_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (S390 && BLOCK && EADM_SCH && SCM_BUS)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_BLKDEV_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_BLKDEV_BACKEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (XEN_BACKEND)",
            "restrict": ""
        }
    ],
    "VIRTIO_BLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "BLK_DEV_RBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (INET && BLOCK)",
            "restrict": ""
        }
    ],
    "BLK_DEV_UBLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV )",
            "restrict": ""
        }
    ],
    "BLK_DEV_RNBD": [
        {
            "type": "bool",
            "rev_select": "BLK_DEV_RNBD_CLIENT || BLK_DEV_RNBD_SERVER",
            "dep": "( BLK_DEV )",
            "restrict": ""
        }
    ],
    "BLK_DEV_RNBD_CLIENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (INFINIBAND_RTRS_CLIENT)",
            "restrict": ""
        }
    ],
    "BLK_DEV_RNBD_SERVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLK_DEV ) && (INFINIBAND_RTRS_SERVER)",
            "restrict": ""
        }
    ],
    "NVME_COMMON": [
        {
            "type": "tristate",
            "rev_select": "NVME_AUTH || NVME_TARGET_AUTH",
            "dep": "",
            "restrict": ""
        }
    ],
    "NVME_CORE": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_NVME || NVME_FABRICS || NVME_APPLE",
            "dep": "",
            "restrict": ""
        }
    ],
    "BLK_DEV_NVME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && BLOCK)",
            "restrict": ""
        }
    ],
    "NVME_MULTIPATH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NVME_CORE)",
            "restrict": ""
        }
    ],
    "NVME_VERBOSE_ERRORS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NVME_CORE)",
            "restrict": ""
        }
    ],
    "NVME_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( NVME_CORE = y && HWMON = y ) || ( NVME_CORE = m && HWMON ))",
            "restrict": ""
        }
    ],
    "NVME_FABRICS": [
        {
            "type": "tristate",
            "rev_select": "NVME_RDMA || NVME_FC || NVME_TCP || NVME_TARGET_LOOP || NVME_TARGET_FCLOOP",
            "dep": "",
            "restrict": ""
        }
    ],
    "NVME_RDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INFINIBAND && INFINIBAND_ADDR_TRANS && BLOCK)",
            "restrict": ""
        }
    ],
    "NVME_FC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(BLOCK) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "NVME_TCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INET) && (BLOCK)",
            "restrict": ""
        }
    ],
    "NVME_AUTH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NVME_CORE)",
            "restrict": ""
        }
    ],
    "NVME_APPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && BLOCK) && (APPLE_RTKIT && APPLE_SART) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NVME_TARGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(BLOCK) && (CONFIGFS_FS)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_PASSTHRU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NVME_TARGET) && (NVME_CORE = y || NVME_CORE = NVME_TARGET)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_LOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NVME_TARGET)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_RDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INFINIBAND && INFINIBAND_ADDR_TRANS) && (NVME_TARGET)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_FC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NVME_TARGET) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_FCLOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NVME_TARGET) && (NVME_FC) && (NVME_TARGET_FC)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_TCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INET) && (NVME_TARGET)",
            "restrict": ""
        }
    ],
    "NVME_TARGET_AUTH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NVME_TARGET)",
            "restrict": ""
        }
    ],
    "SENSORS_LIS3LV02D": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_LIS3_SPI || SENSORS_LIS3_I2C || HP_ACCEL",
            "dep": "(INPUT)",
            "restrict": ""
        }
    ],
    "AD525X_DPOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( I2C || SPI ) && SYSFS)",
            "restrict": ""
        }
    ],
    "AD525X_DPOT_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(AD525X_DPOT && I2C)",
            "restrict": ""
        }
    ],
    "AD525X_DPOT_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(AD525X_DPOT && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "DUMMY_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IBM_ASM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86 && PCI && INPUT) && (SERIAL_8250 || SERIAL_8250 = n)",
            "restrict": ""
        }
    ],
    "IBMVMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "PHANTOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "TIFM_CORE": [
        {
            "type": "tristate",
            "rev_select": "MMC_TIFM_SD || MEMSTICK_TIFM_MS",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "TIFM_7XX1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && TIFM_CORE)",
            "restrict": "( TIFM_CORE )[!(y)]"
        }
    ],
    "ICS932S401": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "ATMEL_SSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "ENCLOSURE_SERVICES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SGI_XP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NET) && (( IA64_SGI_UV || X86_UV ) && SMP) && (X86_64 || BROKEN)",
            "restrict": ""
        }
    ],
    "CS5535_MFGPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MFD_CS5535)",
            "restrict": ""
        }
    ],
    "CS5535_MFGPT_DEFAULT_IRQ": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(CS5535_MFGPT)",
            "restrict": "( 7 )[!(y)]"
        }
    ],
    "CS5535_CLOCK_EVENT_SRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(GENERIC_CLOCKEVENTS && CS5535_MFGPT)",
            "restrict": ""
        }
    ],
    "GEHC_ACHC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPI && SYSFS) && (SOC_IMX53 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HI6421V600_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (SPMI) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HP_ILO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "QCOM_COINCELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MFD_SPMI_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_FASTRPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (RPMSG)",
            "restrict": ""
        }
    ],
    "SGI_GRU": [
        {
            "type": "tristate",
            "rev_select": "SGI_XP[X86_64 && SMP]",
            "dep": "(X86_UV && SMP)",
            "restrict": ""
        }
    ],
    "SGI_GRU_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SGI_GRU)",
            "restrict": ""
        }
    ],
    "APDS9802ALS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "ISL29003": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && SYSFS)",
            "restrict": ""
        }
    ],
    "ISL29020": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TSL2550": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && SYSFS)",
            "restrict": ""
        }
    ],
    "SENSORS_BH1770": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_APDS990X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "HMC6352": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "DS1682": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "VMWARE_BALLOON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(VMWARE_VMCI && X86 && HYPERVISOR_GUEST)",
            "restrict": ""
        }
    ],
    "PCH_PHUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && ( X86_32 || MIPS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "LATTICE_ECP3_CONFIG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPI && SYSFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SRAM": [
        {
            "type": "bool",
            "rev_select": "VIDEO_CODA || VIDEO_TEGRA_VDE || CRYPTO_DEV_MARVELL_CESA",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SRAM_EXEC": [
        {
            "type": "bool",
            "rev_select": "SRAM[ARM]",
            "dep": "",
            "restrict": ""
        }
    ],
    "DW_XDATA_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "PCI_ENDPOINT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "XILINX_SDFEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MISC_RTSX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": "( MISC_RTSX_PCI || MISC_RTSX_USB )[!(y)]"
        }
    ],
    "HISI_HIKEY_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( OF && GPIOLIB ) || COMPILE_TEST) && (USB_ROLE_SWITCH)",
            "restrict": ""
        }
    ],
    "OPEN_DICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF_RESERVED_MEM)",
            "restrict": ""
        }
    ],
    "VCPU_STALL_DETECTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "C2PORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "C2PORT_DURAMAR_2150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( C2PORT ) && (X86)",
            "restrict": ""
        }
    ],
    "EEPROM_AT24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && SYSFS)",
            "restrict": ""
        }
    ],
    "EEPROM_AT25": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPI && SYSFS)",
            "restrict": ""
        }
    ],
    "EEPROM_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && SYSFS)",
            "restrict": ""
        }
    ],
    "EEPROM_MAX6875": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "EEPROM_93CX6": [
        {
            "type": "tristate",
            "rev_select": "SCSI_WD719X || KS8851 || KS8851_MLL || AX88796_93CX6 || ADM8211 || RT2400PCI || RT2500PCI || RT61PCI || RT2800PCI || RTL8180 || RTL8187",
            "dep": "",
            "restrict": ""
        }
    ],
    "EEPROM_93XX46": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPI && SYSFS)",
            "restrict": ""
        }
    ],
    "EEPROM_DIGSY_MTC_CFG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GPIO_MPC5200 && SPI_GPIO)",
            "restrict": ""
        }
    ],
    "EEPROM_IDT_89HPESX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && SYSFS)",
            "restrict": ""
        }
    ],
    "EEPROM_EE1004": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && SYSFS)",
            "restrict": ""
        }
    ],
    "CB710_CORE": [
        {
            "type": "tristate",
            "rev_select": "MMC_CB710",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "CB710_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CB710_CORE != n)",
            "restrict": ""
        }
    ],
    "CB710_DEBUG_ASSUMPTIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CB710_CORE != n)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TI_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NET && TTY) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_LIS3_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(! ACPI && SPI_MASTER && INPUT)",
            "restrict": ""
        }
    ],
    "SENSORS_LIS3_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C && INPUT)",
            "restrict": ""
        }
    ],
    "ALTERA_STAPL": [
        {
            "type": "tristate",
            "rev_select": "MEDIA_ALTERA_CI",
            "dep": "(I2C)",
            "restrict": ""
        }
    ],
    "INTEL_MEI": [
        {
            "type": "tristate",
            "rev_select": "INTEL_MEI_ME || INTEL_MEI_TXE",
            "dep": "(X86 && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_MEI_ME": [
        {
            "type": "tristate",
            "rev_select": "INTEL_MEI_HDCP || INTEL_MEI_PXP",
            "dep": "(X86 && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_MEI_TXE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86 && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_MEI_GSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INTEL_MEI) && (INTEL_MEI_ME) && (X86 && PCI) && (DRM_I915)",
            "restrict": ""
        }
    ],
    "INTEL_MEI_HDCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DRM_I915)",
            "restrict": ""
        }
    ],
    "INTEL_MEI_PXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DRM_I915)",
            "restrict": ""
        }
    ],
    "VMWARE_VMCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( X86 || ARM64 ) && ! CPU_BIG_ENDIAN && PCI)",
            "restrict": ""
        }
    ],
    "GENWQE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && 64BIT)",
            "restrict": ""
        }
    ],
    "GENWQE_PLATFORM_ERROR_RECOVERY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(GENWQE)",
            "restrict": "( 1 )[!(y) && (PPC64)] || ( 0 )[!(y)]"
        }
    ],
    "ECHO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CXL_BASE": [
        {
            "type": "bool",
            "rev_select": "CXL",
            "dep": "",
            "restrict": ""
        }
    ],
    "CXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PPC_POWERNV && PCI_MSI && EEH)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "OCXL_BASE": [
        {
            "type": "bool",
            "rev_select": "OCXL",
            "dep": "",
            "restrict": ""
        }
    ],
    "OCXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HOTPLUG_PCI_POWERNV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "BCM_VK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI_MSI)",
            "restrict": ""
        }
    ],
    "BCM_VK_TTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TTY) && (BCM_VK)",
            "restrict": ""
        }
    ],
    "MISC_ALCOR_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "MISC_RTSX_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "MISC_RTSX_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB)",
            "restrict": ""
        }
    ],
    "HABANA_AI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "UACCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(IOMMU_API)",
            "restrict": ""
        }
    ],
    "PVPANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PVPANIC_MMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && ( ACPI || OF ) && PVPANIC)",
            "restrict": ""
        }
    ],
    "PVPANIC_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && PVPANIC)",
            "restrict": ""
        }
    ],
    "SCSI_MOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (SCSI = n || SCSI = y)] || ( m )[!(y) && (SCSI = m)]"
        }
    ],
    "RAID_ATTRS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_MPT3SAS || SCSI_SMARTPQI || SCSI_MYRB || SCSI_MYRS",
            "dep": "(BLOCK) && (SCSI_MOD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SCSI || TARGET_CORE",
            "dep": "",
            "restrict": ""
        }
    ],
    "SCSI": [
        {
            "type": "tristate",
            "rev_select": "ATA",
            "dep": "(BLOCK)",
            "restrict": ""
        }
    ],
    "SCSI_DMA": [
        {
            "type": "bool",
            "rev_select": "SCSI[HAS_DMA]",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_ESP_PIO": [
        {
            "type": "bool",
            "rev_select": "SCSI_ZORRO_ESP || SCSI_MAC_ESP",
            "dep": "",
            "restrict": ""
        }
    ],
    "SCSI_NETLINK": [
        {
            "type": "bool",
            "rev_select": "SCSI_FC_ATTRS",
            "dep": "(NET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_PROC_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI && PROC_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BLK_DEV_SD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "CHR_DEV_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "BLK_DEV_SR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI && BLK_DEV)",
            "restrict": ""
        }
    ],
    "CHR_DEV_SG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "BLK_DEV_BSG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CHR_DEV_SCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ENCLOSURE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI && ENCLOSURE_SERVICES) && (m || SCSI_SAS_ATTRS != m)",
            "restrict": ""
        }
    ],
    "SCSI_CONSTANTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_LOGGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SCAN_ASYNC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SPI_ATTRS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_AHA152X || SCSI_AIC7XXX || SCSI_AIC79XX || SCSI_DMX3191D || SCSI_GENERIC_NCR5380 || SCSI_LASI700 || SCSI_SNI_53C710 || SCSI_SYM53C8XX_2 || SCSI_ZALON || SCSI_SIM710 || SCSI_DC395x || SCSI_AM53C974 || SCSI_ACORNSCSI_3 || SCSI_CUMANA_1 || SCSI_OAK1 || JAZZ_ESP || SCSI_A4000T || SCSI_ZORRO7XX || SCSI_ZORRO_ESP || ATARI_SCSI || MAC_SCSI || SCSI_MAC_ESP || MVME147_SCSI || MVME16x_SCSI || BVME6000_SCSI || SUN3_SCSI || SUN3X_ESP || SCSI_SUNESP || PCMCIA_AHA152X || FUSION_SPI",
            "dep": "( ( SCSI ) ) && (SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_FC_ATTRS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( SCSI ) ) && (SCSI && NET)",
            "restrict": ""
        }
    ],
    "SCSI_ISCSI_ATTRS": [
        {
            "type": "tristate",
            "rev_select": "ISCSI_TCP || SCSI_CXGB3_ISCSI || SCSI_CXGB4_ISCSI || SCSI_BNX2_ISCSI || BE2ISCSI || SCSI_QLA_ISCSI || QEDI || INFINIBAND_ISER",
            "dep": "( ( SCSI ) ) && (SCSI && NET)",
            "restrict": ""
        }
    ],
    "SCSI_SAS_ATTRS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_SAS_LIBSAS || SCSI_HPSA || SCSI_MPT3SAS || SCSI_SMARTPQI || FUSION_SAS",
            "dep": "( ( SCSI ) ) && (SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SAS_LIBSAS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_AIC94XX || SCSI_HISI_SAS || SCSI_MVSAS || SCSI_ISCI || SCSI_PM8001",
            "dep": "( ( SCSI ) ) && (SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SAS_ATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SCSI ) ) && (SCSI_SAS_LIBSAS) && (ATA = y || ATA = SCSI_SAS_LIBSAS)",
            "restrict": ""
        }
    ],
    "SCSI_SAS_HOST_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SCSI ) ) && (SCSI_SAS_LIBSAS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_SRP_ATTRS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_IBMVSCSI || INFINIBAND_SRP",
            "dep": "( ( SCSI ) ) && (SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_LOWLEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI != n)",
            "restrict": ""
        }
    ],
    "ISCSI_TCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && INET)",
            "restrict": ""
        }
    ],
    "ISCSI_BOOT_SYSFS": [
        {
            "type": "tristate",
            "rev_select": "ISCSI_IBFT || BE2ISCSI || SCSI_QLA_ISCSI || QEDI",
            "dep": "( SCSI_LOWLEVEL && SCSI )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_CXGB3_ISCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && INET && ( IPV6 || IPV6 = n ))",
            "restrict": ""
        }
    ],
    "SCSI_CXGB4_ISCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && INET && ( IPV6 || IPV6 = n )) && (PTP_1588_CLOCK_OPTIONAL) && (THERMAL || ! THERMAL) && (ETHERNET) && (TLS || TLS = n)",
            "restrict": ""
        }
    ],
    "SCSI_BNX2_ISCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (NET) && (PCI) && (( IPV6 || IPV6 = n )) && (MMU)",
            "restrict": ""
        }
    ],
    "SCSI_BNX2X_FCOE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI) && (( IPV6 || IPV6 = n )) && (LIBFC) && (LIBFCOE) && (MMU)",
            "restrict": ""
        }
    ],
    "BE2ISCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && NET)",
            "restrict": ""
        }
    ],
    "CXLFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && ( CXL || OCXL ) && EEH)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SGIWD93_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SGI_HAS_WD93 && SCSI)",
            "restrict": ""
        }
    ],
    "BLK_DEV_3W_XXXX_RAID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_HPSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_3W_9XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_3W_SAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ACARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_AHA152X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ISA && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_AHA1542": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ISA && SCSI && ISA_DMA_API)",
            "restrict": ""
        }
    ],
    "SCSI_AHA1740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (EISA && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_AACRAID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && PCI)",
            "restrict": ""
        }
    ],
    "SCSI_AIC7XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (( PCI || EISA ) && SCSI)",
            "restrict": ""
        }
    ],
    "AIC7XXX_CMDS_PER_DEVICE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC7XXX)",
            "restrict": "( 32 )[!(y)]"
        }
    ],
    "AIC7XXX_RESET_DELAY_MS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC7XXX)",
            "restrict": "( 5000 )[!(y)]"
        }
    ],
    "AIC7XXX_BUILD_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC7XXX && ! PREVENT_FIRMWARE_BUILD)",
            "restrict": ""
        }
    ],
    "AIC7XXX_DEBUG_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC7XXX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AIC7XXX_DEBUG_MASK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC7XXX)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "AIC7XXX_REG_PRETTY_PRINT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC7XXX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_AIC79XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "AIC79XX_CMDS_PER_DEVICE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC79XX)",
            "restrict": "( 32 )[!(y)]"
        }
    ],
    "AIC79XX_RESET_DELAY_MS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC79XX)",
            "restrict": "( 5000 )[!(y)]"
        }
    ],
    "AIC79XX_BUILD_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC79XX && ! PREVENT_FIRMWARE_BUILD)",
            "restrict": ""
        }
    ],
    "AIC79XX_DEBUG_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC79XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AIC79XX_DEBUG_MASK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC79XX)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "AIC79XX_REG_PRETTY_PRINT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC79XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_AIC94XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI)",
            "restrict": ""
        }
    ],
    "AIC94XX_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_AIC94XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_HISI_SAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (HAS_IOMEM) && (ARM64 || COMPILE_TEST) && (ATA)",
            "restrict": ""
        }
    ],
    "SCSI_HISI_SAS_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_HISI_SAS) && (PCI) && (ACPI)",
            "restrict": ""
        }
    ],
    "SCSI_HISI_SAS_DEBUGFS_DEFAULT_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_HISI_SAS)",
            "restrict": ""
        }
    ],
    "SCSI_MVSAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI)",
            "restrict": ""
        }
    ],
    "SCSI_MVSAS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_MVSAS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_MVSAS_TASKLET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_MVSAS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_MVUMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && PCI)",
            "restrict": ""
        }
    ],
    "SCSI_ADVANSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI) && (ISA || EISA || PCI) && (ISA_DMA_API || ! ISA)",
            "restrict": ""
        }
    ],
    "SCSI_ARCMSR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ESAS2R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "MEGARAID_NEWGEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "MEGARAID_MM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && MEGARAID_NEWGEN)",
            "restrict": ""
        }
    ],
    "MEGARAID_MAILBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && MEGARAID_MM)",
            "restrict": ""
        }
    ],
    "MEGARAID_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "MEGARAID_SAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_MPT3SAS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_MPT2SAS",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_MPT2SAS_MAX_SGE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && SCSI_MPT3SAS)",
            "restrict": "( 16 256 ) || ( 128 )[!(y)]"
        }
    ],
    "SCSI_MPT3SAS_MAX_SGE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && SCSI_MPT3SAS)",
            "restrict": "( 16 256 ) || ( 128 )[!(y)]"
        }
    ],
    "SCSI_MPT2SAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_MPI3MR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SMARTPQI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && ! S390)",
            "restrict": ""
        }
    ],
    "SCSI_HPTIOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && PCI)",
            "restrict": ""
        }
    ],
    "SCSI_BUSLOGIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_FLASHPOINT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_BUSLOGIC && PCI)",
            "restrict": ""
        }
    ],
    "SCSI_MYRB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI)",
            "restrict": ""
        }
    ],
    "SCSI_MYRS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI) && (! CPU_BIG_ENDIAN || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VMWARE_PVSCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && X86)",
            "restrict": ""
        }
    ],
    "XEN_SCSI_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && XEN)",
            "restrict": ""
        }
    ],
    "HYPERV_STORAGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && HYPERV) && (m || SCSI_FC_ATTRS != m)",
            "restrict": "( HYPERV )[!(y)]"
        }
    ],
    "LIBFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "LIBFCOE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (LIBFC)",
            "restrict": ""
        }
    ],
    "FCOE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI) && (LIBFCOE)",
            "restrict": ""
        }
    ],
    "FCOE_FNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && X86) && (LIBFCOE)",
            "restrict": ""
        }
    ],
    "SCSI_SNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SNIC_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_SNIC && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "SCSI_DMX3191D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_FDOMAIN": [
        {
            "type": "tristate",
            "rev_select": "SCSI_FDOMAIN_PCI || SCSI_FDOMAIN_ISA || PCMCIA_FDOMAIN",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_FDOMAIN_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_FDOMAIN_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ISA && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ISCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (X86)",
            "restrict": ""
        }
    ],
    "SCSI_GENERIC_NCR5380": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ISA && SCSI && HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "SCSI_IPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_IBMVSCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "SCSI_IBMVSCSIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PPC_PSERIES && TARGET_CORE && SCSI && PCI)",
            "restrict": ""
        }
    ],
    "SCSI_IBMVFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PPC_PSERIES && SCSI) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "SCSI_IBMVFC_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_IBMVFC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_INITIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_INIA100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_PPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && PARPORT_PC)",
            "restrict": ""
        }
    ],
    "SCSI_IMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI && PARPORT_PC)",
            "restrict": ""
        }
    ],
    "SCSI_IZIP_EPP16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_PPA || SCSI_IMM)",
            "restrict": ""
        }
    ],
    "SCSI_IZIP_SLOW_CTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_PPA || SCSI_IMM)",
            "restrict": ""
        }
    ],
    "SCSI_LASI700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (GSC && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SNI_53C710": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SNI_RM && SCSI)",
            "restrict": ""
        }
    ],
    "53C700_LE_ON_BE": [
        {
            "type": "bool",
            "rev_select": "SCSI_SNI_53C710",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_LASI700 || SCSI_SNI_53C710)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_STEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "53C700_BE_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_A4000T || SCSI_ZORRO7XX || MVME16x_SCSI || BVME6000_SCSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_SYM53C8XX_2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_SYM53C8XX_DMA_ADDRESSING_MODE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_SYM53C8XX_2)",
            "restrict": "( 1 )[!(y)]"
        }
    ],
    "SCSI_SYM53C8XX_DEFAULT_TAGS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_SYM53C8XX_2)",
            "restrict": "( 16 )[!(y)]"
        }
    ],
    "SCSI_SYM53C8XX_MAX_TAGS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_SYM53C8XX_2)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "SCSI_SYM53C8XX_MMIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_SYM53C8XX_2)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_IPR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && ATA)",
            "restrict": ""
        }
    ],
    "SCSI_IPR_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_IPR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_IPR_DUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_IPR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCSI_ZALON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (GSC && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_NCR53C8XX_DEFAULT_TAGS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_ZALON)",
            "restrict": "( 8 )[!(y)]"
        }
    ],
    "SCSI_NCR53C8XX_MAX_TAGS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_ZALON)",
            "restrict": "( 32 )[!(y)]"
        }
    ],
    "SCSI_NCR53C8XX_SYNC": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_ZALON)",
            "restrict": "( 20 )[!(y)]"
        }
    ],
    "SCSI_NCR53C8XX_NO_DISCONNECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_ZALON && SCSI_NCR53C8XX_DEFAULT_TAGS = 0)",
            "restrict": ""
        }
    ],
    "SCSI_QLOGIC_FAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ISA && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_QLOGIC_1280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_QLOGICPTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SBUS && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_QLA_FC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (SCSI_FC_ATTRS) && (NVME_FC || ! NVME_FC)",
            "restrict": ""
        }
    ],
    "TCM_QLA2XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_QLA_FC && TARGET_CORE) && (LIBFC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TCM_QLA2XXX_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && ( TCM_QLA2XXX )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCSI_QLA_ISCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && NET)",
            "restrict": ""
        }
    ],
    "QEDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && UIO) && (QED)",
            "restrict": ""
        }
    ],
    "QEDF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (QED) && (LIBFC) && (LIBFCOE)",
            "restrict": ""
        }
    ],
    "SCSI_LPFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (CPU_FREQ) && (SCSI_FC_ATTRS) && (NVME_TARGET_FC || NVME_TARGET_FC = n) && (NVME_FC || NVME_FC = n)",
            "restrict": ""
        }
    ],
    "SCSI_LPFC_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_LPFC && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "SCSI_EFCT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (TARGET_CORE) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "SCSI_SIM710": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (EISA && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_DC395x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_AM53C974": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_NSP32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && ! 64BIT)",
            "restrict": ""
        }
    ],
    "SCSI_WD719X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_DEBUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_MESH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PPC32 && PPC_PMAC && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_MESH_SYNC_RATE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_MESH)",
            "restrict": "( 5 )[!(y)]"
        }
    ],
    "SCSI_MESH_RESET_DELAY_MS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_MESH)",
            "restrict": "( 4000 )[!(y)]"
        }
    ],
    "SCSI_MAC53C94": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PPC32 && PPC_PMAC && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ACORNSCSI_3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ACORNSCSI_SYNC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI_ACORNSCSI_3)",
            "restrict": ""
        }
    ],
    "SCSI_ARXESCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_CUMANA_2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_EESOXSCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_POWERTECSCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_CUMANA_1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_OAK1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ARCH_ACORN && SCSI)",
            "restrict": ""
        }
    ],
    "JAZZ_ESP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (MACH_JAZZ && SCSI)",
            "restrict": ""
        }
    ],
    "A3000_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (AMIGA && SCSI)",
            "restrict": ""
        }
    ],
    "A2091_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ZORRO && SCSI)",
            "restrict": ""
        }
    ],
    "GVP11_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ZORRO && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_A4000T": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (AMIGA && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ZORRO7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ZORRO && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_ZORRO_ESP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ZORRO && SCSI)",
            "restrict": ""
        }
    ],
    "ATARI_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (ATARI && SCSI)",
            "restrict": ""
        }
    ],
    "MAC_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (MAC && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_MAC_ESP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (MAC && SCSI)",
            "restrict": ""
        }
    ],
    "MVME147_SCSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (MVME147 && SCSI = y)",
            "restrict": ""
        }
    ],
    "MVME16x_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (MVME16x && SCSI)",
            "restrict": ""
        }
    ],
    "BVME6000_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (BVME6000 && SCSI)",
            "restrict": ""
        }
    ],
    "SUN3_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SUN3 && SCSI)",
            "restrict": ""
        }
    ],
    "SUN3X_ESP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SUN3X && SCSI = y)",
            "restrict": ""
        }
    ],
    "SCSI_SUNESP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SBUS && SCSI)",
            "restrict": ""
        }
    ],
    "ZFCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (S390 && QDIO && SCSI) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "SCSI_PMCRAID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI && NET)",
            "restrict": ""
        }
    ],
    "SCSI_PM8001": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_BFA_FC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "SCSI_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "SCSI_CHELSIO_FCOE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (PCI && SCSI) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "SCSI_LOWLEVEL_PCMCIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && (SCSI != n && PCMCIA != n)",
            "restrict": ""
        }
    ],
    "PCMCIA_AHA152X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && ( SCSI_LOWLEVEL_PCMCIA && SCSI && PCMCIA && m )",
            "restrict": ""
        }
    ],
    "PCMCIA_FDOMAIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && ( SCSI_LOWLEVEL_PCMCIA && SCSI && PCMCIA && m )",
            "restrict": ""
        }
    ],
    "PCMCIA_NINJA_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && ( SCSI_LOWLEVEL_PCMCIA && SCSI && PCMCIA && m ) && (! 64BIT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCMCIA_QLOGIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && ( SCSI_LOWLEVEL_PCMCIA && SCSI && PCMCIA && m )",
            "restrict": ""
        }
    ],
    "PCMCIA_SYM53C500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_LOWLEVEL && SCSI ) && ( SCSI_LOWLEVEL_PCMCIA && SCSI && PCMCIA && m )",
            "restrict": ""
        }
    ],
    "SCSI_DH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_DH_RDAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI_DH && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_DH_HP_SW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI_DH && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_DH_EMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI_DH && SCSI)",
            "restrict": ""
        }
    ],
    "SCSI_DH_ALUA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI_DH && SCSI)",
            "restrict": ""
        }
    ],
    "HAVE_PATA_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (BLOCK)",
            "restrict": ""
        }
    ],
    "ATA_NONSTANDARD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA )",
            "restrict": ""
        }
    ],
    "SATA_HOST": [
        {
            "type": "bool",
            "rev_select": "SCSI_SAS_ATA || SCSI_HISI_SAS || SCSI_IPR || SATA_AHCI || SATA_AHCI_PLATFORM || AHCI_BRCM || AHCI_DA850 || AHCI_DM816 || AHCI_ST || AHCI_IMX || AHCI_CEVA || AHCI_MTK || AHCI_MVEBU || AHCI_SUNXI || AHCI_TEGRA || AHCI_XGENE || AHCI_QORIQ || SATA_FSL || SATA_GEMINI || SATA_AHCI_SEATTLE || SATA_INIC162X || SATA_ACARD_AHCI || SATA_SIL24 || SATA_QSTOR || SATA_SX4 || ATA_PIIX || SATA_DWC || SATA_HIGHBANK || SATA_MV || SATA_NV || SATA_PROMISE || SATA_RCAR || SATA_SIL || SATA_SIS || SATA_SVW || SATA_ULI || SATA_VIA || SATA_VITESSE || ATA_GENERIC",
            "dep": "( ATA )",
            "restrict": ""
        }
    ],
    "PATA_TIMINGS": [
        {
            "type": "bool",
            "rev_select": "ATA_ACPI || PATA_OCTEON_CF || PATA_ALI || PATA_AMD || PATA_ATP867X || PATA_BK3710 || PATA_CMD64X || PATA_CYPRESS || PATA_EP93XX || PATA_ICSIDE || PATA_IMX || PATA_NS87415 || PATA_VIA || PATA_CMD640_PCI || PATA_NS87410 || PATA_SAMSUNG_CF || PATA_ACPI || PATA_LEGACY",
            "dep": "( ATA )",
            "restrict": ""
        }
    ],
    "ATA_VERBOSE_ERROR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATA_FORCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ATA_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA ) && (ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SATA_ZPODD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA ) && (ATA_ACPI && PM)",
            "restrict": ""
        }
    ],
    "SATA_PMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA ) && (SATA_HOST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SATA_AHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_MOBILE_LPM_POLICY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (SATA_AHCI)",
            "restrict": "( 0 4 ) || ( 0 )[!(y)]"
        }
    ],
    "SATA_AHCI_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA )",
            "restrict": ""
        }
    ],
    "AHCI_BRCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_BRCMSTB || BMIPS_GENERIC || ARCH_BCM_NSP || ARCH_BCMBCA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_DA850": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_DAVINCI_DA850 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_DM816": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_STI)",
            "restrict": ""
        }
    ],
    "AHCI_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (MFD_SYSCON && ( ARCH_MXC || COMPILE_TEST )) && (( HWMON && ( THERMAL || ! THERMAL_OF ) ) || ! HWMON)",
            "restrict": ""
        }
    ],
    "AHCI_CEVA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (OF)",
            "restrict": ""
        }
    ],
    "AHCI_MTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_MVEBU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (SATA_AHCI_PLATFORM && CAVIUM_OCTEON_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AHCI_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (PHY_XGENE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AHCI_QORIQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (OF)",
            "restrict": ""
        }
    ],
    "SATA_FSL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (FSL_SOC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SATA_GEMINI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_GEMINI || ( OF && COMPILE_TEST ))",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "SATA_AHCI_SEATTLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (ARCH_SEATTLE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SATA_INIC162X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_ACARD_AHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_SIL24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( HAS_DMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATA_SFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PDC_ADMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_OCTEON_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "SATA_QSTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_SX4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATA_BMDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (HAS_DMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATA_PIIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_DWC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (DMADEVICES)",
            "restrict": ""
        }
    ],
    "SATA_DWC_OLD_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (SATA_DWC)",
            "restrict": "( y )[!(y) && (460EX)]"
        }
    ],
    "SATA_HIGHBANK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_HIGHBANK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SATA_MV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI || ARCH_DOVE || ARCH_MV78XX0 || ARCH_MVEBU || ARCH_ORION5X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SATA_NV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_PROMISE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_RCAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SATA_SIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_SIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_SVW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_ULI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "SATA_VITESSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_ALI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_AMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_ARASAN_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_SPEAR13XX || COMPILE_TEST) && (DMADEVICES)",
            "restrict": ""
        }
    ],
    "PATA_ARTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_ATIIXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_ATP867X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_BK3710": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_DAVINCI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PATA_CMD64X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_CS5520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PATA_CS5530": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PATA_CS5535": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI && ( X86_32 || ( X86_64 && COMPILE_TEST ) ))",
            "restrict": ""
        }
    ],
    "PATA_CS5536": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI && ( X86_32 || MIPS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PATA_CYPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_EFAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_EP93XX)",
            "restrict": ""
        }
    ],
    "PATA_FTIDE010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (OF) && (ARM || COMPILE_TEST) && (SATA_GEMINI)",
            "restrict": ""
        }
    ],
    "PATA_HPT366": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_HPT37X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_HPT3X2N": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_HPT3X3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_HPT3X3_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PATA_HPT3X3)",
            "restrict": ""
        }
    ],
    "PATA_ICSIDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARM && ARCH_ACORN)",
            "restrict": ""
        }
    ],
    "PATA_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PATA_IT8213": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_IT821X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_JMICRON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_MACIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PPC_PMAC)",
            "restrict": ""
        }
    ],
    "PATA_MARVELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_MPC52xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PPC_MPC52xx && PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "PATA_NETCELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_NINJA32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_NS87415": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_OLDPIIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_OPTIDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_PDC2027X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_PDC_OLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_RADISYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_RDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_SC1200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PATA_SCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_SERVERWORKS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_SIL680": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_SIS": [
        {
            "type": "tristate",
            "rev_select": "SATA_SIS",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_TOSHIBA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_TRIFLEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_PXA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (ARCH_PXA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PATA_WINBOND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && ( ATA_BMDMA ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_CMD640_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_FALCON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (M68K && ( ATARI || Q40 ))",
            "restrict": ""
        }
    ],
    "PATA_GAYLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (M68K && AMIGA)",
            "restrict": ""
        }
    ],
    "PATA_BUDDHA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "PATA_ISAPNP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (ISAPNP)",
            "restrict": ""
        }
    ],
    "PATA_IXP4XX_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (ARCH_IXP4XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PATA_MPIIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_NS87410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_OPTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_PALMLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (MACH_PALMLD)",
            "restrict": ""
        }
    ],
    "PATA_PCMCIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "PATA_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (EXPERT || PPC || HAVE_PATA_PLATFORM)",
            "restrict": ""
        }
    ],
    "PATA_OF_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PATA_PLATFORM && OF)",
            "restrict": ""
        }
    ],
    "PATA_QDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (ISA)",
            "restrict": ""
        }
    ],
    "PATA_RB532": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (MIKROTIK_RB532)",
            "restrict": ""
        }
    ],
    "PATA_RZ1000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI)",
            "restrict": ""
        }
    ],
    "PATA_SAMSUNG_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (SAMSUNG_DEV_IDE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PATA_WINBOND_VLB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (ISA)",
            "restrict": ""
        }
    ],
    "PATA_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (ATA_ACPI && ATA_BMDMA && PCI)",
            "restrict": ""
        }
    ],
    "ATA_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ATA ) && ( ATA_SFF ) && (PCI && ATA_BMDMA)",
            "restrict": ""
        }
    ],
    "PATA_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "PATA_QDI || PATA_WINBOND_VLB",
            "dep": "( ATA ) && ( ATA_SFF ) && (( ISA || PCI ))",
            "restrict": ""
        }
    ],
    "MD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BLOCK)",
            "restrict": ""
        }
    ],
    "BLK_DEV_MD": [
        {
            "type": "tristate",
            "rev_select": "DM_RAID",
            "dep": "( MD )",
            "restrict": ""
        }
    ],
    "MD_AUTODETECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_MD = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MD_LINEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_RAID0": [
        {
            "type": "tristate",
            "rev_select": "DM_RAID",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_RAID1": [
        {
            "type": "tristate",
            "rev_select": "DM_RAID",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_RAID10": [
        {
            "type": "tristate",
            "rev_select": "DM_RAID",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_RAID456": [
        {
            "type": "tristate",
            "rev_select": "DM_RAID",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_MULTIPATH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_FAULTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_MD)",
            "restrict": ""
        }
    ],
    "MD_CLUSTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_MD) && (DLM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BCACHE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD )",
            "restrict": ""
        }
    ],
    "BCACHE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BCACHE)",
            "restrict": ""
        }
    ],
    "BCACHE_CLOSURES_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BCACHE)",
            "restrict": ""
        }
    ],
    "BCACHE_ASYNC_REGISTRATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BCACHE)",
            "restrict": ""
        }
    ],
    "BLK_DEV_DM_BUILTIN": [
        {
            "type": "bool",
            "rev_select": "BLK_DEV_DM",
            "dep": "( MD )",
            "restrict": ""
        }
    ],
    "BLK_DEV_DM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DAX || DAX = n)",
            "restrict": ""
        }
    ],
    "DM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_BUFIO": [
        {
            "type": "tristate",
            "rev_select": "DM_PERSISTENT_DATA || DM_SNAPSHOT || DM_EBS || DM_VERITY || DM_INTEGRITY",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_DEBUG_BLOCK_MANAGER_LOCKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (DM_BUFIO)",
            "restrict": ""
        }
    ],
    "DM_DEBUG_BLOCK_STACK_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (STACKTRACE_SUPPORT && DM_DEBUG_BLOCK_MANAGER_LOCKING)",
            "restrict": ""
        }
    ],
    "DM_BIO_PRISON": [
        {
            "type": "tristate",
            "rev_select": "DM_THIN_PROVISIONING || DM_CACHE || DM_ERA",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_PERSISTENT_DATA": [
        {
            "type": "tristate",
            "rev_select": "DM_THIN_PROVISIONING || DM_CACHE || DM_ERA || DM_CLONE",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_UNSTRIPED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_CRYPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM) && (( ENCRYPTED_KEYS || ENCRYPTED_KEYS = n )) && (( TRUSTED_KEYS || TRUSTED_KEYS = n ))",
            "restrict": ""
        }
    ],
    "DM_SNAPSHOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_THIN_PROVISIONING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_CACHE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DM_CACHE_SMQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DM_CACHE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DM_WRITECACHE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_EBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM && ! HIGHMEM)",
            "restrict": ""
        }
    ],
    "DM_ERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DM_CLONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DM_MIRROR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_LOG_USERSPACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DM_MIRROR && NET)",
            "restrict": ""
        }
    ],
    "DM_RAID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_ZERO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_MULTIPATH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM) && (! SCSI_DH || SCSI)",
            "restrict": ""
        }
    ],
    "DM_MULTIPATH_QL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DM_MULTIPATH)",
            "restrict": ""
        }
    ],
    "DM_MULTIPATH_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DM_MULTIPATH)",
            "restrict": ""
        }
    ],
    "DM_MULTIPATH_HST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DM_MULTIPATH)",
            "restrict": ""
        }
    ],
    "DM_MULTIPATH_IOA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (DM_MULTIPATH)",
            "restrict": ""
        }
    ],
    "DM_DELAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_DUST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM = y)",
            "restrict": ""
        }
    ],
    "DM_UEVENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_FLAKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_VERITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_VERITY_VERIFY_ROOTHASH_SIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (DM_VERITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (DM_VERITY_VERIFY_ROOTHASH_SIG) && (SECONDARY_TRUSTED_KEYRING)",
            "restrict": ""
        }
    ],
    "DM_VERITY_FEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MD ) && (DM_VERITY)",
            "restrict": ""
        }
    ],
    "DM_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_LOG_WRITES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_INTEGRITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM)",
            "restrict": ""
        }
    ],
    "DM_ZONED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MD ) && (BLK_DEV_DM) && (BLK_DEV_ZONED)",
            "restrict": ""
        }
    ],
    "DM_AUDIT": [
        {
            "type": "bool",
            "rev_select": "DM_INTEGRITY[AUDIT]",
            "dep": "( MD ) && (AUDIT)",
            "restrict": ""
        }
    ],
    "TARGET_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(BLOCK)",
            "restrict": ""
        }
    ],
    "TCM_IBLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE )",
            "restrict": ""
        }
    ],
    "TCM_FILEIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE )",
            "restrict": ""
        }
    ],
    "TCM_PSCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (SCSI)",
            "restrict": ""
        }
    ],
    "TCM_USER2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (UIO && NET)",
            "restrict": ""
        }
    ],
    "LOOPBACK_TARGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (SCSI)",
            "restrict": ""
        }
    ],
    "TCM_FC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (LIBFC)",
            "restrict": ""
        }
    ],
    "ISCSI_TARGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (INET)",
            "restrict": ""
        }
    ],
    "ISCSI_TARGET_CXGB4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (ISCSI_TARGET && CHELSIO_T4 && INET)",
            "restrict": ""
        }
    ],
    "SBP_TARGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TARGET_CORE ) && (FIREWIRE)",
            "restrict": ""
        }
    ],
    "FUSION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "FUSION_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FUSION ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "FUSION_FC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FUSION ) && (PCI && SCSI) && (SCSI_FC_ATTRS)",
            "restrict": ""
        }
    ],
    "FUSION_SAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FUSION ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "FUSION_MAX_SGE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( FUSION )",
            "restrict": "( 16 128 ) || ( 128 )[!(y)]"
        }
    ],
    "FUSION_CTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FUSION ) && (FUSION_SPI || FUSION_FC || FUSION_SAS)",
            "restrict": ""
        }
    ],
    "FUSION_LAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FUSION ) && (FUSION_FC && NET_FC)",
            "restrict": ""
        }
    ],
    "FUSION_LOGGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FUSION )",
            "restrict": ""
        }
    ],
    "FIREWIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCI || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "FIREWIRE_OHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCI || COMPILE_TEST ) ) && (PCI && FIREWIRE && MMU)",
            "restrict": ""
        }
    ],
    "FIREWIRE_SBP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCI || COMPILE_TEST ) ) && (FIREWIRE && SCSI)",
            "restrict": ""
        }
    ],
    "FIREWIRE_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCI || COMPILE_TEST ) ) && (FIREWIRE && INET)",
            "restrict": ""
        }
    ],
    "FIREWIRE_NOSY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCI || COMPILE_TEST ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "MACINTOSH_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PPC || MAC || X86)",
            "restrict": ""
        }
    ],
    "ADB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (MAC || ( PPC_PMAC && PPC32 ))",
            "restrict": ""
        }
    ],
    "ADB_MACII": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB && MAC)",
            "restrict": ""
        }
    ],
    "ADB_IOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB && MAC)",
            "restrict": ""
        }
    ],
    "ADB_CUDA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (( ADB || PPC_PMAC ) && ! PPC_PMAC64)",
            "restrict": ""
        }
    ],
    "ADB_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC || MAC)",
            "restrict": ""
        }
    ],
    "ADB_PMU_EVENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB_PMU && INPUT = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ADB_PMU_LED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC && ADB_PMU)",
            "restrict": ""
        }
    ],
    "ADB_PMU_LED_DISK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB_PMU_LED) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "PMAC_SMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC64)",
            "restrict": ""
        }
    ],
    "PMAC_APM_EMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB_PMU && PM && PPC32)",
            "restrict": ""
        }
    ],
    "PMAC_MEDIABAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC && PPC32 && BLOCK)",
            "restrict": ""
        }
    ],
    "PMAC_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC && ADB_PMU && FB = y && ( BROKEN || ! PPC64 ))",
            "restrict": ""
        }
    ],
    "PMAC_BACKLIGHT_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PMAC_BACKLIGHT && ( BROKEN || ! PPC64 ))",
            "restrict": ""
        }
    ],
    "ADB_MACIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB && PPC_CHRP && ! PPC_PMAC64)",
            "restrict": ""
        }
    ],
    "INPUT_ADBHID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB && INPUT = y)",
            "restrict": ""
        }
    ],
    "MAC_EMUMOUSEBTN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (SYSCTL && INPUT)",
            "restrict": ""
        }
    ],
    "THERM_WINDTUNNEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (I2C && I2C_POWERMAC && PPC_PMAC && ! PPC_PMAC64)",
            "restrict": ""
        }
    ],
    "THERM_ADT746X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (I2C && I2C_POWERMAC && PPC_PMAC && ! PPC_PMAC64)",
            "restrict": ""
        }
    ],
    "WINDFARM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC)",
            "restrict": ""
        }
    ],
    "WINDFARM_PM81": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (WINDFARM && I2C && CPU_FREQ_PMAC64 && PMAC_SMU)",
            "restrict": ""
        }
    ],
    "WINDFARM_PM72": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (WINDFARM && I2C && CPU_FREQ_PMAC64 && ADB_PMU)",
            "restrict": ""
        }
    ],
    "WINDFARM_RM31": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (WINDFARM && I2C && CPU_FREQ_PMAC64 && ADB_PMU)",
            "restrict": ""
        }
    ],
    "WINDFARM_PM91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (WINDFARM && I2C && CPU_FREQ_PMAC64 && PMAC_SMU)",
            "restrict": ""
        }
    ],
    "WINDFARM_PM112": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (WINDFARM && I2C && PMAC_SMU)",
            "restrict": ""
        }
    ],
    "WINDFARM_PM121": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (WINDFARM && I2C && PMAC_SMU)",
            "restrict": ""
        }
    ],
    "ANSLCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (ADB_CUDA && PPC_PMAC)",
            "restrict": ""
        }
    ],
    "PMAC_RACKMETER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC)",
            "restrict": ""
        }
    ],
    "SENSORS_AMS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (PPC_PMAC && ! PPC64 && INPUT && ( ( ADB_PMU && I2C = y ) || ( ADB_PMU && ! I2C ) || I2C ))",
            "restrict": ""
        }
    ],
    "SENSORS_AMS_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (SENSORS_AMS && ADB_PMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SENSORS_AMS_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MACINTOSH_DRIVERS ) && (SENSORS_AMS && I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NETDEVICES": [
        {
            "type": "bool",
            "rev_select": "SCSI_CXGB3_ISCSI || SCSI_BNX2_ISCSI || SCSI_BNX2X_FCOE",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "MII": [
        {
            "type": "tristate",
            "rev_select": "VORTEX || ADAPTEC_STARFIRE || SUN4I_EMAC || AMD8111_ETH || PCNET32 || ARC_EMAC_CORE || ATL2 || ATL1 || ATL1E || ATL1C || B44 || BCM63XX_ENET || BCMGENET || SYSTEMPORT || EP93XX_ETH || DM9000 || WINBOND_840 || SUNDANCE || FTMAC100 || FS_ENET || E100 || JME || KORINA || KS8851 || KS8851_MLL || KSZ884X_PCI || FEALNX || PCH_GBE || ETHOC || HAMACHI || R6040 || 8139CP || 8139TOO || SH_ETH || RAVB || SGI_IOC3_ETH || SIS900 || SIS190 || SMC91X || PCMCIA_SMC91C92 || EPIC100 || SMC911X || SMSC911X || SNI_NETSEC || STMMAC_ETH || DWMAC_DWC_QOS_ETH || VIA_RHINE || VIA_VELOCITY || USB_PEGASUS || USB_RTL8150 || USB_RTL8152 || USB_LAN78XX || USB_USBNET || USB_NET_CH9200",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "NET_CORE": [
        {
            "type": "bool",
            "rev_select": "ARM_MOXART_ETHER",
            "dep": "( NETDEVICES )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BONDING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET) && (IPV6 || IPV6 = n) && (TLS || TLS_DEVICE = n)",
            "restrict": ""
        }
    ],
    "DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "WIREGUARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (NET && INET) && (IPV6 || ! IPV6)",
            "restrict": ""
        }
    ],
    "WIREGUARD_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (WIREGUARD)",
            "restrict": ""
        }
    ],
    "EQUALIZER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "NET_FC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (SCSI && PCI)",
            "restrict": ""
        }
    ],
    "IFB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (NET_ACT_MIRRED || NFT_FWD_NETDEV)",
            "restrict": ""
        }
    ],
    "NET_TEAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "NET_TEAM_MODE_BROADCAST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && ( NET_TEAM ) && (NET_TEAM)",
            "restrict": ""
        }
    ],
    "NET_TEAM_MODE_ROUNDROBIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && ( NET_TEAM ) && (NET_TEAM)",
            "restrict": ""
        }
    ],
    "NET_TEAM_MODE_RANDOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && ( NET_TEAM ) && (NET_TEAM)",
            "restrict": ""
        }
    ],
    "NET_TEAM_MODE_ACTIVEBACKUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && ( NET_TEAM ) && (NET_TEAM)",
            "restrict": ""
        }
    ],
    "NET_TEAM_MODE_LOADBALANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && ( NET_TEAM ) && (NET_TEAM)",
            "restrict": ""
        }
    ],
    "MACVLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "MACVTAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (MACVLAN) && (INET)",
            "restrict": ""
        }
    ],
    "IPVLAN_L3S": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (NETFILTER) && (IPVLAN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IPVLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET) && (IPV6 || ! IPV6)",
            "restrict": ""
        }
    ],
    "IPVTAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (IPVLAN) && (INET)",
            "restrict": ""
        }
    ],
    "VXLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET)",
            "restrict": ""
        }
    ],
    "GENEVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET) && (IPV6 || ! IPV6)",
            "restrict": ""
        }
    ],
    "BAREUDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET) && (IPV6 || ! IPV6)",
            "restrict": ""
        }
    ],
    "GTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET)",
            "restrict": ""
        }
    ],
    "AMT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET && IP_MULTICAST) && (IPV6 || ! IPV6)",
            "restrict": ""
        }
    ],
    "MACSEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "NETCONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "NETCONSOLE_DYNAMIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (NETCONSOLE && SYSFS && CONFIGFS_FS && ! ( NETCONSOLE = y && CONFIGFS_FS = m ))",
            "restrict": ""
        }
    ],
    "NETPOLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": "( NETCONSOLE )[!(y)]"
        }
    ],
    "NET_POLL_CONTROLLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": "( NETPOLL )[!(y)]"
        }
    ],
    "NTB_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (NTB_TRANSPORT)",
            "restrict": ""
        }
    ],
    "RIONET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (RAPIDIO)",
            "restrict": ""
        }
    ],
    "RIONET_TX_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (RIONET)",
            "restrict": "( 128 )[!(y)]"
        }
    ],
    "RIONET_RX_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (RIONET)",
            "restrict": "( 128 )[!(y)]"
        }
    ],
    "TUN": [
        {
            "type": "tristate",
            "rev_select": "TEST_KMOD",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (INET)",
            "restrict": ""
        }
    ],
    "TAP": [
        {
            "type": "tristate",
            "rev_select": "MACVTAP || IPVTAP",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "TUN_VNET_CROSS_LE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "VIRTIO_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "NLMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE )",
            "restrict": ""
        }
    ],
    "NET_VRF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (IP_MULTIPLE_TABLES) && (NET_L3_MASTER_DEV) && (IPV6 || IPV6 = n) && (IPV6_MULTIPLE_TABLES || IPV6 = n)",
            "restrict": ""
        }
    ],
    "VSOCKMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (VHOST_VSOCK)",
            "restrict": ""
        }
    ],
    "MHI_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( NET_CORE ) && (MHI_BUS)",
            "restrict": ""
        }
    ],
    "SUNGEM_PHY": [
        {
            "type": "tristate",
            "rev_select": "SUNGEM || SPIDER_NET",
            "dep": "( NETDEVICES )",
            "restrict": ""
        },
        {
            "type": "tristate",
            "rev_select": "SUNGEM || SPIDER_NET",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": ""
        }
    ],
    "ARCNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (NETDEVICES && ( ISA || PCI || PCMCIA ))",
            "restrict": ""
        }
    ],
    "ARCNET_1201": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_1051": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_CAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_COM90xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_COM90xxIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_RIM_I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET )",
            "restrict": ""
        }
    ],
    "ARCNET_COM20020": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "ARCNET_COM20020_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET ) && (ARCNET_COM20020 && ISA)",
            "restrict": ""
        }
    ],
    "ARCNET_COM20020_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET ) && (ARCNET_COM20020 && PCI)",
            "restrict": ""
        }
    ],
    "ARCNET_COM20020_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ARCNET ) && (ARCNET_COM20020 && PCMCIA)",
            "restrict": ""
        }
    ],
    "ATM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (NETDEVICES && ATM)",
            "restrict": ""
        }
    ],
    "ATM_DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM )",
            "restrict": ""
        }
    ],
    "ATM_TCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (INET)",
            "restrict": ""
        }
    ],
    "ATM_LANAI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI && ATM)",
            "restrict": ""
        }
    ],
    "ATM_ENI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATM_ENI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI)",
            "restrict": ""
        }
    ],
    "ATM_ENI_TUNE_BURST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_TX_16W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_TX_8W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_TX_4W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_TX_2W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_RX_16W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_RX_8W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_RX_4W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_ENI_BURST_RX_2W": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_ENI_TUNE_BURST)",
            "restrict": ""
        }
    ],
    "ATM_NICSTAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATM_NICSTAR_USE_SUNI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_NICSTAR)",
            "restrict": ""
        }
    ],
    "ATM_NICSTAR_USE_IDT77105": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_NICSTAR)",
            "restrict": ""
        }
    ],
    "ATM_IDT77252": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATM_IDT77252_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_IDT77252)",
            "restrict": ""
        }
    ],
    "ATM_IDT77252_RCV_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_IDT77252)",
            "restrict": ""
        }
    ],
    "ATM_IDT77252_USE_SUNI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_IDT77252)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATM_IA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATM_IA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_IA)",
            "restrict": ""
        }
    ],
    "ATM_FORE200E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (( PCI || SBUS ))",
            "restrict": ""
        }
    ],
    "ATM_FORE200E_USE_TASKLET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_FORE200E)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATM_FORE200E_TX_RETRY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_FORE200E)",
            "restrict": "( 16 )[!(y)]"
        }
    ],
    "ATM_FORE200E_DEBUG": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_FORE200E)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "ATM_HE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATM_HE_USE_SUNI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (ATM_HE)",
            "restrict": ""
        }
    ],
    "ATM_SOLOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ATM_DRIVERS && NETDEVICES && ATM ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAIF_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (CAIF)",
            "restrict": ""
        }
    ],
    "CAIF_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAIF_DRIVERS ) && (CAIF && TTY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CAIF_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAIF_DRIVERS ) && (CAIF && HAS_DMA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "B53": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_BCM_SF2",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA)",
            "restrict": ""
        }
    ],
    "B53_SPI_DRIVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (B53 && SPI)",
            "restrict": ""
        }
    ],
    "B53_MDIO_DRIVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (B53)",
            "restrict": ""
        }
    ],
    "B53_MMAP_DRIVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (B53 && HAS_IOMEM)",
            "restrict": "( BCM63XX || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "B53_SRAB_DRIVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (B53 && HAS_IOMEM) && (B53_SERDES || ! B53_SERDES)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "B53_SERDES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (B53)",
            "restrict": "( ARCH_BCM_NSP )[!(y)]"
        }
    ],
    "NET_DSA_BCM_SF2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_DSA_LOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) )",
            "restrict": ""
        }
    ],
    "NET_DSA_HIRSCHMANN_HELLCREEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (HAS_IOMEM) && (NET_DSA) && (PTP_1588_CLOCK) && (LEDS_CLASS) && (NET_SCH_TAPRIO)",
            "restrict": ""
        }
    ],
    "NET_DSA_LANTIQ_GSWIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_DSA_MT7530": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) )",
            "restrict": ""
        }
    ],
    "NET_DSA_MV88E6060": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) )",
            "restrict": ""
        }
    ],
    "NET_DSA_MICROCHIP_KSZ_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA)",
            "restrict": ""
        }
    ],
    "NET_DSA_MICROCHIP_KSZ9477_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_MICROCHIP_KSZ_COMMON && I2C)",
            "restrict": ""
        }
    ],
    "NET_DSA_MICROCHIP_KSZ_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_MICROCHIP_KSZ_COMMON && SPI)",
            "restrict": ""
        }
    ],
    "NET_DSA_MICROCHIP_KSZ8863_SMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_MICROCHIP_KSZ_COMMON)",
            "restrict": ""
        }
    ],
    "NET_DSA_MV88E6XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_DSA_MV88E6XXX_PTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_MV88E6XXX && PTP_1588_CLOCK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_DSA_MSCC_FELIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA && PCI) && (NET_VENDOR_MICROSEMI) && (NET_VENDOR_FREESCALE) && (HAS_IOMEM) && (PTP_1588_CLOCK_OPTIONAL) && (NET_SCH_TAPRIO || NET_SCH_TAPRIO = n)",
            "restrict": ""
        }
    ],
    "NET_DSA_MSCC_SEVILLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA) && (NET_VENDOR_MICROSEMI) && (HAS_IOMEM) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_DSA_AR9331": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA)",
            "restrict": ""
        }
    ],
    "NET_DSA_QCA8K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) )",
            "restrict": ""
        }
    ],
    "NET_DSA_SJA1105": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA && SPI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_DSA_SJA1105_PTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_SJA1105) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "NET_DSA_SJA1105_TAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_SJA1105 && NET_SCH_TAPRIO) && (NET_SCH_TAPRIO = y || NET_DSA_SJA1105 = m) && (NET_DSA_SJA1105_PTP)",
            "restrict": ""
        }
    ],
    "NET_DSA_SJA1105_VL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA_SJA1105_TAS)",
            "restrict": ""
        }
    ],
    "NET_DSA_XRS700X": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_XRS700X_I2C || NET_DSA_XRS700X_MDIO",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA)",
            "restrict": ""
        }
    ],
    "NET_DSA_XRS700X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA && I2C)",
            "restrict": ""
        }
    ],
    "NET_DSA_XRS700X_MDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA)",
            "restrict": ""
        }
    ],
    "NET_DSA_REALTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (NET_DSA)",
            "restrict": ""
        }
    ],
    "NET_DSA_REALTEK_MDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && ( NET_DSA_REALTEK ) && (OF) && (NET_DSA_REALTEK_RTL8365MB || NET_DSA_REALTEK_RTL8366RB) && (NET_DSA_REALTEK_RTL8365MB || ! NET_DSA_REALTEK_RTL8365MB) && (NET_DSA_REALTEK_RTL8366RB || ! NET_DSA_REALTEK_RTL8366RB)",
            "restrict": "( NET_DSA_REALTEK_RTL8365MB ) || ( NET_DSA_REALTEK_RTL8366RB )"
        }
    ],
    "NET_DSA_REALTEK_SMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && ( NET_DSA_REALTEK ) && (OF) && (NET_DSA_REALTEK_RTL8365MB || NET_DSA_REALTEK_RTL8366RB) && (NET_DSA_REALTEK_RTL8365MB || ! NET_DSA_REALTEK_RTL8365MB) && (NET_DSA_REALTEK_RTL8366RB || ! NET_DSA_REALTEK_RTL8366RB)",
            "restrict": "( NET_DSA_REALTEK_RTL8365MB ) || ( NET_DSA_REALTEK_RTL8366RB )"
        }
    ],
    "NET_DSA_REALTEK_RTL8365MB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && ( NET_DSA_REALTEK )",
            "restrict": ""
        }
    ],
    "NET_DSA_REALTEK_RTL8366RB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && ( NET_DSA_REALTEK )",
            "restrict": ""
        }
    ],
    "NET_DSA_RZN1_A5PSW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (OF && ARCH_RZN1)",
            "restrict": ""
        }
    ],
    "NET_DSA_SMSC_LAN9303": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_SMSC_LAN9303_I2C || NET_DSA_SMSC_LAN9303_MDIO",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) )",
            "restrict": ""
        }
    ],
    "NET_DSA_SMSC_LAN9303_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (I2C) && (VLAN_8021Q || VLAN_8021Q = n)",
            "restrict": ""
        }
    ],
    "NET_DSA_SMSC_LAN9303_MDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (VLAN_8021Q || VLAN_8021Q = n)",
            "restrict": ""
        }
    ],
    "NET_DSA_VITESSE_VSC73XX": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_VITESSE_VSC73XX_SPI || NET_DSA_VITESSE_VSC73XX_PLATFORM",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) )",
            "restrict": ""
        }
    ],
    "NET_DSA_VITESSE_VSC73XX_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "NET_DSA_VITESSE_VSC73XX_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NET_DSA ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ETHERNET": [
        {
            "type": "bool",
            "rev_select": "SCSI_CXGB3_ISCSI || SCSI_BNX2_ISCSI || SCSI_BNX2X_FCOE",
            "dep": "( NETDEVICES ) && (NET)",
            "restrict": ""
        }
    ],
    "MDIO": [
        {
            "type": "tristate",
            "rev_select": "ALX || BNX2X || CHELSIO_T1 || CHELSIO_T3 || CHELSIO_T4 || DM9051 || IXGBE || SFC || SFC_FALCON || SFC_SIENA",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": ""
        }
    ],
    "NET_VENDOR_3COM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ISA || EISA || PCI || PCMCIA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EL3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_3COM ) && (( ISA || EISA ))",
            "restrict": ""
        }
    ],
    "3C515": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_3COM ) && (ISA && ISA_DMA_API && ! PPC32)",
            "restrict": ""
        }
    ],
    "PCMCIA_3C574": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_3COM ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_3C589": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_3COM ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "VORTEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_3COM ) && (( PCI || EISA ) && HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "TYPHOON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_3COM ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ACTIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_ACTIONS || COMPILE_TEST)",
            "restrict": "( ARCH_ACTIONS )[!(y)]"
        }
    ],
    "OWL_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ACTIONS )",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ADAPTEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ADAPTEC_STARFIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ADAPTEC ) && (PCI)",
            "restrict": ""
        }
    ],
    "GRETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (SPARC)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_AGERE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ET131X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AGERE ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ALACRITECH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SLICOSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ALACRITECH ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ALLWINNER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_SUNXI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SUN4I_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ALLWINNER ) && (ARCH_SUNXI) && (OF)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ALTEON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ACENIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ALTEON ) && (PCI)",
            "restrict": ""
        }
    ],
    "ACENIC_OMIT_TIGON_I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ALTEON ) && (ACENIC)",
            "restrict": ""
        }
    ],
    "ALTERA_TSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_AMAZON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ENA_ETHERNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMAZON ) && (PCI_MSI && ! CPU_BIG_ENDIAN)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_AMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (DIO || MACH_DECSTATION || MVME147 || ATARI || SUN3 || SUN3X || SBUS || PCI || ZORRO || ( ISA && ISA_DMA_API ) || ISA || EISA || PCMCIA || ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "A2065": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "AMD8111_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (PCI)",
            "restrict": ""
        }
    ],
    "LANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (ISA && ISA_DMA_API && ! ARM && ! PPC32)",
            "restrict": ""
        }
    ],
    "PCNET32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (PCI)",
            "restrict": ""
        }
    ],
    "ARIADNE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "ATARILANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (ATARI)",
            "restrict": ""
        }
    ],
    "DECLANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (MACH_DECSTATION)",
            "restrict": ""
        }
    ],
    "HPLANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (DIO)",
            "restrict": ""
        }
    ],
    "MIPS_AU1X00_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "MVME147_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (MVME147)",
            "restrict": ""
        }
    ],
    "PCMCIA_NMCLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "SUN3LANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (( SUN3 || SUN3X ))",
            "restrict": ""
        }
    ],
    "SUNLANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (SBUS)",
            "restrict": ""
        }
    ],
    "AMD_XGBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (( OF_ADDRESS || ACPI || PCI ) && HAS_IOMEM) && (X86 || ARM64 || COMPILE_TEST) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "AMD_XGBE_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD ) && (AMD_XGBE && DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "AMD_XGBE_HAVE_ECC": [
        {
            "type": "bool",
            "rev_select": "AMD_XGBE[X86]",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AMD )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_XGENE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_XGENE_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_XGENE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_APPLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (( PPC_PMAC && PPC32 ) || MAC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_APPLE ) && (PPC_PMAC && PPC32)",
            "restrict": ""
        }
    ],
    "MACE_AAUI_PORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_APPLE ) && (MACE)",
            "restrict": ""
        }
    ],
    "BMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_APPLE ) && (PPC_PMAC && PPC32)",
            "restrict": ""
        }
    ],
    "MACMACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_APPLE ) && (MAC)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_AQUANTIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AQTION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_AQUANTIA ) && (PCI) && (MACSEC || MACSEC = n)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ARC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARC_EMAC_CORE": [
        {
            "type": "tristate",
            "rev_select": "ARC_EMAC || EMAC_ROCKCHIP",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ARC ) && (ARC || ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARC_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ARC ) && (OF_IRQ) && (ARC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EMAC_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ARC ) && (OF_IRQ && REGULATOR) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ASIX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SPI_AX88796C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ASIX ) && (SPI) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SPI_AX88796C_COMPRESSION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ASIX ) && (SPI_AX88796C)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_VENDOR_ATHEROS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (( PCI || ATH79 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AG71XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ATHEROS ) && (ATH79)",
            "restrict": ""
        }
    ],
    "ATL2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ATHEROS ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATL1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ATHEROS ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATL1E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ATHEROS ) && (PCI)",
            "restrict": ""
        }
    ],
    "ATL1C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ATHEROS ) && (PCI)",
            "restrict": ""
        }
    ],
    "ALX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ATHEROS ) && (PCI)",
            "restrict": ""
        }
    ],
    "CX_ECAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_BROADCOM": [
        {
            "type": "bool",
            "rev_select": "SCSI_BNX2_ISCSI || SCSI_BNX2X_FCOE",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (( SSB_POSSIBLE && HAS_DMA ) || PCI || BCM63XX || SIBYTE_SB1xxx_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B44": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (SSB_POSSIBLE && HAS_DMA)",
            "restrict": ""
        }
    ],
    "B44_PCI_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (B44 && SSB_PCIHOST_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B44_PCICORE_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (B44 && SSB_DRIVER_PCICORE_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B44_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (B44_PCI_AUTOSELECT && B44_PCICORE_AUTOSELECT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCM4908_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (ARCH_BCM4908 || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_BCM4908)]"
        }
    ],
    "BCM63XX_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BCM63XX)",
            "restrict": ""
        }
    ],
    "BCMGENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BNX2": [
        {
            "type": "tristate",
            "rev_select": "CNIC",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (PCI)",
            "restrict": ""
        }
    ],
    "CNIC": [
        {
            "type": "tristate",
            "rev_select": "SCSI_BNX2_ISCSI || SCSI_BNX2X_FCOE",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (PCI && ( IPV6 || IPV6 = n )) && (MMU)",
            "restrict": ""
        }
    ],
    "SB1250_MAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (SIBYTE_SB1xxx_SOC)",
            "restrict": ""
        }
    ],
    "TIGON3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "TIGON3_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (TIGON3 && HWMON && ! ( TIGON3 = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BNX2X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "BNX2X_SRIOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BNX2X && PCI_IOV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BGMAC": [
        {
            "type": "tristate",
            "rev_select": "BGMAC_BCMA || BGMAC_PLATFORM",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM )",
            "restrict": ""
        }
    ],
    "BGMAC_BCMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BCMA && BCMA_HOST_SOC) && (BCM47XX || ARCH_BCM_5301X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BGMAC_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "SYSTEMPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (HAS_IOMEM) && (NET_DSA || ! NET_DSA)",
            "restrict": ""
        }
    ],
    "BNXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "BNXT_SRIOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BNXT && PCI_IOV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BNXT_FLOWER_OFFLOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BNXT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BNXT_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BNXT && DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BNXT_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROADCOM ) && (BNXT && HWMON && ! ( BNXT = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_VENDOR_CADENCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MACB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CADENCE ) && (HAS_DMA && COMMON_CLK) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "MACB_USE_HWSTAMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CADENCE ) && (MACB) && (PTP_1588_CLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MACB_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CADENCE ) && (MACB && PCI)",
            "restrict": ""
        }
    ],
    "NET_CALXEDA_XGMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM) && (ARCH_HIGHBANK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_CAVIUM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "THUNDER_NIC_PF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI)",
            "restrict": ""
        }
    ],
    "THUNDER_NIC_VF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI)",
            "restrict": ""
        }
    ],
    "THUNDER_NIC_BGX": [
        {
            "type": "tristate",
            "rev_select": "THUNDER_NIC_PF",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI)",
            "restrict": ""
        }
    ],
    "THUNDER_NIC_RGX": [
        {
            "type": "tristate",
            "rev_select": "THUNDER_NIC_BGX",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI)",
            "restrict": ""
        }
    ],
    "CAVIUM_PTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "LIQUIDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "OCTEON_MGMT_ETHERNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (CAVIUM_OCTEON_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LIQUIDIO_VF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CAVIUM ) && (64BIT && PCI_MSI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_CHELSIO": [
        {
            "type": "bool",
            "rev_select": "SCSI_CXGB3_ISCSI || SCSI_CXGB4_ISCSI",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CHELSIO_T1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "CHELSIO_T1_1G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (CHELSIO_T1)",
            "restrict": ""
        }
    ],
    "CHELSIO_T3": [
        {
            "type": "tristate",
            "rev_select": "SCSI_CXGB3_ISCSI",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (PCI && INET)",
            "restrict": ""
        }
    ],
    "CHELSIO_T4": [
        {
            "type": "tristate",
            "rev_select": "SCSI_CXGB4_ISCSI",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (PCI && ( IPV6 || IPV6 = n ) && ( TLS || TLS = n )) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "CHELSIO_T4_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (CHELSIO_T4 && DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CHELSIO_T4_FCOE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (CHELSIO_T4 && CHELSIO_T4_DCB && FCOE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CHELSIO_T4VF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "CHELSIO_LIB": [
        {
            "type": "tristate",
            "rev_select": "SCSI_CXGB3_ISCSI || SCSI_CXGB4_ISCSI || ISCSI_TARGET_CXGB4 || INFINIBAND_CXGB4",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO )",
            "restrict": ""
        }
    ],
    "CHELSIO_INLINE_CRYPTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && (CHELSIO_T4)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_CHELSIO_TLS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && ( CHELSIO_INLINE_CRYPTO ) && (CHELSIO_T4) && (TLS) && (TLS_TOE)",
            "restrict": ""
        }
    ],
    "CHELSIO_IPSEC_INLINE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && ( CHELSIO_INLINE_CRYPTO ) && (CHELSIO_T4) && (XFRM_OFFLOAD) && (INET_ESP_OFFLOAD || INET6_ESP_OFFLOAD)",
            "restrict": ""
        }
    ],
    "CHELSIO_TLS_DEVICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CHELSIO ) && ( CHELSIO_INLINE_CRYPTO ) && (CHELSIO_T4) && (TLS) && (TLS_DEVICE)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_CIRRUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ISA || EISA || ARM || MAC || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CS89x0": [
        {
            "type": "tristate",
            "rev_select": "CS89x0_ISA || CS89x0_PLATFORM",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CIRRUS )",
            "restrict": ""
        }
    ],
    "CS89x0_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CIRRUS ) && (HAS_IOPORT_MAP) && (ISA) && (! PPC32) && (CS89x0_PLATFORM = n)",
            "restrict": ""
        }
    ],
    "CS89x0_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CIRRUS ) && (ARM || ( COMPILE_TEST && ! PPC ))",
            "restrict": ""
        }
    ],
    "EP93XX_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CIRRUS ) && (( ARM && ARCH_EP93XX ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MAC89x0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CIRRUS ) && (MAC)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_CISCO": [
        {
            "type": "bool",
            "rev_select": "INFINIBAND_USNIC",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ENIC": [
        {
            "type": "tristate",
            "rev_select": "INFINIBAND_USNIC",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CISCO ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_CORTINA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GEMINI_ETHERNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_CORTINA ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_DAVICOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DM9000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DAVICOM ) && (ARM || MIPS || COLDFIRE || NIOS2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DM9000_FORCE_SIMPLE_PHY_POLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DAVICOM ) && (DM9000)",
            "restrict": ""
        }
    ],
    "DM9051": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DAVICOM ) && (SPI)",
            "restrict": ""
        }
    ],
    "DNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_DEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI || EISA || CARDBUS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_TULIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && (( PCI || EISA || CARDBUS ))",
            "restrict": ""
        }
    ],
    "DE2104X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (PCI)",
            "restrict": ""
        }
    ],
    "DE2104X_DSL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (DE2104X)",
            "restrict": "( 0 31 ) || ( 0 )[!(y)]"
        }
    ],
    "TULIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (PCI)",
            "restrict": ""
        }
    ],
    "TULIP_MWI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (TULIP)",
            "restrict": ""
        }
    ],
    "TULIP_MMIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (TULIP)",
            "restrict": ""
        }
    ],
    "TULIP_NAPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (TULIP)",
            "restrict": ""
        }
    ],
    "TULIP_NAPI_HW_MITIGATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (TULIP_NAPI)",
            "restrict": ""
        }
    ],
    "TULIP_DM910X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (TULIP && SPARC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WINBOND_840": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (PCI)",
            "restrict": ""
        }
    ],
    "DM9102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (PCI)",
            "restrict": ""
        }
    ],
    "ULI526X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (PCI)",
            "restrict": ""
        }
    ],
    "PCMCIA_XIRCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DEC ) && ( NET_TULIP ) && (CARDBUS)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_DLINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DL2K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DLINK ) && (PCI)",
            "restrict": ""
        }
    ],
    "SUNDANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DLINK ) && (PCI)",
            "restrict": ""
        }
    ],
    "SUNDANCE_MMIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_DLINK ) && (SUNDANCE)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_EMULEX": [
        {
            "type": "bool",
            "rev_select": "INFINIBAND_OCRDMA",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BE2NET": [
        {
            "type": "tristate",
            "rev_select": "INFINIBAND_OCRDMA",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EMULEX ) && (PCI)",
            "restrict": ""
        }
    ],
    "BE2NET_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EMULEX ) && (BE2NET && HWMON) && (! ( BE2NET = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BE2NET_BE2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EMULEX ) && (BE2NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BE2NET_BE3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EMULEX ) && (BE2NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BE2NET_LANCER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EMULEX ) && (BE2NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BE2NET_SKYHAWK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EMULEX ) && (BE2NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_VENDOR_ENGLEDER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TSNEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ENGLEDER ) && (HAS_IOMEM && HAS_DMA) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "TSNEP_SELFTESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ENGLEDER ) && (TSNEP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_VENDOR_EZCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EZCHIP_NPS_MANAGEMENT_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_EZCHIP ) && (OF_IRQ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_FARADAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FTMAC100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FARADAY ) && (ARM || COMPILE_TEST) && (! 64BIT || BROKEN)",
            "restrict": ""
        }
    ],
    "FTGMAC100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FARADAY ) && (ARM || COMPILE_TEST) && (! 64BIT || BROKEN)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_FREESCALE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (FSL_SOC || QUICC_ENGINE || CPM1 || CPM2 || PPC_MPC512x || M523x || M527x || M5272 || M528x || M520x || M532x || ARCH_MXC || ARCH_MXS || ( PPC_MPC52xx && PPC_BESTCOMM ) || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (( M523x || M527x || M5272 || M528x || M520x || M532x || ARCH_MXC || SOC_IMX28 || COMPILE_TEST )) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": "( ARCH_MXC || SOC_IMX28 )[!(y) && (ARM)]"
        }
    ],
    "FEC_MPC52xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (PPC_MPC52xx && PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "FEC_MPC52xx_MDIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FEC_MPC52xx)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FS_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (NET_VENDOR_FREESCALE && ( CPM1 || CPM2 || PPC_MPC512x ))",
            "restrict": ""
        }
    ],
    "FS_ENET_MPC5121_FEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE )",
            "restrict": "( y )[!(y) && (( FS_ENET && PPC_MPC512x ))]"
        }
    ],
    "FS_ENET_HAS_SCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FS_ENET && ( CPM1 || CPM2 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FS_ENET_HAS_FCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FS_ENET && CPM2)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FS_ENET_HAS_FEC": [
        {
            "type": "bool",
            "rev_select": "FS_ENET_MPC5121_FEC",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FS_ENET && ( CPM1 || FS_ENET_MPC5121_FEC ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FS_ENET_MDIO_FEC": [
        {
            "type": "tristate",
            "rev_select": "FS_ENET_HAS_FEC",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FS_ENET && ( CPM1 || FS_ENET_MPC5121_FEC ))",
            "restrict": ""
        }
    ],
    "FS_ENET_MDIO_FCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FS_ENET && CPM2)",
            "restrict": ""
        }
    ],
    "FSL_FMAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FSL_SOC || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DPAA_ERRATUM_A050385": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (ARM64 && FSL_DPAA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_PQ_MDIO": [
        {
            "type": "tristate",
            "rev_select": "UCC_GETH || GIANFAR",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE )",
            "restrict": ""
        }
    ],
    "FSL_XGMAC_MDIO": [
        {
            "type": "tristate",
            "rev_select": "FSL_DPAA2_ETH",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (OF)",
            "restrict": ""
        }
    ],
    "UCC_GETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (QUICC_ENGINE && PPC32)",
            "restrict": ""
        }
    ],
    "UGETH_TX_ON_DEMAND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (UCC_GETH)",
            "restrict": ""
        }
    ],
    "GIANFAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "FSL_DPAA_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FSL_DPAA && FSL_FMAN)",
            "restrict": ""
        }
    ],
    "FSL_DPAA2_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FSL_MC_BUS && FSL_MC_DPIO)",
            "restrict": ""
        }
    ],
    "FSL_DPAA2_ETH_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && ( FSL_DPAA2_ETH ) && (DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FSL_DPAA2_PTP_CLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (FSL_DPAA2_ETH && PTP_1588_CLOCK_QORIQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_DPAA2_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (BRIDGE || BRIDGE = n) && (NET_SWITCHDEV)",
            "restrict": ""
        }
    ],
    "FSL_ENETC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (PCI && PCI_MSI)",
            "restrict": ""
        }
    ],
    "FSL_ENETC_VF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (PCI && PCI_MSI)",
            "restrict": ""
        }
    ],
    "FSL_ENETC_IERB": [
        {
            "type": "tristate",
            "rev_select": "FSL_ENETC",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE )",
            "restrict": ""
        }
    ],
    "FSL_ENETC_MDIO": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MSCC_FELIX || FSL_ENETC || FSL_ENETC_VF",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (PCI && MDIO_DEVRES && MDIO_BUS)",
            "restrict": ""
        }
    ],
    "FSL_ENETC_PTP_CLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (PTP_1588_CLOCK_QORIQ && ( FSL_ENETC || FSL_ENETC_VF ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_ENETC_QOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FREESCALE ) && (( FSL_ENETC || FSL_ENETC_VF ) && ( NET_SCH_TAPRIO || NET_SCH_CBS ))",
            "restrict": ""
        }
    ],
    "NET_VENDOR_FUJITSU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCMCIA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCMCIA_FMVJ18X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FUJITSU ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_FUNGIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FUN_CORE": [
        {
            "type": "tristate",
            "rev_select": "FUN_ETH",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FUNGIBLE )",
            "restrict": ""
        }
    ],
    "FUN_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_FUNGIBLE ) && (PCI && PCI_MSI) && (TLS && TLS_DEVICE || TLS_DEVICE = n)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_GOOGLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_GOOGLE ) && (( PCI_MSI && ( X86 || CPU_LITTLE_ENDIAN ) ))",
            "restrict": ""
        }
    ],
    "NET_VENDOR_HISILICON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (OF || ACPI) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HIX5HD2_GMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON )",
            "restrict": ""
        }
    ],
    "HISI_FEMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HIP04_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HI13X1_GMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && (HIP04_ETH)",
            "restrict": ""
        }
    ],
    "HNS_MDIO": [
        {
            "type": "tristate",
            "rev_select": "HIP04_ETH || HNS_DSAF",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON )",
            "restrict": ""
        }
    ],
    "HNS": [
        {
            "type": "tristate",
            "rev_select": "HNS_DSAF || HNS_ENET",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON )",
            "restrict": ""
        }
    ],
    "HNS_DSAF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON )",
            "restrict": ""
        }
    ],
    "HNS_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON )",
            "restrict": ""
        }
    ],
    "HNS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && (PCI)",
            "restrict": ""
        }
    ],
    "HNS3_HCLGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && ( HNS3 ) && (PCI_MSI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "HNS3_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && ( HNS3 ) && (HNS3_HCLGE && DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HNS3_HCLGEVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && ( HNS3 ) && (PCI_MSI) && (HNS3_HCLGE)",
            "restrict": ""
        }
    ],
    "HNS3_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HISILICON ) && ( HNS3 ) && (64BIT && PCI) && (INET)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "NET_VENDOR_HUAWEI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HINIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_HUAWEI ) && (( PCI_MSI && ( X86 || ARM64 ) ))",
            "restrict": ""
        }
    ],
    "NET_VENDOR_I825XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (NET_VENDOR_INTEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_ETHER1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_I825XX ) && (ARM && ARCH_ACORN)",
            "restrict": ""
        }
    ],
    "BVME6000_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_I825XX ) && (BVME6000)",
            "restrict": ""
        }
    ],
    "LASI_82596": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_I825XX ) && (GSC)",
            "restrict": ""
        }
    ],
    "MVME16x_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_I825XX ) && (MVME16x)",
            "restrict": ""
        }
    ],
    "SNI_82596": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_I825XX ) && (SNI_RM)",
            "restrict": ""
        }
    ],
    "SUN3_82586": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_I825XX ) && (SUN3)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_IBM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PPC_PSERIES || PPC_DCR || ( IBMEBUS && SPARSEMEM ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IBMVETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "IBM_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (PPC_DCR)",
            "restrict": ""
        }
    ],
    "IBM_EMAC_RXB": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (IBM_EMAC)",
            "restrict": "( 128 )[!(y)]"
        }
    ],
    "IBM_EMAC_TXB": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (IBM_EMAC)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "IBM_EMAC_POLL_WEIGHT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (IBM_EMAC)",
            "restrict": "( 32 )[!(y)]"
        }
    ],
    "IBM_EMAC_RX_COPY_THRESHOLD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (IBM_EMAC)",
            "restrict": "( 256 )[!(y)]"
        }
    ],
    "IBM_EMAC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (IBM_EMAC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_ZMII": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_RGMII": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_TAH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_EMAC4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_NO_FLOW_CTRL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_MAL_CLR_ICINTSTAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IBM_EMAC_MAL_COMMON_ERR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EHEA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (IBMEBUS && SPARSEMEM)",
            "restrict": ""
        }
    ],
    "IBMVNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_IBM ) && (PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_INTEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "E100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI)",
            "restrict": ""
        }
    ],
    "E1000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI)",
            "restrict": ""
        }
    ],
    "E1000E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI && ( ! SPARC32 || BROKEN )) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "E1000E_HWTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (E1000E && X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IGB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "IGB_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IGB && HWMON && ! ( IGB = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IGB_DCA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IGB && DCA && ! ( IGB = y && DCA = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IGBVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI)",
            "restrict": ""
        }
    ],
    "IXGB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI)",
            "restrict": ""
        }
    ],
    "IXGBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "IXGBE_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IXGBE && HWMON && ! ( IXGBE = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IXGBE_DCA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IXGBE && DCA && ! ( IXGBE = y && DCA = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IXGBE_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IXGBE && DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IXGBE_IPSEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IXGBE) && (XFRM_OFFLOAD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IXGBEVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "IXGBEVF_IPSEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (IXGBEVF) && (XFRM_OFFLOAD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I40E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PTP_1588_CLOCK_OPTIONAL) && (PCI)",
            "restrict": ""
        }
    ],
    "I40E_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (I40E && DCB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IAVF": [
        {
            "type": "tristate",
            "rev_select": "I40EVF",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL )",
            "restrict": ""
        }
    ],
    "I40EVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "ICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI_MSI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ICE_SWITCHDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (ICE && NET_SWITCHDEV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ICE_HWTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (ICE && X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FM10K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI_MSI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IGC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_INTEL ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_VENDOR_WANGXUN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TXGBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WANGXUN ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_XSCALE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (NET_VENDOR_INTEL && ( ARM && ARCH_IXP4XX && IXP4XX_NPE && IXP4XX_QMGR ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IXP4XX_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_XSCALE ) && (ARM && ARCH_IXP4XX && IXP4XX_NPE && IXP4XX_QMGR && OF)",
            "restrict": ""
        }
    ],
    "PTP_1588_CLOCK_IXP46X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_XSCALE ) && (IXP4XX_ETH) && (PTP_1588_CLOCK = y || PTP_1588_CLOCK = IXP4XX_ETH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "JME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": ""
        }
    ],
    "KORINA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (MIKROTIK_RB532 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LANTIQ_ETOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (SOC_TYPE_XWAY)",
            "restrict": ""
        }
    ],
    "LANTIQ_XRX200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (SOC_TYPE_XWAY)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_LITEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LITEX_LITEETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_LITEX ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MARVELL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI || CPU_PXA168 || PPC32 || PLAT_ORION || INET || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MV643XX_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (PPC32 || PLAT_ORION || COMPILE_TEST) && (INET)",
            "restrict": ""
        }
    ],
    "MVMDIO": [
        {
            "type": "tristate",
            "rev_select": "MV643XX_ETH || MVNETA || MVPP2",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MVNETA_BM_ENABLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (MVNETA) && (! 64BIT)",
            "restrict": ""
        }
    ],
    "MVNETA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MVNETA_BM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (! 64BIT)",
            "restrict": "( y )[!(y) && (MVNETA = y && MVNETA_BM_ENABLE != n)] || ( MVNETA_BM_ENABLE )[!(y)]"
        }
    ],
    "MVPP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MVPP2_PTP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (( PTP_1588_CLOCK = y && MVPP2 = y ) || ( PTP_1588_CLOCK && MVPP2 = m ))",
            "restrict": ""
        }
    ],
    "PXA168_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (HAS_IOMEM) && (CPU_PXA168 || ARCH_BERLIN || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SKGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (PCI)",
            "restrict": ""
        }
    ],
    "SKGE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (SKGE && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "SKGE_GENESIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (SKGE)",
            "restrict": ""
        }
    ],
    "SKY2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (PCI)",
            "restrict": ""
        }
    ],
    "SKY2_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (SKY2 && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "OCTEONTX2_MBOX": [
        {
            "type": "tristate",
            "rev_select": "OCTEONTX2_AF || OCTEONTX2_PF || CRYPTO_DEV_OCTEONTX2_CPT",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL )",
            "restrict": ""
        }
    ],
    "OCTEONTX2_AF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (( 64BIT && COMPILE_TEST ) || ARM64) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NDC_DIS_DYNAMIC_CACHING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (OCTEONTX2_AF)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OCTEONTX2_PF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (( 64BIT && COMPILE_TEST ) || ARM64) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "OCTEONTX2_VF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (OCTEONTX2_PF)",
            "restrict": ""
        }
    ],
    "OCTEON_EP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (64BIT) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "PRESTERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (NET_SWITCHDEV && VLAN_8021Q) && (BRIDGE || BRIDGE = n)",
            "restrict": ""
        }
    ],
    "PRESTERA_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MARVELL ) && (PCI && HAS_IOMEM && PRESTERA)",
            "restrict": "( PRESTERA )[!(y)]"
        }
    ],
    "NET_VENDOR_MEDIATEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_MEDIATEK || SOC_MT7621 || SOC_MT7620 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_MEDIATEK_SOC_WED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MEDIATEK ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( NET_MEDIATEK_SOC != n )[!(y)]"
        }
    ],
    "NET_MEDIATEK_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MEDIATEK ) && (NET_DSA || ! NET_DSA)",
            "restrict": ""
        }
    ],
    "NET_MEDIATEK_STAR_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MELLANOX": [
        {
            "type": "bool",
            "rev_select": "MLX4_INFINIBAND",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI || I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX4_EN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (PCI && NETDEVICES && ETHERNET && INET) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "MLX4_EN_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX4_EN && DCB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX4_CORE": [
        {
            "type": "tristate",
            "rev_select": "MLX4_EN || MLX4_INFINIBAND",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (PCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MLX4_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX4_CORE)",
            "restrict": "( y )[!(( MLX4_CORE && EXPERT ))]"
        }
    ],
    "MLX4_CORE_GEN2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX4_CORE)",
            "restrict": "( y )[!(( MLX4_CORE ))]"
        }
    ],
    "MLX5_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (PCI) && (VXLAN || ! VXLAN) && (MLXFW || ! MLXFW) && (PTP_1588_CLOCK_OPTIONAL) && (PCI_HYPERV_INTERFACE || ! PCI_HYPERV_INTERFACE)",
            "restrict": ""
        }
    ],
    "MLX5_FPGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE)",
            "restrict": ""
        }
    ],
    "MLX5_CORE_EN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (NETDEVICES && ETHERNET && INET && PCI && MLX5_CORE)",
            "restrict": ""
        }
    ],
    "MLX5_EN_ARFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN && RFS_ACCEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_EN_RXNFC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_MPFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_ESWITCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN && NET_SWITCHDEV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_BRIDGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_ESWITCH && BRIDGE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_CLS_ACT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_ESWITCH && NET_CLS_ACT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_TC_CT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CLS_ACT && NF_FLOW_TABLE && NET_ACT_CT && NET_TC_SKB_EXT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_TC_SAMPLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CLS_ACT) && (PSAMPLE = y || PSAMPLE = n || MLX5_CORE = m)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_CORE_EN_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN && DCB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_CORE_IPOIB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN)",
            "restrict": ""
        }
    ],
    "MLX5_EN_IPSEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN) && (XFRM_OFFLOAD) && (INET_ESP_OFFLOAD || INET6_ESP_OFFLOAD)",
            "restrict": ""
        }
    ],
    "MLX5_EN_TLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (TLS_DEVICE) && (TLS = y || MLX5_CORE = m) && (MLX5_CORE_EN)",
            "restrict": ""
        }
    ],
    "MLX5_SW_STEERING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE_EN && MLX5_ESWITCH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_SF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_CORE && MLX5_CORE_EN)",
            "restrict": ""
        }
    ],
    "MLX5_SF_MANAGER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLX5_SF && MLX5_ESWITCH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLXSW_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX )",
            "restrict": ""
        }
    ],
    "MLXSW_CORE_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLXSW_CORE && HWMON) && (! ( MLXSW_CORE = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLXSW_CORE_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLXSW_CORE && THERMAL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLXSW_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (PCI && HAS_IOMEM && MLXSW_CORE)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MLXSW_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (I2C && MLXSW_CORE)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MLXSW_SPECTRUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLXSW_CORE && MLXSW_PCI && NET_SWITCHDEV && VLAN_8021Q) && (PSAMPLE || PSAMPLE = n) && (BRIDGE || BRIDGE = n) && (IPV6 || IPV6 = n) && (NET_IPGRE || NET_IPGRE = n) && (IPV6_GRE || IPV6_GRE = n) && (VXLAN || VXLAN = n) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MLXSW_SPECTRUM_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLXSW_SPECTRUM && DCB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLXSW_MINIMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (MLXSW_CORE && MLXSW_I2C)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MLXFW": [
        {
            "type": "tristate",
            "rev_select": "MLXSW_CORE",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX )",
            "restrict": ""
        }
    ],
    "MLXBF_GIGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MELLANOX ) && (( ARM64 && ACPI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MICREL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (( HAS_IOMEM && DMA_ENGINE ) || SPI || PCI || HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KS8842": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICREL ) && (HAS_IOMEM && DMA_ENGINE)",
            "restrict": ""
        }
    ],
    "KS8851": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICREL ) && (SPI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "KS8851_MLL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICREL ) && (HAS_IOMEM) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "KSZ884X_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICREL ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MICROCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ENC28J60": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROCHIP ) && (SPI)",
            "restrict": ""
        }
    ],
    "ENC28J60_WRITEVERIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROCHIP ) && (ENC28J60)",
            "restrict": ""
        }
    ],
    "ENCX24J600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROCHIP ) && (SPI)",
            "restrict": ""
        }
    ],
    "LAN743X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROCHIP ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "LAN966X_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROCHIP ) && (PTP_1588_CLOCK_OPTIONAL) && (HAS_IOMEM) && (OF) && (NET_SWITCHDEV)",
            "restrict": ""
        }
    ],
    "SPARX5_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROCHIP ) && (NET_SWITCHDEV) && (HAS_IOMEM) && (OF) && (ARCH_SPARX5 || COMPILE_TEST) && (PTP_1588_CLOCK_OPTIONAL) && (BRIDGE || BRIDGE = n)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MICROSEMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MSCC_OCELOT_SWITCH_LIB": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MSCC_FELIX || NET_DSA_MSCC_SEVILLE || MSCC_OCELOT_SWITCH",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROSEMI )",
            "restrict": ""
        }
    ],
    "MSCC_OCELOT_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROSEMI ) && (PTP_1588_CLOCK_OPTIONAL) && (BRIDGE || BRIDGE = n) && (NET_SWITCHDEV) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MICROSOFT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MICROSOFT_MANA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MICROSOFT ) && (PCI_MSI && X86_64) && (PCI_HYPERV)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MOXART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (( ARM && ARCH_MOXART ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_MOXART_ETHER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MOXART ) && (ARM && ARCH_MOXART)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_MYRI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI && INET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MYRI10GE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MYRI ) && (PCI && INET)",
            "restrict": ""
        }
    ],
    "MYRI10GE_DCA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_MYRI ) && (MYRI10GE && DCA && ! ( MYRI10GE = y && DCA = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FEALNX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_NI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NI_XGE_MANAGEMENT_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NI ) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_NATSEMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MACSONIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NATSEMI ) && (MAC)",
            "restrict": ""
        }
    ],
    "MIPS_JAZZ_SONIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NATSEMI ) && (MACH_JAZZ)",
            "restrict": ""
        }
    ],
    "NATSEMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NATSEMI ) && (PCI)",
            "restrict": ""
        }
    ],
    "NS83820": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NATSEMI ) && (PCI)",
            "restrict": ""
        }
    ],
    "XTENSA_XT2000_SONIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NATSEMI ) && (XTENSA_PLATFORM_XT2000)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_NETERION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "S2IO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NETERION ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_NETRONOME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NETRONOME ) && (PCI && PCI_MSI) && (VXLAN || VXLAN = n) && (TLS && TLS_DEVICE || TLS_DEVICE = n)",
            "restrict": ""
        }
    ],
    "NFP_APP_FLOWER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NETRONOME ) && (NFP) && (NET_SWITCHDEV) && (IPV6 != m || NFP = m)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFP_APP_ABM_NIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NETRONOME ) && (NFP) && (NET_SWITCHDEV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NETRONOME ) && (NFP)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_8390": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (NET_VENDOR_NATSEMI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCMCIA_AXNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "AX88796": [
        {
            "type": "tristate",
            "rev_select": "XSURF100",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (( ARM || MIPS || SUPERH || ZORRO || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "AX88796_93CX6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (AX88796)",
            "restrict": ""
        }
    ],
    "XSURF100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "HYDRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "ARM_ETHERH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (ARM && ARCH_ACORN)",
            "restrict": ""
        }
    ],
    "MAC8390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (MAC)",
            "restrict": ""
        }
    ],
    "MCF8390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (COLDFIRE)",
            "restrict": ""
        }
    ],
    "NE2000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (( ISA || ( Q40 && m ) || MACH_TX49XX || ATARI_ETHERNEC ))",
            "restrict": ""
        }
    ],
    "NE2K_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (PCI)",
            "restrict": ""
        }
    ],
    "APNE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (AMIGA_PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_PCNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "STNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (SUPERH)",
            "restrict": ""
        }
    ],
    "ULTRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (ISA)",
            "restrict": ""
        }
    ],
    "WD80x3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (ISA)",
            "restrict": ""
        }
    ],
    "ZORRO8390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_8390 ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_NVIDIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FORCEDETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_NVIDIA ) && (PCI)",
            "restrict": ""
        }
    ],
    "LPC_ENET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_LPC32XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_OKI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCH_GBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_OKI ) && (PCI && ( X86_32 || COMPILE_TEST )) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "ETHOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_PACKET_ENGINES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAMACHI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_PACKET_ENGINES ) && (PCI)",
            "restrict": ""
        }
    ],
    "YELLOWFIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_PACKET_ENGINES ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_PASEMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PPC_PASEMI && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PASEMI_MAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_PASEMI ) && (PPC_PASEMI && PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_PENSANDO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IONIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_PENSANDO ) && (64BIT && PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_QLOGIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QLA3XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (PCI)",
            "restrict": ""
        }
    ],
    "QLCNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (PCI)",
            "restrict": ""
        }
    ],
    "QLCNIC_SRIOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (QLCNIC && PCI_IOV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QLCNIC_DCB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (QLCNIC && DCB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QLCNIC_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (QLCNIC && HWMON && ! ( QLCNIC = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NETXEN_NIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (PCI)",
            "restrict": ""
        }
    ],
    "QED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (PCI)",
            "restrict": ""
        }
    ],
    "QED_LL2": [
        {
            "type": "bool",
            "rev_select": "QEDI || QEDF || INFINIBAND_QEDR",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC )",
            "restrict": ""
        }
    ],
    "QED_SRIOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (QED && PCI_IOV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QEDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC ) && (QED) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "QED_RDMA": [
        {
            "type": "bool",
            "rev_select": "INFINIBAND_QEDR",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC )",
            "restrict": ""
        }
    ],
    "QED_ISCSI": [
        {
            "type": "bool",
            "rev_select": "QEDI",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC )",
            "restrict": ""
        }
    ],
    "QED_NVMETCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC )",
            "restrict": ""
        }
    ],
    "QED_FCOE": [
        {
            "type": "bool",
            "rev_select": "QEDF",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC )",
            "restrict": ""
        }
    ],
    "QED_OOO": [
        {
            "type": "bool",
            "rev_select": "QEDI || INFINIBAND_QEDR",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QLOGIC )",
            "restrict": ""
        }
    ],
    "NET_VENDOR_BROCADE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BNA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_BROCADE ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_QUALCOMM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QCA7000": [
        {
            "type": "tristate",
            "rev_select": "QCA7000_SPI || QCA7000_UART",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QUALCOMM )",
            "restrict": ""
        }
    ],
    "QCA7000_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QUALCOMM ) && (SPI_MASTER && OF)",
            "restrict": ""
        }
    ],
    "QCA7000_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QUALCOMM ) && (SERIAL_DEV_BUS && OF)",
            "restrict": ""
        }
    ],
    "QCOM_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QUALCOMM ) && (HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RMNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_QUALCOMM )",
            "restrict": ""
        }
    ],
    "NET_VENDOR_RDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "R6040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_RDC ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_REALTEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI || ( PARPORT && X86 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (PARPORT && X86)",
            "restrict": ""
        }
    ],
    "8139CP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (PCI)",
            "restrict": ""
        }
    ],
    "8139TOO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (PCI)",
            "restrict": ""
        }
    ],
    "8139TOO_PIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (8139TOO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "8139TOO_TUNE_TWISTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (8139TOO)",
            "restrict": ""
        }
    ],
    "8139TOO_8129": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (8139TOO)",
            "restrict": ""
        }
    ],
    "8139_OLD_RX_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (8139TOO)",
            "restrict": ""
        }
    ],
    "R8169": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_REALTEK ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_RENESAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SH_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_RENESAS ) && (ARCH_RENESAS || SUPERH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RAVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_RENESAS ) && (ARCH_RENESAS || COMPILE_TEST) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_ROCKER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ROCKER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_ROCKER ) && (PCI && NET_SWITCHDEV && BRIDGE)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SAMSUNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SXGBE_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SAMSUNG ) && (HAS_IOMEM && HAS_DMA) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SEEQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_ETHER3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SEEQ ) && (ARM && ARCH_ACORN)",
            "restrict": ""
        }
    ],
    "SGISEEQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SEEQ ) && (SGI_HAS_SEEQ)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SGI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (( PCI && SGI_MFD_IOC3 ) || SGI_IP32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SGI_IOC3_ETH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SGI ) && (PCI && SGI_MFD_IOC3)",
            "restrict": ""
        }
    ],
    "SGI_O2MACE_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SGI ) && (SGI_IP32 = y)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SILAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SC92031": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SILAN ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SIS900": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SIS ) && (PCI)",
            "restrict": ""
        }
    ],
    "SIS190": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SIS ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SOLARFLARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (PCI) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "SFC_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC && MTD && ! ( SFC = y && MTD = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_MCDI_MON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC && HWMON && ! ( SFC = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_SRIOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC && PCI_IOV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_MCDI_LOGGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_FALCON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (PCI)",
            "restrict": ""
        }
    ],
    "SFC_FALCON_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC_FALCON && MTD && ! ( SFC_FALCON = y && MTD = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_SIENA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (PCI) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "SFC_SIENA_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC_SIENA && MTD && ! ( SFC_SIENA = y && MTD = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_SIENA_MCDI_MON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC_SIENA && HWMON && ! ( SFC_SIENA = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SFC_SIENA_SRIOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC_SIENA && PCI_IOV)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SFC_SIENA_MCDI_LOGGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOLARFLARE ) && (SFC_SIENA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NET_VENDOR_SMSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARM || ARM64 || ATARI_ETHERNAT || COLDFIRE || ISA || MAC || MIPS || NIOS2 || PCI || PCMCIA || SUPERH || XTENSA || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SMC9194": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (ISA)",
            "restrict": ""
        }
    ],
    "SMC91X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (! OF || GPIOLIB) && (ARM || ARM64 || ATARI_ETHERNAT || COLDFIRE || MIPS || NIOS2 || SUPERH || XTENSA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCMCIA_SMC91C92": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "EPIC100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (PCI)",
            "restrict": ""
        }
    ],
    "SMC911X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (( ARM || SUPERH || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SMSC911X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SMSC911X_ARCH_HOOKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (SMSC911X)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SMSC9420": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SMSC ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SOCIONEXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SNI_AVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOCIONEXT ) && (( ARCH_UNIPHIER || COMPILE_TEST ) && OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SNI_NETSEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SOCIONEXT ) && (( ARCH_SYNQUACER || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_STMICRO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "STMMAC_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && (HAS_IOMEM && HAS_DMA) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "STMMAC_SELFTESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && (INET) && (STMMAC_ETH)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "STMMAC_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && (STMMAC_ETH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DWMAC_DWC_QOS_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && HAS_DMA)",
            "restrict": ""
        }
    ],
    "DWMAC_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM )",
            "restrict": "( STMMAC_PLATFORM )[!(y)]"
        }
    ],
    "DWMAC_ANARION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARC || COMPILE_TEST ))",
            "restrict": "( ARC )[!(y)]"
        }
    ],
    "DWMAC_INGENIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && HAS_IOMEM && ( MACH_INGENIC || COMPILE_TEST ))",
            "restrict": "( MACH_INGENIC )[!(y)]"
        }
    ],
    "DWMAC_IPQ806X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": "( ARCH_QCOM )[!(y)]"
        }
    ],
    "DWMAC_LPC18XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_LPC18XX || COMPILE_TEST ))",
            "restrict": "( ARCH_LPC18XX )[!(y)]"
        }
    ],
    "DWMAC_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_MEDIATEK || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "DWMAC_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && COMMON_CLK && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "DWMAC_OXNAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && COMMON_CLK && ( ARCH_OXNAS || COMPILE_TEST ))",
            "restrict": "( ARCH_OXNAS )[!(y)]"
        }
    ],
    "DWMAC_QCOM_ETHQOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": "( ARCH_QCOM )[!(y)]"
        }
    ],
    "DWMAC_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_ROCKCHIP || COMPILE_TEST ))",
            "restrict": "( ARCH_ROCKCHIP )[!(y)]"
        }
    ],
    "DWMAC_SOCFPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_INTEL_SOCFPGA || COMPILE_TEST ))",
            "restrict": "( ARCH_INTEL_SOCFPGA )[!(y)]"
        }
    ],
    "DWMAC_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_STI || COMPILE_TEST ))",
            "restrict": "( ARCH_STI )[!(y)]"
        }
    ],
    "DWMAC_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && HAS_IOMEM && ( ARCH_STM32 || COMPILE_TEST ))",
            "restrict": "( ARCH_STM32 )[!(y)]"
        }
    ],
    "DWMAC_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_SUNXI || COMPILE_TEST ))",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "DWMAC_SUN8I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_SUNXI || COMPILE_TEST ))",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "DWMAC_IMX8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && ( ARCH_MXC || COMPILE_TEST ))",
            "restrict": "( ARCH_MXC )[!(y)]"
        }
    ],
    "DWMAC_INTEL_PLAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && COMMON_CLK) && (STMMAC_ETH)",
            "restrict": ""
        }
    ],
    "DWMAC_VISCONTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && ( STMMAC_PLATFORM ) && (OF && COMMON_CLK && ( ARCH_VISCONTI || COMPILE_TEST ))",
            "restrict": "( ARCH_VISCONTI )[!(y)]"
        }
    ],
    "DWMAC_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && (X86 && STMMAC_ETH && PCI) && (COMMON_CLK)",
            "restrict": "( X86 )[!(y)]"
        }
    ],
    "DWMAC_LOONGSON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && (STMMAC_ETH && PCI) && (COMMON_CLK)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "STMMAC_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_STMICRO ) && ( STMMAC_ETH ) && (STMMAC_ETH && PCI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SUN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (SUN3 || SBUS || PCI || SUN_LDOMS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAPPYMEAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (( SBUS || PCI ))",
            "restrict": ""
        }
    ],
    "SUNBMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (SBUS)",
            "restrict": ""
        }
    ],
    "SUNQE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (SBUS)",
            "restrict": ""
        }
    ],
    "SUNGEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (PCI)",
            "restrict": ""
        }
    ],
    "CASSINI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (PCI)",
            "restrict": ""
        }
    ],
    "SUNVNET_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (SUN_LDOMS) && (INET)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SUNVNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (SUN_LDOMS) && (SUNVNET_COMMON)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "LDMVSW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (SUN_LDOMS) && (SUNVNET_COMMON)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "NIU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUN ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SUNPLUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (ARCH_SUNPLUS || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SP7021_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SUNPLUS ) && (SOC_SP7021 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_SYNOPSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DWC_XLGMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SYNOPSYS ) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "DWC_XLGMAC_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_SYNOPSYS ) && ( DWC_XLGMAC ) && (DWC_XLGMAC && PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_TEHUTI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEHUTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TEHUTI ) && (PCI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_TI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI || EISA || AR7 || ARCH_DAVINCI || ARCH_OMAP2PLUS || ARCH_KEYSTONE || ARCH_K3)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TI_DAVINCI_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARM && ( ARCH_DAVINCI || ARCH_OMAP3 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TI_DAVINCI_MDIO": [
        {
            "type": "tristate",
            "rev_select": "TI_DAVINCI_EMAC || TI_CPSW || TI_CPSW_SWITCHDEV || TI_K3_AM65_CPSW_NUSS || TI_KEYSTONE_NETCP",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARCH_DAVINCI || ARCH_OMAP2PLUS || ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TI_CPSW_PHY_SEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TI_CPSW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARCH_DAVINCI || ARCH_OMAP2PLUS || COMPILE_TEST) && (TI_CPTS || ! TI_CPTS)",
            "restrict": ""
        }
    ],
    "TI_CPSW_SWITCHDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARCH_DAVINCI || ARCH_OMAP2PLUS || COMPILE_TEST) && (NET_SWITCHDEV) && (TI_CPTS || ! TI_CPTS)",
            "restrict": ""
        }
    ],
    "TI_CPTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARCH_OMAP2PLUS || ARCH_KEYSTONE || COMPILE_TEST) && (COMMON_CLK) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "TI_K3_AM65_CPSW_NUSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARCH_K3 && OF && TI_K3_UDMA_GLUE_LAYER) && (TI_K3_AM65_CPTS || ! TI_K3_AM65_CPTS)",
            "restrict": ""
        }
    ],
    "TI_K3_AM65_CPSW_SWITCHDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (TI_K3_AM65_CPSW_NUSS) && (NET_SWITCHDEV)",
            "restrict": ""
        }
    ],
    "TI_K3_AM65_CPTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (ARCH_K3 && OF) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "TI_AM65_CPSW_TAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (TI_K3_AM65_CPSW_NUSS && NET_SCH_TAPRIO && TI_K3_AM65_CPTS)",
            "restrict": ""
        }
    ],
    "TI_KEYSTONE_NETCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (OF) && (KEYSTONE_NAVIGATOR_DMA && KEYSTONE_NAVIGATOR_QMSS) && (TI_CPTS || ! TI_CPTS)",
            "restrict": ""
        }
    ],
    "TI_KEYSTONE_NETCP_ETHSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (TI_KEYSTONE_NETCP)",
            "restrict": ""
        }
    ],
    "TLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (( PCI || EISA ))",
            "restrict": ""
        }
    ],
    "CPMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TI ) && (AR7)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_TOSHIBA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCI && ( PPC_IBM_CELL_BLADE || MIPS ) || PPC_PS3)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GELIC_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TOSHIBA ) && (PPC_PS3)",
            "restrict": ""
        }
    ],
    "GELIC_WIRELESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TOSHIBA ) && (GELIC_NET && WLAN)",
            "restrict": ""
        }
    ],
    "SPIDER_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TOSHIBA ) && (PCI && PPC_IBM_CELL_BLADE)",
            "restrict": ""
        }
    ],
    "TC35815": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TOSHIBA ) && (PCI && MIPS)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_TUNDRA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (TSI108_BRIDGE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TSI108_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_TUNDRA ) && (TSI108_BRIDGE)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_VERTEXCOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MSE102X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_VERTEXCOM ) && (SPI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_VIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIA_RHINE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_VIA ) && (PCI || ( OF_IRQ && GENERIC_PCI_IOMAP )) && (PCI || ARCH_VT8500 || COMPILE_TEST) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIA_RHINE_MMIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_VIA ) && (VIA_RHINE)",
            "restrict": ""
        }
    ],
    "VIA_VELOCITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_VIA ) && (( PCI || ( OF_ADDRESS && OF_IRQ ) )) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_WIZNET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WIZNET_W5100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WIZNET ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "WIZNET_W5300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WIZNET ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "WIZNET_BUS_DIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WIZNET ) && ( ( WIZNET_W5100 || WIZNET_W5300 ) ) && ( WIZNET_BUS_DIRECT &&  !WIZNET_BUS_INDIRECT &&  !WIZNET_BUS_ANY )",
            "restrict": ""
        }
    ],
    "WIZNET_BUS_INDIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WIZNET ) && ( ( WIZNET_W5100 || WIZNET_W5300 ) ) && ( WIZNET_BUS_INDIRECT &&  !WIZNET_BUS_DIRECT &&  !WIZNET_BUS_ANY )",
            "restrict": ""
        }
    ],
    "WIZNET_BUS_ANY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WIZNET ) && ( ( WIZNET_W5100 || WIZNET_W5300 ) ) && ( WIZNET_BUS_ANY &&  !WIZNET_BUS_DIRECT &&  !WIZNET_BUS_INDIRECT )",
            "restrict": ""
        }
    ],
    "WIZNET_W5100_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_WIZNET ) && (WIZNET_BUS_ANY && WIZNET_W5100) && (SPI)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_XILINX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XILINX_EMACLITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_XILINX ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "XILINX_AXI_EMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_XILINX ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "XILINX_LL_TEMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_XILINX ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NET_VENDOR_XIRCOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && (PCMCIA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PCMCIA_XIRC2PS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ETHERNET ) && ( NET_VENDOR_XIRCOM ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "FDDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (PCI || EISA || TC)",
            "restrict": ""
        }
    ],
    "DEFZA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( FDDI ) && (FDDI && TC)",
            "restrict": ""
        }
    ],
    "DEFXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( FDDI ) && (FDDI && ( PCI || EISA || TC ))",
            "restrict": ""
        }
    ],
    "SKFP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( FDDI ) && (FDDI && PCI)",
            "restrict": ""
        }
    ],
    "HIPPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (INET && PCI)",
            "restrict": ""
        }
    ],
    "ROADRUNNER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( HIPPI ) && (PCI)",
            "restrict": ""
        }
    ],
    "ROADRUNNER_LARGE_RINGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( HIPPI ) && (ROADRUNNER)",
            "restrict": ""
        }
    ],
    "QCOM_IPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (NET && QCOM_SMEM) && (ARCH_QCOM || COMPILE_TEST) && (INTERCONNECT) && (QCOM_RPROC_COMMON || ( QCOM_RPROC_COMMON = n && COMPILE_TEST )) && (QCOM_AOSS_QMP || QCOM_AOSS_QMP = n)",
            "restrict": ""
        }
    ],
    "NET_SB1000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (PNP)",
            "restrict": ""
        }
    ],
    "PHYLINK": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA || AG71XX || MACB || FSL_DPAA2_ETH || FSL_ENETC || FSL_ENETC_VF || MVNETA || MVPP2 || PRESTERA || NET_MEDIATEK_SOC || LAN966X_SWITCH || SPARX5_SWITCH || MSCC_OCELOT_SWITCH_LIB || STMMAC_ETH || TI_K3_AM65_CPSW_NUSS || XILINX_AXI_EMAC || PCS_XPCS",
            "dep": "( NETDEVICES ) && (NETDEVICES)",
            "restrict": ""
        }
    ],
    "PHYLIB": [
        {
            "type": "tristate",
            "rev_select": "OWL_EMAC || GRETH || ET131X || SUN4I_EMAC || ALTERA_TSE || MIPS_AU1X00_ENET || AMD_XGBE || NET_XGENE || ARC_EMAC_CORE || SPI_AX88796C || B44 || BCM63XX_ENET || BCMGENET || SB1250_MAC || TIGON3 || BGMAC_BCMA || BGMAC_PLATFORM || SYSTEMPORT || THUNDER_NIC_BGX || THUNDER_NIC_RGX || OCTEON_MGMT_ETHERNET || GEMINI_ETHERNET || DM9051 || DNET || TSNEP || FTGMAC100 || FEC || FEC_MPC52xx || FS_ENET || FSL_FMAN || FSL_PQ_MDIO || FSL_XGMAC_MDIO || UCC_GETH || GIANFAR || FSL_DPAA_ETH || HIX5HD2_GMAC || HISI_FEMAC || HNS_MDIO || HNS_ENET || IBM_EMAC || IXGBE || IXP4XX_ETH || MV643XX_ETH || MVMDIO || PXA168_ETH || NET_MEDIATEK_STAR_EMAC || MLXBF_GIGE || KS8851 || KS8851_MLL || LAN743X || NI_XGE_MANAGEMENT_ENET || AX88796 || LPC_ENET || ETHOC || PASEMI_MAC || QCOM_EMAC || R6040 || R8169 || SH_ETH || RAVB || SXGBE_ETH || SMSC911X || SMSC9420 || SNI_AVE || SNI_NETSEC || SP7021_EMAC || TI_DAVINCI_EMAC || TI_DAVINCI_MDIO || CPMAC || TC35815 || XILINX_EMACLITE || XILINX_LL_TEMAC || PHYLINK || USB_LAN78XX || USB_NET_AX8817X || USB_NET_AX88179_178A || USB_NET_SMSC95XX || OCTEON_ETHERNET",
            "dep": "( NETDEVICES ) && (NETDEVICES)",
            "restrict": ""
        }
    ],
    "SWPHY": [
        {
            "type": "bool",
            "rev_select": "PHYLINK || FIXED_PHY",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "LED_TRIGGER_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (LEDS_TRIGGERS)",
            "restrict": ""
        }
    ],
    "FIXED_PHY": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_BCM_SF2 || NET_DSA_LOOP || NET_DSA_REALTEK || NET_DSA_VITESSE_VSC73XX || BCMGENET || BGMAC_BCMA || BGMAC_PLATFORM || SYSTEMPORT || UCC_GETH || GIANFAR || FSL_DPAA_ETH || FWNODE_MDIO || OF_MDIO || USB_LAN78XX",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (PHYLIB)",
            "restrict": ""
        }
    ],
    "SFP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (I2C && PHYLINK) && (HWMON || HWMON = n)",
            "restrict": ""
        }
    ],
    "AMD_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MESON_GXL_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ADIN_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "ADIN1100_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "AQUANTIA_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "AX88796B_PHY": [
        {
            "type": "tristate",
            "rev_select": "XSURF100 || USB_NET_AX8817X",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "BROADCOM_PHY": [
        {
            "type": "tristate",
            "rev_select": "BCMGENET[ARCH_BCM2835]",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "BCM54140_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (PHYLIB) && (HWMON || HWMON = n)",
            "restrict": ""
        }
    ],
    "BCM63XX_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (BCM63XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM7XXX_PHY": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_BCM_SF2 || BCMGENET",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "BCM84881_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (PHYLIB)",
            "restrict": ""
        }
    ],
    "BCM87XX_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "BCM_CYGNUS_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (ARCH_BCM_IPROC || COMPILE_TEST) && (MDIO_BCM_IPROC)",
            "restrict": ""
        }
    ],
    "BCM_NET_PHYLIB": [
        {
            "type": "tristate",
            "rev_select": "BROADCOM_PHY || BCM54140_PHY || BCM63XX_PHY || BCM7XXX_PHY || BCM_CYGNUS_PHY",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "BCM_NET_PHYPTP": [
        {
            "type": "tristate",
            "rev_select": "BROADCOM_PHY[NETWORK_PHY_TIMESTAMPING]",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "CICADA_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "CORTINA_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DAVICOM_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "ICPLUS_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "LXT_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "INTEL_XWAY_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "LSI_ET1011C_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MARVELL_PHY": [
        {
            "type": "tristate",
            "rev_select": "HIP04_ETH",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MARVELL_10G_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MARVELL_88X2222_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MAXLINEAR_GPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (HWMON || HWMON = n)",
            "restrict": ""
        }
    ],
    "MEDIATEK_GE_PHY": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MT7530",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MICREL_PHY": [
        {
            "type": "tristate",
            "rev_select": "KS8851 || KS8851_MLL",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "MICROCHIP_PHY": [
        {
            "type": "tristate",
            "rev_select": "USB_LAN78XX",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MICROCHIP_T1_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MICROSEMI_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (MACSEC || MACSEC = n) && (PTP_1588_CLOCK_OPTIONAL || ! NETWORK_PHY_TIMESTAMPING)",
            "restrict": ""
        }
    ],
    "MOTORCOMM_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "NATIONAL_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "NXP_C45_TJA11XX_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "NXP_TJA11XX_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (HWMON)",
            "restrict": ""
        }
    ],
    "AT803X_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB ) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "QSEMI_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "REALTEK_PHY": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_REALTEK || R8169",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "RENESAS_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "ROCKCHIP_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "SMSC_PHY": [
        {
            "type": "tristate",
            "rev_select": "SMSC9420 || USB_NET_SMSC95XX",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "STE10XP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "TERANETICS_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DP83822_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DP83TC811_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DP83848_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DP83867_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DP83869_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "DP83TD510_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "VITESSE_PHY": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_VITESSE_VSC73XX",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "XILINX_GMII2RGMII": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PHYLIB )",
            "restrict": ""
        }
    ],
    "MICREL_KS8995MA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (SPI)",
            "restrict": ""
        }
    ],
    "CAN_DEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (CAN)",
            "restrict": ""
        }
    ],
    "CAN_VCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV )",
            "restrict": ""
        }
    ],
    "CAN_VXCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV )",
            "restrict": ""
        }
    ],
    "CAN_NETLINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CAN_CALC_BITTIMING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CAN_RX_OFFLOAD": [
        {
            "type": "bool",
            "rev_select": "CAN_CAN327 || CAN_FLEXCAN || CAN_TI_HECC || CAN_M_CAN || CAN_MCP251XFD",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK )",
            "restrict": ""
        }
    ],
    "CAN_AT91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (( ARCH_AT91 || COMPILE_TEST ) && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_CAN327": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (TTY)",
            "restrict": ""
        }
    ],
    "CAN_FLEXCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (OF || COLDFIRE || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_GRCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (OF && HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_JANZ_ICAN3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (MFD_JANZ_CMODIO)",
            "restrict": ""
        }
    ],
    "CAN_KVASER_PCIEFD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_SLCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (TTY)",
            "restrict": ""
        }
    ],
    "CAN_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (MACH_SUN4I || MACH_SUN7I || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CAN_TI_HECC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (ARM)",
            "restrict": ""
        }
    ],
    "CAN_XILINXCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (ARCH_ZYNQ || ARM64 || MICROBLAZE || COMPILE_TEST) && (COMMON_CLK && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PCH_CAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (PCI && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CAN_C_CAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_C_CAN_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_C_CAN )",
            "restrict": ""
        }
    ],
    "CAN_C_CAN_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_C_CAN ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_CC770": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_CC770_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_CC770 )",
            "restrict": ""
        }
    ],
    "CAN_CC770_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_CC770 )",
            "restrict": ""
        }
    ],
    "CAN_CTUCANFD": [
        {
            "type": "tristate",
            "rev_select": "CAN_CTUCANFD_PCI || CAN_CTUCANFD_PLATFORM",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK )",
            "restrict": ""
        }
    ],
    "CAN_CTUCANFD_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_CTUCANFD_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (HAS_IOMEM && ( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CAN_IFI_CANFD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_M_CAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK )",
            "restrict": ""
        }
    ],
    "CAN_M_CAN_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_M_CAN ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_M_CAN_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_M_CAN ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_M_CAN_TCAN4X5X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_M_CAN ) && (SPI)",
            "restrict": ""
        }
    ],
    "CAN_MSCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (PPC)",
            "restrict": ""
        }
    ],
    "CAN_MPC5XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_MSCAN ) && (( PPC_MPC52xx || PPC_MPC512x ))",
            "restrict": ""
        }
    ],
    "CAN_PEAK_PCIEFD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_RCAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CAN_RCAR_CANFD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CAN_SJA1000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_EMS_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_EMS_PCMCIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "CAN_F81601": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_KVASER_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_PEAK_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_PEAK_PCIEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (CAN_PEAK_PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CAN_PEAK_PCMCIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCMCIA) && (HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "CAN_PLX_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (PCI)",
            "restrict": ""
        }
    ],
    "CAN_SJA1000_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 )",
            "restrict": ""
        }
    ],
    "CAN_SJA1000_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 )",
            "restrict": ""
        }
    ],
    "CAN_TSCAN1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( CAN_SJA1000 ) && (ISA)",
            "restrict": ""
        }
    ],
    "CAN_SOFTING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CAN_SOFTING_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && (PCMCIA) && (CAN_SOFTING)",
            "restrict": ""
        }
    ],
    "CAN_HI311X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( SPI ) )",
            "restrict": ""
        }
    ],
    "CAN_MCP251X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( SPI ) )",
            "restrict": ""
        }
    ],
    "CAN_MCP251XFD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( SPI ) )",
            "restrict": ""
        }
    ],
    "CAN_MCP251XFD_SANITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( SPI ) ) && (CAN_MCP251XFD)",
            "restrict": ""
        }
    ],
    "CAN_8DEV_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_EMS_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_ESD_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_ETAS_ES58X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_GS_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_KVASER_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_MCBA_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_PEAK_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_UCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV ) && ( CAN_NETLINK ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "CAN_DEBUG_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( CAN_DEV )",
            "restrict": ""
        }
    ],
    "MCTP_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MCTP ) && (TTY)",
            "restrict": ""
        }
    ],
    "MCTP_TRANSPORT_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MCTP ) && (I2C_MUX || ! I2C_MUX) && (I2C) && (I2C_SLAVE)",
            "restrict": ""
        }
    ],
    "MDIO_DEVICE": [
        {
            "type": "tristate",
            "rev_select": "PHYLIB",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "MDIO_BUS": [
        {
            "type": "tristate",
            "rev_select": "REGMAP[REGMAP_MDIO]",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE )",
            "restrict": "( m )[!(y) && (PHYLIB = m)] || ( MDIO_DEVICE )[!(y)]"
        }
    ],
    "FWNODE_MDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && (( ACPI || OF ) || COMPILE_TEST)",
            "restrict": "( PHYLIB )[!(y)]"
        }
    ],
    "OF_MDIO": [
        {
            "type": "tristate",
            "rev_select": "FSL_XGMAC_MDIO || IXP4XX_ETH || NI_XGE_MANAGEMENT_ENET[OF]",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && (OF) && (PHYLIB)",
            "restrict": "( PHYLIB )[!(y)]"
        }
    ],
    "ACPI_MDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && (ACPI) && (PHYLIB)",
            "restrict": "( PHYLIB )[!(y)]"
        }
    ],
    "MDIO_DEVRES": [
        {
            "type": "tristate",
            "rev_select": "PHYLIB || MDIO_MVUSB || MDIO_MSCC_MIIM || MDIO_OCTEON || MDIO_THUNDER",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS )",
            "restrict": ""
        }
    ],
    "MDIO_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "SUN4I_EMAC",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MDIO_XGENE": [
        {
            "type": "tristate",
            "rev_select": "NET_XGENE",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (ARCH_XGENE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MDIO_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "FTGMAC100[MACH_ASPEED_G6]",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (ARCH_ASPEED || COMPILE_TEST) && (OF_MDIO && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MDIO_BITBANG": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MICROCHIP_KSZ8863_SMI || FS_ENET_MDIO_FCC || AX88796 || SH_ETH || RAVB || TI_DAVINCI_MDIO",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS )",
            "restrict": ""
        }
    ],
    "MDIO_BCM_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (ARCH_BCM_IPROC || COMPILE_TEST) && (HAS_IOMEM && OF_MDIO)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "MDIO_BCM_UNIMAC": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_BCM_SF2 || BCMGENET",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MDIO_CAVIUM": [
        {
            "type": "tristate",
            "rev_select": "MDIO_OCTEON || MDIO_THUNDER",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS )",
            "restrict": ""
        }
    ],
    "MDIO_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (MDIO_BITBANG) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MDIO_HISI_FEMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (HAS_IOMEM && OF_MDIO)",
            "restrict": ""
        }
    ],
    "MDIO_I2C": [
        {
            "type": "tristate",
            "rev_select": "SFP",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (I2C)",
            "restrict": ""
        }
    ],
    "MDIO_MVUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (USB)",
            "restrict": ""
        }
    ],
    "MDIO_MSCC_MIIM": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MSCC_SEVILLE",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (HAS_IOMEM && REGMAP_MMIO)",
            "restrict": ""
        }
    ],
    "MDIO_MOXART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (ARCH_MOXART || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MDIO_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "OCTEON_MGMT_ETHERNET || OCTEON_ETHERNET",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (( 64BIT && OF_MDIO ) || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MDIO_IPQ4019": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (HAS_IOMEM && OF_MDIO) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "MDIO_IPQ8064": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (HAS_IOMEM && OF_MDIO) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "MDIO_THUNDER": [
        {
            "type": "tristate",
            "rev_select": "THUNDER_NIC_BGX[PCI] || THUNDER_NIC_RGX[PCI]",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (64BIT) && (PCI)",
            "restrict": ""
        }
    ],
    "MDIO_BUS_MUX": [
        {
            "type": "tristate",
            "rev_select": "DWMAC_SUN8I || MDIO_BUS_MUX_MESON_G12A || MDIO_BUS_MUX_BCM6368 || MDIO_BUS_MUX_BCM_IPROC || MDIO_BUS_MUX_GPIO || MDIO_BUS_MUX_MULTIPLEXER || MDIO_BUS_MUX_MMIOREG",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (OF_MDIO)",
            "restrict": ""
        }
    ],
    "MDIO_BUS_MUX_MESON_G12A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (ARCH_MESON || COMPILE_TEST) && (OF_MDIO && HAS_IOMEM && COMMON_CLK)",
            "restrict": "( m )[!(y) && (ARCH_MESON)]"
        }
    ],
    "MDIO_BUS_MUX_BCM6368": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (OF && OF_MDIO && ( BMIPS_GENERIC || COMPILE_TEST ))",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "MDIO_BUS_MUX_BCM_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (OF && OF_MDIO && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "MDIO_BUS_MUX_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (OF_GPIO && OF_MDIO)",
            "restrict": ""
        }
    ],
    "MDIO_BUS_MUX_MULTIPLEXER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (OF_MDIO)",
            "restrict": ""
        }
    ],
    "MDIO_BUS_MUX_MMIOREG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( MDIO_DEVICE ) && ( MDIO_BUS ) && (OF_MDIO && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PCS_XPCS": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_SJA1105 || STMMAC_ETH",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "PCS_LYNX": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_MSCC_FELIX || NET_DSA_MSCC_SEVILLE || FSL_DPAA2_ETH || FSL_ENETC",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "PCS_RZN1_MIIC": [
        {
            "type": "tristate",
            "rev_select": "NET_DSA_RZN1_A5PSW",
            "dep": "( NETDEVICES ) && (OF && ( ARCH_RZN1 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PLIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "PPP": [
        {
            "type": "tristate",
            "rev_select": "IPWIRELESS",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "PPP_BSDCOMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPP_DEFLATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPP_FILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPP_MPPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPP_MULTILINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPPOATM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (ATM && PPP)",
            "restrict": ""
        }
    ],
    "PPPOE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (PPP && NET_IPGRE_DEMUX)",
            "restrict": ""
        }
    ],
    "PPPOL2TP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && (L2TP && PPP)",
            "restrict": ""
        }
    ],
    "PPP_ASYNC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && ( TTY ) && (PPP)",
            "restrict": ""
        }
    ],
    "PPP_SYNC_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( PPP ) && ( TTY ) && (PPP)",
            "restrict": ""
        }
    ],
    "SLIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (TTY)",
            "restrict": ""
        }
    ],
    "SLHC": [
        {
            "type": "tristate",
            "rev_select": "PPP || SLIP_COMPRESSED",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "SLIP_COMPRESSED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( SLIP ) && (SLIP)",
            "restrict": ""
        }
    ],
    "SLIP_SMART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( SLIP ) && (SLIP)",
            "restrict": ""
        }
    ],
    "SLIP_MODE_SLIP6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( SLIP ) && (SLIP)",
            "restrict": ""
        }
    ],
    "LCS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (CCW && NETDEVICES && ( ETHERNET || FDDI ))",
            "restrict": "( m )[!(y)]"
        }
    ],
    "CTCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (CCW && NETDEVICES)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "NETIUCV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (IUCV && NETDEVICES)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SMSGIUCV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (IUCV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SMSGIUCV_EVENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (SMSGIUCV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "QETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (CCW && NETDEVICES && IP_MULTICAST && QDIO && ETHERNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QETH_L2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (QETH) && (BRIDGE || BRIDGE = n)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QETH_L3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (QETH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QETH_OSX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (QETH)",
            "restrict": "( ! HAVE_MARCH_Z15_FEATURES )[!(y)]"
        }
    ],
    "CCWGROUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) )",
            "restrict": "( ( LCS || CTCM || QETH || SMC ) )[!(y)]"
        }
    ],
    "ISM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( ( NETDEVICES && S390 ) ) && (PCI && SMC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "USB_NET_DRIVERS": [
        {
            "type": "tristate",
            "rev_select": "USB_NET_RNDIS_WLAN",
            "dep": "( NETDEVICES ) && (USB && NET)",
            "restrict": ""
        }
    ],
    "USB_CATC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_KAWETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_PEGASUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_RTL8150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_RTL8152": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_LAN78XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_USBNET": [
        {
            "type": "tristate",
            "rev_select": "USB_NET_RNDIS_WLAN",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": ""
        }
    ],
    "USB_NET_AX8817X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_NET_AX88179_178A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_NET_CDCETHER": [
        {
            "type": "tristate",
            "rev_select": "USB_NET_CDC_NCM || USB_NET_RNDIS_HOST || USB_NET_ZAURUS || USB_NET_RNDIS_WLAN",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_NET_CDC_EEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_CDC_NCM": [
        {
            "type": "tristate",
            "rev_select": "USB_NET_HUAWEI_CDC_NCM || USB_NET_CDC_MBIM",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_NET_HUAWEI_CDC_NCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_CDC_MBIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_DM9601": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_SR9700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_SR9800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_SMSC75XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_SMSC95XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_GL620A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_NET1080": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_NET_PLUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_MCS7830": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_RNDIS_HOST": [
        {
            "type": "tristate",
            "rev_select": "USB_NET_RNDIS_WLAN",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_CDC_SUBSET_ENABLE": [
        {
            "type": "tristate",
            "rev_select": "USB_ALI_M5632 || USB_AN2720 || USB_BELKIN || USB_ARMLINUX || USB_EPSON2888 || USB_KC2190",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": ""
        }
    ],
    "USB_NET_CDC_SUBSET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_ALI_M5632": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": ""
        }
    ],
    "USB_AN2720": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": ""
        }
    ],
    "USB_BELKIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_ARMLINUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_EPSON2888": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": ""
        }
    ],
    "USB_KC2190": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDC_SUBSET)",
            "restrict": ""
        }
    ],
    "USB_NET_ZAURUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_NET_CX82310_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_KALMIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_QMI_WWAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_HSO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB && RFKILL && TTY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "USB_NET_INT51X1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_CDC_PHONET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (PHONET && USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_IPHETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "USB_SIERRA_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_VL600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDCETHER && TTY)",
            "restrict": ""
        }
    ],
    "USB_NET_CH9200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_NET_AQC111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_USBNET)",
            "restrict": ""
        }
    ],
    "USB_RTL8153_ECM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( USB_NET_DRIVERS ) && (USB_NET_CDCETHER && ( USB_RTL8152 || USB_RTL8152 = n ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WLAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (! S390) && (NET)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_ADMTEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ADM8211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ADMTEK ) && (MAC80211 && PCI)",
            "restrict": ""
        }
    ],
    "ATH_COMMON": [
        {
            "type": "tristate",
            "rev_select": "ATH5K || ATH9K_COMMON || CARL9170 || AR5523 || ATH10K || ATH11K",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_ATH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATH_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH )",
            "restrict": ""
        }
    ],
    "ATH_TRACEPOINTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH_DEBUG) && (EVENT_TRACING)",
            "restrict": ""
        }
    ],
    "ATH_REG_DYNAMIC_USER_REG_HINTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CFG80211_CERTIFICATION_ONUS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH_REG_DYNAMIC_USER_CERT_TESTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH_REG_DYNAMIC_USER_REG_HINTS && CFG80211_CERTIFICATION_ONUS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH5K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (( PCI || ATH25 ) && MAC80211)",
            "restrict": ""
        }
    ],
    "ATH5K_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH5K)",
            "restrict": ""
        }
    ],
    "ATH5K_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH5K) && (EVENT_TRACING)",
            "restrict": ""
        }
    ],
    "ATH5K_AHB": [
        {
            "type": "bool",
            "rev_select": "ATH5K[ATH25]",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH25 && ATH5K)",
            "restrict": ""
        }
    ],
    "ATH5K_PCI": [
        {
            "type": "bool",
            "rev_select": "ATH5K[! ATH25]",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (( ! ATH25 && PCI ))",
            "restrict": ""
        }
    ],
    "ATH5K_TEST_CHANNELS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH5K && CFG80211_CERTIFICATION_ONUS)",
            "restrict": ""
        }
    ],
    "ATH9K_HW": [
        {
            "type": "tristate",
            "rev_select": "ATH9K || ATH9K_HTC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH )",
            "restrict": ""
        }
    ],
    "ATH9K_COMMON": [
        {
            "type": "tristate",
            "rev_select": "ATH9K || ATH9K_HTC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH )",
            "restrict": ""
        }
    ],
    "ATH9K_COMMON_DEBUG": [
        {
            "type": "bool",
            "rev_select": "ATH9K_DEBUGFS || ATH9K_HTC_DEBUGFS",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH )",
            "restrict": ""
        }
    ],
    "ATH9K_DFS_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K_DEBUGFS && ATH9K_DFS_CERTIFIED)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATH9K_BTCOEX_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (( ATH9K || ATH9K_HTC ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATH9K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (MAC80211 && HAS_DMA)",
            "restrict": ""
        }
    ],
    "ATH9K_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K && PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATH9K_AHB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ATH9K_STATION_STATISTICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K && ATH9K_DEBUGFS && DEBUG_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_TX99": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K_DEBUGFS && CFG80211_CERTIFICATION_ONUS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_DFS_CERTIFIED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K && CFG80211_CERTIFICATION_ONUS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_DYNACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_WOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K && PM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_RFKILL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K) && (RFKILL = y || RFKILL = ATH9K)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ATH9K_CHANNEL_CONTEXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_PCOEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "ATH9K_PCI_NO_EEPROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K_PCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_HTC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (USB && MAC80211)",
            "restrict": ""
        }
    ],
    "ATH9K_HTC_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K_HTC && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ATH9K_HWRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K && ( HW_RANDOM = y || HW_RANDOM = ATH9K ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH9K_COMMON_SPECTRAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH9K_DEBUGFS || ATH9K_HTC_DEBUGFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CARL9170": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (USB && MAC80211)",
            "restrict": ""
        }
    ],
    "CARL9170_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CARL9170) && (MAC80211_LEDS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CARL9170_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CARL9170 && DEBUG_FS && MAC80211_DEBUGFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CARL9170_WPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CARL9170 && ( INPUT = y || INPUT = CARL9170 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CARL9170_HWRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CARL9170 && ( HW_RANDOM = y || HW_RANDOM = CARL9170 ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH6KL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CFG80211)",
            "restrict": ""
        }
    ],
    "ATH6KL_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH6KL) && (MMC)",
            "restrict": ""
        }
    ],
    "ATH6KL_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH6KL) && (USB)",
            "restrict": ""
        }
    ],
    "ATH6KL_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH6KL)",
            "restrict": ""
        }
    ],
    "ATH6KL_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH6KL) && (EVENT_TRACING)",
            "restrict": ""
        }
    ],
    "ATH6KL_REGDOMAIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH6KL) && (CFG80211_CERTIFICATION_ONUS)",
            "restrict": ""
        }
    ],
    "AR5523": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (MAC80211 && USB)",
            "restrict": ""
        }
    ],
    "WIL6210": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (CFG80211) && (PCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "WIL6210_ISR_COR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (WIL6210)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WIL6210_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (WIL6210) && (EVENT_TRACING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "WIL6210_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (WIL6210) && (DEBUG_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATH10K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (MAC80211 && HAS_DMA)",
            "restrict": ""
        }
    ],
    "ATH10K_CE": [
        {
            "type": "bool",
            "rev_select": "ATH10K",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH )",
            "restrict": ""
        }
    ],
    "ATH10K_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K && PCI)",
            "restrict": ""
        }
    ],
    "ATH10K_AHB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K_PCI && OF && RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "ATH10K_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K && MMC)",
            "restrict": ""
        }
    ],
    "ATH10K_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K && USB)",
            "restrict": ""
        }
    ],
    "ATH10K_SNOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ATH10K_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K)",
            "restrict": ""
        }
    ],
    "ATH10K_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ATH10K_SPECTRAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K_DEBUGFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ATH10K_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K) && (EVENT_TRACING)",
            "restrict": ""
        }
    ],
    "ATH10K_DFS_CERTIFIED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH10K && CFG80211_CERTIFICATION_ONUS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "WCN36XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (MAC80211 && HAS_DMA) && (QCOM_WCNSS_CTRL || QCOM_WCNSS_CTRL = n) && (RPMSG || RPMSG = n)",
            "restrict": ""
        }
    ],
    "WCN36XX_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (WCN36XX)",
            "restrict": ""
        }
    ],
    "ATH11K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (MAC80211 && HAS_DMA) && (CRYPTO_MICHAEL_MIC)",
            "restrict": ""
        }
    ],
    "ATH11K_AHB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH11K) && (REMOTEPROC)",
            "restrict": ""
        }
    ],
    "ATH11K_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH11K && PCI)",
            "restrict": ""
        }
    ],
    "ATH11K_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH11K)",
            "restrict": ""
        }
    ],
    "ATH11K_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH11K && DEBUG_FS && MAC80211_DEBUGFS)",
            "restrict": ""
        }
    ],
    "ATH11K_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH11K && EVENT_TRACING)",
            "restrict": ""
        }
    ],
    "ATH11K_SPECTRAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATH ) && (ATH11K_DEBUGFS) && (RELAY)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_ATMEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATMEL ) && (CFG80211 && ( PCI || PCMCIA ))",
            "restrict": ""
        }
    ],
    "PCI_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATMEL ) && (ATMEL && PCI)",
            "restrict": ""
        }
    ],
    "PCMCIA_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATMEL ) && (ATMEL && PCMCIA)",
            "restrict": ""
        }
    ],
    "AT76C50X_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ATMEL ) && (MAC80211 && USB)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_BROADCOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (( BCMA_POSSIBLE || SSB_POSSIBLE ) && MAC80211 && HAS_DMA)",
            "restrict": ""
        }
    ],
    "B43_BCMA": [
        {
            "type": "bool",
            "rev_select": "B43_BUSES_BCMA_AND_SSB || B43_BUSES_BCMA",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM )",
            "restrict": ""
        }
    ],
    "B43_SSB": [
        {
            "type": "bool",
            "rev_select": "B43_BUSES_BCMA_AND_SSB || B43_BUSES_SSB",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM )",
            "restrict": ""
        }
    ],
    "B43_BUSES_BCMA_AND_SSB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && ( ( B43 ) ) && (BCMA_POSSIBLE && SSB_POSSIBLE) && ( B43_BUSES_BCMA_AND_SSB &&  !B43_BUSES_BCMA &&  !B43_BUSES_SSB )",
            "restrict": ""
        }
    ],
    "B43_BUSES_BCMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && ( ( B43 ) ) && (BCMA_POSSIBLE) && ( B43_BUSES_BCMA &&  !B43_BUSES_BCMA_AND_SSB &&  !B43_BUSES_SSB )",
            "restrict": ""
        }
    ],
    "B43_BUSES_SSB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && ( ( B43 ) ) && (SSB_POSSIBLE) && ( B43_BUSES_SSB &&  !B43_BUSES_BCMA_AND_SSB &&  !B43_BUSES_BCMA )",
            "restrict": ""
        }
    ],
    "B43_PCI_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && SSB_PCIHOST_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PCICORE_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && SSB_DRIVER_PCICORE_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_SDIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_SSB && SSB_SDIOHOST_POSSIBLE)",
            "restrict": ""
        }
    ],
    "B43_BCMA_PIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_BCMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_SSB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PHY_G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_SSB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PHY_N": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PHY_LP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_SSB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PHY_HT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_BCMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_PHY_LCN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && BROKEN)",
            "restrict": ""
        }
    ],
    "B43_PHY_AC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && B43_BCMA && BROKEN)",
            "restrict": ""
        }
    ],
    "B43_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && MAC80211_LEDS && ( LEDS_CLASS = y || LEDS_CLASS = B43 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_HWRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43 && ( HW_RANDOM = y || HW_RANDOM = B43 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43)",
            "restrict": ""
        }
    ],
    "B43LEGACY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (SSB_POSSIBLE && MAC80211 && HAS_DMA)",
            "restrict": ""
        }
    ],
    "B43LEGACY_PCI_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY && SSB_PCIHOST_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43LEGACY_PCICORE_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY && SSB_DRIVER_PCICORE_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43LEGACY_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY && MAC80211_LEDS && ( LEDS_CLASS = y || LEDS_CLASS = B43LEGACY ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43LEGACY_HWRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY && ( HW_RANDOM = y || HW_RANDOM = B43LEGACY ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43LEGACY_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "B43LEGACY_DMA": [
        {
            "type": "bool",
            "rev_select": "B43LEGACY_DMA_AND_PIO_MODE || B43LEGACY_DMA_MODE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY)",
            "restrict": ""
        }
    ],
    "B43LEGACY_PIO": [
        {
            "type": "bool",
            "rev_select": "B43LEGACY_DMA_AND_PIO_MODE || B43LEGACY_PIO_MODE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (B43LEGACY)",
            "restrict": ""
        }
    ],
    "B43LEGACY_DMA_AND_PIO_MODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && ( ( B43LEGACY ) ) && ( B43LEGACY_DMA_AND_PIO_MODE &&  !B43LEGACY_DMA_MODE &&  !B43LEGACY_PIO_MODE )",
            "restrict": ""
        }
    ],
    "B43LEGACY_DMA_MODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && ( ( B43LEGACY ) ) && ( B43LEGACY_DMA_MODE &&  !B43LEGACY_DMA_AND_PIO_MODE &&  !B43LEGACY_PIO_MODE )",
            "restrict": ""
        }
    ],
    "B43LEGACY_PIO_MODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && ( ( B43LEGACY ) ) && ( B43LEGACY_PIO_MODE &&  !B43LEGACY_DMA_AND_PIO_MODE &&  !B43LEGACY_DMA_MODE )",
            "restrict": ""
        }
    ],
    "BRCMUTIL": [
        {
            "type": "tristate",
            "rev_select": "BRCMSMAC || BRCMFMAC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM )",
            "restrict": ""
        }
    ],
    "BRCMSMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (MAC80211) && (BCMA_POSSIBLE)",
            "restrict": ""
        }
    ],
    "BRCMSMAC_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM )",
            "restrict": "( BRCMSMAC && BCMA_DRIVER_GPIO && MAC80211_LEDS )[!(y)]"
        }
    ],
    "BRCMFMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (CFG80211)",
            "restrict": ""
        }
    ],
    "BRCMFMAC_PROTO_BCDC": [
        {
            "type": "bool",
            "rev_select": "BRCMFMAC_SDIO || BRCMFMAC_USB",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM )",
            "restrict": ""
        }
    ],
    "BRCMFMAC_PROTO_MSGBUF": [
        {
            "type": "bool",
            "rev_select": "BRCMFMAC_PCIE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM )",
            "restrict": ""
        }
    ],
    "BRCMFMAC_SDIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (( MMC = y || MMC = BRCMFMAC )) && (BRCMFMAC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BRCMFMAC_USB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (( USB = y || USB = BRCMFMAC )) && (BRCMFMAC)",
            "restrict": ""
        }
    ],
    "BRCMFMAC_PCIE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (BRCMFMAC) && (PCI)",
            "restrict": ""
        }
    ],
    "BRCM_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (BRCMSMAC || BRCMFMAC)",
            "restrict": ""
        }
    ],
    "BRCMDBG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_BROADCOM ) && (BRCMSMAC || BRCMFMAC)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_CISCO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AIRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_CISCO ) && (CFG80211 && ISA_DMA_API && ( PCI || BROKEN ))",
            "restrict": ""
        }
    ],
    "AIRO_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_CISCO ) && (CFG80211 && PCMCIA)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_INTEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IPW2100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (PCI && CFG80211)",
            "restrict": ""
        }
    ],
    "IPW2100_MONITOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2100)",
            "restrict": ""
        }
    ],
    "IPW2100_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2100)",
            "restrict": ""
        }
    ],
    "IPW2200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (PCI && CFG80211)",
            "restrict": ""
        }
    ],
    "IPW2200_MONITOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2200)",
            "restrict": ""
        }
    ],
    "IPW2200_RADIOTAP": [
        {
            "type": "bool",
            "rev_select": "IPW2200_PROMISCUOUS",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2200_MONITOR)",
            "restrict": ""
        }
    ],
    "IPW2200_PROMISCUOUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2200_MONITOR)",
            "restrict": ""
        }
    ],
    "IPW2200_QOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2200)",
            "restrict": ""
        }
    ],
    "IPW2200_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (IPW2200)",
            "restrict": ""
        }
    ],
    "LIBIPW": [
        {
            "type": "tristate",
            "rev_select": "IPW2100 || IPW2200",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (PCI && CFG80211)",
            "restrict": ""
        }
    ],
    "LIBIPW_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (LIBIPW)",
            "restrict": ""
        }
    ],
    "IWLEGACY": [
        {
            "type": "tristate",
            "rev_select": "IWL4965 || IWL3945",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL )",
            "restrict": ""
        }
    ],
    "IWL4965": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (PCI && MAC80211) && (LEDS_CLASS = y || LEDS_CLASS = MAC80211)",
            "restrict": ""
        }
    ],
    "IWL3945": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (PCI && MAC80211) && (LEDS_CLASS = y || LEDS_CLASS = MAC80211)",
            "restrict": ""
        }
    ],
    "IWLEGACY_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( ( IWLEGACY ) ) && (IWLEGACY)",
            "restrict": ""
        }
    ],
    "IWLEGACY_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( ( IWLEGACY ) ) && (IWLEGACY && MAC80211_DEBUGFS)",
            "restrict": ""
        }
    ],
    "IWLWIFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (PCI && HAS_IOMEM && CFG80211) && (IWLMEI || ! IWLMEI)",
            "restrict": ""
        }
    ],
    "IWLWIFI_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI ) && (LEDS_CLASS = y || LEDS_CLASS = MAC80211) && (IWLMVM || IWLDVM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IWLDVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "IWLMVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "IWLWIFI_OPMODE_MODULAR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI )",
            "restrict": "( y )[!(y) && (IWLDVM = m)] || ( y )[!(y) && (IWLMVM = m)]"
        }
    ],
    "IWLWIFI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI )",
            "restrict": ""
        }
    ],
    "IWLWIFI_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI ) && (MAC80211_DEBUGFS)",
            "restrict": ""
        }
    ],
    "IWLWIFI_DEVICE_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && ( IWLWIFI ) && (EVENT_TRACING)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IWLMEI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTEL ) && (INTEL_MEI) && (PM) && (CFG80211) && (BROKEN)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_INTERSIL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HOSTAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL )",
            "restrict": ""
        }
    ],
    "HOSTAP_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (HOSTAP)",
            "restrict": ""
        }
    ],
    "HOSTAP_FIRMWARE_NVRAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (HOSTAP_FIRMWARE)",
            "restrict": ""
        }
    ],
    "HOSTAP_PLX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCI && HOSTAP)",
            "restrict": ""
        }
    ],
    "HOSTAP_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCI && HOSTAP)",
            "restrict": ""
        }
    ],
    "HOSTAP_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCMCIA && HOSTAP)",
            "restrict": ""
        }
    ],
    "HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (( PPC_PMAC || PCI || PCMCIA )) && (CFG80211)",
            "restrict": ""
        }
    ],
    "HERMES_PRISM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (HERMES)",
            "restrict": ""
        }
    ],
    "HERMES_CACHE_FW_ON_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (HERMES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "APPLE_AIRPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PPC_PMAC && HERMES)",
            "restrict": ""
        }
    ],
    "PLX_HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCI && HERMES)",
            "restrict": ""
        }
    ],
    "TMD_HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCI && HERMES)",
            "restrict": ""
        }
    ],
    "NORTEL_HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCI && HERMES)",
            "restrict": ""
        }
    ],
    "PCI_HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCI && HERMES && HERMES_PRISM)",
            "restrict": ""
        }
    ],
    "PCMCIA_HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCMCIA && HERMES && HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "PCMCIA_SPECTRUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (PCMCIA && HERMES && HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "ORINOCO_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (USB && HERMES)",
            "restrict": ""
        }
    ],
    "P54_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "P54_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (P54_COMMON && USB)",
            "restrict": ""
        }
    ],
    "P54_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (P54_COMMON && PCI)",
            "restrict": ""
        }
    ],
    "P54_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (P54_COMMON && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "P54_SPI_DEFAULT_EEPROM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (P54_SPI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "P54_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_INTERSIL ) && (P54_COMMON && MAC80211_LEDS && ( LEDS_CLASS = y || LEDS_CLASS = P54_COMMON ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WLAN_VENDOR_MARVELL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LIBERTAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (CFG80211)",
            "restrict": ""
        }
    ],
    "LIBERTAS_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS && USB)",
            "restrict": ""
        }
    ],
    "LIBERTAS_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS && PCMCIA && HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "LIBERTAS_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS && MMC)",
            "restrict": ""
        }
    ],
    "LIBERTAS_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS && SPI)",
            "restrict": ""
        }
    ],
    "LIBERTAS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS)",
            "restrict": ""
        }
    ],
    "LIBERTAS_MESH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS)",
            "restrict": ""
        }
    ],
    "LIBERTAS_THINFIRM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "LIBERTAS_THINFIRM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS_THINFIRM)",
            "restrict": ""
        }
    ],
    "LIBERTAS_THINFIRM_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (LIBERTAS_THINFIRM && USB)",
            "restrict": ""
        }
    ],
    "MWIFIEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (CFG80211)",
            "restrict": ""
        }
    ],
    "MWIFIEX_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (MWIFIEX && MMC)",
            "restrict": ""
        }
    ],
    "MWIFIEX_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (MWIFIEX && PCI)",
            "restrict": ""
        }
    ],
    "MWIFIEX_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (MWIFIEX && USB)",
            "restrict": ""
        }
    ],
    "MWL8K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MARVELL ) && (MAC80211 && PCI)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_MEDIATEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MT7601U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (USB)",
            "restrict": ""
        }
    ],
    "MT76_CORE": [
        {
            "type": "tristate",
            "rev_select": "MT76x02_LIB || MT76_CONNAC_LIB || MT7603E",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT76_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MT76_CORE) && (LEDS_CLASS = y || MT76_CORE = LEDS_CLASS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MT76_USB": [
        {
            "type": "tristate",
            "rev_select": "MT76x02_USB || MT7663U || MT7921U",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MT76_CORE)",
            "restrict": ""
        }
    ],
    "MT76_SDIO": [
        {
            "type": "tristate",
            "rev_select": "MT7663S || MT7921S",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MT76_CORE)",
            "restrict": ""
        }
    ],
    "MT76x02_LIB": [
        {
            "type": "tristate",
            "rev_select": "MT76x0_COMMON || MT76x2_COMMON",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT76x02_USB": [
        {
            "type": "tristate",
            "rev_select": "MT76x0U || MT76x2U",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT76_CONNAC_LIB": [
        {
            "type": "tristate",
            "rev_select": "MT7615_COMMON || MT7915E || MT7921_COMMON",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT76x0_COMMON": [
        {
            "type": "tristate",
            "rev_select": "MT76x0U || MT76x0E",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT76x0U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (USB)",
            "restrict": ""
        }
    ],
    "MT76x0E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (PCI)",
            "restrict": ""
        }
    ],
    "MT76x2_COMMON": [
        {
            "type": "tristate",
            "rev_select": "MT76x2E || MT76x2U",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT76x2E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (PCI)",
            "restrict": ""
        }
    ],
    "MT76x2U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (USB)",
            "restrict": ""
        }
    ],
    "MT7603E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (PCI)",
            "restrict": ""
        }
    ],
    "MT7615_COMMON": [
        {
            "type": "tristate",
            "rev_select": "MT7615E || MT7663_USB_SDIO_COMMON",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT7615E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (PCI)",
            "restrict": ""
        }
    ],
    "MT7622_WMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MT7615E) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MT7663_USB_SDIO_COMMON": [
        {
            "type": "tristate",
            "rev_select": "MT7663U || MT7663S",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT7663U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (USB)",
            "restrict": ""
        }
    ],
    "MT7663S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (MMC)",
            "restrict": ""
        }
    ],
    "MT7915E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (PCI)",
            "restrict": ""
        }
    ],
    "MT7986_WMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MT7915E) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MT7921_COMMON": [
        {
            "type": "tristate",
            "rev_select": "MT7921E || MT7921S || MT7921U",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK )",
            "restrict": ""
        }
    ],
    "MT7921E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (PCI)",
            "restrict": ""
        }
    ],
    "MT7921S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (MMC)",
            "restrict": ""
        }
    ],
    "MT7921U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MEDIATEK ) && (MAC80211) && (USB)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_MICROCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WILC1000": [
        {
            "type": "tristate",
            "rev_select": "WILC1000_SDIO || WILC1000_SPI",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MICROCHIP )",
            "restrict": ""
        }
    ],
    "WILC1000_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MICROCHIP ) && (CFG80211 && INET && MMC)",
            "restrict": ""
        }
    ],
    "WILC1000_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MICROCHIP ) && (CFG80211 && INET && SPI)",
            "restrict": ""
        }
    ],
    "WILC1000_HW_OOB_INTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_MICROCHIP ) && (WILC1000_SDIO)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_PURELIFI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PLFXLC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_PURELIFI ) && (CFG80211 && MAC80211 && USB)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_RALINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2X00": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && (MAC80211 && HAS_DMA)",
            "restrict": ""
        }
    ],
    "RT2400PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RT2500PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RT61PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RT2800PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RT2800PCI_RT33XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800PCI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2800PCI_RT35XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800PCI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2800PCI_RT53XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800PCI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2800PCI_RT3290": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800PCI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2500USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (USB)",
            "restrict": ""
        }
    ],
    "RT73USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (USB)",
            "restrict": ""
        }
    ],
    "RT2800USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (USB)",
            "restrict": ""
        }
    ],
    "RT2800USB_RT33XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800USB )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2800USB_RT35XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800USB )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RT2800USB_RT3573": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800USB )",
            "restrict": ""
        }
    ],
    "RT2800USB_RT53XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800USB )",
            "restrict": ""
        }
    ],
    "RT2800USB_RT55XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800USB )",
            "restrict": ""
        }
    ],
    "RT2800USB_UNKNOWN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && ( RT2800USB )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RT2800SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (SOC_RT288X || SOC_RT305X || SOC_MT7620)",
            "restrict": ""
        }
    ],
    "RT2800_LIB": [
        {
            "type": "tristate",
            "rev_select": "RT2800PCI || RT2800USB || RT2800SOC || RT2800_LIB_MMIO",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2800_LIB_MMIO": [
        {
            "type": "tristate",
            "rev_select": "RT2800PCI || RT2800SOC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_MMIO": [
        {
            "type": "tristate",
            "rev_select": "RT2400PCI || RT2500PCI || RT61PCI || RT2800PCI || RT2800SOC || RT2800_LIB_MMIO",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_PCI": [
        {
            "type": "tristate",
            "rev_select": "RT2400PCI || RT2500PCI || RT61PCI || RT2800PCI",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_SOC": [
        {
            "type": "tristate",
            "rev_select": "RT2800SOC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_USB": [
        {
            "type": "tristate",
            "rev_select": "RT2500USB || RT73USB || RT2800USB",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB": [
        {
            "type": "tristate",
            "rev_select": "RT2X00_LIB_PCI || RT2X00_LIB_SOC || RT2X00_LIB_USB",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "RT61PCI || RT2800PCI || RT73USB || RT2800USB || RT2800SOC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_CRYPTO": [
        {
            "type": "bool",
            "rev_select": "RT61PCI || RT2800PCI || RT2500USB || RT73USB || RT2800USB || RT2800SOC",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": ""
        }
    ],
    "RT2X00_LIB_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 )",
            "restrict": "( y )[!(y) && (( RT2X00_LIB = y && LEDS_CLASS = y ) || ( RT2X00_LIB = m && LEDS_CLASS != n ))]"
        }
    ],
    "RT2X00_LIB_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (RT2X00_LIB && MAC80211_DEBUGFS)",
            "restrict": ""
        }
    ],
    "RT2X00_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RALINK ) && ( RT2X00 ) && (RT2X00_LIB)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_REALTEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTL8180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (MAC80211 && PCI)",
            "restrict": ""
        }
    ],
    "RTL8187": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (MAC80211 && USB)",
            "restrict": ""
        }
    ],
    "RTL8187_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (RTL8187 && MAC80211_LEDS && ( LEDS_CLASS = y || LEDS_CLASS = RTL8187 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTL_CARDS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (MAC80211 && ( PCI || USB ))",
            "restrict": ""
        }
    ],
    "RTL8192CE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8192SE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8192DE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8723AE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8723BE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8188EE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8192EE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8821AE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTL8192CU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (USB)",
            "restrict": ""
        }
    ],
    "RTLWIFI": [
        {
            "type": "tristate",
            "rev_select": "RTL8192CE || RTL8192SE || RTL8192DE || RTL8723AE || RTL8723BE || RTL8188EE || RTL8192EE || RTL8821AE || RTL8192CU",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS )",
            "restrict": ""
        }
    ],
    "RTLWIFI_PCI": [
        {
            "type": "tristate",
            "rev_select": "RTL8192CE || RTL8192SE || RTL8192DE || RTL8723AE || RTL8723BE || RTL8188EE || RTL8192EE || RTL8821AE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS )",
            "restrict": ""
        }
    ],
    "RTLWIFI_USB": [
        {
            "type": "tristate",
            "rev_select": "RTL8192CU",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS )",
            "restrict": ""
        }
    ],
    "RTLWIFI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (RTLWIFI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTL8192C_COMMON": [
        {
            "type": "tristate",
            "rev_select": "RTL8192CE || RTL8192CU",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (RTL8192CE || RTL8192CU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTL8723_COMMON": [
        {
            "type": "tristate",
            "rev_select": "RTL8723AE || RTL8723BE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (RTL8723AE || RTL8723BE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTLBTCOEXIST": [
        {
            "type": "tristate",
            "rev_select": "RTL8723AE || RTL8723BE || RTL8192EE || RTL8821AE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTL_CARDS ) && (RTL8723AE || RTL8723BE || RTL8821AE || RTL8192EE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTL8XXXU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (MAC80211 && USB)",
            "restrict": ""
        }
    ],
    "RTL8XXXU_UNTESTED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (RTL8XXXU)",
            "restrict": ""
        }
    ],
    "RTW88": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "RTW88_CORE": [
        {
            "type": "tristate",
            "rev_select": "RTW88_8822BE || RTW88_8822CE || RTW88_8723DE || RTW88_8821CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 )",
            "restrict": ""
        }
    ],
    "RTW88_PCI": [
        {
            "type": "tristate",
            "rev_select": "RTW88_8822BE || RTW88_8822CE || RTW88_8723DE || RTW88_8821CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 )",
            "restrict": ""
        }
    ],
    "RTW88_8822B": [
        {
            "type": "tristate",
            "rev_select": "RTW88_8822BE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 )",
            "restrict": ""
        }
    ],
    "RTW88_8822C": [
        {
            "type": "tristate",
            "rev_select": "RTW88_8822CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 )",
            "restrict": ""
        }
    ],
    "RTW88_8723D": [
        {
            "type": "tristate",
            "rev_select": "RTW88_8723DE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 )",
            "restrict": ""
        }
    ],
    "RTW88_8821C": [
        {
            "type": "tristate",
            "rev_select": "RTW88_8821CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 )",
            "restrict": ""
        }
    ],
    "RTW88_8822BE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTW88_8822CE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTW88_8723DE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTW88_8821CE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTW88_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 ) && (RTW88_CORE)",
            "restrict": ""
        }
    ],
    "RTW88_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW88 ) && (RTW88_CORE)",
            "restrict": ""
        }
    ],
    "RTW89": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "RTW89_CORE": [
        {
            "type": "tristate",
            "rev_select": "RTW89_8852AE || RTW89_8852CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 )",
            "restrict": ""
        }
    ],
    "RTW89_PCI": [
        {
            "type": "tristate",
            "rev_select": "RTW89_8852AE || RTW89_8852CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 )",
            "restrict": ""
        }
    ],
    "RTW89_8852A": [
        {
            "type": "tristate",
            "rev_select": "RTW89_8852AE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 )",
            "restrict": ""
        }
    ],
    "RTW89_8852C": [
        {
            "type": "tristate",
            "rev_select": "RTW89_8852CE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 )",
            "restrict": ""
        }
    ],
    "RTW89_8852AE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTW89_8852CE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 ) && (PCI)",
            "restrict": ""
        }
    ],
    "RTW89_DEBUG": [
        {
            "type": "bool",
            "rev_select": "RTW89_DEBUGMSG || RTW89_DEBUGFS",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 )",
            "restrict": ""
        }
    ],
    "RTW89_DEBUGMSG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 ) && (RTW89_CORE)",
            "restrict": ""
        }
    ],
    "RTW89_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_REALTEK ) && ( RTW89 ) && (RTW89_CORE)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_RSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RSI_91X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RSI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "RSI_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RSI ) && (RSI_91X)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RSI_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RSI ) && (MMC && RSI_91X)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "RSI_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RSI ) && (USB && RSI_91X)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "RSI_COEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_RSI ) && (BT && RSI_91X) && (! ( BT = m && RSI_91X = y ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WLAN_VENDOR_SILABS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_SILABS ) && (MAC80211) && (MMC || ! MMC) && (( SPI || MMC ))",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_ST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CW1200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ST ) && (MAC80211 && CFG80211)",
            "restrict": ""
        }
    ],
    "CW1200_WLAN_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ST ) && ( CW1200 ) && (CW1200 && MMC)",
            "restrict": ""
        }
    ],
    "CW1200_WLAN_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ST ) && ( CW1200 ) && (CW1200 && SPI)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_TI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WL1251": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "WL1251_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (WL1251 && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "WL1251_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (WL1251 && MMC)",
            "restrict": ""
        }
    ],
    "WL12XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "WL18XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "WLCORE": [
        {
            "type": "tristate",
            "rev_select": "WL12XX || WL18XX",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "WLCORE_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (WLCORE && SPI_MASTER && OF)",
            "restrict": ""
        }
    ],
    "WLCORE_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (WLCORE && MMC)",
            "restrict": ""
        }
    ],
    "WILINK_PLATFORM_DATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_TI ) && (WLCORE_SDIO || WL1251_SDIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WLAN_VENDOR_ZYDAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_ZD1201": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ZYDAS ) && (CFG80211 && USB)",
            "restrict": ""
        }
    ],
    "ZD1211RW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ZYDAS ) && (USB && MAC80211)",
            "restrict": ""
        }
    ],
    "ZD1211RW_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_ZYDAS ) && (ZD1211RW)",
            "restrict": ""
        }
    ],
    "WLAN_VENDOR_QUANTENNA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QTNFMAC": [
        {
            "type": "tristate",
            "rev_select": "QTNFMAC_PCIE",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_QUANTENNA ) && (QTNFMAC_PCIE)",
            "restrict": "( m )[!(y) && (QTNFMAC_PCIE = m)] || ( y )[!(y) && (QTNFMAC_PCIE = y)]"
        }
    ],
    "QTNFMAC_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && ( WLAN_VENDOR_QUANTENNA ) && (PCI && CFG80211)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PCMCIA_RAYCS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "PCMCIA_WL3501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && (CFG80211 && PCMCIA)",
            "restrict": ""
        }
    ],
    "MAC80211_HWSIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && (MAC80211)",
            "restrict": ""
        }
    ],
    "USB_NET_RNDIS_WLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && (USB) && (CFG80211)",
            "restrict": ""
        }
    ],
    "VIRT_WIFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WLAN ) && (CFG80211)",
            "restrict": ""
        }
    ],
    "WAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "HDLC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN )",
            "restrict": ""
        }
    ],
    "HDLC_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC)",
            "restrict": ""
        }
    ],
    "HDLC_RAW_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC)",
            "restrict": ""
        }
    ],
    "HDLC_CISCO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC)",
            "restrict": ""
        }
    ],
    "HDLC_FR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC)",
            "restrict": ""
        }
    ],
    "HDLC_PPP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC)",
            "restrict": ""
        }
    ],
    "HDLC_X25": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && ( LAPB = m && HDLC = m || LAPB = y ))",
            "restrict": ""
        }
    ],
    "PCI200SYN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && PCI)",
            "restrict": ""
        }
    ],
    "WANXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && PCI)",
            "restrict": ""
        }
    ],
    "WANXL_BUILD_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (WANXL && ! PREVENT_FIRMWARE_BUILD)",
            "restrict": ""
        }
    ],
    "PC300TOO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && PCI)",
            "restrict": ""
        }
    ],
    "N2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && ISA)",
            "restrict": ""
        }
    ],
    "C101": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && ISA)",
            "restrict": ""
        }
    ],
    "FARSYNC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && PCI)",
            "restrict": ""
        }
    ],
    "FSL_UCC_HDLC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC) && (QUICC_ENGINE)",
            "restrict": ""
        }
    ],
    "SLIC_DS26522": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (SPI) && (FSL_SOC || ARCH_MXC || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IXP4XX_HSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (HDLC && IXP4XX_NPE && IXP4XX_QMGR) && (ARCH_IXP4XX && OF)",
            "restrict": ""
        }
    ],
    "LAPBETHER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WAN ) && (LAPB && X25)",
            "restrict": ""
        }
    ],
    "IEEE802154_DRIVERS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (NETDEVICES && IEEE802154)",
            "restrict": ""
        }
    ],
    "IEEE802154_FAKELB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154)",
            "restrict": ""
        }
    ],
    "IEEE802154_AT86RF230": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154) && (SPI)",
            "restrict": ""
        }
    ],
    "IEEE802154_MRF24J40": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154) && (SPI)",
            "restrict": ""
        }
    ],
    "IEEE802154_CC2520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154) && (SPI)",
            "restrict": ""
        }
    ],
    "IEEE802154_ATUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154 && USB)",
            "restrict": ""
        }
    ],
    "IEEE802154_ADF7242": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154) && (SPI)",
            "restrict": ""
        }
    ],
    "IEEE802154_CA8210": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154) && (COMMON_CLK) && (SPI)",
            "restrict": ""
        }
    ],
    "IEEE802154_CA8210_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_CA8210) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "IEEE802154_MCR20A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154) && (SPI)",
            "restrict": ""
        }
    ],
    "IEEE802154_HWSIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (IEEE802154_DRIVERS && MAC802154)",
            "restrict": ""
        }
    ],
    "WWAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "WWAN_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (DEBUG_FS)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "WWAN_HWSIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN )",
            "restrict": ""
        }
    ],
    "MHI_WWAN_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (MHI_BUS)",
            "restrict": ""
        }
    ],
    "MHI_WWAN_MBIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (MHI_BUS)",
            "restrict": ""
        }
    ],
    "QCOM_BAM_DMUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (( DMA_ENGINE && PM && QCOM_SMEM_STATE ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RPMSG_WWAN_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (RPMSG)",
            "restrict": ""
        }
    ],
    "IOSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (INTEL_IOMMU)",
            "restrict": ""
        }
    ],
    "MTK_T7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && ( WWAN ) && (PCI)",
            "restrict": ""
        }
    ],
    "XEN_NETDEV_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_NETDEV_BACKEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (XEN_BACKEND)",
            "restrict": ""
        }
    ],
    "VMXNET3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (PCI && INET) && (PAGE_SIZE_LESS_THAN_64KB)",
            "restrict": ""
        }
    ],
    "FUJITSU_ES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "USB4_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (USB4 && INET)",
            "restrict": ""
        }
    ],
    "HYPERV_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (HYPERV)",
            "restrict": ""
        }
    ],
    "NETDEVSIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETDEVICES ) && (DEBUG_FS) && (INET) && (IPV6 || IPV6 = n) && (PSAMPLE || PSAMPLE = n)",
            "restrict": ""
        }
    ],
    "NET_FAILOVER": [
        {
            "type": "tristate",
            "rev_select": "VIRTIO_NET",
            "dep": "( NETDEVICES )",
            "restrict": ""
        }
    ],
    "NETDEV_LEGACY_INIT": [
        {
            "type": "bool",
            "rev_select": "COPS || 3C515 || LANCE || CS89x0_ISA || NE2000[ISA] || ULTRA || WD80x3 || SMC9194",
            "dep": "( NETDEVICES ) && (ISA)",
            "restrict": ""
        }
    ],
    "ISDN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NET && NETDEVICES) && (! S390 && ! UML)",
            "restrict": ""
        }
    ],
    "ISDN_CAPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ISDN )",
            "restrict": "( ISDN && BT )[!(y)]"
        }
    ],
    "CAPI_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ISDN )",
            "restrict": "( BT_CMTP )[!(y)]"
        }
    ],
    "ISDN_CAPI_MIDDLEWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ISDN )",
            "restrict": "( BT_CMTP && TTY )[!(y)]"
        }
    ],
    "MISDN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN )",
            "restrict": ""
        }
    ],
    "MISDN_DSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN)",
            "restrict": ""
        }
    ],
    "MISDN_L1OIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN)",
            "restrict": ""
        }
    ],
    "MISDN_HFCPCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (PCI)",
            "restrict": ""
        }
    ],
    "MISDN_HFCMULTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (PCI || CPM1) && (MISDN)",
            "restrict": ""
        }
    ],
    "MISDN_HFCMULTI_8xx": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (MISDN_HFCMULTI) && (CPM1)",
            "restrict": "( CPM1 )[!(y)]"
        }
    ],
    "MISDN_HFCUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (USB)",
            "restrict": ""
        }
    ],
    "MISDN_AVMFRITZ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (PCI)",
            "restrict": ""
        }
    ],
    "MISDN_SPEEDFAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (PCI)",
            "restrict": ""
        }
    ],
    "MISDN_INFINEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (PCI)",
            "restrict": ""
        }
    ],
    "MISDN_W6692": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (PCI)",
            "restrict": ""
        }
    ],
    "MISDN_NETJET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN) && (PCI) && (TTY)",
            "restrict": ""
        }
    ],
    "MISDN_HDLC": [
        {
            "type": "tristate",
            "rev_select": "MISDN_NETJET",
            "dep": "( ISDN ) && ( MISDN != n )",
            "restrict": ""
        }
    ],
    "MISDN_IPAC": [
        {
            "type": "tristate",
            "rev_select": "MISDN_AVMFRITZ || MISDN_SPEEDFAX || MISDN_INFINEON || MISDN_NETJET",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN)",
            "restrict": ""
        }
    ],
    "MISDN_ISAR": [
        {
            "type": "tristate",
            "rev_select": "MISDN_SPEEDFAX",
            "dep": "( ISDN ) && ( MISDN != n ) && (MISDN)",
            "restrict": ""
        }
    ],
    "INPUT": [
        {
            "type": "tristate",
            "rev_select": "VT || DRM_NOUVEAU[ACPI && X86] || DRM_I915[ACPI] || DRM_GMA500[ACPI]",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "INPUT_LEDS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && (LEDS_CLASS)",
            "restrict": "( INPUT )[!(y)]"
        }
    ],
    "INPUT_FF_MEMLESS": [
        {
            "type": "tristate",
            "rev_select": "JOYSTICK_GAMECON || JOYSTICK_XPAD_FF || JOYSTICK_PSXPAD_SPI_FF || INPUT_ARIZONA_HAPTICS || INPUT_PM8XXX_VIBRATOR || INPUT_MAX77693_HAPTIC || INPUT_MAX8997_HAPTIC || INPUT_GPIO_VIBRA || INPUT_REGULATOR_HAPTIC || INPUT_TWL4030_VIBRA || INPUT_TWL6040_VIBRA || INPUT_PWM_VIBRA || INPUT_DRV260X_HAPTICS || INPUT_DRV2665_HAPTICS || INPUT_DRV2667_HAPTICS || INPUT_SC27XX_VIBRA || HID_ACRUX_FF || HID_BETOP_FF || HID_BIGBEN_FF || DRAGONRISE_FF || HID_EMS_FF || HOLTEK_FF || LOGITECH_FF || LOGIRUMBLEPAD2_FF || LOGIG940_FF || LOGIWHEELS_FF || HID_MAYFLASH || HID_MEGAWORLD_FF || HID_MICROSOFT || NINTENDO_FF || PANTHERLORD_FF || PLAYSTATION_FF || SONY_FF || GREENASIA_FF || SMARTJOYPLUS_FF || THRUSTMASTER_FF || HID_WIIMOTE || ZEROPLUS_FF",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_SPARSEKMAP": [
        {
            "type": "tristate",
            "rev_select": "INPUT_WISTRON_BTNS || INPUT_DM355EVM || HUAWEI_WMI || ACER_WMI || ASUS_LAPTOP || ASUS_WMI || EEEPC_LAPTOP || DELL_WMI || DELL_WMI_AIO || FUJITSU_LAPTOP || HP_WMI || IDEAPAD_LAPTOP || INTEL_HID_EVENT || INTEL_VBTN || MSI_LAPTOP || MSI_WMI || ACPI_TOSHIBA || TOSHIBA_WMI || LG_LAPTOP || PANASONIC_LAPTOP || TOPSTAR_LAPTOP",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_MATRIXKMAP": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_CLPS711X || KEYBOARD_EP93XX || KEYBOARD_TCA8418 || KEYBOARD_MATRIX || KEYBOARD_LM8333 || KEYBOARD_LPC32XX || KEYBOARD_MAX7359 || KEYBOARD_IMX || KEYBOARD_NOMADIK || KEYBOARD_NSPIRE || KEYBOARD_TEGRA || KEYBOARD_PXA27x || KEYBOARD_PMIC8XXX || KEYBOARD_SAMSUNG || KEYBOARD_ST_KEYSCAN || KEYBOARD_STMPE || KEYBOARD_OMAP || KEYBOARD_OMAP4 || KEYBOARD_SPEAR || KEYBOARD_TC3589X || KEYBOARD_TWL4030 || KEYBOARD_CROS_EC || KEYBOARD_BCM || KEYBOARD_MT6779 || HT16K33",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_VIVALDIFMAP": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_ATKBD || KEYBOARD_CROS_EC || HID_GOOGLE_HAMMER || HID_VIVALDI",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_MOUSEDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_MOUSEDEV_PSAUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && (INPUT_MOUSEDEV)",
            "restrict": ""
        }
    ],
    "INPUT_MOUSEDEV_SCREEN_X": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( INPUT ) && (INPUT_MOUSEDEV)",
            "restrict": "( 1024 )[!(y)]"
        }
    ],
    "INPUT_MOUSEDEV_SCREEN_Y": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( INPUT ) && (INPUT_MOUSEDEV)",
            "restrict": "( 768 )[!(y)]"
        }
    ],
    "INPUT_JOYDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_EVDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_EVBUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_APMPOWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && (INPUT && APM_EMULATION)",
            "restrict": ""
        }
    ],
    "INPUT_KEYBOARD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "KEYBOARD_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (IIO)",
            "restrict": ""
        }
    ],
    "KEYBOARD_ADP5520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (PMIC_ADP5520)",
            "restrict": ""
        }
    ],
    "KEYBOARD_ADP5588": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_ADP5589": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_AMIGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (AMIGA)",
            "restrict": ""
        }
    ],
    "KEYBOARD_APPLESPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ACPI && EFI) && (SPI) && (X86 || COMPILE_TEST) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "KEYBOARD_ATARI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ATARI)",
            "restrict": ""
        }
    ],
    "KEYBOARD_ATKBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KEYBOARD_ATKBD_HP_KEYCODES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (PARISC && KEYBOARD_ATKBD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KEYBOARD_ATKBD_RDI_KEYCODES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (KEYBOARD_ATKBD_HP_KEYCODES)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KEYBOARD_QT1050": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_QT1070": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_QT2160": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_CLPS711X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (OF_GPIO && ( ARCH_CLPS711X || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "KEYBOARD_DLINK_DIR685": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "KEYBOARD_LKKBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD )",
            "restrict": ""
        }
    ],
    "KEYBOARD_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_EP93XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_GPIO_POLLED": [
        {
            "type": "tristate",
            "rev_select": "PCENGINES_APU2",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "KEYBOARD_TCA6416": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_TCA8418": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_MATRIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_HIL_OLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (GSC || HP300)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KEYBOARD_HIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (GSC || HP300)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KEYBOARD_HP6XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (SH_HP6XX)",
            "restrict": ""
        }
    ],
    "KEYBOARD_HP7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (SA1100_JORNADA720_SSP && SA1100_SSP)",
            "restrict": ""
        }
    ],
    "KEYBOARD_LM8323": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "KEYBOARD_LM8333": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_LOCOMO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (SHARP_LOCOMO)",
            "restrict": ""
        }
    ],
    "KEYBOARD_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_LPC32XX && OF)",
            "restrict": ""
        }
    ],
    "KEYBOARD_MAPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (SH_DREAMCAST && MAPLE)",
            "restrict": ""
        }
    ],
    "KEYBOARD_MAX7359": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_MCS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_MPR121": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_SNVS_PWRKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_MXC || ( COMPILE_TEST && HAS_IOMEM )) && (OF)",
            "restrict": ""
        }
    ],
    "KEYBOARD_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_IMX_SC_KEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (IMX_SCU)",
            "restrict": ""
        }
    ],
    "KEYBOARD_NEWTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD )",
            "restrict": ""
        }
    ],
    "KEYBOARD_NOMADIK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (( ARCH_NOMADIK || ARCH_U8500 ))",
            "restrict": ""
        }
    ],
    "KEYBOARD_NSPIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_NSPIRE && OF)",
            "restrict": ""
        }
    ],
    "KEYBOARD_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_TEGRA && OF)",
            "restrict": ""
        }
    ],
    "KEYBOARD_OPENCORES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "KEYBOARD_PXA27x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (PXA27x || PXA3xx || ARCH_MMP)",
            "restrict": ""
        }
    ],
    "KEYBOARD_PXA930_ROTARY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (CPU_PXA930 || CPU_PXA935)",
            "restrict": ""
        }
    ],
    "KEYBOARD_PMIC8XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (MFD_PM8XXX)",
            "restrict": ""
        }
    ],
    "KEYBOARD_SAMSUNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (HAS_IOMEM && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "KEYBOARD_GOLDFISH_EVENTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (GOLDFISH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_STOWAWAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD )",
            "restrict": ""
        }
    ],
    "KEYBOARD_ST_KEYSCAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_SUNKBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD )",
            "restrict": ""
        }
    ],
    "KEYBOARD_SH_KEYSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_SHMOBILE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_STMPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (MFD_STMPE) && (OF)",
            "restrict": ""
        }
    ],
    "KEYBOARD_SUN4I_LRADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_SUNXI)",
            "restrict": ""
        }
    ],
    "KEYBOARD_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_DAVINCI_DM365)",
            "restrict": ""
        }
    ],
    "KEYBOARD_IPAQ_MICRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (MFD_IPAQ_MICRO)",
            "restrict": ""
        }
    ],
    "KEYBOARD_IQS62X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (MFD_IQS62X)",
            "restrict": ""
        }
    ],
    "KEYBOARD_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_OMAP1)",
            "restrict": ""
        }
    ],
    "KEYBOARD_OMAP4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (( OF && HAS_IOMEM ) || ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "KEYBOARD_SPEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (PLAT_SPEAR)",
            "restrict": ""
        }
    ],
    "KEYBOARD_TC3589X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (MFD_TC3589X)",
            "restrict": ""
        }
    ],
    "KEYBOARD_TM2_TOUCHKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "KEYBOARD_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "KEYBOARD_XTKBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD )",
            "restrict": ""
        }
    ],
    "KEYBOARD_CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "KEYBOARD_CAP11XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (OF && I2C)",
            "restrict": ""
        }
    ],
    "KEYBOARD_BCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (OF && HAVE_CLK && HAS_IOMEM)",
            "restrict": "( ARCH_BCM_CYGNUS )[!(y)]"
        }
    ],
    "KEYBOARD_MT6779": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_MTK_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (MFD_MT6397 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KEYBOARD_CYPRESS_SF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_KEYBOARD ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_MOUSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "MOUSE_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MOUSE_PS2_ALPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_BYD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_LOGIPS2PP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_SYNAPTICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_SYNAPTICS_SMBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2) && (I2C = y || I2C = MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_CYPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_LIFEBOOK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2 && X86 && DMI)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_TRACKPOINT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_ELANTECH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": ""
        }
    ],
    "MOUSE_PS2_ELANTECH_SMBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2 && MOUSE_PS2_ELANTECH) && (I2C = y || I2C = MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_SENTELIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": ""
        }
    ],
    "MOUSE_PS2_TOUCHKIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": ""
        }
    ],
    "MOUSE_PS2_OLPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2 && OLPC)",
            "restrict": ""
        }
    ],
    "MOUSE_PS2_FOCALTECH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "MOUSE_PS2_VMMOUSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2 && X86 && HYPERVISOR_GUEST)",
            "restrict": ""
        }
    ],
    "MOUSE_PS2_SMBUS": [
        {
            "type": "bool",
            "rev_select": "MOUSE_PS2_SYNAPTICS_SMBUS || MOUSE_PS2_ELANTECH_SMBUS",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_PS2)",
            "restrict": ""
        }
    ],
    "MOUSE_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE )",
            "restrict": ""
        }
    ],
    "MOUSE_APPLETOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "MOUSE_BCM5974": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "MOUSE_CYAPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (I2C)",
            "restrict": ""
        }
    ],
    "MOUSE_ELAN_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (I2C)",
            "restrict": ""
        }
    ],
    "MOUSE_ELAN_I2C_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_ELAN_I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MOUSE_ELAN_I2C_SMBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_ELAN_I2C)",
            "restrict": ""
        }
    ],
    "MOUSE_INPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (ISA)",
            "restrict": ""
        }
    ],
    "MOUSE_ATIXL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MOUSE_INPORT)",
            "restrict": ""
        }
    ],
    "MOUSE_LOGIBM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (ISA)",
            "restrict": ""
        }
    ],
    "MOUSE_PC110PAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (ISA)",
            "restrict": ""
        }
    ],
    "MOUSE_AMIGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (AMIGA)",
            "restrict": ""
        }
    ],
    "MOUSE_ATARI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (ATARI)",
            "restrict": ""
        }
    ],
    "MOUSE_RISCPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (ARCH_ACORN)",
            "restrict": ""
        }
    ],
    "MOUSE_VSXXXAA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE )",
            "restrict": ""
        }
    ],
    "MOUSE_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MOUSE_PXA930_TRKBALL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (CPU_PXA930 || CPU_PXA935)",
            "restrict": ""
        }
    ],
    "MOUSE_MAPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (MAPLE)",
            "restrict": ""
        }
    ],
    "MOUSE_SYNAPTICS_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (I2C)",
            "restrict": ""
        }
    ],
    "MOUSE_SYNAPTICS_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "MOUSE_NAVPOINT_PXA27x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MOUSE ) && (PXA27x && PXA_SSP)",
            "restrict": ""
        }
    ],
    "INPUT_JOYSTICK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && (! UML)",
            "restrict": ""
        }
    ],
    "JOYSTICK_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_A3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (IIO)",
            "restrict": ""
        }
    ],
    "JOYSTICK_ADI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (ADI != m)",
            "restrict": ""
        }
    ],
    "JOYSTICK_COBRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_GF2K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_GRIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_GRIP_MP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_GUILLEMOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_INTERACT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_SIDEWINDER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_TMDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_IFORCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (INPUT && INPUT_JOYSTICK)",
            "restrict": ""
        }
    ],
    "JOYSTICK_IFORCE_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (JOYSTICK_IFORCE && USB)",
            "restrict": ""
        }
    ],
    "JOYSTICK_IFORCE_232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (JOYSTICK_IFORCE && SERIO)",
            "restrict": ""
        }
    ],
    "JOYSTICK_WARRIOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_MAGELLAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_SPACEORB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_SPACEBALL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_STINGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_TWIDJOY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_ZHENHUA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_DB9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "JOYSTICK_GAMECON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "JOYSTICK_TURBOGRAFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "JOYSTICK_AMIGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (AMIGA)",
            "restrict": ""
        }
    ],
    "JOYSTICK_AS5011": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (I2C)",
            "restrict": ""
        }
    ],
    "JOYSTICK_JOYDUMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_XPAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "JOYSTICK_XPAD_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (JOYSTICK_XPAD && INPUT)",
            "restrict": ""
        }
    ],
    "JOYSTICK_XPAD_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (JOYSTICK_XPAD && ( LEDS_CLASS = y || LEDS_CLASS = JOYSTICK_XPAD ))",
            "restrict": ""
        }
    ],
    "JOYSTICK_WALKERA0701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (HIGH_RES_TIMERS && PARPORT)",
            "restrict": ""
        }
    ],
    "JOYSTICK_MAPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (MAPLE)",
            "restrict": ""
        }
    ],
    "JOYSTICK_PSXPAD_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (SPI)",
            "restrict": ""
        }
    ],
    "JOYSTICK_PSXPAD_SPI_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (JOYSTICK_PSXPAD_SPI)",
            "restrict": ""
        }
    ],
    "JOYSTICK_PXRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "JOYSTICK_QWIIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (I2C)",
            "restrict": ""
        }
    ],
    "JOYSTICK_FSIA6B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK )",
            "restrict": ""
        }
    ],
    "JOYSTICK_N64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (MACH_NINTENDO64)",
            "restrict": ""
        }
    ],
    "JOYSTICK_SENSEHAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_JOYSTICK ) && (INPUT && I2C) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "INPUT_TABLET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "TABLET_USB_ACECAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TABLET ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "TABLET_USB_AIPTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TABLET ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "TABLET_USB_HANWANG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TABLET ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "TABLET_USB_KBTAB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TABLET ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "TABLET_USB_PEGASUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TABLET ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "TABLET_SERIAL_WACOM4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TABLET )",
            "restrict": ""
        }
    ],
    "INPUT_TOUCHSCREEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ADS7846": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (SPI_MASTER) && (HWMON = n || HWMON)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_AD7877": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_AD7879": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_AD7879_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_AD7879 && I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_AD7879_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_AD7879 && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (IIO)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_AR1021_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ATMEL_MXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ATMEL_MXT_T37": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_ATMEL_MXT) && (VIDEO_DEV = y || ( TOUCHSCREEN_ATMEL_MXT = m && VIDEO_DEV = m ))",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_AUO_PIXCIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_BU21013": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_BU21029": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CHIPONE_ICN8318": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (GPIOLIB || COMPILE_TEST) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CHIPONE_ICN8505": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C && ACPI)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CY8CTMA140": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CY8CTMG110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CYTTSP_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CYTTSP_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_CYTTSP_CORE && I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CYTTSP_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_CYTTSP_CORE && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CYTTSP4_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CYTTSP4_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_CYTTSP4_CORE && I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_CYTTSP4_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_CYTTSP4_CORE && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_DA9034": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (PMIC_DA903X)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TOUCHSCREEN_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_DYNAPRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_HAMPSHIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_EETI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_EGALAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_EGALAX_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_EXC3000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_FUJITSU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_GOODIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_HIDEEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_HYCON_HY46XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ILI210X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ILITEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_S3C2410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (ARCH_S3C24XX || SAMSUNG_DEV_TS) && (S3C_ADC)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_S6SY761": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_GUNZE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_EKTF2127": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ELAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ELO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WACOM_W8001": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WACOM_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (ARCH_LPC32XX)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MAX11801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MCS5000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MMS114": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MELFAS_MIP4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MSG2638": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MTOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_IMAGIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_IMX6UL_TSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (( ( OF && GPIOLIB ) || COMPILE_TEST ) && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_INEXIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MK712": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_HP600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (SH_HP6XX && SH_ADC)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_HP7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (SA1100_JORNADA720_SSP)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_IPAQ_MICRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_IPAQ_MICRO)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_HTCPEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (ISA)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_PENMOUNT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_EDT_FT5X06": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_RASPBERRYPI_FW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (RASPBERRYPI_FIRMWARE || ( RASPBERRYPI_FIRMWARE = n && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MIGOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (( SH_MIGOR || COMPILE_TEST ) && I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TOUCHRIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TOUCHWIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TI_AM335X_TSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_TI_AM335X_TSCADC)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_UCB1400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (AC97_BUS) && (UCB1400_CORE)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_PIXCIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WDT87XX_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WM97XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (AC97_BUS || AC97_BUS_NEW)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WM9705": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_WM97XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TOUCHSCREEN_WM9712": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_WM97XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TOUCHSCREEN_WM9713": [
        {
            "type": "bool",
            "rev_select": "TOUCHSCREEN_WM97XX_ZYLONITE",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_WM97XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TOUCHSCREEN_WM97XX_MAINSTONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_WM97XX && ARCH_PXA) && (SND_PXA2XX_LIB_AC97)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_WM97XX_ZYLONITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_WM97XX && MACH_ZYLONITE) && (SND_PXA2XX_LIB_AC97)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_USB_COMPOSITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MXS_LRADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_MXS_LRADC)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MX25": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_MX25_TSADC)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_MC13783": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_USB_EGALAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_PANJIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_3M": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_ITM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_ETURBO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_GUNZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_DMC_TSC10": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_IRTOUCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_IDEALTEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_GENERAL_TOUCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_GOTOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_JASTEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_ELO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_E2I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_ZYTRONIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_ETT_TC45USB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_NEXIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_USB_EASYTOUCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_USB_COMPOSITE)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TOUCHSCREEN_TOUCHIT213": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TS4800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (HAS_IOMEM && OF) && (SOC_IMX51 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TSC_SERIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TSC200X_CORE": [
        {
            "type": "tristate",
            "rev_select": "TOUCHSCREEN_TSC2004 || TOUCHSCREEN_TSC2005",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN )",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TSC2004": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TSC2005": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TSC2007": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TSC2007_IIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (TOUCHSCREEN_TSC2007) && (IIO = y || IIO = TOUCHSCREEN_TSC2007)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_PCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (EZX_PCAP)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_RM_TS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_SILEAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_SIS_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ST1232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_STMFTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_STMPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (MFD_STMPE) && (( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (ARCH_SUNXI || COMPILE_TEST) && (HWMON) && (THERMAL || ! THERMAL_OF)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_SUR40": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (USB && MEDIA_USB_SUPPORT && HAS_DMA) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_SURFACE3_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (SPI) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_SX8654": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_TPS6507X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ZET6223": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ZFORCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_COLIBRI_VF50": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (IIO && VF610_ADC) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ROHM_BU21023": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_IQS5XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_ZINITIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_TOUCHSCREEN ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_MISC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "INPUT_88PM860X_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "INPUT_88PM80X_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_88PM800)",
            "restrict": ""
        }
    ],
    "INPUT_AB8500_PONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (AB8500_CORE)",
            "restrict": ""
        }
    ],
    "INPUT_AD714X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC )",
            "restrict": ""
        }
    ],
    "INPUT_AD714X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT_AD714X && I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INPUT_AD714X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT_AD714X && SPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INPUT_ARIEL_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (SPI) && (MACH_MMP3_DT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_ARIZONA_HAPTICS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_ARIZONA && SND_SOC)",
            "restrict": ""
        }
    ],
    "INPUT_ATC260X_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_ATC260X)",
            "restrict": ""
        }
    ],
    "INPUT_ATMEL_CAPTOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (OF || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_BMA150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_E3X0_BUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INPUT_PCSPKR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (PCSPKR_PLATFORM)",
            "restrict": ""
        }
    ],
    "INPUT_PM8941_PWRKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_SPMI_PMIC)",
            "restrict": ""
        }
    ],
    "INPUT_PM8XXX_VIBRATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_PM8XXX || MFD_SPMI_PMIC)",
            "restrict": ""
        }
    ],
    "INPUT_PMIC8XXX_PWRKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_PM8XXX)",
            "restrict": ""
        }
    ],
    "INPUT_SPARCSPKR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (PCI && SPARC64)",
            "restrict": ""
        }
    ],
    "INPUT_M68K_BEEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (M68K)",
            "restrict": ""
        }
    ],
    "INPUT_MAX77650_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_MAX77650)",
            "restrict": ""
        }
    ],
    "INPUT_MAX77693_HAPTIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (( MFD_MAX77693 || MFD_MAX77843 ) && PWM)",
            "restrict": ""
        }
    ],
    "INPUT_MAX8925_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_MAX8925)",
            "restrict": ""
        }
    ],
    "INPUT_MAX8997_HAPTIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (PWM && MFD_MAX8997)",
            "restrict": ""
        }
    ],
    "INPUT_MC13783_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "INPUT_MMA8450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_APANEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (X86 && I2C && LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "INPUT_GPIO_BEEPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_GPIO_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_GPIO_VIBRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_COBALT_BTNS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MIPS_COBALT)",
            "restrict": ""
        }
    ],
    "INPUT_CPCAP_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_CPCAP)",
            "restrict": ""
        }
    ],
    "INPUT_WISTRON_BTNS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (X86_32)",
            "restrict": ""
        }
    ],
    "INPUT_ATLAS_BTNS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "INPUT_ATI_REMOTE2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "INPUT_KEYSPAN_REMOTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "INPUT_KXTJ9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_POWERMATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "INPUT_YEALINK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "INPUT_CM109": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "INPUT_REGULATOR_HAPTIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "INPUT_RETU_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_RETU)",
            "restrict": ""
        }
    ],
    "INPUT_TPS65218_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (( MFD_TPS65217 || MFD_TPS65218 ))",
            "restrict": ""
        }
    ],
    "INPUT_AXP20X_PEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_AXP20X)",
            "restrict": ""
        }
    ],
    "INPUT_TWL4030_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "INPUT_TWL4030_VIBRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "INPUT_TWL6040_VIBRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (TWL6040_CORE)",
            "restrict": ""
        }
    ],
    "INPUT_UINPUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC )",
            "restrict": ""
        }
    ],
    "INPUT_SGI_BTNS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (SGI_IP22 || SGI_IP32)",
            "restrict": ""
        }
    ],
    "HP_SDC_RTC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (( GSC || HP300 ) && SERIO)",
            "restrict": ""
        }
    ],
    "INPUT_PALMAS_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "INPUT_PCF50633_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "INPUT_PCF8574": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_PWM_BEEPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (PWM)",
            "restrict": ""
        }
    ],
    "INPUT_PWM_VIBRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (PWM)",
            "restrict": ""
        }
    ],
    "INPUT_RK805_PWRKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_RK808)",
            "restrict": ""
        }
    ],
    "INPUT_GPIO_ROTARY_ENCODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_RB532_BUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MIKROTIK_RB532) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "INPUT_DA7280_HAPTICS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT && I2C)",
            "restrict": ""
        }
    ],
    "INPUT_DA9052_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "INPUT_DA9055_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_DA9055)",
            "restrict": ""
        }
    ],
    "INPUT_DA9063_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_DA9063 || MFD_DA9062)",
            "restrict": ""
        }
    ],
    "INPUT_DM355EVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_DM355EVM_MSP)",
            "restrict": ""
        }
    ],
    "INPUT_WM831X_ON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "INPUT_PCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (EZX_PCAP)",
            "restrict": ""
        }
    ],
    "INPUT_ADXL34X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INPUT_ADXL34X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT_ADXL34X && I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INPUT_ADXL34X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT_ADXL34X && SPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INPUT_IMS_PCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (USB) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "INPUT_IQS269A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_IQS626A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_IQS7222": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (I2C)",
            "restrict": ""
        }
    ],
    "INPUT_CMA3000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC )",
            "restrict": ""
        }
    ],
    "INPUT_CMA3000_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT_CMA3000 && I2C)",
            "restrict": ""
        }
    ],
    "INPUT_XEN_KBDDEV_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INPUT_IDEAPAD_SLIDEBAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT) && (SERIO_I8042)",
            "restrict": ""
        }
    ],
    "INPUT_SOC_BUTTON_ARRAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (KEYBOARD_GPIO && ACPI)",
            "restrict": ""
        }
    ],
    "INPUT_DRV260X_HAPTICS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT && I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_DRV2665_HAPTICS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT && I2C)",
            "restrict": ""
        }
    ],
    "INPUT_DRV2667_HAPTICS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (INPUT && I2C)",
            "restrict": ""
        }
    ],
    "INPUT_HISI_POWERKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_RAVE_SP_PWRBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (RAVE_SP_CORE)",
            "restrict": ""
        }
    ],
    "INPUT_SC27XX_VIBRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_SC27XX_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INPUT_STPMIC1_ONKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( INPUT_MISC ) && (MFD_STPMIC1)",
            "restrict": ""
        }
    ],
    "RMI4_CORE": [
        {
            "type": "tristate",
            "rev_select": "HID_RMI",
            "dep": "( INPUT )",
            "restrict": ""
        }
    ],
    "RMI4_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE ) && (I2C)",
            "restrict": ""
        }
    ],
    "RMI4_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE ) && (SPI)",
            "restrict": ""
        }
    ],
    "RMI4_SMB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE ) && (I2C)",
            "restrict": ""
        }
    ],
    "RMI4_F03": [
        {
            "type": "bool",
            "rev_select": "HID_RMI",
            "dep": "( INPUT ) && ( RMI4_CORE ) && (RMI4_CORE)",
            "restrict": ""
        }
    ],
    "RMI4_F03_SERIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE ) && (RMI4_CORE) && (RMI4_F03)",
            "restrict": "( RMI4_CORE )[!(y)]"
        }
    ],
    "RMI4_2D_SENSOR": [
        {
            "type": "bool",
            "rev_select": "RMI4_F11 || RMI4_F12",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "RMI4_F11": [
        {
            "type": "bool",
            "rev_select": "HID_RMI",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "RMI4_F12": [
        {
            "type": "bool",
            "rev_select": "HID_RMI",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "RMI4_F30": [
        {
            "type": "bool",
            "rev_select": "HID_RMI",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "RMI4_F34": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "RMI4_F3A": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "RMI4_F54": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INPUT ) && ( RMI4_CORE ) && (VIDEO_DEV = y || ( RMI4_CORE = m && VIDEO_DEV = m ))",
            "restrict": ""
        }
    ],
    "RMI4_F55": [
        {
            "type": "bool",
            "rev_select": "RMI4_F54",
            "dep": "( INPUT ) && ( RMI4_CORE )",
            "restrict": ""
        }
    ],
    "SERIO": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_ATKBD || KEYBOARD_LKKBD || KEYBOARD_HIL || KEYBOARD_NEWTON || KEYBOARD_STOWAWAY || KEYBOARD_SUNKBD || KEYBOARD_XTKBD || MOUSE_PS2 || MOUSE_SERIAL || MOUSE_VSXXXAA || JOYSTICK_WARRIOR || JOYSTICK_MAGELLAN || JOYSTICK_SPACEORB || JOYSTICK_SPACEBALL || JOYSTICK_STINGER || JOYSTICK_TWIDJOY || JOYSTICK_ZHENHUA || JOYSTICK_FSIA6B || TABLET_SERIAL_WACOM4 || TOUCHSCREEN_DYNAPRO || TOUCHSCREEN_HAMPSHIRE || TOUCHSCREEN_EGALAX_SERIAL || TOUCHSCREEN_FUJITSU || TOUCHSCREEN_GUNZE || TOUCHSCREEN_ELO || TOUCHSCREEN_WACOM_W8001 || TOUCHSCREEN_MTOUCH || TOUCHSCREEN_INEXIO || TOUCHSCREEN_PENMOUNT || TOUCHSCREEN_TOUCHRIGHT || TOUCHSCREEN_TOUCHWIN || TOUCHSCREEN_TOUCHIT213 || TOUCHSCREEN_TSC_SERIO || RMI4_F03_SERIO || I2C_TAOS_EVM || USB_PULSE8_CEC || USB_RAINSHADOW_CEC",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARCH_MIGHT_HAVE_PC_SERIO": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "SERIO_I8042": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_ATKBD[ARCH_MIGHT_HAVE_PC_SERIO] || MOUSE_PS2[ARCH_MIGHT_HAVE_PC_SERIO]",
            "dep": "( SERIO ) && (ARCH_MIGHT_HAVE_PC_SERIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIO_SERPORT": [
        {
            "type": "tristate",
            "rev_select": "I2C_TAOS_EVM || USB_PULSE8_CEC || USB_RAINSHADOW_CEC",
            "dep": "( SERIO ) && (TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIO_CT82C710": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (X86)",
            "restrict": ""
        }
    ],
    "SERIO_Q40KBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (Q40)",
            "restrict": ""
        }
    ],
    "SERIO_PARKBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "SERIO_RPCKBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (ARCH_ACORN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIO_AMBAKMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "SERIO_SA1111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (SA1111)",
            "restrict": ""
        }
    ],
    "SERIO_GSCPS2": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_ATKBD[GSC] || MOUSE_PS2[GSC]",
            "dep": "( SERIO ) && (GSC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HP_SDC": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_HIL || HP_SDC_RTC",
            "dep": "( SERIO ) && (( GSC || HP300 ) && SERIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HIL_MLC": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_HIL",
            "dep": "( SERIO ) && (HP_SDC)",
            "restrict": ""
        }
    ],
    "SERIO_PCIPS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "SERIO_MACEPS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (SGI_IP32)",
            "restrict": ""
        }
    ],
    "SERIO_SGI_IOC3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (SGI_MFD_IOC3)",
            "restrict": ""
        }
    ],
    "SERIO_LIBPS2": [
        {
            "type": "tristate",
            "rev_select": "KEYBOARD_ATKBD || MOUSE_PS2",
            "dep": "( SERIO ) && (SERIO_I8042 || SERIO_I8042 = n)",
            "restrict": ""
        }
    ],
    "SERIO_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO )",
            "restrict": ""
        }
    ],
    "SERIO_XILINX_XPS_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (PPC || MICROBLAZE)",
            "restrict": ""
        }
    ],
    "SERIO_ALTERA_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SERIO_AMS_DELTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (MACH_AMS_DELTA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIO_PS2MULT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO )",
            "restrict": ""
        }
    ],
    "SERIO_ARC_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SERIO_APBPS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SERIO_OLPC_APSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HYPERV_KEYBOARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (HYPERV)",
            "restrict": "( HYPERV )[!(y)]"
        }
    ],
    "SERIO_SUN4I_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIO_GPIO_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "USERIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SERIO )",
            "restrict": ""
        }
    ],
    "GAMEPORT": [
        {
            "type": "tristate",
            "rev_select": "JOYSTICK_ANALOG || JOYSTICK_A3D || JOYSTICK_ADI || JOYSTICK_COBRA || JOYSTICK_GF2K || JOYSTICK_GRIP || JOYSTICK_GRIP_MP || JOYSTICK_GUILLEMOT || JOYSTICK_INTERACT || JOYSTICK_SIDEWINDER || JOYSTICK_TMDC || JOYSTICK_JOYDUMP",
            "dep": "(! UML)",
            "restrict": ""
        }
    ],
    "GAMEPORT_NS558": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GAMEPORT )",
            "restrict": ""
        }
    ],
    "GAMEPORT_L4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GAMEPORT )",
            "restrict": ""
        }
    ],
    "GAMEPORT_EMU10K1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GAMEPORT ) && (PCI)",
            "restrict": ""
        }
    ],
    "GAMEPORT_FM801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GAMEPORT ) && (PCI)",
            "restrict": ""
        }
    ],
    "TTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "VT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY )",
            "restrict": "( y )[!(EXPERT) && (! UML)]"
        }
    ],
    "CONSOLE_TRANSLATIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (VT)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "VT_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (VT)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "VT_CONSOLE_SLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (VT_CONSOLE && PM_SLEEP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HW_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (VT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VT_HW_CONSOLE_BINDING": [
        {
            "type": "bool",
            "rev_select": "DRM_INGENIC[FRAMEBUFFER_CONSOLE] || DRM_PL111[FRAMEBUFFER_CONSOLE] || DRM_TVE200[FRAMEBUFFER_CONSOLE] || DRM_MCDE[FRAMEBUFFER_CONSOLE] || FRAMEBUFFER_CONSOLE",
            "dep": "( TTY ) && (HW_CONSOLE)",
            "restrict": ""
        }
    ],
    "UNIX98_PTYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "LEGACY_PTYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LEGACY_PTY_COUNT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && (LEGACY_PTYS)",
            "restrict": "( 0 256 ) || ( 256 )[!(y)]"
        }
    ],
    "LDISC_AUTOLOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_EARLYCON": [
        {
            "type": "bool",
            "rev_select": "SERIAL_8250_CONSOLE || SERIAL_AMBA_PL011_CONSOLE || SERIAL_EARLYCON_ARM_SEMIHOST || SERIAL_EARLYCON_RISCV_SBI || SERIAL_ATMEL_CONSOLE || SERIAL_MESON_CONSOLE || SERIAL_SAMSUNG_CONSOLE || SERIAL_IMX_EARLYCON || SERIAL_UARTLITE_CONSOLE || SERIAL_SH_SCI_EARLYCON || SERIAL_MSM_CONSOLE || SERIAL_QCOM_GENI_CONSOLE || SERIAL_SIFIVE_CONSOLE || SERIAL_LANTIQ_CONSOLE || SERIAL_BCM63XX_CONSOLE || SERIAL_ALTERA_JTAGUART_CONSOLE || SERIAL_ALTERA_UART_CONSOLE || SERIAL_XILINX_PS_UART_CONSOLE || SERIAL_MPS2_UART_CONSOLE || SERIAL_ARC_CONSOLE || SERIAL_FSL_LPUART_CONSOLE || SERIAL_FSL_LINFLEXUART_CONSOLE || SERIAL_SPRD_CONSOLE || SERIAL_STM32_CONSOLE || SERIAL_MVEBU_CONSOLE || SERIAL_OWL_CONSOLE || SERIAL_RDA_CONSOLE || SERIAL_MILBEAUT_USIO_CONSOLE || SERIAL_LITEUART_CONSOLE || SERIAL_SUNPLUS_CONSOLE || GOLDFISH_TTY_EARLY_CONSOLE",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_CORE)",
            "restrict": ""
        }
    ],
    "SERIAL_8250": [
        {
            "type": "tristate",
            "rev_select": "MWAVE",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (! S390)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_DEPRECATED_OPTIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_8250_PNP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && PNP)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SERIAL_8250_16550A_VARIANTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": "( ! X86 )[!(y)]"
        }
    ],
    "SERIAL_8250_FINTEK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "SERIAL_PXA_CONSOLE[SERIAL_8250 = y]",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_GSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && GSC)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && DMADEVICES = y)",
            "restrict": "( SERIAL_8250 )[!(EXPERT)]"
        }
    ],
    "SERIAL_8250_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && PCI)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_EXAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_PCI)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_HP300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && HP300)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PCMCIA && SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_MEN_MCB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (MCB && SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_NR_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": "( 4 )[!(y)]"
        }
    ],
    "SERIAL_8250_RUNTIME_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": "( 0 SERIAL_8250_NR_UARTS ) || ( 4 )[!(y)]"
        }
    ],
    "SERIAL_8250_EXTENDED": [
        {
            "type": "bool",
            "rev_select": "SERIAL_8250_IOC3",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_MANY_PORTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_EXTENDED && ! IA64)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_FOURPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 != n && ISA && SERIAL_8250_MANY_PORTS)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_ACCENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 != n && ISA && SERIAL_8250_MANY_PORTS)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_ASPEED_VUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (OF) && (REGMAP && MFD_SYSCON) && (ARCH_ASPEED || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_BOCA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 != n && ISA && SERIAL_8250_MANY_PORTS)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_EXAR_ST16C554": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 != n && ISA && SERIAL_8250_MANY_PORTS)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_HUB6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 != n && ISA && SERIAL_8250_MANY_PORTS)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_SHARE_IRQ": [
        {
            "type": "bool",
            "rev_select": "SERIAL_8250_IOC3",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_EXTENDED)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_DETECT_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_EXTENDED)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_RSA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_EXTENDED)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_DWLIB": [
        {
            "type": "bool",
            "rev_select": "SERIAL_8250_DW || SERIAL_8250_LPSS",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_8250_ACORN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_ACORN && SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_BCM2835AUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_BCM2835 || COMPILE_TEST) && (SERIAL_8250 && SERIAL_8250_SHARE_IRQ)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_FSL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_CONSOLE)",
            "restrict": "( PPC || ARM || ARM64 )[!(COMPILE_TEST && ! ( PPC || ARM || ARM64 ))]"
        }
    ],
    "SERIAL_8250_DW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_EM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && HAVE_CLK) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_IOC3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (SGI_MFD_IOC3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_RT288X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250)",
            "restrict": "( y )[!(y) && (MIPS_ALCHEMY || SOC_RT288X || SOC_RT305X || SOC_RT3883 || SOC_MT7620)]"
        }
    ],
    "SERIAL_8250_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (ARCH_OMAP2PLUS || ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_OMAP_TTYO_FIXUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_OMAP = y && SERIAL_8250_CONSOLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_8250_LPC18XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && OF && ( ARCH_LPC18XX || COMPILE_TEST ))",
            "restrict": "( ARCH_LPC18XX )[!(y)]"
        }
    ],
    "SERIAL_8250_MT6577": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (ARCH_UNIPHIER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_INGENIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (OF_FLATTREE) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_LPSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && PCI) && (X86 || COMPILE_TEST)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_MID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && PCI) && (X86 || COMPILE_TEST)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_PERICOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && PCI)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_PXA": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_PXA[SERIAL_8250 = y]",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (ARCH_PXA || ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_8250_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": "( SERIAL_8250 )[!(y)]"
        }
    ],
    "SERIAL_8250_BCM7271": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && ( ARCH_BRCMSTB || COMPILE_TEST ))",
            "restrict": "( ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "SERIAL_OF_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250 && OF)",
            "restrict": ""
        }
    ],
    "SERIAL_AMBA_PL010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARM_AMBA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_AMBA_PL010_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_AMBA_PL010 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_AMBA_PL011": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "SERIAL_AMBA_PL011_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_AMBA_PL011 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_EARLYCON_ARM_SEMIHOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARM64 || ARM)",
            "restrict": ""
        }
    ],
    "SERIAL_EARLYCON_RISCV_SBI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (RISCV_SBI_V01)",
            "restrict": ""
        }
    ],
    "SERIAL_SB1250_DUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SIBYTE_SB1xxx_SOC = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_SB1250_DUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SB1250_DUART = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_ATMEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_ATMEL_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ATMEL = y)",
            "restrict": ""
        }
    ],
    "SERIAL_ATMEL_PDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ATMEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_ATMEL_TTYAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ATMEL = y)",
            "restrict": ""
        }
    ],
    "SERIAL_KGDB_NMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (KGDB_SERIAL_CONSOLE)",
            "restrict": ""
        }
    ],
    "SERIAL_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_MESON_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MESON)",
            "restrict": ""
        }
    ],
    "SERIAL_CLPS711X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_CLPS711X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_CLPS711X_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_CLPS711X = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SAMSUNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PLAT_SAMSUNG || ARCH_S5PV210 || ARCH_EXYNOS || ARCH_APPLE || ARCH_ARTPEC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_SAMSUNG_UARTS_4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SAMSUNG)",
            "restrict": "( y )[!(y) && (! ( CPU_S3C2410 || CPU_S3C2412 || CPU_S3C2440 || CPU_S3C2442 ))]"
        }
    ],
    "SERIAL_SAMSUNG_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SAMSUNG)",
            "restrict": "( 4 )[!(y) && (SERIAL_SAMSUNG_UARTS_4 || CPU_S3C2416)] || ( 3 )[!(y)]"
        }
    ],
    "SERIAL_SAMSUNG_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SAMSUNG)",
            "restrict": ""
        }
    ],
    "SERIAL_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (( ARCH_TEGRA && TEGRA20_APB_DMA ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_TEGRA_TCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (MAILBOX) && (( ARCH_TEGRA && TEGRA_HSP_MBOX ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_TEGRA_TCU_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_TEGRA_TCU = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_MAX3100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "SERIAL_MAX310X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SERIAL_DZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (MACH_DECSTATION && 32BIT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_DZ_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_DZ = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_ZS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (MACH_DECSTATION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_ZS_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ZS = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_21285": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (FOOTBRIDGE)",
            "restrict": ""
        }
    ],
    "SERIAL_21285_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_21285 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_PXA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_PXA || ARCH_MMP)",
            "restrict": ""
        }
    ],
    "SERIAL_PXA_NON8250": [
        {
            "type": "bool",
            "rev_select": "SERIAL_PXA[! SERIAL_8250 = y]",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (! SERIAL_8250)",
            "restrict": ""
        }
    ],
    "SERIAL_PXA_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_PXA)",
            "restrict": ""
        }
    ],
    "SERIAL_SA1100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_SA1100)",
            "restrict": ""
        }
    ],
    "SERIAL_SA1100_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SA1100)",
            "restrict": ""
        }
    ],
    "SERIAL_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_IMX_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_IMX)",
            "restrict": ""
        }
    ],
    "SERIAL_IMX_EARLYCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MXC || COMPILE_TEST) && (OF)",
            "restrict": "( y )[!(y) && (SERIAL_IMX_CONSOLE)]"
        }
    ],
    "SERIAL_UARTLITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SERIAL_UARTLITE_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_UARTLITE = y)",
            "restrict": ""
        }
    ],
    "SERIAL_UARTLITE_NR_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_UARTLITE)",
            "restrict": "( 1 256 ) || ( 1 )[!(y)]"
        }
    ],
    "SERIAL_SUNCORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPARC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_SUNZILOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPARC)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNZILOG_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SUNZILOG = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNSU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPARC && PCI)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNSU_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SUNSU = y)",
            "restrict": ""
        }
    ],
    "SERIAL_MUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (GSC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_MUX_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MUX = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PDC_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PARISC && ! SERIAL_MUX && VT)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNSAB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPARC && PCI)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNSAB_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SUNSAB = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNHV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "SERIAL_IP22_ZILOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SGI_HAS_ZILOG)",
            "restrict": ""
        }
    ],
    "SERIAL_IP22_ZILOG_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_IP22_ZILOG = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SH_SCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SUPERH || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_SH_SCI_NR_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SH_SCI)",
            "restrict": "( 1 64 )[64BIT] || ( 1 32 )[! 64BIT] || ( 10 )[!(EXPERT) && (SUPERH)] || ( 18 )[!(EXPERT) && (ARCH_RENESAS)] || ( 2 )[!(EXPERT)]"
        }
    ],
    "SERIAL_SH_SCI_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SH_SCI = y)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SERIAL_SH_SCI_EARLYCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SH_SCI = y)",
            "restrict": "( ARCH_RENESAS )[!(EXPERT)]"
        }
    ],
    "SERIAL_SH_SCI_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SH_SCI && DMA_ENGINE)",
            "restrict": "( ARCH_RENESAS )[!(EXPERT)]"
        }
    ],
    "SERIAL_HS_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_LPC32XX || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SERIAL_HS_LPC32XX_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_HS_LPC32XX = y)",
            "restrict": ""
        }
    ],
    "SERIAL_CORE": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_8250 || SERIAL_AMBA_PL010 || SERIAL_AMBA_PL011 || SERIAL_EARLYCON_ARM_SEMIHOST || SERIAL_EARLYCON_RISCV_SBI || SERIAL_SB1250_DUART || SERIAL_ATMEL || SERIAL_MESON || SERIAL_CLPS711X || SERIAL_SAMSUNG || SERIAL_TEGRA || SERIAL_TEGRA_TCU || SERIAL_MAX3100 || SERIAL_MAX310X || SERIAL_DZ || SERIAL_ZS || SERIAL_21285 || SERIAL_PXA || SERIAL_SA1100 || SERIAL_IMX || SERIAL_IMX_EARLYCON || SERIAL_UARTLITE || SERIAL_SUNCORE || SERIAL_MUX || SERIAL_IP22_ZILOG || SERIAL_SH_SCI || SERIAL_HS_LPC32XX || SERIAL_MCF || SERIAL_PMACZILOG || SERIAL_CPM || SERIAL_PIC32 || SERIAL_MPC52xx || SERIAL_ICOM || SERIAL_TXX9 || SERIAL_JSM || SERIAL_MSM || SERIAL_QCOM_GENI || SERIAL_VT8500 || SERIAL_OMAP || SERIAL_SIFIVE || SERIAL_LANTIQ || SERIAL_QE || SERIAL_SCCNXP || SERIAL_SC16IS7XX || SERIAL_TIMBERDALE || SERIAL_BCM63XX || SERIAL_GRLIB_GAISLER_APBUART || SERIAL_ALTERA_JTAGUART || SERIAL_ALTERA_UART || SERIAL_PCH_UART || SERIAL_MXS_AUART || SERIAL_XILINX_PS_UART || SERIAL_AR933X || SERIAL_MPS2_UART || SERIAL_ARC || SERIAL_RP2 || SERIAL_FSL_LPUART || SERIAL_FSL_LINFLEXUART || SERIAL_CONEXANT_DIGICOLOR || SERIAL_ST_ASC || SERIAL_MEN_Z135 || SERIAL_SPRD || SERIAL_STM32 || SERIAL_MVEBU_UART || SERIAL_OWL || SERIAL_RDA || SERIAL_MILBEAUT_USIO || SERIAL_LITEUART || SERIAL_SUNPLUS || GOLDFISH_TTY",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_CORE_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "SERIAL_8250_CONSOLE || SERIAL_AMBA_PL010_CONSOLE || SERIAL_AMBA_PL011_CONSOLE || SERIAL_EARLYCON_ARM_SEMIHOST || SERIAL_EARLYCON_RISCV_SBI || SERIAL_SB1250_DUART_CONSOLE || SERIAL_ATMEL_CONSOLE || SERIAL_MESON_CONSOLE || SERIAL_CLPS711X_CONSOLE || SERIAL_SAMSUNG_CONSOLE || SERIAL_TEGRA_TCU_CONSOLE || SERIAL_DZ_CONSOLE || SERIAL_ZS_CONSOLE || SERIAL_21285_CONSOLE || SERIAL_PXA_CONSOLE || SERIAL_SA1100_CONSOLE || SERIAL_IMX_CONSOLE || SERIAL_IMX_EARLYCON || SERIAL_UARTLITE_CONSOLE || SERIAL_SUNCORE || SERIAL_MUX_CONSOLE || SERIAL_IP22_ZILOG_CONSOLE || SERIAL_SH_SCI_CONSOLE || SERIAL_SH_SCI_EARLYCON || SERIAL_HS_LPC32XX_CONSOLE || SERIAL_MCF_CONSOLE || SERIAL_PMACZILOG_CONSOLE || SERIAL_CPM_CONSOLE || SERIAL_PIC32_CONSOLE || SERIAL_MPC52xx_CONSOLE || SERIAL_TXX9_CONSOLE || SERIAL_MSM_CONSOLE || SERIAL_QCOM_GENI_CONSOLE || SERIAL_VT8500_CONSOLE || SERIAL_OMAP_CONSOLE || SERIAL_SIFIVE_CONSOLE || SERIAL_LANTIQ_CONSOLE || SERIAL_SCCNXP_CONSOLE || SERIAL_BCM63XX_CONSOLE || SERIAL_GRLIB_GAISLER_APBUART_CONSOLE || SERIAL_ALTERA_JTAGUART_CONSOLE || SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS || SERIAL_ALTERA_UART_CONSOLE || SERIAL_PCH_UART_CONSOLE || SERIAL_MXS_AUART_CONSOLE || SERIAL_XILINX_PS_UART_CONSOLE || SERIAL_AR933X_CONSOLE || SERIAL_MPS2_UART_CONSOLE || SERIAL_ARC_CONSOLE || SERIAL_FSL_LPUART_CONSOLE || SERIAL_FSL_LINFLEXUART_CONSOLE || SERIAL_CONEXANT_DIGICOLOR_CONSOLE || SERIAL_ST_ASC_CONSOLE || SERIAL_SPRD_CONSOLE || SERIAL_STM32_CONSOLE || SERIAL_MVEBU_CONSOLE || SERIAL_OWL_CONSOLE || SERIAL_RDA_CONSOLE || SERIAL_MILBEAUT_USIO_CONSOLE || SERIAL_LITEUART_CONSOLE || SERIAL_SUNPLUS_CONSOLE || GOLDFISH_TTY || HVC_DCC",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "CONSOLE_POLL": [
        {
            "type": "bool",
            "rev_select": "KGDB_SERIAL_CONSOLE",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_MCF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (COLDFIRE)",
            "restrict": ""
        }
    ],
    "SERIAL_MCF_BAUDRATE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MCF)",
            "restrict": "( 19200 )[!(y)]"
        }
    ],
    "SERIAL_MCF_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MCF)",
            "restrict": ""
        }
    ],
    "SERIAL_PMACZILOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (( M68K && MAC ) || PPC_PMAC)",
            "restrict": ""
        }
    ],
    "SERIAL_PMACZILOG_TTYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_PMACZILOG)",
            "restrict": ""
        }
    ],
    "SERIAL_PMACZILOG_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_PMACZILOG = y)",
            "restrict": ""
        }
    ],
    "SERIAL_CPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (CPM2 || CPM1 || ( PPC32 && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SERIAL_CPM_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_CPM = y)",
            "restrict": ""
        }
    ],
    "SERIAL_PIC32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (MACH_PIC32 || ( MIPS && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SERIAL_PIC32_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_PIC32 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_MPC52xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PPC_MPC52xx || PPC_MPC512x)",
            "restrict": ""
        }
    ],
    "SERIAL_MPC52xx_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MPC52xx = y)",
            "restrict": ""
        }
    ],
    "SERIAL_MPC52xx_CONSOLE_BAUD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MPC52xx_CONSOLE = y)",
            "restrict": "( 9600 )[!(y)]"
        }
    ],
    "SERIAL_ICOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PCI) && (PPC_PSERIES || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_TXX9": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (HAS_TXX9_SERIAL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAS_TXX9_SERIAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_TXX9_NR_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_TXX9)",
            "restrict": "( 6 )[!(y)]"
        }
    ],
    "SERIAL_TXX9_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_TXX9 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_TXX9_STDSERIAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (! SERIAL_8250 && SERIAL_TXX9)",
            "restrict": ""
        }
    ],
    "SERIAL_JSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "SERIAL_MSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_MSM_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MSM = y)",
            "restrict": ""
        }
    ],
    "SERIAL_QCOM_GENI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_QCOM || COMPILE_TEST) && (QCOM_GENI_SE)",
            "restrict": ""
        }
    ],
    "SERIAL_QCOM_GENI_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_QCOM_GENI)",
            "restrict": ""
        }
    ],
    "SERIAL_VT8500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_VT8500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_VT8500_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_VT8500 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (( ARCH_OMAP2PLUS && ! SERIAL_8250_OMAP ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_OMAP_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_OMAP = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SIFIVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (OF)",
            "restrict": ""
        }
    ],
    "SERIAL_SIFIVE_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SIFIVE = y)",
            "restrict": ""
        }
    ],
    "SERIAL_LANTIQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (( LANTIQ || X86 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_LANTIQ_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_LANTIQ = y)",
            "restrict": ""
        }
    ],
    "SERIAL_QE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (QUICC_ENGINE)",
            "restrict": ""
        }
    ],
    "SERIAL_SCCNXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_SCCNXP_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SCCNXP = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SC16IS7XX_CORE": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_SC16IS7XX_I2C[SERIAL_SC16IS7XX] || SERIAL_SC16IS7XX_SPI[SERIAL_SC16IS7XX]",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_SC16IS7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (( SPI_MASTER && ! I2C ) || I2C)",
            "restrict": ""
        }
    ],
    "SERIAL_SC16IS7XX_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SC16IS7XX) && (I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_SC16IS7XX_SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SC16IS7XX) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SERIAL_TIMBERDALE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (X86_32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_BCM63XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_BCM4908 || ARCH_BCMBCA || BCM63XX || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM4908 || ARCH_BCMBCA || BCM63XX || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "SERIAL_BCM63XX_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_BCM63XX = y)",
            "restrict": ""
        }
    ],
    "SERIAL_GRLIB_GAISLER_APBUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (OF && SPARC)",
            "restrict": ""
        }
    ],
    "SERIAL_GRLIB_GAISLER_APBUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_GRLIB_GAISLER_APBUART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_ALTERA_JTAGUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_ALTERA_JTAGUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ALTERA_JTAGUART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ALTERA_JTAGUART_CONSOLE)",
            "restrict": ""
        }
    ],
    "SERIAL_ALTERA_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_ALTERA_UART_MAXPORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ALTERA_UART)",
            "restrict": "( 4 )[!(y)]"
        }
    ],
    "SERIAL_ALTERA_UART_BAUDRATE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ALTERA_UART)",
            "restrict": "( 115200 )[!(y)]"
        }
    ],
    "SERIAL_ALTERA_UART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ALTERA_UART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_PCH_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PCI && ( X86_32 || MIPS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SERIAL_PCH_UART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_PCH_UART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_MXS_AUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MXS || MACH_ASM9260 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_MXS_AUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MXS_AUART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_XILINX_PS_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (OF)",
            "restrict": ""
        }
    ],
    "SERIAL_XILINX_PS_UART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_XILINX_PS_UART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_AR933X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (( HAVE_CLK && ATH79 ) || ( MIPS && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SERIAL_AR933X_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_AR933X = y)",
            "restrict": ""
        }
    ],
    "SERIAL_AR933X_NR_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_AR933X)",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "SERIAL_MPS2_UART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MPS2_UART)",
            "restrict": ""
        }
    ],
    "SERIAL_MPS2_UART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MPS2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_ARC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "SERIAL_ARC_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ARC = y)",
            "restrict": ""
        }
    ],
    "SERIAL_ARC_NR_PORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ARC)",
            "restrict": "( 1 3 ) || ( 1 )[!(y)]"
        }
    ],
    "SERIAL_RP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "SERIAL_RP2_NR_UARTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_RP2)",
            "restrict": "( 32 )[!(y)]"
        }
    ],
    "SERIAL_FSL_LPUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "SERIAL_FSL_LPUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_FSL_LPUART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_FSL_LINFLEXUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (PRINTK)",
            "restrict": ""
        }
    ],
    "SERIAL_FSL_LINFLEXUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_FSL_LINFLEXUART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_CONEXANT_DIGICOLOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (OF)",
            "restrict": ""
        }
    ],
    "SERIAL_CONEXANT_DIGICOLOR_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_CONEXANT_DIGICOLOR = y)",
            "restrict": ""
        }
    ],
    "SERIAL_ST_ASC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_ST_ASC_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_ST_ASC = y)",
            "restrict": ""
        }
    ],
    "SERIAL_MEN_Z135": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (MCB)",
            "restrict": ""
        }
    ],
    "SERIAL_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SERIAL_SPRD_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SPRD = y)",
            "restrict": ""
        }
    ],
    "SERIAL_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_STM32_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_STM32 = y)",
            "restrict": ""
        }
    ],
    "SERIAL_MVEBU_UART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MVEBU || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SERIAL_MVEBU_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MVEBU_UART)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_OWL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_ACTIONS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_OWL_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_OWL = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_RDA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_RDA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_RDA_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_RDA = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_MILBEAUT_USIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_MILBEAUT || ( COMPILE_TEST && OF ))",
            "restrict": "( ARCH_MILBEAUT )[!(y)]"
        }
    ],
    "SERIAL_MILBEAUT_USIO_PORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MILBEAUT_USIO)",
            "restrict": "( 1 8 ) || ( 4 )[!(y)]"
        }
    ],
    "SERIAL_MILBEAUT_USIO_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_MILBEAUT_USIO = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SERIAL_LITEUART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (HAS_IOMEM) && (OF || COMPILE_TEST) && (LITEX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_LITEUART_MAX_PORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_LITEUART)",
            "restrict": "( 1 )[!(y)]"
        }
    ],
    "SERIAL_LITEUART_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_LITEUART = y)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (ARCH_SUNPLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SERIAL_SUNPLUS_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && ( ( HAS_IOMEM ) ) && (SERIAL_SUNPLUS)",
            "restrict": ""
        }
    ],
    "SERIAL_MCTRL_GPIO": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_8250[GPIOLIB] || SERIAL_ATMEL[GPIOLIB] || SERIAL_CLPS711X[GPIOLIB] || SERIAL_SA1100[GPIOLIB] || SERIAL_IMX[GPIOLIB] || SERIAL_SH_SCI[GPIOLIB] || SERIAL_MXS_AUART[GPIOLIB] || SERIAL_AR933X[GPIOLIB] || SERIAL_STM32[GPIOLIB]",
            "dep": "( TTY )",
            "restrict": ""
        }
    ],
    "SERIAL_NONSTANDARD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MOXA_INTELLIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (SERIAL_NONSTANDARD && ( ISA || EISA || PCI ))",
            "restrict": ""
        }
    ],
    "MOXA_SMARTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (SERIAL_NONSTANDARD && PCI)",
            "restrict": ""
        }
    ],
    "SYNCLINK_GT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (SERIAL_NONSTANDARD && PCI)",
            "restrict": ""
        }
    ],
    "N_HDLC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (SERIAL_NONSTANDARD)",
            "restrict": ""
        }
    ],
    "PPC_EPAPR_HV_BYTECHAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (PPC)",
            "restrict": ""
        }
    ],
    "PPC_EARLY_DEBUG_EHV_BC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (PPC_EPAPR_HV_BYTECHAN = y)",
            "restrict": ""
        }
    ],
    "PPC_EARLY_DEBUG_EHV_BC_HANDLE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && (PPC_EARLY_DEBUG_EHV_BC)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "GOLDFISH_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (GOLDFISH)",
            "restrict": ""
        }
    ],
    "GOLDFISH_TTY_EARLY_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY )",
            "restrict": "( y )[!(y) && (GOLDFISH_TTY = y)]"
        }
    ],
    "N_GSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (NET)",
            "restrict": ""
        }
    ],
    "NOZOMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (PCI)",
            "restrict": ""
        }
    ],
    "MIPS_EJTAG_FDC_TTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (MIPS_CDMM)",
            "restrict": ""
        }
    ],
    "MIPS_EJTAG_FDC_EARLYCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (MIPS_EJTAG_FDC_TTY)",
            "restrict": ""
        }
    ],
    "MIPS_EJTAG_FDC_KGDB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (MIPS_EJTAG_FDC_TTY && KGDB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MIPS_EJTAG_FDC_KGDB_CHAN": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( TTY ) && (MIPS_EJTAG_FDC_KGDB)",
            "restrict": "( 2 15 ) || ( 3 )[!(y)]"
        }
    ],
    "NULL_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY )",
            "restrict": ""
        }
    ],
    "VCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (SUN_LDOMS)",
            "restrict": ""
        }
    ],
    "HVC_DRIVER": [
        {
            "type": "bool",
            "rev_select": "HVC_CONSOLE || HVC_OPAL || HVC_RTAS || HVC_IUCV || HVC_XEN || HVC_UDBG || HVC_DCC || HVC_RISCV_SBI || VIRTIO_CONSOLE",
            "dep": "( TTY )",
            "restrict": ""
        }
    ],
    "HVC_IRQ": [
        {
            "type": "bool",
            "rev_select": "HVC_CONSOLE || HVC_OPAL || HVC_XEN",
            "dep": "( TTY )",
            "restrict": ""
        }
    ],
    "HVC_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "HVC_OLD_HVSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (HVC_CONSOLE)",
            "restrict": ""
        }
    ],
    "HVC_OPAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (PPC_POWERNV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HVC_RTAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (PPC_RTAS)",
            "restrict": ""
        }
    ],
    "HVC_IUCV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (S390 && NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HVC_XEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HVC_XEN_FRONTEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (HVC_XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HVC_UDBG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (PPC)",
            "restrict": ""
        }
    ],
    "HVC_DCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (ARM || ARM64)",
            "restrict": ""
        }
    ],
    "HVC_DCC_SERIALIZE_SMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (SMP && HVC_DCC)",
            "restrict": ""
        }
    ],
    "HVC_RISCV_SBI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TTY ) && (RISCV_SBI_V01)",
            "restrict": ""
        }
    ],
    "HVCS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (PPC_PSERIES && HVC_CONSOLE)",
            "restrict": ""
        }
    ],
    "RPMSG_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TTY ) && (RPMSG)",
            "restrict": ""
        }
    ],
    "SERIAL_DEV_BUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SERIAL_DEV_CTRL_TTYPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SERIAL_DEV_BUS )",
            "restrict": ""
        }
    ],
    "TTY_PRINTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(EXPERT && TTY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TTY_PRINTK_LEVEL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(TTY_PRINTK)",
            "restrict": "( 1 7 ) || ( 6 )[!(y)]"
        }
    ],
    "PRINTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PARPORT)",
            "restrict": ""
        }
    ],
    "LP_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PRINTER)",
            "restrict": ""
        }
    ],
    "PPDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PARPORT)",
            "restrict": ""
        }
    ],
    "VIRTIO_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(TTY)",
            "restrict": ""
        }
    ],
    "IBM_BSR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "POWERNV_OP_PANEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PPC_POWERNV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "IPMI_HANDLER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "IPMI_DMI_DECODE": [
        {
            "type": "bool",
            "rev_select": "IPMI_HANDLER[DMI]",
            "dep": "",
            "restrict": ""
        }
    ],
    "IPMI_PLAT_DATA": [
        {
            "type": "bool",
            "rev_select": "IPMI_DMI_DECODE || IPMI_SI",
            "dep": "",
            "restrict": ""
        }
    ],
    "IPMI_PANIC_EVENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IPMI_HANDLER )",
            "restrict": ""
        }
    ],
    "IPMI_PANIC_STRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IPMI_HANDLER ) && (IPMI_PANIC_EVENT)",
            "restrict": ""
        }
    ],
    "IPMI_DEVICE_INTERFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPMI_HANDLER )",
            "restrict": ""
        }
    ],
    "IPMI_SI": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_IBMAEM || SENSORS_IBMPEX",
            "dep": "( IPMI_HANDLER )",
            "restrict": ""
        }
    ],
    "IPMI_SSIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPMI_HANDLER ) && (I2C)",
            "restrict": ""
        }
    ],
    "IPMI_IPMB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPMI_HANDLER ) && (I2C && I2C_SLAVE)",
            "restrict": ""
        }
    ],
    "IPMI_POWERNV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPMI_HANDLER ) && (PPC_POWERNV)",
            "restrict": ""
        }
    ],
    "IPMI_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPMI_HANDLER )",
            "restrict": ""
        }
    ],
    "IPMI_POWEROFF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPMI_HANDLER )",
            "restrict": ""
        }
    ],
    "IPMI_KCS_BMC": [
        {
            "type": "tristate",
            "rev_select": "ASPEED_KCS_IPMI_BMC || NPCM7XX_KCS_IPMI_BMC",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASPEED_KCS_IPMI_BMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ASPEED || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NPCM7XX_KCS_IPMI_BMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_NPCM7XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IPMI_KCS_BMC_CDEV_IPMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(IPMI_KCS_BMC)",
            "restrict": ""
        }
    ],
    "IPMI_KCS_BMC_SERIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(IPMI_KCS_BMC && SERIO)",
            "restrict": ""
        }
    ],
    "ASPEED_BT_IPMI_BMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ASPEED || COMPILE_TEST) && (REGMAP && REGMAP_MMIO && MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "IPMB_DEVICE_INTERFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(I2C) && (I2C_SLAVE)",
            "restrict": ""
        }
    ],
    "DS1620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_NETWINDER)",
            "restrict": ""
        }
    ],
    "NWBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_NETWINDER)",
            "restrict": ""
        }
    ],
    "NWBUTTON_REBOOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NWBUTTON)",
            "restrict": ""
        }
    ],
    "NWFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_NETWINDER)",
            "restrict": ""
        }
    ],
    "HW_RANDOM": [
        {
            "type": "tristate",
            "rev_select": "TURRIS_MOX_RWTM || UML_RANDOM || CRYPTO_DEV_SUN8I_CE_TRNG || ZCRYPT || CRYPTO_DEV_SL3516 || CRYPTO_DEV_HIFN_795X[CRYPTO_DEV_HIFN_795X_RNG] || CRYPTO_DEV_FSL_CAAM_RNG_API || CRYPTO_DEV_TALITOS || CRYPTO_DEV_ATMEL_SHA204A || CRYPTO_DEV_SP_CCP || CRYPTO_DEV_HISI_TRNG || CRYPTO_DEV_SA2UL",
            "dep": "",
            "restrict": ""
        }
    ],
    "HW_RANDOM_TIMERIOMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (( X86 || IA64 ) && PCI)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_AMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (( X86 || PPC_MAPLE ) && PCI)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (( ARCH_AT91 || COMPILE_TEST ) && HAVE_CLK && OF)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_BA431": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_BCM2835 || ARCH_BCM_NSP || ARCH_BCM_5301X || ARCH_BCMBCA || BCM63XX || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_IPROC_RNG200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_BCM_IPROC || ARCH_BCM2835 || ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_GEODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (X86_32 && PCI)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_N2RNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (SPARC64)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (X86)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_IXP4XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_IXP4XX || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_OMAP16XX || ARCH_OMAP2PLUS || ARCH_MVEBU || ARCH_K3 || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_OMAP3_ROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_OMAP3 || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (CAVIUM_OCTEON_SOC)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_PASEMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (PPC_PASEMI)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_MXC_RNGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (SOC_IMX31)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_IMX_RNGC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HAS_IOMEM && HAVE_CLK) && (SOC_IMX25 || SOC_IMX6SL || SOC_IMX6SLL || SOC_IMX6UL || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_INGENIC_RNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM) && (MACH_JZ4780 || MACH_X1000)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_INGENIC_TRNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM) && (MACH_X1830)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_NOMADIK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_NOMADIK || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_PSERIES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (PPC64 && IBMVIO)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_POWERNV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (PPC_POWERNV)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_HISI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && ARCH_HISI)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && ARCH_STI)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && ARCH_XGENE)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && ( ARCH_STM32 || COMPILE_TEST )) && (HAS_IOMEM)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_PIC32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && MACH_PIC32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HW_RANDOM_POLARFIRE_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && POLARFIRE_SOC_SYS_CTRL)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HW_RANDOM_CAVIUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && PCI && ARCH_THUNDER)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_MTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HW_RANDOM_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (S390)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_OPTEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (OPTEE)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_NPCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_NPCM || COMPILE_TEST)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_KEYSTONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (ARCH_KEYSTONE || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_CCTRNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_XIPHERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_ARM_SMCCC_TRNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HAVE_ARM_SMCCC_DISCOVERY)",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "HW_RANDOM_CN10K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HW_RANDOM ) && (HW_RANDOM && PCI && ( ARM64 || ( 64BIT && COMPILE_TEST ) ))",
            "restrict": "( HW_RANDOM )[!(y)]"
        }
    ],
    "UML_RANDOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(UML)",
            "restrict": ""
        }
    ],
    "DTLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ISA)",
            "restrict": ""
        }
    ],
    "XILINX_HWICAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MICROBLAZE)",
            "restrict": ""
        }
    ],
    "APPLICOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "SONYPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_32 && PCI && INPUT)",
            "restrict": ""
        }
    ],
    "SYNCLINK_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCMCIA != n ) ) && (PCMCIA && TTY)",
            "restrict": ""
        }
    ],
    "CARDMAN_4000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCMCIA != n ) ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "CARDMAN_4040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCMCIA != n ) ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "SCR24X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCMCIA != n ) ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "IPWIRELESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PCMCIA != n ) ) && (PCMCIA && NETDEVICES && TTY)",
            "restrict": ""
        }
    ],
    "MWAVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86 && TTY)",
            "restrict": ""
        }
    ],
    "SCx200_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCx200)",
            "restrict": ""
        }
    ],
    "PC8736x_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_32 && ! UML)",
            "restrict": "( SCx200_GPIO )[!(y)]"
        }
    ],
    "NSC_GPIO": [
        {
            "type": "tristate",
            "rev_select": "SCx200_GPIO || PC8736x_GPIO",
            "dep": "(X86_32)",
            "restrict": ""
        }
    ],
    "DEVMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NVRAM": [
        {
            "type": "tristate",
            "rev_select": "THINKPAD_ACPI",
            "dep": "(X86 || HAVE_ARCH_NVRAM_OPS)",
            "restrict": "( M68K || PPC )[!(y)]"
        }
    ],
    "DEVPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ISA || PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HPET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ACPI)",
            "restrict": "( n )[!(( X86 || IA64 ))]"
        }
    ],
    "HPET_MMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HPET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HPET_MMAP_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HPET_MMAP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HANGCHECK_TIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86 || IA64 || PPC64 || S390)",
            "restrict": ""
        }
    ],
    "UV_MMTIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86_UV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "TCG_TPM": [
        {
            "type": "tristate",
            "rev_select": "IMA[HAS_IOMEM && ! UML]",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_TPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (TCG_TPM && HW_RANDOM && ! ( TCG_TPM = y && HW_RANDOM = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TCG_TIS_CORE": [
        {
            "type": "tristate",
            "rev_select": "TCG_TIS || TCG_TIS_SPI || TCG_TIS_I2C || TCG_TIS_SYNQUACER",
            "dep": "( TCG_TPM )",
            "restrict": ""
        }
    ],
    "TCG_TIS": [
        {
            "type": "tristate",
            "rev_select": "IMA[TCG_TPM && X86]",
            "dep": "( TCG_TPM ) && (X86 || OF)",
            "restrict": ""
        }
    ],
    "TCG_TIS_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (SPI)",
            "restrict": ""
        }
    ],
    "TCG_TIS_SPI_CR50": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (TCG_TIS_SPI)",
            "restrict": ""
        }
    ],
    "TCG_TIS_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCG_TIS_SYNQUACER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (ARCH_SYNQUACER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TCG_TIS_I2C_CR50": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCG_TIS_I2C_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCG_TIS_I2C_INFINEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCG_TIS_I2C_NUVOTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCG_NSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (X86)",
            "restrict": ""
        }
    ],
    "TCG_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (PPC64 || HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "TCG_INFINEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (PNP)",
            "restrict": ""
        }
    ],
    "TCG_IBMVTPM": [
        {
            "type": "tristate",
            "rev_select": "IMA[TCG_TPM && PPC_PSERIES]",
            "dep": "( TCG_TPM ) && (PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "TCG_XEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (TCG_TPM && XEN)",
            "restrict": ""
        }
    ],
    "TCG_CRB": [
        {
            "type": "tristate",
            "rev_select": "IMA[TCG_TPM && ACPI]",
            "dep": "( TCG_TPM ) && (ACPI)",
            "restrict": ""
        }
    ],
    "TCG_VTPM_PROXY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (TCG_TPM)",
            "restrict": ""
        }
    ],
    "TCG_FTPM_TEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (TEE && OPTEE)",
            "restrict": ""
        }
    ],
    "TCG_TIS_ST33ZP24": [
        {
            "type": "tristate",
            "rev_select": "TCG_TIS_ST33ZP24_I2C || TCG_TIS_ST33ZP24_SPI",
            "dep": "( TCG_TPM )",
            "restrict": ""
        }
    ],
    "TCG_TIS_ST33ZP24_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCG_TIS_ST33ZP24_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TCG_TPM ) && (SPI)",
            "restrict": ""
        }
    ],
    "TELCLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TN3270": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(CCW)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TN3270_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(TN3270 && TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TN3270_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(TN3270)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "TN3270_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TN3270 = y && TN3270_TTY = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TN3215": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CCW && TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TN3215_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TN3215)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CCW_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (TN3215_CONSOLE || TN3270_CONSOLE)]"
        }
    ],
    "SCLP_TTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(S390 && TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCLP_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCLP_TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCLP_VT220_TTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(S390 && TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCLP_VT220_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SCLP_VT220_TTY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HMC_DRV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SCLP_OFB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "S390_UV_UAPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "S390_TAPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(CCW)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "S390_TAPE_34XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(S390_TAPE)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "S390_TAPE_3590": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(S390_TAPE)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "VMLOGRDR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(IUCV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "VMCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VMCP_CMA_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(VMCP)",
            "restrict": "( 4 )[!(y)]"
        }
    ],
    "MONREADER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(IUCV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MONWRITER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "S390_VMUR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XILLYBUS_CLASS": [
        {
            "type": "tristate",
            "rev_select": "XILLYBUS || XILLYUSB",
            "dep": "",
            "restrict": ""
        }
    ],
    "XILLYBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI || OF)",
            "restrict": ""
        }
    ],
    "XILLYBUS_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( XILLYBUS ) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "XILLYBUS_OF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( XILLYBUS ) && (OF && HAS_DMA)",
            "restrict": ""
        }
    ],
    "XILLYUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB)",
            "restrict": ""
        }
    ],
    "ADI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPARC64)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "RANDOM_TRUST_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RANDOM_TRUST_BOOTLOADER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C": [
        {
            "type": "tristate",
            "rev_select": "X86_INTEL_MID || IGB || SFC_FALCON || CAN_PEAK_PCIEC || I3C || MEDIA_SUBDRV_AUTOSELECT || DRM || FB_DDC || SND_AOA_ONYX || SND_AOA_TAS || ARCH_R8A7790 || ARCH_R8A7793 || ARCH_R8A7791 || PHY_EXYNOS5250_SATA",
            "dep": "",
            "restrict": ""
        }
    ],
    "ACPI_I2C_OPREGION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(I2C = y && ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_BOARDINFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_CHARDEV": [
        {
            "type": "tristate",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_MUX": [
        {
            "type": "tristate",
            "rev_select": "MEDIA_SUBDRV_AUTOSELECT || DRM_SII902X || MPU3050_I2C || INV_MPU6050_I2C",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_ARB_GPIO_CHALLENGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (GPIOLIB || COMPILE_TEST) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MUX_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "I2C_MUX_GPMUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MUX_LTC4306": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) )",
            "restrict": ""
        }
    ],
    "I2C_MUX_PCA9541": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) )",
            "restrict": ""
        }
    ],
    "I2C_MUX_PCA954x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MUX_PINCTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (PINCTRL) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MUX_REG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "I2C_DEMUX_PINCTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) ) && (PINCTRL && OF)",
            "restrict": ""
        }
    ],
    "I2C_MUX_MLXCPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( I2C_MUX ) )",
            "restrict": ""
        }
    ],
    "I2C_HELPER_AUTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_SMBUS": [
        {
            "type": "tristate",
            "rev_select": "I2C_I801 || I2C_STM32F7 || I2C_THUNDERX || I2C_RCAR || I2C_PARPORT || MANAGER_SBS",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_ALGOBIT": [
        {
            "type": "tristate",
            "rev_select": "IGB || SFC_FALCON || CAN_PEAK_PCIEC || I2C_VIA || I2C_HYDRA || I2C_GPIO || I2C_SIMTEC || I2C_VERSATILE || I2C_PARPORT || I2C_ACORN || VIDEO_AU0828 || VIDEO_IVTV || VIDEO_BT848 || VIDEO_COBALT || VIDEO_CX18 || VIDEO_CX23885 || VIDEO_CX25821 || VIDEO_CX88 || VIDEO_SAA7164 || DVB_PLUTO2 || DVB_SMIPCIE || DRM || FB_DDC || FB_CYBER2000_I2C || FB_VIA || INFINIBAND_HFI1",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_ALGOPCF": [
        {
            "type": "tristate",
            "rev_select": "I2C_ELEKTOR || I2C_ICY",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_ALGOPCA": [
        {
            "type": "tristate",
            "rev_select": "I2C_PCA_PLATFORM || I2C_PCA_ISA",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_CCGX_UCSI": [
        {
            "type": "tristate",
            "rev_select": "I2C_NVIDIA_GPU || I2C_DESIGNWARE_PCI",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "I2C_ALI1535": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_ALI1563": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_ALI15X3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_AMD756": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_AMD756_S4882": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C_AMD756 && X86)",
            "restrict": ""
        }
    ],
    "I2C_AMD8111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_AMD_MP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI && ACPI)",
            "restrict": ""
        }
    ],
    "I2C_HIX5HD2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_HISI || ARCH_HIX5HD2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_I801": [
        {
            "type": "tristate",
            "rev_select": "ITCO_WDT[! EXPERT && I2C]",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_ISCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_ISMT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "I2C_PIIX4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_CHT_WC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (INTEL_SOC_PMIC_CHTWC)",
            "restrict": ""
        }
    ],
    "I2C_NFORCE2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_NFORCE2_S4985": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C_NFORCE2 && X86)",
            "restrict": ""
        }
    ],
    "I2C_NVIDIA_GPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_SIS5595": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_SIS630": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_SIS96X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_VIAPRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_SCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && ( ACPI )",
            "restrict": ""
        }
    ],
    "I2C_HYDRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI && PPC_CHRP)",
            "restrict": ""
        }
    ],
    "I2C_POWERMAC": [
        {
            "type": "tristate",
            "rev_select": "WINDFARM_PM81 || WINDFARM_PM72 || WINDFARM_RM31 || WINDFARM_PM91 || WINDFARM_PM112 || WINDFARM_PM121 || SND_AOA_ONYX || SND_AOA_TAS",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PPC_PMAC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_ALTERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_INTEL_SOCFPGA || NIOS2 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "I2C_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_ASPEED || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_AT91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_AT91_SLAVE_EXPERIMENTAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C_AT91)",
            "restrict": ""
        }
    ],
    "I2C_AU1550": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "I2C_AXXIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_AXXIA || COMPILE_TEST)",
            "restrict": "( ARCH_AXXIA )[!(y)]"
        }
    ],
    "I2C_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_BCM2835 || ARCH_BRCMSTB || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "I2C_BCM_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "I2C_BCM_KONA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_BCM_MOBILE || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_BCM_MOBILE)]"
        }
    ],
    "I2C_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_BCM2835 || ARCH_BCM4908 || ARCH_BCMBCA || ARCH_BRCMSTB || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_ZYNQ || ARM64 || XTENSA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_CBUS_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_CPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (CPM1 || CPM2)",
            "restrict": ""
        }
    ],
    "I2C_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_DAVINCI || ARCH_KEYSTONE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_DESIGNWARE_CORE": [
        {
            "type": "tristate",
            "rev_select": "I2C_DESIGNWARE_PLATFORM || I2C_DESIGNWARE_PCI",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "I2C_DESIGNWARE_SLAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C_DESIGNWARE_CORE)",
            "restrict": ""
        }
    ],
    "I2C_DESIGNWARE_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (( ACPI && COMMON_CLK ) || ! ACPI)",
            "restrict": ""
        }
    ],
    "I2C_DESIGNWARE_AMDPSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (X86_MSR) && (ACPI) && (I2C_DESIGNWARE_PLATFORM)",
            "restrict": ""
        }
    ],
    "I2C_DESIGNWARE_BAYTRAIL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ACPI) && (I2C_DESIGNWARE_PLATFORM) && (( I2C_DESIGNWARE_PLATFORM = m && IOSF_MBI ) || ( I2C_DESIGNWARE_PLATFORM = y && IOSF_MBI = y ))",
            "restrict": ""
        }
    ],
    "I2C_DESIGNWARE_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI)",
            "restrict": ""
        }
    ],
    "I2C_DIGICOLOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_DIGICOLOR || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_EG20T": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PCI && ( X86_32 || MIPS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "I2C_EMEV2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (HAVE_CLK)",
            "restrict": ""
        }
    ],
    "I2C_EXYNOS5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (OF) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_EXYNOS)]"
        }
    ],
    "I2C_GPIO": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MMP_CAMERA",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_GPIO_FAULT_INJECTOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C_GPIO)",
            "restrict": ""
        }
    ],
    "I2C_HIGHLANDER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (SH_HIGHLANDER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_HISI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (( ARM64 && ACPI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_IBM_IIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (4xx)",
            "restrict": ""
        }
    ],
    "I2C_IMG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_MXC || ARCH_LAYERSCAPE || COLDFIRE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_IMX_LPI2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_IOP3XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_IOP32X || ARCH_IXP4XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_JZ4780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_KEMPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MFD_KEMPLD)",
            "restrict": ""
        }
    ],
    "I2C_LPC2K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (OF && ( ARCH_LPC18XX || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "I2C_MLXBF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MELLANOX_PLATFORM && ARM64)",
            "restrict": ""
        }
    ],
    "I2C_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_MESON || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "I2C_MICROCHIP_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (SOC_MICROCHIP_POLARFIRE || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "I2C_MPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PPC)",
            "restrict": ""
        }
    ],
    "I2C_MT65XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MT7621": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (( RALINK && ( SOC_MT7620 || SOC_MT7621 ) ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MV64XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PLAT_ORION || ARCH_SUNXI || ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_MXS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (SOC_IMX28 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_NOMADIK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "I2C_NPCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_NPCM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_OCORES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "I2C_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_OMAP || ARCH_K3 || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (MACH_OMAP_H3 || MACH_OMAP_OSK)]"
        }
    ],
    "I2C_OWL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_ACTIONS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_PASEMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PPC_PASEMI && PCI)",
            "restrict": ""
        }
    ],
    "I2C_APPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "I2C_PCA_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "I2C_PNX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_LPC32XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_PXA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_PXA || ARCH_MMP || ARCH_MVEBU || ( X86_32 && PCI && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_PXA_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": "( I2C_PXA && X86_32 && PCI && OF )[!(y)]"
        }
    ],
    "I2C_PXA_SLAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C_PXA && ! X86_32)",
            "restrict": ""
        }
    ],
    "I2C_QCOM_CCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_QCOM_GENI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_QCOM || COMPILE_TEST) && (QCOM_GENI_SE)",
            "restrict": ""
        }
    ],
    "I2C_QUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_RIIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_RK3X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (OF && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "I2C_RZV2M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_S3C2410": [
        {
            "type": "tristate",
            "rev_select": "PHY_EXYNOS5250_SATA",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_EXYNOS || ARCH_S3C24XX || ARCH_S3C64XX || ARCH_S5PV210 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_SH7760": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (CPU_SUBTYPE_SH7760)",
            "restrict": ""
        }
    ],
    "I2C_SH_MOBILE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_SHMOBILE || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_SIMTEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "I2C_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (I2C = y && ( ARCH_SPRD || COMPILE_TEST )) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "I2C_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_STM32F4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_STM32F7": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_SUN6I_P2WI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (RESET_CONTROLLER) && (MACH_SUN6I || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_SYNQUACER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_SYNQUACER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_TEGRA || ( COMPILE_TEST && ( ARC || ARM || ARM64 || M68K || RISCV || SUPERH || SPARC ) ))",
            "restrict": ""
        }
    ],
    "I2C_TEGRA_BPMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (TEGRA_BPMP || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (TEGRA_BPMP)]"
        }
    ],
    "I2C_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_UNIPHIER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_UNIPHIER_F": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_UNIPHIER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_VERSATILE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_MPS2 || ARCH_VERSATILE || ARCH_REALVIEW || ARCH_VEXPRESS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_WMT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_VT8500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "I2C_THUNDERX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (64BIT && PCI && ( ARM64 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "I2C_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "I2C_XLP9XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_THUNDER2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_RCAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_DIOLAN_U2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (USB)",
            "restrict": ""
        }
    ],
    "I2C_DLN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MFD_DLN2)",
            "restrict": ""
        }
    ],
    "I2C_CP2615": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (USB)",
            "restrict": ""
        }
    ],
    "I2C_PARPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "I2C_ROBOTFUZZ_OSIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (USB)",
            "restrict": ""
        }
    ],
    "I2C_TAOS_EVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (TTY)",
            "restrict": ""
        }
    ],
    "I2C_TINY_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (USB)",
            "restrict": ""
        }
    ],
    "I2C_VIPERBOARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (MFD_VIPERBOARD && USB)",
            "restrict": ""
        }
    ],
    "I2C_ACORN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_ACORN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_ELEKTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ISA && HAS_IOPORT_MAP && BROKEN_ON_SMP)",
            "restrict": ""
        }
    ],
    "I2C_ICY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ZORRO)",
            "restrict": ""
        }
    ],
    "I2C_MLXCPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (X86_64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "I2C_PCA_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ISA)",
            "restrict": ""
        }
    ],
    "I2C_SIBYTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (SIBYTE_SB1xxx_SOC)",
            "restrict": ""
        }
    ],
    "I2C_CROS_EC_TUNNEL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_RV_RT5682_MACH",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "I2C_XGENE_SLIMPRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (ARCH_XGENE && MAILBOX)",
            "restrict": ""
        }
    ],
    "SCx200_ACB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (X86_32 && PCI)",
            "restrict": ""
        }
    ],
    "I2C_OPAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (PPC_POWERNV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "I2C_FSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) ) && (FSI)",
            "restrict": ""
        }
    ],
    "I2C_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "I2C_STUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && (m)",
            "restrict": ""
        }
    ],
    "I2C_SLAVE": [
        {
            "type": "bool",
            "rev_select": "I2C_AT91_SLAVE_EXPERIMENTAL || I2C_AXXIA || I2C_BCM_IPROC || I2C_DESIGNWARE_SLAVE || I2C_EMEV2 || I2C_IMX || I2C_MLXBF || I2C_PXA_SLAVE || I2C_STM32F7 || I2C_RCAR",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_SLAVE_EEPROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( I2C_SLAVE )",
            "restrict": ""
        }
    ],
    "I2C_SLAVE_TESTUNIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I2C ) && ( I2C_SLAVE )",
            "restrict": ""
        }
    ],
    "I2C_DEBUG_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_DEBUG_ALGO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C )",
            "restrict": ""
        }
    ],
    "I2C_DEBUG_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( I2C ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "I3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CDNS_I3C_MASTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I3C ) && (I3C) && (HAS_IOMEM) && (! ( ALPHA || PARISC ))",
            "restrict": ""
        }
    ],
    "DW_I3C_MASTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I3C ) && (I3C) && (HAS_IOMEM) && (! ( ALPHA || PARISC ))",
            "restrict": ""
        }
    ],
    "SVC_I3C_MASTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I3C ) && (I3C) && (HAS_IOMEM) && (! ( ALPHA || PARISC ))",
            "restrict": ""
        }
    ],
    "MIPI_I3C_HCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( I3C ) && (I3C) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "SPI_MASTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI )",
            "restrict": "( SPI )[!(y)]"
        }
    ],
    "SPI_MEM": [
        {
            "type": "bool",
            "rev_select": "MTD_SPI_NAND || MTD_SPI_NOR",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": "( SPI_DESIGNWARE )"
        }
    ],
    "SPI_ALTERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_ALTERA_CORE": [
        {
            "type": "tristate",
            "rev_select": "SPI_ALTERA || SPI_ALTERA_DFL",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_ALTERA_DFL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (FPGA_DFL)",
            "restrict": ""
        }
    ],
    "SPI_AR934X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ATH79 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_ATH79": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ATH79 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_ARMADA_3700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARCH_MVEBU && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_ASPEED_SMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_ASPEED || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SPI_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_AT91 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SPI_AT91_USART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARCH_AT91 || COMPILE_TEST )) && (MFD_AT91_USART)",
            "restrict": ""
        }
    ],
    "SPI_ATMEL_QUADSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_AT91 || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_AU1550": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "SPI_AXI_SPI_ENGINE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (GPIOLIB) && (ARCH_BCM2835 || ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_BCM2835AUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ( ARCH_BCM2835 || ARCH_BRCMSTB ) && GPIOLIB ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_BCM63XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (BCM63XX || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_BCM63XX_HSSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (BCM63XX || BMIPS_GENERIC || ARCH_BCMBCA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_BCM_QSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_BRCMSTB || ARCH_BCM || ARCH_BCM_IPROC || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "SPI_BITBANG": [
        {
            "type": "tristate",
            "rev_select": "SPI_ATH79 || SPI_AU1550 || SPI_BUTTERFLY || SPI_DAVINCI || SPI_GPIO || SPI_LM70_LLP || SPI_OC_TINY || SPI_OMAP_UWIRE || SPI_PPC4xx || SPI_S3C24XX || SPI_SH_SCI || SPI_XILINX || SPI_XTENSA_XTFPGA",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_BUTTERFLY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "SPI_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_CADENCE_QUADSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (OF && ( ARM || ARM64 || X86 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SPI_CADENCE_XSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( OF || COMPILE_TEST ) && HAS_IOMEM) && (SPI_MEM)",
            "restrict": ""
        }
    ],
    "SPI_CLPS711X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_CLPS711X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_COLDFIRE_QSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( M520x || M523x || M5249 || M525x || M527x || M528x || M532x ))",
            "restrict": ""
        }
    ],
    "SPI_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_DAVINCI || ARCH_KEYSTONE)",
            "restrict": ""
        }
    ],
    "SPI_DESIGNWARE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_DW_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && ( SPI_DESIGNWARE )",
            "restrict": ""
        }
    ],
    "SPI_DW_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && ( SPI_DESIGNWARE ) && (PCI)",
            "restrict": ""
        }
    ],
    "SPI_DW_MMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && ( SPI_DESIGNWARE ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_DW_BT1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && ( SPI_DESIGNWARE ) && (MIPS_BAIKAL_T1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_DW_BT1_DIRMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && ( SPI_DESIGNWARE ) && (SPI_DW_BT1)",
            "restrict": ""
        }
    ],
    "SPI_DLN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MFD_DLN2)",
            "restrict": ""
        }
    ],
    "SPI_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_EP93XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_FALCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SOC_FALCON)",
            "restrict": ""
        }
    ],
    "SPI_FSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (FSI)",
            "restrict": ""
        }
    ],
    "SPI_FSL_LPSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_FSL_QUADSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MXC || SOC_LS1021A || ARCH_LAYERSCAPE || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_GXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_HPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_HISI_KUNPENG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARM64 && ACPI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_HISI_SFC_V3XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARM64 && ACPI ) || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_NXP_FLEXSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_LAYERSCAPE || HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_IMG_SPFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_INGENIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MACH_INGENIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_INTEL": [
        {
            "type": "tristate",
            "rev_select": "SPI_INTEL_PCI || SPI_INTEL_PLATFORM",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_INTEL_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PCI) && (X86 || COMPILE_TEST) && (SPI_MEM)",
            "restrict": ""
        }
    ],
    "SPI_INTEL_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (X86 || COMPILE_TEST) && (SPI_MEM)",
            "restrict": ""
        }
    ],
    "SPI_JCORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (OF && ( SUPERH || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SPI_LM70_LLP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "SPI_LP8841_RTC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MACH_PXA27X_DT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MPC52xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PPC_MPC52xx)",
            "restrict": ""
        }
    ],
    "SPI_MPC52xx_PSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PPC_MPC52xx)",
            "restrict": ""
        }
    ],
    "SPI_MPC512x_PSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PPC_MPC512x)",
            "restrict": ""
        }
    ],
    "SPI_FSL_LIB": [
        {
            "type": "tristate",
            "rev_select": "SPI_FSL_SPI",
            "dep": "( SPI ) && ( SPI_MASTER ) && (OF)",
            "restrict": ""
        }
    ],
    "SPI_FSL_CPM": [
        {
            "type": "tristate",
            "rev_select": "SPI_FSL_SPI[FSL_SOC]",
            "dep": "( SPI ) && ( SPI_MASTER ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "SPI_FSL_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (OF)",
            "restrict": ""
        }
    ],
    "SPI_FSL_DSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SOC_VF610 || SOC_LS1021A || ARCH_LAYERSCAPE || M5441x || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_FSL_ESPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "SPI_MESON_SPICC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (COMMON_CLK) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MESON_SPIFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MICROCHIP_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SPI_MT65XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MT7621": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (RALINK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MTK_NOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MTK_SNFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MEDIATEK || COMPILE_TEST) && (MTD_NAND_ECC_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SPI_NPCM_FIU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_NPCM || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_NPCM_PSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_NPCM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_LANTIQ_SSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (LANTIQ || X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_OC_TINY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "SPI_OMAP_UWIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_OMAP1 || ( ARM && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SPI_OMAP24XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_OMAP2PLUS || ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_TI_QSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_OMAP_100K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_OMAP850 || ARCH_OMAP730 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_ORION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PLAT_ORION || ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_PIC32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MACH_PIC32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_PIC32_SQI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (MACH_PIC32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_PL022": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARM_AMBA)",
            "restrict": "( y )[!(y) && (ARCH_REALVIEW)] || ( y )[!(y) && (INTEGRATOR_IMPD1)] || ( y )[!(y) && (ARCH_VERSATILE)]"
        }
    ],
    "SPI_PPC4xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PPC32 && 4xx)",
            "restrict": ""
        }
    ],
    "SPI_PXA2XX": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BDW_RT5677_MACH",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_PXA || ARCH_MMP || PCI || ACPI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_PXA2XX_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": "( SPI_PXA2XX && PCI && COMMON_CLK )[!(y)]"
        }
    ],
    "SPI_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_ROCKCHIP_SFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "SPI_RB4XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SPI_MASTER && ATH79)",
            "restrict": ""
        }
    ],
    "SPI_RPCIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (RENESAS_RPCIF)",
            "restrict": ""
        }
    ],
    "SPI_RSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SUPERH || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_QCOM_QSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "SPI_QUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_QCOM_GENI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (QCOM_GENI_SE)",
            "restrict": ""
        }
    ],
    "SPI_S3C24XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_S3C24XX)",
            "restrict": ""
        }
    ],
    "SPI_S3C24XX_FIQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SPI_S3C24XX)",
            "restrict": ""
        }
    ],
    "SPI_S3C64XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( PLAT_SAMSUNG || ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SPI_SC18IS602": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (I2C)",
            "restrict": ""
        }
    ],
    "SPI_SH_MSIOF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (HAVE_CLK) && (ARCH_SHMOBILE || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SUPERH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SH_SCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SUPERH)",
            "restrict": ""
        }
    ],
    "SPI_SH_HSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SIFIVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_SLAVE_MT27XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MEDIATEK || COMPILE_TEST) && (SPI_SLAVE)",
            "restrict": ""
        }
    ],
    "SPI_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SPRD_ADI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_SPRD || COMPILE_TEST) && (HWSPINLOCK || ( COMPILE_TEST && ! HWSPINLOCK ))",
            "restrict": ""
        }
    ],
    "SPI_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_STM32_QSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_STM32 || COMPILE_TEST) && (OF) && (SPI_MEM)",
            "restrict": ""
        }
    ],
    "SPI_ST_SSC4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SUN6I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_SUNXI || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "SPI_SUNPLUS_SP7021": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SOC_SP7021 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_SYNQUACER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_SYNQUACER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MXIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SPI_MXS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_MXS)",
            "restrict": ""
        }
    ],
    "SPI_TEGRA210_QUAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_TEGRA || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "SPI_TEGRA114": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARCH_TEGRA && TEGRA20_APB_DMA ) || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "SPI_TEGRA20_SFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_TEGRA || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "SPI_TEGRA20_SLINK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARCH_TEGRA && TEGRA20_APB_DMA ) || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "SPI_THUNDERX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PCI && 64BIT && ( ARM64 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SPI_TOPCLIFF_PCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (PCI && ( X86_32 || MIPS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SPI_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( ARCH_UNIPHIER || COMPILE_TEST ) && OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_XCOMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (I2C)",
            "restrict": ""
        }
    ],
    "SPI_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPI_XLP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_THUNDER2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_XTENSA_XTFPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( XTENSA && XTENSA_PLATFORM_XTFPGA ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_ZYNQ_QSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (ARCH_ZYNQ || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_ZYNQMP_GQSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (( SPI_MASTER && HAS_DMA ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_AMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SPI_MASTER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPI_MUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_SPIDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "SPI_LOOPBACK_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (m)",
            "restrict": ""
        }
    ],
    "SPI_TLE62X0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_MASTER ) && (SYSFS)",
            "restrict": ""
        }
    ],
    "SPI_SLAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI )",
            "restrict": ""
        }
    ],
    "SPI_SLAVE_TIME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_SLAVE )",
            "restrict": ""
        }
    ],
    "SPI_SLAVE_SYSTEM_CONTROL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPI ) && ( SPI_SLAVE )",
            "restrict": ""
        }
    ],
    "SPI_DYNAMIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SPI )",
            "restrict": "( ACPI || OF_DYNAMIC || SPI_SLAVE )[!(y)]"
        }
    ],
    "SPMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SPMI_HISI3670": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPMI ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPMI_MSM_PMIC_ARB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPMI ) && (ARCH_QCOM || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": "( ARCH_QCOM )[!(y)]"
        }
    ],
    "SPMI_MTK_PMIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SPMI ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HSI_BOARDINFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HSI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OMAP_SSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HSI ) && (HSI && OF && ARM && COMMON_CLK) && (ARCH_OMAP3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NOKIA_MODEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HSI ) && (HSI && SSI_PROTOCOL && CMT_SPEECH)",
            "restrict": ""
        }
    ],
    "CMT_SPEECH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HSI ) && (HSI && SSI_PROTOCOL)",
            "restrict": ""
        }
    ],
    "SSI_PROTOCOL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HSI ) && (HSI && PHONET && OMAP_SSI)",
            "restrict": ""
        }
    ],
    "HSI_CHAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HSI ) && (HSI)",
            "restrict": ""
        }
    ],
    "PPS": [
        {
            "type": "tristate",
            "rev_select": "PTP_1588_CLOCK",
            "dep": "",
            "restrict": ""
        }
    ],
    "PPS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PPS )",
            "restrict": ""
        }
    ],
    "NTP_PPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PPS ) && (! NO_HZ_COMMON)",
            "restrict": ""
        }
    ],
    "PPS_CLIENT_KTIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PPS )",
            "restrict": ""
        }
    ],
    "PPS_CLIENT_LDISC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PPS ) && (TTY)",
            "restrict": ""
        }
    ],
    "PPS_CLIENT_PARPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PPS ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "PPS_CLIENT_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PPS )",
            "restrict": ""
        }
    ],
    "PPS_GENERATOR_PARPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PPS ) && (PARPORT && BROKEN)",
            "restrict": ""
        }
    ],
    "PTP_1588_CLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NET && POSIX_TIMERS)",
            "restrict": "( ETHERNET )[!(y)]"
        }
    ],
    "PTP_1588_CLOCK_OPTIONAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (PTP_1588_CLOCK = n)] || ( PTP_1588_CLOCK )[!(y)]"
        }
    ],
    "PTP_1588_CLOCK_DTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PTP_1588_CLOCK) && (NET && HAS_IOMEM) && (ARCH_BCM_MOBILE || ( ARCH_BCM_IPROC && ! ( ARCH_BCM_NSP || ARCH_BCM_5301X ) ) || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PTP_1588_CLOCK_QORIQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(GIANFAR || FSL_DPAA_ETH || FSL_DPAA2_ETH || FSL_ENETC || FSL_ENETC_VF || COMPILE_TEST) && (PTP_1588_CLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DP83640_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NETWORK_PHY_TIMESTAMPING) && (PHYLIB) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "PTP_1588_CLOCK_INES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NETWORK_PHY_TIMESTAMPING) && (HAS_IOMEM) && (PHYLIB) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "PTP_1588_CLOCK_PCH": [
        {
            "type": "tristate",
            "rev_select": "PCH_GBE",
            "dep": "(X86_32 || COMPILE_TEST) && (HAS_IOMEM && PCI) && (NET) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "PTP_1588_CLOCK_KVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PTP_1588_CLOCK) && (( KVM_GUEST && X86 ) || ( HAVE_ARM_SMCCC_DISCOVERY && ARM_ARCH_TIMER ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PTP_1588_CLOCK_IDT82P33": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PTP_1588_CLOCK && I2C)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PTP_1588_CLOCK_IDTCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PTP_1588_CLOCK && I2C)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PTP_1588_CLOCK_VMW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ACPI && HYPERVISOR_GUEST && X86) && (PTP_1588_CLOCK)",
            "restrict": ""
        }
    ],
    "PTP_1588_CLOCK_OCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PTP_1588_CLOCK) && (HAS_IOMEM && PCI) && (I2C && MTD) && (SERIAL_8250) && (! S390) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PINCTRL": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_LPSS || X86_AMD_PLATFORM_DEVICE || NET_MEDIATEK_SOC || MFD_MADERA",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_PINCTRL_GROUPS": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_APPLE_GPIO || PINCTRL_EQUILIBRIUM || PINCTRL_INGENIC || PINCTRL_KEEMBAY || PINCTRL_MICROCHIP_SGPIO || PINCTRL_OCELOT || PINCTRL_SINGLE || PINCTRL_STARFIVE || PINCTRL_THUNDERBAY || PINCTRL_BCM4908 || PINCTRL_NS || PINCTRL_IMX || PINCTRL_MTK_MOORE || PINCTRL_WPCM450 || PINCTRL_LPASS_LPI || PINCTRL_RZA1 || PINCTRL_RZA2 || PINCTRL_RZG2L || PINCTRL_RZV2M || PINCTRL_SPPCTL || PINCTRL_TI_IODELAY || PINCTRL_VISCONTI",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINMUX": [
        {
            "type": "bool",
            "rev_select": "GENERIC_PINMUX_FUNCTIONS || PINCTRL_AMD || PINCTRL_APPLE_GPIO || PINCTRL_ARTPEC6 || PINCTRL_AS3722 || PINCTRL_AT91 || PINCTRL_AT91PIO4 || PINCTRL_AXP209 || PINCTRL_BM1880 || PINCTRL_DIGICOLOR || PINCTRL_EQUILIBRIUM || PINCTRL_GEMINI || PINCTRL_KEEMBAY || PINCTRL_LANTIQ || PINCTRL_LPC18XX || PINCTRL_MAX77620 || PINCTRL_OXNAS || PINCTRL_PALMAS || PINCTRL_PIC32 || PINCTRL_PISTACHIO || PINCTRL_RK805 || PINCTRL_ROCKCHIP || PINCTRL_ST || PINCTRL_SX150X || PINCTRL_THUNDERBAY || PINCTRL_ZYNQ || PINCTRL_ZYNQMP || PINCTRL_OWL || PINCTRL_ASPEED || PINCTRL_BCM281XX || PINCTRL_BCM2835 || PINCTRL_BCM4908 || PINCTRL_BCM63XX || PINCTRL_CYGNUS_MUX || PINCTRL_NS || PINCTRL_NS2_MUX || PINCTRL_NSP_MUX || PINCTRL_BERLIN || PINCTRL_LOCHNAGAR || PINCTRL_MADERA || PINCTRL_IMX1_CORE || PINCTRL_MXS || PINCTRL_LYNXPOINT || PINCTRL_MERRIFIELD || PINCTRL_INTEL || PINCTRL_MTK || PINCTRL_MTK_PARIS || PINCTRL_MESON || PINCTRL_MVEBU || PINCTRL_ARMADA_37XX || PINCTRL_NOMADIK || PINCTRL_WPCM450 || PINCTRL_NPCM7XX || PINCTRL_PXA || PINCTRL_MSM || PINCTRL_QCOM_SPMI_PMIC || PINCTRL_QCOM_SSBI_PMIC || PINCTRL_LPASS_LPI || PINCTRL_RALINK || PINCTRL_SH_PFC || PINCTRL_SAMSUNG || PINCTRL_SPEAR || PINCTRL_SPRD || PINCTRL_STM32 || PINCTRL_SPPCTL || PINCTRL_SUNXI || PINCTRL_TEGRA || PINCTRL_TEGRA_XUSB || PINCTRL_UNIPHIER || PINCTRL_VISCONTI || PINCTRL_WMT",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "GENERIC_PINMUX_FUNCTIONS": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_APPLE_GPIO || PINCTRL_EQUILIBRIUM || PINCTRL_INGENIC || PINCTRL_K210 || PINCTRL_KEEMBAY || PINCTRL_MICROCHIP_SGPIO || PINCTRL_OCELOT || PINCTRL_SINGLE || PINCTRL_STARFIVE || PINCTRL_THUNDERBAY || PINCTRL_BCM4908 || PINCTRL_NS || PINCTRL_IMX || PINCTRL_MTK_MOORE || PINCTRL_RZA1 || PINCTRL_RZA2 || PINCTRL_RZG2L || PINCTRL_RZV2M || PINCTRL_SPRD || PINCTRL_SPPCTL || PINCTRL_TI_IODELAY || PINCTRL_VISCONTI",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCONF": [
        {
            "type": "bool",
            "rev_select": "GENERIC_PINCONF || PINCTRL_AMD || PINCTRL_AT91 || PINCTRL_DA850_PUPD || PINCTRL_EQUILIBRIUM || PINCTRL_KEEMBAY || PINCTRL_LANTIQ || PINCTRL_OXNAS || PINCTRL_ST || PINCTRL_SX150X || PINCTRL_THUNDERBAY || PINCTRL_OWL || PINCTRL_ASPEED || PINCTRL_BCM281XX || PINCTRL_BCM2835 || PINCTRL_BCM4908 || PINCTRL_BCM63XX || PINCTRL_IPROC_GPIO || PINCTRL_NSP_GPIO || PINCTRL_LOCHNAGAR || PINCTRL_IMX1_CORE || PINCTRL_MXS || PINCTRL_LYNXPOINT || PINCTRL_MERRIFIELD || PINCTRL_INTEL || PINCTRL_MESON || PINCTRL_MVEBU || PINCTRL_ARMADA_37XX || PINCTRL_NOMADIK || PINCTRL_WPCM450 || PINCTRL_NPCM7XX || PINCTRL_PXA || PINCTRL_MSM || PINCTRL_QCOM_SPMI_PMIC || PINCTRL_QCOM_SSBI_PMIC || PINCTRL_LPASS_LPI || PINCTRL_SH_PFC || PINCTRL_SAMSUNG || PINCTRL_SPRD || PINCTRL_SPPCTL || PINCTRL_TEGRA || PINCTRL_TEGRA_XUSB",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "GENERIC_PINCONF": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_AMD || PINCTRL_ARTPEC6 || PINCTRL_AS3722 || PINCTRL_AT91PIO4 || PINCTRL_AXP209 || PINCTRL_DA850_PUPD || PINCTRL_DIGICOLOR || PINCTRL_EQUILIBRIUM || PINCTRL_GEMINI || PINCTRL_INGENIC || PINCTRL_K210 || PINCTRL_KEEMBAY || PINCTRL_LPC18XX || PINCTRL_MAX77620 || PINCTRL_MCP23S08 || PINCTRL_MICROCHIP_SGPIO || PINCTRL_OCELOT || PINCTRL_OXNAS || PINCTRL_PALMAS || PINCTRL_PIC32 || PINCTRL_PISTACHIO || PINCTRL_RK805 || PINCTRL_ROCKCHIP || PINCTRL_SINGLE || PINCTRL_STARFIVE || PINCTRL_STMFX || PINCTRL_SX150X || PINCTRL_THUNDERBAY || PINCTRL_ZYNQ || PINCTRL_ZYNQMP || PINCTRL_OWL || PINCTRL_ASPEED || PINCTRL_BCM281XX || PINCTRL_BCM2835 || PINCTRL_BCM4908 || PINCTRL_BCM63XX || PINCTRL_IPROC_GPIO || PINCTRL_CYGNUS_MUX || PINCTRL_NS || PINCTRL_NSP_GPIO || PINCTRL_NS2_MUX || PINCTRL_NSP_MUX || PINCTRL_LOCHNAGAR || PINCTRL_MADERA || PINCTRL_IMX || PINCTRL_LYNXPOINT || PINCTRL_MERRIFIELD || PINCTRL_INTEL || PINCTRL_MTK || PINCTRL_MTK_MOORE || PINCTRL_MTK_PARIS || PINCTRL_MESON || PINCTRL_ARMADA_37XX || PINCTRL_ABX500 || PINCTRL_WPCM450 || PINCTRL_NPCM7XX || PINCTRL_PXA || PINCTRL_MSM || PINCTRL_QCOM_SPMI_PMIC || PINCTRL_QCOM_SSBI_PMIC || PINCTRL_LPASS_LPI || PINCTRL_RALINK || PINCTRL_SH_PFC || PINCTRL_RZA1 || PINCTRL_RZG2L || PINCTRL_RZN1 || PINCTRL_RZV2M || PINCTRL_SPRD || PINCTRL_STM32 || PINCTRL_SPPCTL || PINCTRL_SUNXI || PINCTRL_TI_IODELAY || PINCTRL_UNIPHIER || PINCTRL_VISCONTI || PINCTRL_WMT || RTC_DRV_OMAP || SOC_TEGRA_PMC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "DEBUG_PINCTRL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PINCTRL_AMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (HAS_IOMEM) && (ACPI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_APPLE_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_APPLE)",
            "restrict": ""
        }
    ],
    "PINCTRL_ARTPEC6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MACH_ARTPEC6)",
            "restrict": ""
        }
    ],
    "PINCTRL_AS3722": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MFD_AS3722 && GPIOLIB)",
            "restrict": ""
        }
    ],
    "PINCTRL_AT91": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_AT91)",
            "restrict": ""
        }
    ],
    "PINCTRL_AT91PIO4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (HAS_IOMEM) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_AXP209": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MFD_AXP20X) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_BM1880": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_BITMAIN || COMPILE_TEST ))",
            "restrict": "( ARCH_BITMAIN )[!(y)]"
        }
    ],
    "PINCTRL_DA850_PUPD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_DAVINCI_DA850 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PINCTRL_DA9062": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MFD_DA9062)",
            "restrict": ""
        }
    ],
    "PINCTRL_DIGICOLOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_DIGICOLOR || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PINCTRL_EQUILIBRIUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && HAS_IOMEM) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_GEMINI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_GEMINI)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "PINCTRL_INGENIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (MIPS || COMPILE_TEST)",
            "restrict": "( MACH_INGENIC )[!(y)]"
        }
    ],
    "PINCTRL_K210": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (RISCV && SOC_CANAAN && OF)",
            "restrict": "( SOC_CANAAN )[!(y)]"
        }
    ],
    "PINCTRL_KEEMBAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_KEEMBAY || ( ARM64 && COMPILE_TEST )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PINCTRL_LANTIQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (LANTIQ)",
            "restrict": ""
        }
    ],
    "PINCTRL_FALCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_FALCON) && (PINCTRL_LANTIQ)",
            "restrict": ""
        }
    ],
    "PINCTRL_XWAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_TYPE_XWAY) && (PINCTRL_LANTIQ)",
            "restrict": ""
        }
    ],
    "PINCTRL_LPC18XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_LPC18XX || COMPILE_TEST ))",
            "restrict": "( ARCH_LPC18XX )[!(y)]"
        }
    ],
    "PINCTRL_MAX77620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MFD_MAX77620 && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_MCP23S08_I2C": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MCP23S08[I2C]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_MCP23S08_SPI": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MCP23S08[SPI_MASTER]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_MCP23S08": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SPI_MASTER || I2C)",
            "restrict": ""
        }
    ],
    "PINCTRL_MICROCHIP_SGPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PINCTRL_OCELOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PINCTRL_OXNAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_PALMAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "PINCTRL_PIC32": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_PIC32MZDA",
            "dep": "( PINCTRL ) && (OF) && (MACH_PIC32)",
            "restrict": ""
        }
    ],
    "PINCTRL_PIC32MZDA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": "( y )[!(y) && (PIC32MZDA)]"
        }
    ],
    "PINCTRL_PISTACHIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( MIPS || COMPILE_TEST )) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "PINCTRL_RK805": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MFD_RK808)",
            "restrict": ""
        }
    ],
    "PINCTRL_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (OF)",
            "restrict": "( ARCH_ROCKCHIP )[!(y)]"
        }
    ],
    "PINCTRL_SINGLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PINCTRL_ST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_STARFIVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_STARFIVE || COMPILE_TEST) && (OF)",
            "restrict": "( SOC_STARFIVE )[!(y)]"
        }
    ],
    "PINCTRL_STMFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (I2C) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "PINCTRL_SX150X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "PINCTRL_TB10X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ARC_PLAT_TB10X)",
            "restrict": ""
        }
    ],
    "PINCTRL_THUNDERBAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_THUNDERBAY || ( ARM64 && COMPILE_TEST )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PINCTRL_ZYNQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_ZYNQ)",
            "restrict": ""
        }
    ],
    "PINCTRL_ZYNQMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ZYNQMP_FIRMWARE)",
            "restrict": "( ZYNQMP_FIRMWARE )[!(y)]"
        }
    ],
    "PINCTRL_OWL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( ARCH_ACTIONS || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_S500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARM || COMPILE_TEST) && (PINCTRL_OWL)",
            "restrict": ""
        }
    ],
    "PINCTRL_S700": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARM64 || COMPILE_TEST) && (PINCTRL_OWL)",
            "restrict": ""
        }
    ],
    "PINCTRL_S900": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARM64 || COMPILE_TEST) && (PINCTRL_OWL)",
            "restrict": ""
        }
    ],
    "PINCTRL_ASPEED": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_ASPEED_G4 || PINCTRL_ASPEED_G5 || PINCTRL_ASPEED_G6",
            "dep": "( PINCTRL ) && (( ARCH_ASPEED || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_ASPEED_G4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( MACH_ASPEED_G4 || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_ASPEED_G5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( MACH_ASPEED_G5 || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_ASPEED_G6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( MACH_ASPEED_G6 || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_BCM281XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_BCM_MOBILE || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_MOBILE )[!(y)]"
        }
    ],
    "PINCTRL_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_BCM2835 || ARCH_BRCMSTB || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM2835 || ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "PINCTRL_BCM4908": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_BCM4908 || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM4908 )[!(y)]"
        }
    ],
    "PINCTRL_BCM63XX": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_BCM6318 || PINCTRL_BCM6328 || PINCTRL_BCM6358 || PINCTRL_BCM6362 || PINCTRL_BCM6368 || PINCTRL_BCM63268",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_BCM6318": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( BMIPS_GENERIC || COMPILE_TEST )) && (OF)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PINCTRL_BCM6328": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( BMIPS_GENERIC || COMPILE_TEST )) && (OF)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PINCTRL_BCM6358": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( BMIPS_GENERIC || COMPILE_TEST )) && (OF)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PINCTRL_BCM6362": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( BMIPS_GENERIC || COMPILE_TEST )) && (OF)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PINCTRL_BCM6368": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( BMIPS_GENERIC || COMPILE_TEST )) && (OF)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PINCTRL_BCM63268": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( BMIPS_GENERIC || COMPILE_TEST )) && (OF)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "PINCTRL_IPROC_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF_GPIO && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PINCTRL_CYGNUS_MUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( ARCH_BCM_CYGNUS || COMPILE_TEST )) && (OF)",
            "restrict": "( ARCH_BCM_CYGNUS )[!(y)]"
        }
    ],
    "PINCTRL_NS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( ARCH_BCM_5301X || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_5301X )[!(y)]"
        }
    ],
    "PINCTRL_NSP_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF_GPIO && ( ARCH_BCM_NSP || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_NSP )[!(y)]"
        }
    ],
    "PINCTRL_NS2_MUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PINCTRL_NSP_MUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( ARCH_BCM_NSP || COMPILE_TEST )) && (OF)",
            "restrict": "( ARCH_BCM_NSP )[!(y)]"
        }
    ],
    "PINCTRL_BERLIN": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_AS370 || PINCTRL_BERLIN_BG2 || PINCTRL_BERLIN_BG2CD || PINCTRL_BERLIN_BG2Q || PINCTRL_BERLIN_BG4CT",
            "dep": "( PINCTRL ) && ( ( ARCH_BERLIN || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "PINCTRL_AS370": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_BERLIN || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_BERLIN_BG2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_BERLIN || COMPILE_TEST ) ) && (OF)",
            "restrict": "( MACH_BERLIN_BG2 )[!(y)]"
        }
    ],
    "PINCTRL_BERLIN_BG2CD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_BERLIN || COMPILE_TEST ) ) && (OF)",
            "restrict": "( MACH_BERLIN_BG2CD )[!(y)]"
        }
    ],
    "PINCTRL_BERLIN_BG2Q": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_BERLIN || COMPILE_TEST ) ) && (OF)",
            "restrict": "( MACH_BERLIN_BG2Q )[!(y)]"
        }
    ],
    "PINCTRL_BERLIN_BG4CT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_BERLIN || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_LOCHNAGAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (MFD_LOCHNAGAR)",
            "restrict": ""
        }
    ],
    "PINCTRL_MADERA": [
        {
            "type": "tristate",
            "rev_select": "MFD_MADERA",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_CS47L15": [
        {
            "type": "bool",
            "rev_select": "MFD_CS47L15",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_CS47L35": [
        {
            "type": "bool",
            "rev_select": "MFD_CS47L35",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_CS47L85": [
        {
            "type": "bool",
            "rev_select": "MFD_CS47L85",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_CS47L90": [
        {
            "type": "bool",
            "rev_select": "MFD_CS47L90",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_CS47L92": [
        {
            "type": "bool",
            "rev_select": "MFD_CS47L92",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_IMX_SCU || PINCTRL_IMX25 || PINCTRL_IMX35 || PINCTRL_IMX50 || PINCTRL_IMX51 || PINCTRL_IMX53 || PINCTRL_IMX6Q || PINCTRL_IMX6SL || PINCTRL_IMX6SLL || PINCTRL_IMX6SX || PINCTRL_IMX6UL || PINCTRL_IMX7D || PINCTRL_IMX7ULP || PINCTRL_IMX8MM || PINCTRL_IMX8MN || PINCTRL_IMX8MP || PINCTRL_IMX8MQ || PINCTRL_IMX8ULP || PINCTRL_IMXRT1050 || PINCTRL_IMX93 || PINCTRL_VF610 || PINCTRL_IMXRT1170",
            "dep": "( PINCTRL ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX_SCU": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_IMX8QM || PINCTRL_IMX8QXP || PINCTRL_IMX8DXL",
            "dep": "( PINCTRL ) && (IMX_SCU)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX1_CORE": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_IMX1 || PINCTRL_IMX27",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX1)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX27": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX27)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX25": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (SOC_IMX25)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX35": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX35)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX50": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX50)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX51": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX51)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX53": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX53)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX6Q": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX6Q)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX6SL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX6SL)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX6SLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX6SLL)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX6SX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX6SX)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX6UL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX6UL)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX7D": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX7D)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX7ULP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_IMX7ULP)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8MM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8MN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8MP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8MQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8QM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (IMX_SCU && ARCH_MXC && ARM64)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8QXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (IMX_SCU && ARCH_MXC && ARM64)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8DXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (IMX_SCU && ARCH_MXC && ARM64)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX8ULP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMXRT1050": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX93": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_VF610": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_VF610)",
            "restrict": ""
        }
    ],
    "PINCTRL_MXS": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_IMX23 || PINCTRL_IMX28",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX23": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_IMX28": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_IMXRT1170": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "PINCTRL_BAYTRAIL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_CHERRYVIEW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_LYNXPOINT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_MERRIFIELD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (X86_INTEL_MID)",
            "restrict": ""
        }
    ],
    "PINCTRL_INTEL": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_BAYTRAIL || PINCTRL_CHERRYVIEW || PINCTRL_ALDERLAKE || PINCTRL_BROXTON || PINCTRL_CANNONLAKE || PINCTRL_CEDARFORK || PINCTRL_DENVERTON || PINCTRL_ELKHARTLAKE || PINCTRL_EMMITSBURG || PINCTRL_GEMINILAKE || PINCTRL_ICELAKE || PINCTRL_JASPERLAKE || PINCTRL_LAKEFIELD || PINCTRL_LEWISBURG || PINCTRL_METEORLAKE || PINCTRL_SUNRISEPOINT || PINCTRL_TIGERLAKE",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "PINCTRL_ALDERLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_BROXTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_CANNONLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_CEDARFORK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_DENVERTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_ELKHARTLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_EMMITSBURG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_GEMINILAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_ICELAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_JASPERLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_LAKEFIELD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_LEWISBURG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_METEORLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_SUNRISEPOINT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_TIGERLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( X86 || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "EINT_MTK": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MTK || PINCTRL_MTK_MOORE || PINCTRL_MTK_PARIS",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (PINCTRL_MTK || PINCTRL_MTK_MOORE || PINCTRL_MTK_PARIS || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (PINCTRL_MTK || PINCTRL_MTK_MOORE)] || ( PINCTRL_MTK_PARIS )[!(y)]"
        }
    ],
    "PINCTRL_MTK": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_MT2701 || PINCTRL_MT8135 || PINCTRL_MT8127 || PINCTRL_MT2712 || PINCTRL_MT8167 || PINCTRL_MT8173 || PINCTRL_MT8365 || PINCTRL_MT8516 || PINCTRL_MT6397",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_MTK_V2": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MTK_MOORE || PINCTRL_MTK_PARIS",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "PINCTRL_MTK_MOORE": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_MT7623 || PINCTRL_MT7629 || PINCTRL_MT7622 || PINCTRL_MT7986",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_MTK_PARIS": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MT6765 || PINCTRL_MT6779 || PINCTRL_MT6795 || PINCTRL_MT6797 || PINCTRL_MT8183 || PINCTRL_MT8186 || PINCTRL_MT8192 || PINCTRL_MT8195",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_MT2701": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MACH_MT7623 || MACH_MT2701 || COMPILE_TEST) && (OF)",
            "restrict": "( MACH_MT2701 )[!(y)]"
        }
    ],
    "PINCTRL_MT7623": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MACH_MT7623 || COMPILE_TEST) && (OF)",
            "restrict": "( MACH_MT7623 )[!(y)]"
        }
    ],
    "PINCTRL_MT7629": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MACH_MT7629 || COMPILE_TEST) && (OF)",
            "restrict": "( MACH_MT7629 )[!(y)]"
        }
    ],
    "PINCTRL_MT8135": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MACH_MT8135 || COMPILE_TEST) && (OF)",
            "restrict": "( MACH_MT8135 )[!(y)]"
        }
    ],
    "PINCTRL_MT8127": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MACH_MT8127 || COMPILE_TEST) && (OF)",
            "restrict": "( MACH_MT8127 )[!(y)]"
        }
    ],
    "PINCTRL_MT2712": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT6765": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT6779": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT6795": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT6797": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT7622": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT7986": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8167": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8173": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8183": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8186": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8192": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8195": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8365": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT8516": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (OF) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "PINCTRL_MT6397": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MFD_MT6397 || COMPILE_TEST) && (OF)",
            "restrict": "( MFD_MT6397 )[!(y)]"
        }
    ],
    "PINCTRL_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_MESON || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_MESON8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON8B": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON_GXBB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON_GXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON8_PMX": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MESON8 || PINCTRL_MESON8B || PINCTRL_MESON_GXBB || PINCTRL_MESON_GXL",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON )",
            "restrict": ""
        }
    ],
    "PINCTRL_MESON_AXG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON_AXG_PMX": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_MESON_AXG || PINCTRL_MESON_G12A || PINCTRL_MESON_A1 || PINCTRL_MESON_S4",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON )",
            "restrict": ""
        }
    ],
    "PINCTRL_MESON_G12A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON_A1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MESON_S4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_MESON ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PINCTRL_MVEBU": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_DOVE || PINCTRL_KIRKWOOD || PINCTRL_ARMADA_370 || PINCTRL_ARMADA_375 || PINCTRL_ARMADA_38X || PINCTRL_ARMADA_39X || PINCTRL_ARMADA_AP806 || PINCTRL_ARMADA_CP110 || PINCTRL_ARMADA_XP || PINCTRL_ORION || PINCTRL_AC5",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_DOVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_KIRKWOOD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_370": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_375": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_38X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_39X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_AP806": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_CP110": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_XP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ORION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_AC5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ARMADA_37XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_ABX500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_U8500 ) && (AB8500_CORE)",
            "restrict": ""
        }
    ],
    "PINCTRL_AB8500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_U8500 ) && (PINCTRL_ABX500 && ARCH_U8500)",
            "restrict": ""
        }
    ],
    "PINCTRL_AB8505": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_U8500 ) && (PINCTRL_ABX500 && ARCH_U8500)",
            "restrict": ""
        }
    ],
    "PINCTRL_NOMADIK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_U8500 || ARCH_NOMADIK ) ) && (OF && GPIOLIB)",
            "restrict": ""
        }
    ],
    "PINCTRL_STN8815": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_U8500 || ARCH_NOMADIK ) ) && (PINCTRL_NOMADIK && ARCH_NOMADIK)",
            "restrict": ""
        }
    ],
    "PINCTRL_DB8500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_U8500 || ARCH_NOMADIK ) ) && (PINCTRL_NOMADIK && ARCH_U8500)",
            "restrict": ""
        }
    ],
    "PINCTRL_WPCM450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_WPCM450 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_NPCM7XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (( ARCH_NPCM7XX || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_PXA": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_PXA25X || PINCTRL_PXA27X",
            "dep": "( PINCTRL ) && ( ( ARCH_PXA || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "PINCTRL_PXA25X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_PXA || COMPILE_TEST ) )",
            "restrict": "( y )[!(y) && (PXA25x)]"
        }
    ],
    "PINCTRL_PXA27X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_PXA || COMPILE_TEST ) )",
            "restrict": "( y )[!(y) && (PXA27x)]"
        }
    ],
    "PINCTRL_MSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "PINCTRL_APQ8064": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_APQ8084": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_IPQ4019": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_IPQ8064": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_IPQ8074": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_IPQ6018": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8226": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8960": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MDM9607": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB && OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MDM9615": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8X74": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8909": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8916": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8953": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8976": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8994": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8996": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_MSM8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_QCM2290": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_QCS404": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_QDF2XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (ACPI) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_QCOM_SPMI_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF && SPMI)",
            "restrict": ""
        }
    ],
    "PINCTRL_QCOM_SSBI_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_SC7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SC7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SC7280_LPASS_LPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB) && (PINCTRL_LPASS_LPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_SC8180X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (( OF || ACPI )) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SC8280XP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SDM660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SDM845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (( OF || ACPI )) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SDX55": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM6115": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB && OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM6125": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM6350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB && OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM6375": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB && OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SDX65": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB && OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM8150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM8250_LPASS_LPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB) && (PINCTRL_LPASS_LPI)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SM8450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB && OF) && (PINCTRL_MSM)",
            "restrict": ""
        }
    ],
    "PINCTRL_LPASS_LPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( ARCH_QCOM || COMPILE_TEST ) ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "PINCTRL_RALINK": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_MT7620 || PINCTRL_MT7621 || PINCTRL_RT2880 || PINCTRL_RT305X || PINCTRL_RT3883",
            "dep": "( PINCTRL ) && ( ( RALINK ) )",
            "restrict": ""
        }
    ],
    "PINCTRL_MT7620": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( RALINK ) ) && (RALINK && SOC_MT7620)",
            "restrict": ""
        }
    ],
    "PINCTRL_MT7621": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( RALINK ) ) && (RALINK && SOC_MT7621)",
            "restrict": ""
        }
    ],
    "PINCTRL_RT2880": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( RALINK ) ) && (RALINK && SOC_RT288X)",
            "restrict": ""
        }
    ],
    "PINCTRL_RT305X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( RALINK ) ) && (RALINK && SOC_RT305X)",
            "restrict": ""
        }
    ],
    "PINCTRL_RT3883": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ( RALINK ) ) && (RALINK && SOC_RT3883)",
            "restrict": ""
        }
    ],
    "PINCTRL_RENESAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": "( y )[!(COMPILE_TEST && ! ( ARCH_RENESAS || SUPERH )) && (ARCH_RENESAS || SUPERH)]"
        }
    ],
    "PINCTRL_SH_PFC": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_SH_PFC_GPIO || PINCTRL_PFC_EMEV2 || PINCTRL_PFC_R8A77995 || PINCTRL_PFC_R8A7794 || PINCTRL_PFC_R8A77990 || PINCTRL_PFC_R8A7779 || PINCTRL_PFC_R8A7790 || PINCTRL_PFC_R8A77950 || PINCTRL_PFC_R8A77951 || PINCTRL_PFC_R8A7778 || PINCTRL_PFC_R8A7793 || PINCTRL_PFC_R8A7791 || PINCTRL_PFC_R8A77965 || PINCTRL_PFC_R8A77960 || PINCTRL_PFC_R8A77961 || PINCTRL_PFC_R8A779F0 || PINCTRL_PFC_R8A7792 || PINCTRL_PFC_R8A77980 || PINCTRL_PFC_R8A77970 || PINCTRL_PFC_R8A779A0 || PINCTRL_PFC_R8A779G0 || PINCTRL_PFC_R8A77470 || PINCTRL_PFC_R8A7745 || PINCTRL_PFC_R8A7742 || PINCTRL_PFC_R8A7743 || PINCTRL_PFC_R8A7744 || PINCTRL_PFC_R8A774C0 || PINCTRL_PFC_R8A774E1 || PINCTRL_PFC_R8A774A1 || PINCTRL_PFC_R8A774B1",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_SH_PFC_GPIO": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_SH_FUNC_GPIO || PINCTRL_PFC_R8A7740 || PINCTRL_PFC_R8A73A4 || PINCTRL_PFC_SH73A0",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_SH_FUNC_GPIO": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_PFC_SH7203 || PINCTRL_PFC_SH7264 || PINCTRL_PFC_SH7269 || PINCTRL_PFC_SH7720 || PINCTRL_PFC_SH7722 || PINCTRL_PFC_SH7734 || PINCTRL_PFC_SH7757 || PINCTRL_PFC_SH7785 || PINCTRL_PFC_SH7786 || PINCTRL_PFC_SH7723 || PINCTRL_PFC_SH7724 || PINCTRL_PFC_SHX3",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_EMEV2": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_EMEV2]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77995": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77995]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7794": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7794]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77990": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77990]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7779": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7779]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7790": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7790]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77950": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77950]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77951": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77951]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7778": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7778]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7793": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7793]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7791": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7791]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77965": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77965]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77960": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77960]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77961": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77961]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A779F0": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A779F0]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7792": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7792]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77980": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77980]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77970": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77970]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A779A0": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A779A0]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A779G0": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A779G0]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7740": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7740]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A73A4": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A73A4]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_RZA1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_R7S72100 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_RZA2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_R7S9210 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_RZG2L": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_RZG2L]",
            "dep": "( PINCTRL ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A77470": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A77470]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7745": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7745]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7742": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7742]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7743": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7743]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A7744": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A7744]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A774C0": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A774C0]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A774E1": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A774E1]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A774A1": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A774A1]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_R8A774B1": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R8A774B1]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_RZN1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_RZN1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_RZV2M": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_R9A09G011]",
            "dep": "( PINCTRL ) && (OF) && (ARCH_R9A09G011 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7203": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7203]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7264": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7264]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7269": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7269]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7720": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7720]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7722": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7722]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7734": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7734]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7757": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7757]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7785": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7785]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7786": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7786]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH73A0": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[ARCH_SH73A0]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7723": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7723]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SH7724": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SH7724]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_PFC_SHX3": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_RENESAS[CPU_SUBTYPE_SHX3]",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_SAMSUNG": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_EXYNOS || PINCTRL_S3C24XX || PINCTRL_S3C64XX",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_EXYNOS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_EXYNOS || ARCH_S5PV210 || ( COMPILE_TEST && OF ))",
            "restrict": ""
        }
    ],
    "PINCTRL_EXYNOS_ARM": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_EXYNOS[ARM && ( ARCH_EXYNOS || ARCH_S5PV210 )]",
            "dep": "( PINCTRL ) && (PINCTRL_EXYNOS)",
            "restrict": ""
        }
    ],
    "PINCTRL_EXYNOS_ARM64": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_EXYNOS[ARM64 && ARCH_EXYNOS]",
            "dep": "( PINCTRL ) && (PINCTRL_EXYNOS)",
            "restrict": ""
        }
    ],
    "PINCTRL_S3C24XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_S3C24XX || ( COMPILE_TEST && OF ))",
            "restrict": ""
        }
    ],
    "PINCTRL_S3C64XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_S3C64XX || ( COMPILE_TEST && OF ))",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_SPEAR3XX || PINCTRL_SPEAR1310 || PINCTRL_SPEAR1340",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR3XX": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_SPEAR300 || PINCTRL_SPEAR310 || PINCTRL_SPEAR320",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (ARCH_SPEAR3XX)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR300": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (MACH_SPEAR300)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR310": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (MACH_SPEAR310)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR320": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (MACH_SPEAR320)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR1310": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (MACH_SPEAR1310)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR1340": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (MACH_SPEAR1340)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPEAR_PLGPIO": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_SPEAR310 || PINCTRL_SPEAR320 || PINCTRL_SPEAR1310 || PINCTRL_SPEAR1340",
            "dep": "( PINCTRL ) && ( PLAT_SPEAR ) && (GPIOLIB && PINCTRL_SPEAR)",
            "restrict": ""
        }
    ],
    "PINCTRL_SPRD": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_SPRD_SC9860",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_SPRD_SC9860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PINCTRL_STM32": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_STM32F429 || PINCTRL_STM32F469 || PINCTRL_STM32F746 || PINCTRL_STM32F769 || PINCTRL_STM32H743 || PINCTRL_STM32MP135 || PINCTRL_STM32MP157",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF)",
            "restrict": ""
        }
    ],
    "PINCTRL_STM32F429": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32F429 )[!(COMPILE_TEST && ! MACH_STM32F429)]"
        }
    ],
    "PINCTRL_STM32F469": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32F469 )[!(COMPILE_TEST && ! MACH_STM32F469)]"
        }
    ],
    "PINCTRL_STM32F746": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32F746 )[!(COMPILE_TEST && ! MACH_STM32F746)]"
        }
    ],
    "PINCTRL_STM32F769": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32F769 )[!(COMPILE_TEST && ! MACH_STM32F769)]"
        }
    ],
    "PINCTRL_STM32H743": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32H743 )[!(COMPILE_TEST && ! MACH_STM32H743)]"
        }
    ],
    "PINCTRL_STM32MP135": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32MP13 )[!(COMPILE_TEST && ! MACH_STM32MP13)]"
        }
    ],
    "PINCTRL_STM32MP157": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_STM32 || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( MACH_STM32MP157 )[!(COMPILE_TEST && ! MACH_STM32MP157)]"
        }
    ],
    "PINCTRL_SPPCTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (SOC_SP7021) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PINCTRL_SUNXI": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_SUNIV_F1C100S || PINCTRL_SUN4I_A10 || PINCTRL_SUN5I || PINCTRL_SUN6I_A31 || PINCTRL_SUN6I_A31_R || PINCTRL_SUN8I_A23 || PINCTRL_SUN8I_A33 || PINCTRL_SUN8I_A83T || PINCTRL_SUN8I_A83T_R || PINCTRL_SUN8I_A23_R || PINCTRL_SUN8I_H3 || PINCTRL_SUN8I_H3_R || PINCTRL_SUN8I_V3S || PINCTRL_SUN9I_A80 || PINCTRL_SUN9I_A80_R || PINCTRL_SUN20I_D1 || PINCTRL_SUN50I_A64 || PINCTRL_SUN50I_A64_R || PINCTRL_SUN50I_A100 || PINCTRL_SUN50I_A100_R || PINCTRL_SUN50I_H5 || PINCTRL_SUN50I_H6 || PINCTRL_SUN50I_H6_R || PINCTRL_SUN50I_H616 || PINCTRL_SUN50I_H616_R",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": ""
        }
    ],
    "PINCTRL_SUNIV_F1C100S": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUNIV )[!(y)]"
        }
    ],
    "PINCTRL_SUN4I_A10": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN4I || MACH_SUN7I || MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN5I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN5I )[!(y)]"
        }
    ],
    "PINCTRL_SUN6I_A31": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN6I )[!(y)]"
        }
    ],
    "PINCTRL_SUN6I_A31_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN6I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_A23": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_A33": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_A83T": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_A83T_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_A23_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_H3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_H3_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I || ( ARM64 && ARCH_SUNXI ) )[!(y)]"
        }
    ],
    "PINCTRL_SUN8I_V3S": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "PINCTRL_SUN9I_A80": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN9I )[!(y)]"
        }
    ],
    "PINCTRL_SUN9I_A80_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN9I )[!(y)]"
        }
    ],
    "PINCTRL_SUN20I_D1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( MACH_SUN8I || ( RISCV && ARCH_SUNXI ) )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_A64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_A64_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_A100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_A100_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_H5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_H6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_H6_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_H616": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_SUN50I_H616_R": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_SUNXI )",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "PINCTRL_TEGRA": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_TEGRA20 || PINCTRL_TEGRA30 || PINCTRL_TEGRA114 || PINCTRL_TEGRA124 || PINCTRL_TEGRA210 || PINCTRL_TEGRA194",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA20": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_2x_SOC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA30": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_3x_SOC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA114": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_114_SOC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA124": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_124_SOC || ARCH_TEGRA_132_SOC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA210": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_210_SOC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA194": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_194_SOC",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TEGRA_XUSB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL )",
            "restrict": "( y )[!(y) && (ARCH_TEGRA)]"
        }
    ],
    "PINCTRL_TI_IODELAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF && ( SOC_DRA7XX || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PINCTRL_UNIPHIER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF && MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "PINCTRL_UNIPHIER_LD4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_PRO4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_SLD8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_PRO5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_PXS2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_LD6B": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_LD11": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM64 )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_LD20": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM64 )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_PXS3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM64 )[!(y)]"
        }
    ],
    "PINCTRL_UNIPHIER_NX1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( PINCTRL_UNIPHIER )",
            "restrict": "( ARM64 )[!(y)]"
        }
    ],
    "PINCTRL_VISCONTI": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_TMPV7700",
            "dep": "( PINCTRL )",
            "restrict": ""
        }
    ],
    "PINCTRL_TMPV7700": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && (OF) && (ARCH_VISCONTI || COMPILE_TEST)",
            "restrict": "( ARCH_VISCONTI )[!(y)]"
        }
    ],
    "PINCTRL_WMT": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_VT8500 || PINCTRL_WM8505 || PINCTRL_WM8650 || PINCTRL_WM8750 || PINCTRL_WM8850",
            "dep": "( PINCTRL ) && ( ARCH_VT8500 )",
            "restrict": ""
        }
    ],
    "PINCTRL_VT8500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_VT8500 ) && (ARCH_WM8505)",
            "restrict": ""
        }
    ],
    "PINCTRL_WM8505": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_VT8500 ) && (ARCH_WM8505)",
            "restrict": ""
        }
    ],
    "PINCTRL_WM8650": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_VT8500 ) && (ARCH_WM8505)",
            "restrict": ""
        }
    ],
    "PINCTRL_WM8750": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_VT8500 ) && (ARCH_WM8750)",
            "restrict": ""
        }
    ],
    "PINCTRL_WM8850": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PINCTRL ) && ( ARCH_VT8500 ) && (ARCH_WM8850)",
            "restrict": ""
        }
    ],
    "ARCH_HAVE_CUSTOM_GPIO_H": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GPIOLIB": [
        {
            "type": "bool",
            "rev_select": "STA2X11 || OLPC || ALIX || NET5501 || GEOS || NET_DSA_VITESSE_VSC73XX || NET_XGENE || I2C_MUX_LTC4306 || PINCTRL_AMD || PINCTRL_APPLE_GPIO || PINCTRL_AT91 || PINCTRL_AT91PIO4 || PINCTRL_AXP209 || PINCTRL_DA9062 || PINCTRL_EQUILIBRIUM || PINCTRL_INGENIC || PINCTRL_K210 || PINCTRL_KEEMBAY || PINCTRL_MCP23S08 || PINCTRL_MICROCHIP_SGPIO || PINCTRL_OCELOT || PINCTRL_OXNAS || PINCTRL_RK805 || PINCTRL_ROCKCHIP || PINCTRL_STARFIVE || PINCTRL_SX150X || PINCTRL_TB10X || PINCTRL_THUNDERBAY || PINCTRL_OWL || PINCTRL_BCM2835 || PINCTRL_BCM63XX || PINCTRL_LOCHNAGAR || PINCTRL_LYNXPOINT || PINCTRL_INTEL || EINT_MTK || PINCTRL_MTK || PINCTRL_MTK_MOORE || PINCTRL_MTK_PARIS || PINCTRL_MESON || PINCTRL_WPCM450 || PINCTRL_NPCM7XX || PINCTRL_QCOM_SPMI_PMIC || PINCTRL_QCOM_SSBI_PMIC || PINCTRL_SH_PFC_GPIO || PINCTRL_RZA1 || PINCTRL_RZA2 || PINCTRL_RZG2L || PINCTRL_RZV2M || PINCTRL_SAMSUNG || PINCTRL_STM32 || PINCTRL_SPPCTL || PINCTRL_SUNXI || MFD_TC6393XB || CEC_GPIO || STA2X11_VIP[MEDIA_SUBDRV_AUTOSELECT] || SND_SOC_AW8738 || OMAP_GPMC || STX104 || AD5592R || AD5593R || RESET_TI_TPS380X",
            "dep": "",
            "restrict": ""
        }
    ],
    "GPIOLIB_FASTPATH_LIMIT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( GPIOLIB )",
            "restrict": "( 32 512 ) || ( 512 )[!(y)]"
        }
    ],
    "OF_GPIO": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_APPLE_GPIO || PINCTRL_AT91 || PINCTRL_AT91PIO4 || PINCTRL_K210 || PINCTRL_MICROCHIP_SGPIO || PINCTRL_OCELOT || PINCTRL_OXNAS || PINCTRL_PIC32 || PINCTRL_PISTACHIO || PINCTRL_ROCKCHIP || PINCTRL_STARFIVE || PINCTRL_MTK || PINCTRL_MTK_MOORE || PINCTRL_MTK_PARIS || PINCTRL_MESON || PINCTRL_NOMADIK || PINCTRL_SPPCTL || GPIO_TB10X",
            "dep": "( GPIOLIB ) && (OF) && (HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIOLIB_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_AMD || PINCTRL_APPLE_GPIO || PINCTRL_AT91 || PINCTRL_AT91PIO4 || PINCTRL_EQUILIBRIUM || PINCTRL_INGENIC || PINCTRL_KEEMBAY || PINCTRL_MCP23S08 || PINCTRL_MICROCHIP_SGPIO || PINCTRL_OCELOT || PINCTRL_OXNAS || PINCTRL_PIC32 || PINCTRL_PISTACHIO || PINCTRL_ST || PINCTRL_STARFIVE || PINCTRL_STMFX || PINCTRL_SX150X || PINCTRL_THUNDERBAY || PINCTRL_OWL || PINCTRL_BCM2835 || PINCTRL_IPROC_GPIO || PINCTRL_NSP_GPIO || PINCTRL_LYNXPOINT || PINCTRL_INTEL || PINCTRL_NOMADIK || PINCTRL_WPCM450 || PINCTRL_NPCM7XX || PINCTRL_MSM || PINCTRL_QCOM_SPMI_PMIC || PINCTRL_QCOM_SSBI_PMIC || PINCTRL_SPEAR_PLGPIO || GPIO_ALTERA || GPIO_ASPEED || GPIO_ASPEED_SGPIO || GPIO_ATH79 || GPIO_BCM_XGS_IPROC || GPIO_CADENCE || GPIO_DWAPB || GPIO_EIC_SPRD || GPIO_EN7523 || GPIO_EP93XX || GPIO_FTGPIO010 || GPIO_HISI || GPIO_HLWD || GPIO_IXP4XX || GPIO_MT7621 || GPIO_OMAP || GPIO_PL061 || GPIO_PMIC_EIC_SPRD || GPIO_RCAR || GPIO_RDA || GPIO_REALTEK_OTTO || GPIO_ROCKCHIP || GPIO_SIFIVE || GPIO_SIOX || GPIO_SPRD || GPIO_TEGRA || GPIO_TEGRA186 || GPIO_THUNDERX || GPIO_VF610 || GPIO_VISCONTI || GPIO_XGENE_SB || GPIO_XILINX || GPIO_XLP || GPIO_ZYNQ || GPIO_MSC313 || GPIO_IDT3243X || GPIO_104_DIO_48E || GPIO_104_IDIO_16 || GPIO_104_IDI_48 || GPIO_SCH || GPIO_WS16C48 || GPIO_ADP5588_IRQ || GPIO_ADNP || GPIO_MAX732X_IRQ || GPIO_PCA953X_IRQ || GPIO_PCF857X || GPIO_CRYSTAL_COVE || GPIO_DLN2 || GPIO_MAX77620 || GPIO_SL28CPLD || GPIO_STMPE || GPIO_TC3589X || GPIO_TQMX86 || GPIO_WHISKEY_COVE || GPIO_MERRIFIELD || GPIO_PCI_IDIO_16 || GPIO_PCIE_IDIO_24 || GPIO_VIRTIO || BCMA_DRIVER_GPIO[BCMA_HOST_SOC] || HID_CP2112 || GREYBUS_GPIO || INTEL_INT0002_VGPIO",
            "dep": "( GPIOLIB )",
            "restrict": ""
        }
    ],
    "DEBUG_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "GPIO_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (SYSFS)",
            "restrict": ""
        }
    ],
    "GPIO_CDEV": [
        {
            "type": "bool",
            "rev_select": "GPIO_SYSFS",
            "dep": "( GPIOLIB )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "GPIO_CDEV_V1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (GPIO_CDEV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_EQUILIBRIUM || PINCTRL_KEEMBAY || PINCTRL_THUNDERBAY || PINCTRL_WPCM450 || PINCTRL_NPCM7XX || GPIO_74XX_MMIO || GPIO_AMDPT || GPIO_ASPEED_SGPIO || GPIO_ATH79 || GPIO_BCM_XGS_IPROC || GPIO_BRCMSTB || GPIO_CADENCE || GPIO_CLPS711X || GPIO_DWAPB || GPIO_EN7523 || GPIO_EP93XX || GPIO_GE_FPGA || GPIO_FTGPIO010 || GPIO_GENERIC_PLATFORM || GPIO_GRGPIO || GPIO_HISI || GPIO_HLWD || GPIO_IOP || GPIO_IXP4XX || GPIO_MENZ127 || GPIO_MPC8XXX || GPIO_MT7621 || GPIO_MXC || GPIO_MXS || GPIO_RDA || GPIO_REALTEK_OTTO || GPIO_SIFIVE || GPIO_TB10X || GPIO_TS4800 || GPIO_VISCONTI || GPIO_XGENE_SB || GPIO_LOONGSON1 || GPIO_IDT3243X || GPIO_MLXBF || GPIO_MLXBF2 || GPIO_SODAVILLE",
            "dep": "( GPIOLIB ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "GPIO_REGMAP": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_BCM63XX || GPIO_SL28CPLD || GPIO_TN48M_CPLD",
            "dep": "( GPIOLIB ) && (REGMAP)",
            "restrict": ""
        }
    ],
    "GPIO_MAX730X": [
        {
            "type": "tristate",
            "rev_select": "GPIO_MAX7300 || GPIO_MAX7301",
            "dep": "( GPIOLIB )",
            "restrict": ""
        }
    ],
    "GPIO_74XX_MMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_ALTERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_AMDPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "GPIO_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( ARCH_ASPEED || COMPILE_TEST ) && OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_ASPEED_SGPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( ARCH_ASPEED || COMPILE_TEST ) && OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_ATH79": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ATH79 || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ATH79)]"
        }
    ],
    "GPIO_RASPBERRYPI_EXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO) && (( ARCH_BCM2835 && RASPBERRYPI_FIRMWARE ) || ( COMPILE_TEST && ! RASPBERRYPI_FIRMWARE ))",
            "restrict": "( RASPBERRYPI_FIRMWARE )[!(y)]"
        }
    ],
    "GPIO_BCM_KONA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO && ( ARCH_BCM_MOBILE || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "GPIO_BCM_XGS_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "GPIO_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO && ( ARCH_BRCMSTB || BMIPS_GENERIC || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (( ARCH_BRCMSTB || BMIPS_GENERIC ))]"
        }
    ],
    "GPIO_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_CLPS711X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_CLPS711X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_DAVINCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( ARM || ARM64 ) && ( ARCH_DAVINCI || ARCH_KEYSTONE || ARCH_K3 ))",
            "restrict": "( y )[!(y) && (ARCH_DAVINCI)]"
        }
    ],
    "GPIO_DWAPB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "GPIO_EIC_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_SPRD || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_EM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( ARCH_EMEV2 || COMPILE_TEST ) && OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_EN7523": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_AIROHA)",
            "restrict": "( ARCH_AIROHA )[!(y)]"
        }
    ],
    "GPIO_EP93XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_EP93XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_EXAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (SERIAL_8250_EXAR)",
            "restrict": ""
        }
    ],
    "GPIO_GE_FPGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (GE_FPGA)",
            "restrict": ""
        }
    ],
    "GPIO_FTGPIO010": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": "( ( ARCH_GEMINI || ARCH_MOXART ) )[!(y)]"
        }
    ],
    "GPIO_GENERIC_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "MFD_VEXPRESS_SYSREG",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "GPIO_GRGPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_HISI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( ARM64 && ACPI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_HLWD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_ICH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (X86) && (LPC_ICH)",
            "restrict": ""
        }
    ],
    "GPIO_IOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_IOP32X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_IXP4XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_IXP4XX) && (OF)",
            "restrict": ""
        }
    ],
    "GPIO_LOGICVC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MFD_SYSCON && OF)",
            "restrict": ""
        }
    ],
    "GPIO_LOONGSON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (CPU_LOONGSON2EF || CPU_LOONGSON64)",
            "restrict": ""
        }
    ],
    "GPIO_LPC18XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO && ( ARCH_LPC18XX || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (ARCH_LPC18XX)]"
        }
    ],
    "GPIO_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO && ( ARCH_LPC32XX || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "GPIO_MB86S7X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "GPIO_MENZ127": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MCB)",
            "restrict": ""
        }
    ],
    "GPIO_MM_LANTIQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (LANTIQ && SOC_XWAY)",
            "restrict": ""
        }
    ],
    "GPIO_MPC5200": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (PPC_MPC52xx)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_MPC8XXX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (PPC_MPC512x || PPC_MPC831x || PPC_MPC834x || PPC_MPC837x || FSL_SOC_BOOKE || PPC_86xx || ARCH_LAYERSCAPE || ARM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_MT7621": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (SOC_MT7620 || SOC_MT7621 || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_MVEBU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (PLAT_ORION || ARCH_MVEBU) && (OF_GPIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_MXC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_MXS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_MXS || COMPILE_TEST)",
            "restrict": "( y )[!(COMPILE_TEST) && (ARCH_MXS)]"
        }
    ],
    "GPIO_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (CAVIUM_OCTEON_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARM)",
            "restrict": "( y )[!(ARCH_OMAP2PLUS || COMPILE_TEST) && (ARCH_OMAP)]"
        }
    ],
    "GPIO_PL061": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "GPIO_PMIC_EIC_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MFD_SC27XX_PMIC || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_PXA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_PXA || ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_RCAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_RDA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_RDA || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_REALTEK_OTTO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MACH_REALTEK_RTL)",
            "restrict": "( MACH_REALTEK_RTL )[!(y)]"
        }
    ],
    "GPIO_REG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "GPIO_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": "( ARCH_ROCKCHIP )[!(y)]"
        }
    ],
    "GPIO_SAMA5D2_PIOBU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MFD_SYSCON) && (OF_GPIO) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_SIFIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_SIOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (SIOX)",
            "restrict": ""
        }
    ],
    "GPIO_SNPS_CREG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARC || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_SPEAR_SPICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (PLAT_SPEAR)",
            "restrict": ""
        }
    ],
    "GPIO_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_SPRD || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_STA2X11": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MFD_STA2X11)",
            "restrict": ""
        }
    ],
    "GPIO_STP_XWAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (SOC_XWAY || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_SYSCON": [
        {
            "type": "tristate",
            "rev_select": "GPIO_SAMA5D2_PIOBU",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MFD_SYSCON && OF)",
            "restrict": ""
        }
    ],
    "GPIO_TB10X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "GPIO_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_TEGRA || COMPILE_TEST) && (OF_GPIO)",
            "restrict": "( ARCH_TEGRA )[!(y)]"
        }
    ],
    "GPIO_TEGRA186": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC || COMPILE_TEST) && (OF_GPIO)",
            "restrict": "( ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC )[!(y)]"
        }
    ],
    "GPIO_TS4800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO) && (SOC_IMX51 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_THUNDERX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_THUNDER || ( 64BIT && COMPILE_TEST )) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "GPIO_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_VF610": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_MXC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GPIO_VISCONTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_VISCONTI || COMPILE_TEST) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_VX855": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( X86 || COMPILE_TEST ) && PCI)",
            "restrict": ""
        }
    ],
    "GPIO_WCD934X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MFD_WCD934X && OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_XGENE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARM64 && OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_XGENE_SB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (( ARCH_XGENE || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "GPIO_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_XLP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_THUNDER2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_XTENSA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (XTENSA) && (HAVE_XTENSA_GPIO32) && (! SMP)",
            "restrict": ""
        }
    ],
    "GPIO_ZEVIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARM && OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_ZYNQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_ZYNQ || ARCH_ZYNQMP)",
            "restrict": ""
        }
    ],
    "GPIO_ZYNQMP_MODEPIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ZYNQMP_FIRMWARE)",
            "restrict": "( ZYNQMP_FIRMWARE )[!(y)]"
        }
    ],
    "GPIO_LOONGSON1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MACH_LOONGSON32)",
            "restrict": ""
        }
    ],
    "GPIO_AMD_FCH": [
        {
            "type": "tristate",
            "rev_select": "PCENGINES_APU2",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) )",
            "restrict": ""
        }
    ],
    "GPIO_MSC313": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (ARCH_MSTARV7)",
            "restrict": "( ARCH_MSTARV7 )[!(y)]"
        }
    ],
    "GPIO_IDT3243X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( HAS_IOMEM ) ) && (MIKROTIK_RB532 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_I8255": [
        {
            "type": "tristate",
            "rev_select": "GPIO_104_DIO_48E || GPIO_104_IDI_48 || GPIO_GPIO_MM",
            "dep": "( GPIOLIB ) && ( ( X86 ) )",
            "restrict": ""
        }
    ],
    "GPIO_104_DIO_48E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) ) && (PC104)",
            "restrict": ""
        }
    ],
    "GPIO_104_IDIO_16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) ) && (PC104)",
            "restrict": ""
        }
    ],
    "GPIO_104_IDI_48": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) ) && (PC104)",
            "restrict": ""
        }
    ],
    "GPIO_F7188X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) )",
            "restrict": ""
        }
    ],
    "GPIO_GPIO_MM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) ) && (PC104)",
            "restrict": ""
        }
    ],
    "GPIO_IT87": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) )",
            "restrict": ""
        }
    ],
    "GPIO_SCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) ) && (( X86 || COMPILE_TEST ) && ACPI) && (LPC_SCH)",
            "restrict": ""
        }
    ],
    "GPIO_SCH311X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) )",
            "restrict": ""
        }
    ],
    "GPIO_TS5500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) ) && (TS5500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_WINBOND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) )",
            "restrict": ""
        }
    ],
    "GPIO_WS16C48": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( X86 ) )",
            "restrict": ""
        }
    ],
    "GPIO_ADP5588": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_ADP5588_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) ) && (GPIO_ADP5588 = y)",
            "restrict": ""
        }
    ],
    "GPIO_ADNP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_GW_PLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_MAX7300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_MAX732X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_MAX732X_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) ) && (GPIO_MAX732X = y)",
            "restrict": ""
        }
    ],
    "GPIO_PCA953X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_PCA953X_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) ) && (GPIO_PCA953X)",
            "restrict": ""
        }
    ],
    "GPIO_PCA9570": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_PCF857X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_TPIC2810": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) )",
            "restrict": ""
        }
    ],
    "GPIO_TS4900": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( I2C ) ) && (SOC_IMX6 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_ADP5520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (PMIC_ADP5520)",
            "restrict": ""
        }
    ],
    "GPIO_ALTERA_A10SR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_ALTERA_A10SR)",
            "restrict": ""
        }
    ],
    "GPIO_ARIZONA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "GPIO_BD71815": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_ROHM_BD71828)",
            "restrict": ""
        }
    ],
    "GPIO_BD71828": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_ROHM_BD71828)",
            "restrict": ""
        }
    ],
    "GPIO_BD9571MWV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_BD9571MWV)",
            "restrict": ""
        }
    ],
    "GPIO_CRYSTAL_COVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (( X86 || COMPILE_TEST ) && INTEL_SOC_PMIC)",
            "restrict": ""
        }
    ],
    "GPIO_CS5535": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (X86 || MIPS || COMPILE_TEST) && (MFD_CS5535)",
            "restrict": ""
        }
    ],
    "GPIO_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "GPIO_DA9055": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_DA9055)",
            "restrict": ""
        }
    ],
    "GPIO_DLN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_DLN2)",
            "restrict": ""
        }
    ],
    "HTC_EGPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (ARM)",
            "restrict": ""
        }
    ],
    "GPIO_JANZ_TTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_JANZ_CMODIO)",
            "restrict": ""
        }
    ],
    "GPIO_KEMPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_KEMPLD)",
            "restrict": ""
        }
    ],
    "GPIO_LP3943": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_LP3943)",
            "restrict": ""
        }
    ],
    "GPIO_LP873X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TI_LP873X)",
            "restrict": ""
        }
    ],
    "GPIO_LP87565": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TI_LP87565)",
            "restrict": ""
        }
    ],
    "GPIO_MADERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (PINCTRL_MADERA)",
            "restrict": ""
        }
    ],
    "GPIO_MAX77620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_MAX77620)",
            "restrict": ""
        }
    ],
    "GPIO_MAX77650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_MAX77650)",
            "restrict": ""
        }
    ],
    "GPIO_PALMAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "GPIO_RC5T583": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_RC5T583)",
            "restrict": ""
        }
    ],
    "GPIO_SL28CPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_SL28CPLD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_STMPE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_STMPE) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_TC3589X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TC3589X) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_TIMBERDALE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TIMBERDALE)",
            "restrict": ""
        }
    ],
    "GPIO_TN48M_CPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TN48M_CPLD)",
            "restrict": ""
        }
    ],
    "GPIO_TPS65086": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TPS65086)",
            "restrict": ""
        }
    ],
    "GPIO_TPS65218": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TPS65218)",
            "restrict": ""
        }
    ],
    "GPIO_TPS6586X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TPS6586X)",
            "restrict": ""
        }
    ],
    "GPIO_TPS65910": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TPS65910)",
            "restrict": ""
        }
    ],
    "GPIO_TPS65912": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TPS65912)",
            "restrict": ""
        }
    ],
    "GPIO_TPS68470": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (INTEL_SKL_INT3472)",
            "restrict": ""
        }
    ],
    "GPIO_TQMX86": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_TQMX86 || COMPILE_TEST) && (HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "GPIO_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "GPIO_TWL6040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (TWL6040_CORE)",
            "restrict": ""
        }
    ],
    "GPIO_UCB1400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (UCB1400_CORE)",
            "restrict": ""
        }
    ],
    "GPIO_WHISKEY_COVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (( X86 || COMPILE_TEST ) && INTEL_SOC_PMIC_BXTWC)",
            "restrict": ""
        }
    ],
    "GPIO_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "GPIO_WM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "GPIO_WM8994": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (MFD_WM8994)",
            "restrict": ""
        }
    ],
    "GPIO_AMD8111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (X86 || COMPILE_TEST) && (HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "GPIO_BT8XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (VIDEO_BT848 = n)",
            "restrict": ""
        }
    ],
    "GPIO_MERRIFIELD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (X86_INTEL_MID)",
            "restrict": ""
        }
    ],
    "GPIO_MLXBF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (( MELLANOX_PLATFORM && ARM64 && ACPI ) || ( 64BIT && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "GPIO_MLXBF2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (( MELLANOX_PLATFORM && ARM64 && ACPI ) || ( 64BIT && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "GPIO_ML_IOH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_PCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (X86_32 || MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GPIO_PCI_IDIO_16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "GPIO_PCIE_IDIO_24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "GPIO_RDC321X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) )",
            "restrict": ""
        }
    ],
    "GPIO_SODAVILLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( PCI ) ) && (X86 && OF)",
            "restrict": ""
        }
    ],
    "GPIO_74X164": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_MAX3191X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) )",
            "restrict": ""
        }
    ],
    "GPIO_MAX7301": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) )",
            "restrict": ""
        }
    ],
    "GPIO_MC33880": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) )",
            "restrict": ""
        }
    ],
    "GPIO_PISOSR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) )",
            "restrict": ""
        }
    ],
    "GPIO_XRA1403": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) )",
            "restrict": ""
        }
    ],
    "GPIO_MOXTET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( SPI_MASTER ) ) && (MOXTET)",
            "restrict": ""
        }
    ],
    "GPIO_VIPERBOARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && ( ( USB ) ) && (MFD_VIPERBOARD)",
            "restrict": ""
        }
    ],
    "GPIO_AGGREGATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB )",
            "restrict": ""
        }
    ],
    "GPIO_MOCKUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB )",
            "restrict": ""
        }
    ],
    "GPIO_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "GPIO_SIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GPIOLIB )",
            "restrict": ""
        }
    ],
    "W1": [
        {
            "type": "tristate",
            "rev_select": "BATTERY_DS2780 || BATTERY_DS2781",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "W1_CON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( W1 ) && (CONNECTOR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "W1_MASTER_MATROX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (PCI)",
            "restrict": ""
        }
    ],
    "W1_MASTER_DS2490": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (USB)",
            "restrict": ""
        }
    ],
    "W1_MASTER_DS2482": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (I2C)",
            "restrict": ""
        }
    ],
    "W1_MASTER_MXC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "W1_MASTER_DS1WM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_MASTER_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HDQ_MASTER_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (ARCH_OMAP)",
            "restrict": ""
        }
    ],
    "W1_MASTER_SGI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_THERM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_SMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2405": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2408": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2408_READBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( W1 ) && (W1_SLAVE_DS2408)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "W1_SLAVE_DS2413": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2406": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2423": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2805": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2430": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2431": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2433": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2433_CRC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( W1 ) && (W1_SLAVE_DS2433)",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2438": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS250X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2780": [
        {
            "type": "tristate",
            "rev_select": "BATTERY_DS2780",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS2781": [
        {
            "type": "tristate",
            "rev_select": "BATTERY_DS2781",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS28E04": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 )",
            "restrict": ""
        }
    ],
    "W1_SLAVE_DS28E17": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( W1 ) && (I2C)",
            "restrict": ""
        }
    ],
    "POWER_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "POWER_RESET_AS3722": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (MFD_AS3722)",
            "restrict": ""
        }
    ],
    "POWER_RESET_AT91_POWEROFF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_AT91)",
            "restrict": "( SOC_AT91SAM9 || SOC_SAMA5 )[!(y)]"
        }
    ],
    "POWER_RESET_AT91_RESET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_AT91)",
            "restrict": "( SOC_AT91SAM9 || SOC_SAM9X60 || SOC_SAMA5 )[!(y)]"
        }
    ],
    "POWER_RESET_AT91_SAMA5D2_SHDWC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_AT91)",
            "restrict": "( SOC_SAM9X60 || SOC_SAMA5 )[!(y)]"
        }
    ],
    "POWER_RESET_ATC260X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (MFD_ATC260X)",
            "restrict": ""
        }
    ],
    "POWER_RESET_AXXIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_AXXIA)",
            "restrict": ""
        }
    ],
    "POWER_RESET_BRCMKONA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARM || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_MOBILE )[!(y)]"
        }
    ],
    "POWER_RESET_BRCMSTB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARM || ARM64 || MIPS || COMPILE_TEST) && (MFD_SYSCON)",
            "restrict": "( ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "POWER_RESET_GEMINI_POWEROFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_GEMINI || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "POWER_RESET_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "POWER_RESET_GPIO_RESTART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "POWER_RESET_HISI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_HISI)",
            "restrict": ""
        }
    ],
    "POWER_RESET_LINKSTATION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_MVEBU || COMPILE_TEST) && (OF_MDIO && PHYLIB)",
            "restrict": ""
        }
    ],
    "POWER_RESET_MSM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "POWER_RESET_QCOM_PON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_QCOM) && (MFD_SPMI_PMIC)",
            "restrict": ""
        }
    ],
    "POWER_RESET_OCELOT_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (MSCC_OCELOT || ARCH_SPARX5 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "POWER_RESET_OXNAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_OXNAS)",
            "restrict": "( MACH_OX820 )[!(y)]"
        }
    ],
    "POWER_RESET_PIIX4_POWEROFF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (PCI) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "POWER_RESET_LTC2952": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "POWER_RESET_MT6323": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (MFD_MT6397)",
            "restrict": ""
        }
    ],
    "POWER_RESET_QNAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF_GPIO && PLAT_ORION)",
            "restrict": ""
        }
    ],
    "POWER_RESET_REGULATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF && REGULATOR)",
            "restrict": ""
        }
    ],
    "POWER_RESET_RESTART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET )",
            "restrict": ""
        }
    ],
    "POWER_RESET_ST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_STI)",
            "restrict": ""
        }
    ],
    "POWER_RESET_TPS65086": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (MFD_TPS65086)",
            "restrict": ""
        }
    ],
    "POWER_RESET_VERSATILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARM) && (MFD_SYSCON) && (OF)",
            "restrict": ""
        }
    ],
    "POWER_RESET_VEXPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARM || ARM64) && (VEXPRESS_CONFIG = y)",
            "restrict": ""
        }
    ],
    "POWER_RESET_XGENE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARM64)",
            "restrict": ""
        }
    ],
    "POWER_RESET_KEYSTONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_KEYSTONE || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "POWER_RESET_SYSCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "POWER_RESET_SYSCON_POWEROFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "POWER_RESET_RMOBILE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (ARCH_RMOBILE || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "REBOOT_MODE": [
        {
            "type": "tristate",
            "rev_select": "POWER_RESET_QCOM_PON || SYSCON_REBOOT_MODE || NVMEM_REBOOT_MODE",
            "dep": "( POWER_RESET )",
            "restrict": ""
        }
    ],
    "SYSCON_REBOOT_MODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "POWER_RESET_SC27XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (MFD_SC27XX_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NVMEM_REBOOT_MODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (OF)",
            "restrict": ""
        }
    ],
    "POWER_MLXBF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_RESET ) && (( GPIO_MLXBF2 && ACPI ))",
            "restrict": ""
        }
    ],
    "POWER_SUPPLY": [
        {
            "type": "bool",
            "rev_select": "ACPI_AC || ACPI_BATTERY || ACPI_SBS || OLPC_XO1_SCI || OLPC_XO15_SCI || AB8500_CORE || DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || HID_BATTERY_STRENGTH || HID_ASUS || HID_LOGITECH_HIDPP || HID_NINTENDO || HID_PLAYSTATION || HID_SONY || HID_STEAM || HID_WACOM || HID_WIIMOTE || USB_CONN_GPIO || APPLE_MFI_FASTCHARGE || TYPEC_TCPM || TYPEC_TPS6598X || DELL_LAPTOP",
            "dep": "",
            "restrict": ""
        }
    ],
    "POWER_SUPPLY_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_SUPPLY )",
            "restrict": ""
        }
    ],
    "POWER_SUPPLY_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (HWMON = y || HWMON = POWER_SUPPLY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PDA_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (! S390)",
            "restrict": ""
        }
    ],
    "APM_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (APM_EMULATION)",
            "restrict": ""
        }
    ],
    "GENERIC_ADC_BATTERY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (IIO)",
            "restrict": ""
        }
    ],
    "IP5XXX_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX8925_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MAX8925)",
            "restrict": ""
        }
    ],
    "WM831X_BACKUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "WM831X_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "WM8350_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "TEST_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY )",
            "restrict": ""
        }
    ],
    "BATTERY_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "CHARGER_ADP5061": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "BATTERY_ACT8945A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_ACT8945A || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BATTERY_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_CPCAP && IIO)",
            "restrict": "( MFD_CPCAP )[!(y)]"
        }
    ],
    "BATTERY_CW2015": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "BATTERY_DS2760": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (W1)",
            "restrict": ""
        }
    ],
    "BATTERY_DS2780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BATTERY_DS2781": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BATTERY_DS2782": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "BATTERY_LEGO_EV3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (OF && IIO && GPIOLIB && ( ARCH_DAVINCI_DA850 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "BATTERY_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (PPC32 && ADB_PMU)",
            "restrict": ""
        }
    ],
    "BATTERY_OLPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (OLPC_EC)",
            "restrict": ""
        }
    ],
    "BATTERY_SAMSUNG_SDI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_SUPPLY )",
            "restrict": ""
        }
    ],
    "BATTERY_TOSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MACH_TOSA && MFD_TC6393XB && TOUCHSCREEN_WM97XX)",
            "restrict": ""
        }
    ],
    "BATTERY_COLLIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (SA1100_COLLIE && MCP_UCB1200)",
            "restrict": ""
        }
    ],
    "BATTERY_INGENIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MIPS || COMPILE_TEST) && (INGENIC_ADC)",
            "restrict": ""
        }
    ],
    "BATTERY_IPAQ_MICRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_IPAQ_MICRO)",
            "restrict": ""
        }
    ],
    "BATTERY_WM97XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (TOUCHSCREEN_WM97XX = y)",
            "restrict": ""
        }
    ],
    "BATTERY_SBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_SBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "MANAGER_SBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C && I2C_MUX && GPIOLIB)",
            "restrict": ""
        }
    ],
    "BATTERY_BQ27XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY )",
            "restrict": ""
        }
    ],
    "BATTERY_BQ27XXX_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (BATTERY_BQ27XXX) && (I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BATTERY_BQ27XXX_HDQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (BATTERY_BQ27XXX) && (W1)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BATTERY_BQ27XXX_DT_UPDATES_NVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (BATTERY_BQ27XXX_I2C)",
            "restrict": ""
        }
    ],
    "BATTERY_DA9030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (PMIC_DA903X)",
            "restrict": ""
        }
    ],
    "BATTERY_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "CHARGER_DA9150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_DA9150) && (DA9150_GPADC) && (IIO)",
            "restrict": ""
        }
    ],
    "BATTERY_DA9150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_DA9150)",
            "restrict": ""
        }
    ],
    "CHARGER_AXP20X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_AXP20X) && (AXP20X_ADC) && (IIO)",
            "restrict": ""
        }
    ],
    "BATTERY_AXP20X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_AXP20X) && (AXP20X_ADC) && (IIO)",
            "restrict": ""
        }
    ],
    "AXP20X_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_AXP20X) && (IIO)",
            "restrict": ""
        }
    ],
    "AXP288_CHARGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_AXP20X && EXTCON_AXP288 && IOSF_MBI && ACPI)",
            "restrict": ""
        }
    ],
    "AXP288_FUEL_GAUGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_AXP20X && IIO && IOSF_MBI && ACPI)",
            "restrict": ""
        }
    ],
    "BATTERY_MAX17040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "BATTERY_MAX17042": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "BATTERY_MAX1721X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (W1)",
            "restrict": ""
        }
    ],
    "BATTERY_Z2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C && MACH_ZIPIT2)",
            "restrict": ""
        }
    ],
    "BATTERY_S3C_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (S3C_ADC)",
            "restrict": ""
        }
    ],
    "BATTERY_TWL4030_MADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (TWL4030_MADC)",
            "restrict": ""
        }
    ],
    "CHARGER_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_88PM860X && BATTERY_88PM860X)",
            "restrict": ""
        }
    ],
    "CHARGER_PCF50633": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "BATTERY_RX51": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (TWL4030_MADC)",
            "restrict": ""
        }
    ],
    "CHARGER_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_CPCAP && IIO) && (OMAP_USB2 || ( ! OMAP_USB2 && COMPILE_TEST ))",
            "restrict": "( MFD_CPCAP )[!(y)]"
        }
    ],
    "CHARGER_ISP1704": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (USB_PHY) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX8903": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY )",
            "restrict": ""
        }
    ],
    "CHARGER_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (IIO && TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "CHARGER_LP8727": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_LP8788": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_LP8788) && (LP8788_ADC) && (IIO)",
            "restrict": ""
        }
    ],
    "CHARGER_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_MANAGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "CHARGER_LT3651": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "CHARGER_LTC4162L": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX14577": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MAX14577)",
            "restrict": ""
        }
    ],
    "CHARGER_DETECTOR_MAX14656": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX77650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MAX77650)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX77693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MAX77693)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX77976": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX8997": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MAX8997 && REGULATOR_MAX8997) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "CHARGER_MAX8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MAX8998 && REGULATOR_MAX8998)",
            "restrict": ""
        }
    ],
    "CHARGER_MP2629": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MP2629) && (MP2629_ADC) && (IIO)",
            "restrict": ""
        }
    ],
    "CHARGER_MT6360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_MT6360) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "CHARGER_QCOM_SMBB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_SPMI_PMIC || COMPILE_TEST) && (OF) && (EXTCON) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ2415X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ24190": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (EXTCON) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ24257": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ24735": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ2515X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ25890": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ25980": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_BQ256XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_SMB347": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "CHARGER_TPS65090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_TPS65090)",
            "restrict": ""
        }
    ],
    "CHARGER_TPS65217": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_TPS65217)",
            "restrict": ""
        }
    ],
    "BATTERY_GAUGE_LTC2941": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "AB8500_BM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (AB8500_CORE && AB8500_GPADC && ( IIO = y ) && OF)",
            "restrict": ""
        }
    ],
    "BATTERY_GOLDFISH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BATTERY_RT5033": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_RT9455": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHARGER_CROS_USBPD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (CROS_USBPD_NOTIFY)",
            "restrict": ""
        }
    ],
    "CHARGER_CROS_PCHG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_CROS_EC_DEV)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CHARGER_SC2731": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_SC27XX_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FUEL_GAUGE_SC27XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_SC27XX_PMIC || COMPILE_TEST) && (IIO)",
            "restrict": ""
        }
    ],
    "CHARGER_UCS1002": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C) && (OF) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "CHARGER_BD99954": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "CHARGER_WILCO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (WILCO_EC)",
            "restrict": ""
        }
    ],
    "RN5T618_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_RN5T618) && (RN5T618_ADC) && (IIO)",
            "restrict": ""
        }
    ],
    "BATTERY_ACER_A500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (MFD_ACER_A500_EC)",
            "restrict": ""
        }
    ],
    "BATTERY_SURFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (SURFACE_AGGREGATOR_REGISTRY)",
            "restrict": ""
        }
    ],
    "CHARGER_SURFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (SURFACE_AGGREGATOR_REGISTRY)",
            "restrict": ""
        }
    ],
    "BATTERY_UG3105": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWER_SUPPLY ) && (I2C)",
            "restrict": ""
        }
    ],
    "HWMON": [
        {
            "type": "tristate",
            "rev_select": "HABANA_AI || DRM_RADEON || DRM_AMDGPU || CPU_HWMON || EEEPC_LAPTOP || HP_WMI || THINKPAD_ACPI || NTB_IDT",
            "dep": "(HAS_IOMEM)",
            "restrict": "( VIDEO_I2C )"
        }
    ],
    "HWMON_VID": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_ADM1025 || SENSORS_ADM1026 || SENSORS_ADM9240 || SENSORS_ADT7475 || SENSORS_ASB100 || SENSORS_ATXP1 || SENSORS_GL520SM || SENSORS_IT87 || SENSORS_LM78 || SENSORS_LM85 || SENSORS_LM87 || SENSORS_LM93 || SENSORS_PC87360 || SENSORS_NCT6775 || SENSORS_DME1737 || SENSORS_SMSC47M192 || SENSORS_VIA_CPUTEMP || SENSORS_VT1211 || SENSORS_VT8231 || SENSORS_W83781D || SENSORS_W83791D || SENSORS_W83793 || SENSORS_W83627HF || SENSORS_W83627EHF",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "HWMON_DEBUG_CHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_ABITUGURU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86 && DMI)",
            "restrict": ""
        }
    ],
    "SENSORS_ABITUGURU3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86 && DMI)",
            "restrict": ""
        }
    ],
    "SENSORS_AD7314": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI)",
            "restrict": ""
        }
    ],
    "SENSORS_AD7414": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_AD7418": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1021": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C) && (SENSORS_LM90 = n)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1025": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1026": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1029": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1031": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1177": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM9240": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7X10": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_ADT7310 || SENSORS_ADT7410",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7310": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7411": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7462": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7470": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADT7475": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_AHT10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_AQUACOMPUTER_D5NEXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "SENSORS_AS370": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_ASC7621": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_AXI_FAN_CONTROL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_K8TEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SENSORS_K10TEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86 && PCI && AMD_NB)",
            "restrict": ""
        }
    ],
    "SENSORS_FAM15H_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86 && PCI && CPU_SUP_AMD)",
            "restrict": ""
        }
    ],
    "SENSORS_APPLESMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (INPUT && X86)",
            "restrict": ""
        }
    ],
    "SENSORS_ARM_SCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (ARM_SCMI_PROTOCOL) && (THERMAL || ! THERMAL_OF)",
            "restrict": ""
        }
    ],
    "SENSORS_ARM_SCPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (ARM_SCPI_PROTOCOL) && (THERMAL || ! THERMAL_OF)",
            "restrict": ""
        }
    ],
    "SENSORS_ASB100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (( X86 || COMPILE_TEST ) && I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (THERMAL || THERMAL = n)",
            "restrict": ""
        }
    ],
    "SENSORS_ATXP1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_BT1_PVT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MIPS_BAIKAL_T1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_BT1_PVT_ALARMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && (SENSORS_BT1_PVT)",
            "restrict": ""
        }
    ],
    "SENSORS_CORSAIR_CPRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (HID)",
            "restrict": ""
        }
    ],
    "SENSORS_CORSAIR_PSU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (HID)",
            "restrict": ""
        }
    ],
    "SENSORS_DRIVETEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SCSI && ATA)",
            "restrict": ""
        }
    ],
    "SENSORS_DS620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_DS1621": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_DELL_SMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86)",
            "restrict": ""
        }
    ],
    "I8K": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && (SENSORS_DELL_SMM) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "SENSORS_DA9052_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "SENSORS_DA9055": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_DA9055)",
            "restrict": ""
        }
    ],
    "SENSORS_I5K_AMB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PCI)",
            "restrict": ""
        }
    ],
    "SENSORS_SPARX5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (ARCH_SPARX5 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_F71805F": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_F71882FG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_F75375S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_GSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_GATEWORKS_GSC)",
            "restrict": ""
        }
    ],
    "SENSORS_MC13783_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "SENSORS_FSCHMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (( X86 || COMPILE_TEST ) && I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_FTSTEUTATES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C && WATCHDOG)",
            "restrict": ""
        }
    ],
    "SENSORS_GL518SM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_GL520SM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_G760A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_G762": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_GPIO_FAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (OF_GPIO) && (GPIOLIB || COMPILE_TEST) && (THERMAL || THERMAL = n)",
            "restrict": ""
        }
    ],
    "SENSORS_HIH6130": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_IBMAEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (IPMI_HANDLER)",
            "restrict": ""
        }
    ],
    "SENSORS_IBMPEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (IPMI_HANDLER)",
            "restrict": ""
        }
    ],
    "SENSORS_IBMPOWERNV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PPC_POWERNV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SENSORS_IIO_HWMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (IIO)",
            "restrict": ""
        }
    ],
    "SENSORS_I5500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SENSORS_CORETEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86)",
            "restrict": ""
        }
    ],
    "SENSORS_IT87": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_JC42": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_POWR1220": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LAN966X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SOC_LAN966 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_LINEAGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LOCHNAGAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_LOCHNAGAR)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2945": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2947": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_LTC2947_I2C || SENSORS_LTC2947_SPI",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2947_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2947_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2990": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2992": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC4151": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC4215": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC4222": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC4245": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC4260": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC4261": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LTQ_CPUTEMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && (SOC_XWAY)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX1111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX127": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX16065": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX1619": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX1668": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX197": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX31722": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX31730": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX6620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX6621": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX6639": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX6642": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C) && (SENSORS_LM90 = n)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX6650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C) && (THERMAL || THERMAL = n)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX6697": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MAX31790": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MCP3021": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MLXREG_FAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MELLANOX_PLATFORM)",
            "restrict": ""
        }
    ],
    "SENSORS_TC654": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TPS23861": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_MENF21BMC_HWMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_MENF21BMC)",
            "restrict": ""
        }
    ],
    "SENSORS_MR75203": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_ADCXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SENSORS_LM63": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM70": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SENSORS_LM73": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM75": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM77": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM78": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM80": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM83": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM85": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM87": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM90": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM92": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM93": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM95234": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM95241": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM95245": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_PC87360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_PC87427": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_NTC_THERMISTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (IIO) && (THERMAL || ! THERMAL_OF)",
            "restrict": ""
        }
    ],
    "SENSORS_NCT6683": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_NCT6775_CORE": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_NCT6775 || SENSORS_NCT6775_I2C",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_NCT6775": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC) && (ACPI_WMI || ACPI_WMI = n)",
            "restrict": ""
        }
    ],
    "SENSORS_NCT6775_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_NCT7802": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_NCT7904": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C && WATCHDOG)",
            "restrict": ""
        }
    ],
    "SENSORS_NPCM7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_NSA320": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (GPIOLIB && OF) && (MACH_KIRKWOOD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_NZXT_KRAKEN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "SENSORS_NZXT_SMART2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "SENSORS_OCC_P8_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_OCC_P9_SBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (FSI_OCC) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_OCC": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_OCC_P8_I2C || SENSORS_OCC_P9_SBE",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_PCF8591": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_PECI_CPUTEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PECI)",
            "restrict": ""
        }
    ],
    "SENSORS_PECI_DIMMTEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PECI)",
            "restrict": ""
        }
    ],
    "SENSORS_PECI": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_PECI_CPUTEMP || SENSORS_PECI_DIMMTEMP",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "PMBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_PMBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SENSORS_ADM1266": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SENSORS_ADM1275": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_BEL_PFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_BPA_RS600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_DELTA_AHE50DC_FAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_FSP_3Y": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_IBM_CFFPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "SENSORS_DPS920AB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_INSPUR_IPSPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_IR35221": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_IR36021": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_IR38064": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_IR38064_REGULATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (SENSORS_IR38064 && REGULATOR)",
            "restrict": ""
        }
    ],
    "SENSORS_IRPS5401": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_ISL68137": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_LM25066": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_LM25066_REGULATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (SENSORS_LM25066 && REGULATOR)",
            "restrict": ""
        }
    ],
    "SENSORS_LT7182S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2978": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_LTC2978_REGULATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (SENSORS_LTC2978 && REGULATOR)",
            "restrict": ""
        }
    ],
    "SENSORS_LTC3815": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX15301": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX16064": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX16601": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX20730": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX20751": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX31785": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX34440": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MAX8688": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MP2888": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MP2975": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_MP5023": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_PIM4328": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_PLI1209BC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_PLI1209BC_REGULATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (SENSORS_PLI1209BC && REGULATOR)",
            "restrict": ""
        }
    ],
    "SENSORS_PM6764TR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_PXE1610": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_Q54SJ108A2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_STPDDC60": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_TPS40422": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_TPS53679": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_UCD9000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_UCD9200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_XDPE152": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_XDPE122": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_XDPE122_REGULATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS ) && (SENSORS_XDPE122 && REGULATOR)",
            "restrict": ""
        }
    ],
    "SENSORS_ZL6100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( PMBUS )",
            "restrict": ""
        }
    ],
    "SENSORS_PWM_FAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (( PWM && OF ) || COMPILE_TEST) && (THERMAL || THERMAL = n)",
            "restrict": ""
        }
    ],
    "SENSORS_RASPBERRYPI_HWMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (RASPBERRYPI_FIRMWARE || ( COMPILE_TEST && ! RASPBERRYPI_FIRMWARE ))",
            "restrict": ""
        }
    ],
    "SENSORS_SL28CPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_SL28CPLD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_SBTSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SBRMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SHT15": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_SHT21": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SHT3x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SHT4x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SHTC1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_S3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (S3C_ADC)",
            "restrict": ""
        }
    ],
    "SENSORS_S3C_RAW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && (SENSORS_S3C)",
            "restrict": ""
        }
    ],
    "SENSORS_SIS5595": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PCI)",
            "restrict": ""
        }
    ],
    "SENSORS_SY7636A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_DME1737": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C && ! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_EMC1403": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_EMC2103": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_EMC6W201": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SMSC47M1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_SMSC47M192": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SMSC47B397": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_SCH56XX_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_SCH5627 || SENSORS_SCH5636",
            "dep": "( HWMON )",
            "restrict": ""
        }
    ],
    "SENSORS_SCH5627": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC && WATCHDOG)",
            "restrict": ""
        }
    ],
    "SENSORS_SCH5636": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC && WATCHDOG)",
            "restrict": ""
        }
    ],
    "SENSORS_STTS751": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_SMM665": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADC128D818": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADS7828": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_ADS7871": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPI)",
            "restrict": ""
        }
    ],
    "SENSORS_AMC6821": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_INA209": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_INA2XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_INA238": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_INA3221": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TC74": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_THMC50": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP103": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP108": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP401": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP421": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP464": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TMP513": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_VEXPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (VEXPRESS_CONFIG)",
            "restrict": ""
        }
    ],
    "SENSORS_VIA_CPUTEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (X86)",
            "restrict": ""
        }
    ],
    "SENSORS_VIA686A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PCI)",
            "restrict": ""
        }
    ],
    "SENSORS_VT1211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_VT8231": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (PCI)",
            "restrict": ""
        }
    ],
    "SENSORS_W83773G": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83781D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83791D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83792D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83793": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83795": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83795_FANCTRL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HWMON ) && (SENSORS_W83795)",
            "restrict": ""
        }
    ],
    "SENSORS_W83L785TS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83L786NG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_W83627HF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_W83627EHF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (! PPC)",
            "restrict": ""
        }
    ],
    "SENSORS_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "SENSORS_WM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "SENSORS_ULTRA45": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "SENSORS_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (XGENE_SLIMPRO_MBOX || PCC)",
            "restrict": ""
        }
    ],
    "SENSORS_INTEL_M10_BMC_HWMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && (MFD_INTEL_M10_BMC)",
            "restrict": ""
        }
    ],
    "SENSORS_ACPI_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( ACPI )",
            "restrict": ""
        }
    ],
    "SENSORS_ATK0110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( ACPI ) && (X86)",
            "restrict": ""
        }
    ],
    "SENSORS_ASUS_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( ACPI ) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "SENSORS_ASUS_WMI_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( ACPI ) && (ACPI_WMI && SENSORS_ASUS_EC = n)",
            "restrict": ""
        }
    ],
    "SENSORS_ASUS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWMON ) && ( ACPI ) && (X86)",
            "restrict": ""
        }
    ],
    "THERMAL": [
        {
            "type": "bool",
            "rev_select": "ACPI_VIDEO || ACPI_PROCESSOR || ACPI_THERMAL || AB8500_BM || DRM_NOUVEAU[ACPI && X86] || DRM_ETNAVIV[DRM_ETNAVIV_THERMAL] || MMC_SDHCI_OMAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "THERMAL_NETLINK": [
        {
            "type": "bool",
            "rev_select": "INTEL_HFI_THERMAL",
            "dep": "( THERMAL ) && (NET)",
            "restrict": ""
        }
    ],
    "THERMAL_STATISTICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL )",
            "restrict": ""
        }
    ],
    "THERMAL_EMERGENCY_POWEROFF_DELAY_MS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( THERMAL )",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "THERMAL_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && (HWMON = y || HWMON = THERMAL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "THERMAL_OF": [
        {
            "type": "bool",
            "rev_select": "AB8500_BM",
            "dep": "( THERMAL ) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "THERMAL_WRITABLE_TRIPS": [
        {
            "type": "bool",
            "rev_select": "X86_PKG_TEMP_THERMAL || INTEL_SOC_DTS_THERMAL",
            "dep": "( THERMAL )",
            "restrict": ""
        }
    ],
    "THERMAL_DEFAULT_GOV_STEP_WISE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( THERMAL_DEFAULT_GOV_STEP_WISE &&  !THERMAL_DEFAULT_GOV_FAIR_SHARE &&  !THERMAL_DEFAULT_GOV_USER_SPACE &&  !THERMAL_DEFAULT_GOV_POWER_ALLOCATOR )",
            "restrict": ""
        }
    ],
    "THERMAL_DEFAULT_GOV_FAIR_SHARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( THERMAL_DEFAULT_GOV_FAIR_SHARE &&  !THERMAL_DEFAULT_GOV_STEP_WISE &&  !THERMAL_DEFAULT_GOV_USER_SPACE &&  !THERMAL_DEFAULT_GOV_POWER_ALLOCATOR )",
            "restrict": ""
        }
    ],
    "THERMAL_DEFAULT_GOV_USER_SPACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( THERMAL_DEFAULT_GOV_USER_SPACE &&  !THERMAL_DEFAULT_GOV_STEP_WISE &&  !THERMAL_DEFAULT_GOV_FAIR_SHARE &&  !THERMAL_DEFAULT_GOV_POWER_ALLOCATOR )",
            "restrict": ""
        }
    ],
    "THERMAL_DEFAULT_GOV_POWER_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && (THERMAL_GOV_POWER_ALLOCATOR) && ( THERMAL_DEFAULT_GOV_POWER_ALLOCATOR &&  !THERMAL_DEFAULT_GOV_STEP_WISE &&  !THERMAL_DEFAULT_GOV_FAIR_SHARE &&  !THERMAL_DEFAULT_GOV_USER_SPACE )",
            "restrict": ""
        }
    ],
    "THERMAL_GOV_FAIR_SHARE": [
        {
            "type": "bool",
            "rev_select": "THERMAL_DEFAULT_GOV_FAIR_SHARE",
            "dep": "( THERMAL )",
            "restrict": ""
        }
    ],
    "THERMAL_GOV_STEP_WISE": [
        {
            "type": "bool",
            "rev_select": "THERMAL_DEFAULT_GOV_STEP_WISE",
            "dep": "( THERMAL )",
            "restrict": ""
        }
    ],
    "THERMAL_GOV_BANG_BANG": [
        {
            "type": "bool",
            "rev_select": "ACERHDF",
            "dep": "( THERMAL )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "THERMAL_GOV_USER_SPACE": [
        {
            "type": "bool",
            "rev_select": "THERMAL_DEFAULT_GOV_USER_SPACE || X86_PKG_TEMP_THERMAL || INT340X_THERMAL",
            "dep": "( THERMAL )",
            "restrict": ""
        }
    ],
    "THERMAL_GOV_POWER_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && (ENERGY_MODEL)",
            "restrict": ""
        }
    ],
    "CPU_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && (THERMAL_OF)",
            "restrict": ""
        }
    ],
    "CPU_FREQ_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( CPU_THERMAL ) && (CPU_FREQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CPU_IDLE_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( CPU_THERMAL ) && (IDLE_INJECT)",
            "restrict": ""
        }
    ],
    "DEVFREQ_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && (PM_DEVFREQ) && (PM_OPP)",
            "restrict": ""
        }
    ],
    "THERMAL_EMULATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL )",
            "restrict": ""
        }
    ],
    "THERMAL_MMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "HISI_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_HISI || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMX_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_MXC || COMPILE_TEST) && (NVMEM || ! NVMEM) && (MFD_SYSCON) && (OF)",
            "restrict": ""
        }
    ],
    "IMX_SC_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (IMX_SCU) && (OF)",
            "restrict": ""
        }
    ],
    "IMX8MM_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_MXC || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "K3_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MAX77620_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (MFD_MAX77620) && (OF)",
            "restrict": ""
        }
    ],
    "QORIQ_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (THERMAL_OF && HAS_IOMEM) && (PPC_E500MC || SOC_LS1021A || ARCH_LAYERSCAPE || ( ARCH_MXC && ARM64 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPEAR_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (PLAT_SPEAR || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "SUN8I_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM) && (NVMEM) && (OF) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (RESET_CONTROLLER) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RCAR_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_RENESAS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RCAR_GEN3_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_RENESAS || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "RZG2L_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_RENESAS || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "KIRKWOOD_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (MACH_KIRKWOOD || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "DOVE_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_DOVE || MACH_DOVE || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "DB8500_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (MFD_DB8500_PRCMU && OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARMADA_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_MVEBU || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "DA9062_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (MFD_DA9062 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "MTK_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_MEDIATEK || COMPILE_TEST) && (HAS_IOMEM) && (NVMEM || NVMEM = n) && (RESET_CONTROLLER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AMLOGIC_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (OF && ARCH_MESON)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "INTEL_POWERCLAMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86) && (CPU_SUP_INTEL)",
            "restrict": ""
        }
    ],
    "X86_THERMAL_VECTOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86 && CPU_SUP_INTEL && X86_LOCAL_APIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_PKG_TEMP_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86_THERMAL_VECTOR)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "INTEL_SOC_DTS_IOSF_CORE": [
        {
            "type": "tristate",
            "rev_select": "INTEL_SOC_DTS_THERMAL || INT340X_THERMAL",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_SOC_DTS_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86 && PCI && ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_QUARK_DTS_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86_INTEL_QUARK)",
            "restrict": ""
        }
    ],
    "INT340X_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86_64 && ACPI && PCI)",
            "restrict": ""
        }
    ],
    "ACPI_THERMAL_REL": [
        {
            "type": "tristate",
            "rev_select": "INT340X_THERMAL",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (ACPI)",
            "restrict": ""
        }
    ],
    "INT3406_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && ( INT340X_THERMAL ) && (ACPI_VIDEO)",
            "restrict": ""
        }
    ],
    "PROC_THERMAL_MMIO_RAPL": [
        {
            "type": "tristate",
            "rev_select": "INT340X_THERMAL[POWERCAP]",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && ( INT340X_THERMAL )",
            "restrict": ""
        }
    ],
    "INTEL_BXT_PMIC_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86 && INTEL_SOC_PMIC_BXTWC && REGMAP)",
            "restrict": ""
        }
    ],
    "INTEL_PCH_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_TCC_COOLING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (X86)",
            "restrict": ""
        }
    ],
    "INTEL_MENLOW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (ACPI_THERMAL)",
            "restrict": ""
        }
    ],
    "INTEL_HFI_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( X86 || X86_INTEL_QUARK || COMPILE_TEST ) ) && (NET) && (CPU_SUP_INTEL) && (X86_THERMAL_VECTOR)",
            "restrict": ""
        }
    ],
    "BCM2711_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_BCM || ARCH_BRCMSTB || ARCH_BCM2835 || ARCH_BCM_IPROC || COMPILE_TEST ) ) && (ARCH_BCM2835 || COMPILE_TEST) && (THERMAL_OF && MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "BCM2835_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_BCM || ARCH_BRCMSTB || ARCH_BCM2835 || ARCH_BCM_IPROC || COMPILE_TEST ) ) && (ARCH_BCM2835 || COMPILE_TEST) && (HAS_IOMEM) && (THERMAL_OF)",
            "restrict": ""
        }
    ],
    "BRCMSTB_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_BCM || ARCH_BRCMSTB || ARCH_BCM2835 || ARCH_BCM_IPROC || COMPILE_TEST ) ) && (ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM_NS_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_BCM || ARCH_BRCMSTB || ARCH_BCM2835 || ARCH_BCM_IPROC || COMPILE_TEST ) ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_BCM_IPROC)]"
        }
    ],
    "BCM_SR_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_BCM || ARCH_BRCMSTB || ARCH_BCM2835 || ARCH_BCM_IPROC || COMPILE_TEST ) ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "TI_SOC_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_HAS_BANDGAP || COMPILE_TEST ) && ( HAS_IOMEM ) )",
            "restrict": "( MMC_SDHCI_OMAP )"
        }
    ],
    "TI_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_HAS_BANDGAP || COMPILE_TEST ) && ( HAS_IOMEM ) ) && (TI_SOC_THERMAL)",
            "restrict": ""
        }
    ],
    "OMAP3_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_HAS_BANDGAP || COMPILE_TEST ) && ( HAS_IOMEM ) ) && (TI_SOC_THERMAL) && (ARCH_OMAP3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP4_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_HAS_BANDGAP || COMPILE_TEST ) && ( HAS_IOMEM ) ) && (TI_SOC_THERMAL) && (ARCH_OMAP4 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP5_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_HAS_BANDGAP || COMPILE_TEST ) && ( HAS_IOMEM ) ) && (TI_SOC_THERMAL) && (SOC_OMAP5 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRA752_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_HAS_BANDGAP || COMPILE_TEST ) && ( HAS_IOMEM ) ) && (TI_SOC_THERMAL) && (SOC_DRA7XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EXYNOS_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_EXYNOS || COMPILE_TEST ) ) && (THERMAL_OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ST_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "ST_THERMAL_SYSCFG || ST_THERMAL_MEMMAP",
            "dep": "( THERMAL ) && ( ( ( ARCH_STI || ARCH_STM32 ) && OF ) )",
            "restrict": ""
        }
    ],
    "ST_THERMAL_SYSCFG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_STI || ARCH_STM32 ) && OF ) )",
            "restrict": ""
        }
    ],
    "ST_THERMAL_MEMMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_STI || ARCH_STM32 ) && OF ) )",
            "restrict": ""
        }
    ],
    "STM32_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_STI || ARCH_STM32 ) && OF ) ) && (MACH_STM32MP157)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA_SOCTHERM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_TEGRA || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "TEGRA_BPMP_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_TEGRA || COMPILE_TEST ) ) && (TEGRA_BPMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TEGRA30_TSENSOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ARCH_TEGRA || COMPILE_TEST ) ) && (ARCH_TEGRA_3x_SOC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GENERIC_ADC_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (IIO)",
            "restrict": ""
        }
    ],
    "QCOM_TSENS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_QCOM && OF ) || COMPILE_TEST ) ) && (QCOM_QFPROM) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_SPMI_ADC_TM5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_QCOM && OF ) || COMPILE_TEST ) ) && (OF && SPMI && IIO)",
            "restrict": ""
        }
    ],
    "QCOM_SPMI_TEMP_ALARM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_QCOM && OF ) || COMPILE_TEST ) ) && (OF && SPMI && IIO)",
            "restrict": ""
        }
    ],
    "QCOM_LMH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && ( ( ( ARCH_QCOM && OF ) || COMPILE_TEST ) ) && (ARCH_QCOM && QCOM_SCM)",
            "restrict": ""
        }
    ],
    "UNIPHIER_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_UNIPHIER || COMPILE_TEST) && (THERMAL_OF && MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "SPRD_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KHADAS_MCU_FAN_THERMAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( THERMAL ) && (OF) && (MFD_KHADAS_MCU)",
            "restrict": ""
        }
    ],
    "WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "WATCHDOG_CORE": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_FTSTEUTATES || SENSORS_NCT7904 || SENSORS_SCH5627 || SENSORS_SCH5636 || SOFT_WATCHDOG || BD957XMUF_WATCHDOG || DA9052_WATCHDOG || DA9055_WATCHDOG || DA9063_WATCHDOG || DA9062_WATCHDOG || GPIO_WATCHDOG || MENF21BMC_WATCHDOG || MENZ069_WATCHDOG || WDAT_WDT || WM831X_WATCHDOG || WM8350_WATCHDOG || XILINX_WATCHDOG || ZIIRAVE_WATCHDOG || RAVE_SP_WATCHDOG || MLX_WDT || SL28CPLD_WATCHDOG || ARM_SP805_WATCHDOG || ARM_SBSA_WATCHDOG || ARMADA_37XX_WATCHDOG || ASM9260_WATCHDOG || AT91SAM9X_WATCHDOG || SAMA5D4_WATCHDOG || CADENCE_WATCHDOG || FTWDT010_WATCHDOG || IXP4XX_WATCHDOG || S3C2410_WATCHDOG || DW_WATCHDOG || EP93XX_WATCHDOG || OMAP_WATCHDOG || PNX4008_WATCHDOG || DAVINCI_WATCHDOG || K3_RTI_WATCHDOG || ORION_WATCHDOG || RN5T618_WATCHDOG || SUNXI_WATCHDOG || NPCM7XX_WATCHDOG || TWL4030_WATCHDOG || STMP3XXX_RTC_WATCHDOG || TS4800_WATCHDOG || TS72XX_WATCHDOG || MAX63XX_WATCHDOG || MAX77620_WATCHDOG || IMX2_WDT || IMX_SC_WDT || IMX7ULP_WDT || DB500_WATCHDOG || RETU_WATCHDOG || ST_LPC_WATCHDOG || TEGRA_WATCHDOG || QCOM_WDT || MESON_GXBB_WATCHDOG || MESON_WATCHDOG || MEDIATEK_WATCHDOG || DIGICOLOR_WATCHDOG || ARM_SMC_WATCHDOG || LPC18XX_WATCHDOG || RENESAS_WDT || RENESAS_RZAWDT || RENESAS_RZN1WDT || RENESAS_RZG2LWDT || ASPEED_WATCHDOG || STM32_WATCHDOG || STPMIC1_WATCHDOG || UNIPHIER_WATCHDOG || RTD119X_WATCHDOG || REALTEK_OTTO_WDT || SPRD_WATCHDOG || PM8916_WATCHDOG || VISCONTI_WATCHDOG || MSC313E_WATCHDOG || APPLE_WATCHDOG || SUNPLUS_WATCHDOG || EBC_C384_WDT || F71808E_WDT || SP5100_TCO || I6300ESB_WDT || IE6XX_WDT || INTEL_MID_WATCHDOG || ITCO_WDT || IT87_WDT || HP_WATCHDOG || KEMPLD_WDT || TQMX86_WDT || VIA_WDT || W83627HF_WDT || INTEL_MEI_WDT || NI903X_WDT || NIC7018_WDT || SIEMENS_SIMATIC_IPC_WDT || BCM47XX_WDT || JZ4740_WDT || TXX9_WDT || OCTEON_WDT || BCM2835_WDT || BCM_KONA_WDT || BCM7038_WDT || IMGPDC_WDT || LANTIQ_WDT || LOONGSON1_WDT || RALINK_WDT || GXP_WATCHDOG || MT7621_WDT || PIC32_WDT || PIC32_DMT || 8xxx_WDT || BOOKE_WDT || MEN_A21_WDT || PSERIES_WDT || DIAG288_WATCHDOG || SH_WDT || WATCHDOG_SUN4V || XEN_WDT || KEEMBAY_WATCHDOG || RTC_DRV_ABX80X[WATCHDOG] || RTC_DRV_DS1307[WATCHDOG] || RTC_DRV_DS1374_WDT || RTC_DRV_PCF2127[WATCHDOG]",
            "dep": "( WATCHDOG )",
            "restrict": ""
        }
    ],
    "WATCHDOG_NOWAYOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG )",
            "restrict": ""
        }
    ],
    "WATCHDOG_HANDLE_BOOT_ENABLED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "WATCHDOG_OPEN_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( WATCHDOG )",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "WATCHDOG_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG )",
            "restrict": ""
        }
    ],
    "WATCHDOG_HRTIMER_PRETIMEOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG )",
            "restrict": ""
        }
    ],
    "WATCHDOG_PRETIMEOUT_GOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (WATCHDOG_CORE)",
            "restrict": ""
        }
    ],
    "WATCHDOG_PRETIMEOUT_GOV_SEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (WATCHDOG_PRETIMEOUT_GOV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "WATCHDOG_PRETIMEOUT_GOV_NOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && ( WATCHDOG_PRETIMEOUT_GOV ) && (WATCHDOG_CORE)",
            "restrict": "( WATCHDOG_CORE )[!(y)]"
        }
    ],
    "WATCHDOG_PRETIMEOUT_GOV_PANIC": [
        {
            "type": "tristate",
            "rev_select": "WATCHDOG_PRETIMEOUT_GOV_SEL[WATCHDOG_PRETIMEOUT_GOV_NOOP = n]",
            "dep": "( WATCHDOG ) && ( WATCHDOG_PRETIMEOUT_GOV ) && (WATCHDOG_CORE)",
            "restrict": "( WATCHDOG_CORE )[!(y)]"
        }
    ],
    "WATCHDOG_PRETIMEOUT_DEFAULT_GOV_NOOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && ( WATCHDOG_PRETIMEOUT_GOV ) && (WATCHDOG_PRETIMEOUT_GOV_NOOP) && ( WATCHDOG_PRETIMEOUT_DEFAULT_GOV_NOOP &&  !WATCHDOG_PRETIMEOUT_DEFAULT_GOV_PANIC )",
            "restrict": ""
        }
    ],
    "WATCHDOG_PRETIMEOUT_DEFAULT_GOV_PANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && ( WATCHDOG_PRETIMEOUT_GOV ) && (WATCHDOG_PRETIMEOUT_GOV_PANIC) && ( WATCHDOG_PRETIMEOUT_DEFAULT_GOV_PANIC &&  !WATCHDOG_PRETIMEOUT_DEFAULT_GOV_NOOP )",
            "restrict": ""
        }
    ],
    "SOFT_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG )",
            "restrict": ""
        }
    ],
    "SOFT_WATCHDOG_PRETIMEOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SOFT_WATCHDOG && WATCHDOG_PRETIMEOUT_GOV)",
            "restrict": ""
        }
    ],
    "BD957XMUF_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_ROHM_BD957XMUF)",
            "restrict": ""
        }
    ],
    "DA9052_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PMIC_DA9052 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DA9055_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_DA9055 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DA9063_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_DA9063 || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "DA9062_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_DA9062 || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "GPIO_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "GPIO_WATCHDOG_ARCH_INITCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (GPIO_WATCHDOG = y)",
            "restrict": ""
        }
    ],
    "MENF21BMC_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_MENF21BMC || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "MENZ069_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MCB)",
            "restrict": ""
        }
    ],
    "WDAT_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ACPI)",
            "restrict": ""
        }
    ],
    "WM831X_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "WM8350_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "XILINX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ZIIRAVE_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (I2C)",
            "restrict": ""
        }
    ],
    "RAVE_SP_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (RAVE_SP_CORE) && (NVMEM || ! NVMEM)",
            "restrict": ""
        }
    ],
    "MLX_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MELLANOX_PLATFORM)",
            "restrict": ""
        }
    ],
    "SL28CPLD_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_SL28CPLD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_SP805_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (( ARM || ARM64 || COMPILE_TEST ) && ARM_AMBA)",
            "restrict": ""
        }
    ],
    "ARM_SBSA_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARM64) && (ARM_ARCH_TIMER)",
            "restrict": ""
        }
    ],
    "ARMADA_37XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MVEBU || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ASM9260_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MACH_ASM9260 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "AT91RM9200_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (( SOC_AT91RM9200 && MFD_SYSCON ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AT91SAM9X_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SAMA5D4_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CADENCE_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "21285_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (FOOTBRIDGE)",
            "restrict": ""
        }
    ],
    "977_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (( FOOTBRIDGE && ARCH_NETWINDER ) || ( ARM && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FTWDT010_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARM || COMPILE_TEST)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "IXP4XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_IXP4XX)",
            "restrict": ""
        }
    ],
    "S3C2410_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_S3C24XX || ARCH_S3C64XX || ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SA1100_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_SA1100 || ARCH_PXA)",
            "restrict": ""
        }
    ],
    "DW_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "EP93XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_EP93XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_OMAP16XX || ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PNX4008_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_LPC32XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DAVINCI_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_DAVINCI || ARCH_KEYSTONE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "K3_RTI_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ORION_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_ORION5X || ARCH_DOVE || MACH_DOVE || ARCH_MVEBU || COMPILE_TEST) && (ARM)",
            "restrict": ""
        }
    ],
    "RN5T618_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_RN5T618 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SUNXI_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NPCM7XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_NPCM || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_NPCM7XX)]"
        }
    ],
    "TWL4030_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "STMP3XXX_RTC_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (RTC_DRV_STMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TS4800_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM && OF) && (SOC_IMX51 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TS72XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MACH_TS72XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MAX63XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MAX77620_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_MAX77620 || MFD_MAX77714 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IMX2_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MXC || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IMX_SC_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAVE_ARM_SMCCC) && (IMX_SCU)",
            "restrict": ""
        }
    ],
    "IMX7ULP_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DB500_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_DB8500_PRCMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RETU_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_RETU)",
            "restrict": ""
        }
    ],
    "MOXART_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MOXART || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ST_LPC_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_STI || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "TEGRA_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (( ARCH_TEGRA || COMPILE_TEST ) && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "QCOM_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MESON_GXBB_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MESON_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MEDIATEK_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "DIGICOLOR_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_DIGICOLOR || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_SMC_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARM || ARM64) && (OF) && (HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "LPC18XX_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_LPC18XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RENESAS_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RENESAS_RZAWDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RENESAS_RZN1WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RENESAS_RZG2LWDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ASPEED_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_ASPEED || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STM32_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_STM32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "STPMIC1_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_STPMIC1)",
            "restrict": ""
        }
    ],
    "UNIPHIER_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF && MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "RTD119X_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_REALTEK || COMPILE_TEST) && (OF)",
            "restrict": "( ARCH_REALTEK )[!(y)]"
        }
    ],
    "REALTEK_OTTO_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MACH_REALTEK_RTL || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": "( MACH_REALTEK_RTL )[!(y)]"
        }
    ],
    "SPRD_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PM8916_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (OF && MFD_SPMI_PMIC)",
            "restrict": ""
        }
    ],
    "VISCONTI_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_VISCONTI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MSC313E_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_MSTARV7 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "APPLE_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SUNPLUS_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_SUNPLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ACQUIRE_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "ADVANTECH_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "ALIM1535_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "ALIM7101_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PCI)",
            "restrict": ""
        }
    ],
    "EBC_C384_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "F71808E_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "SP5100_TCO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "GEODE_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (CS5535_MFGPT)",
            "restrict": ""
        }
    ],
    "SC520_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MELAN || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SBC_FITPC2_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "EUROTECH_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "IB700_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "IBMASR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "WAFER_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "I6300ESB_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PCI)",
            "restrict": ""
        }
    ],
    "IE6XX_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_MID_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86_INTEL_MID)",
            "restrict": ""
        }
    ],
    "ITCO_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (( X86 || IA64 ) && PCI) && (I2C || I2C = n) && (MFD_INTEL_PMC_BXT || ! MFD_INTEL_PMC_BXT)",
            "restrict": ""
        }
    ],
    "ITCO_VENDOR_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ITCO_WDT)",
            "restrict": ""
        }
    ],
    "IT8712F_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "IT87_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "HP_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "HPWDT_NMI_DECODING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HP_WATCHDOG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KEMPLD_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MFD_KEMPLD)",
            "restrict": ""
        }
    ],
    "SC1200_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "SCx200_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SCx200 && PCI)",
            "restrict": ""
        }
    ],
    "PC87413_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "NV_TCO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "RDC321X_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86_RDC321X || COMPILE_TEST) && (PCI)",
            "restrict": ""
        }
    ],
    "60XX_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "SBC8360_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86_32)",
            "restrict": ""
        }
    ],
    "SBC7240_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86_32 && ! UML)",
            "restrict": ""
        }
    ],
    "CPU5_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "SMSC_SCH311X_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "SMSC37B787_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "TQMX86_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "VIA_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "W83627HF_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "W83877F_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "W83977F_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "MACHZ_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "SBC_EPX_C3_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86)",
            "restrict": ""
        }
    ],
    "INTEL_MEI_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (INTEL_MEI && X86)",
            "restrict": ""
        }
    ],
    "NI903X_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "NIC7018_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "SIEMENS_SIMATIC_IPC_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SIEMENS_SIMATIC_IPC)",
            "restrict": ""
        }
    ],
    "M54xx_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (M548x)",
            "restrict": ""
        }
    ],
    "ATH79_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ATH79 || ( ARM && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "BCM47XX_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (BCM47XX || ARCH_BCM_5301X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RC32434_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MIKROTIK_RB532)",
            "restrict": ""
        }
    ],
    "INDYDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SGI_HAS_INDYDOG)",
            "restrict": ""
        }
    ],
    "JZ4740_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MIPS) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "WDT_MTX1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MIPS_MTX1 || ( MIPS && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SIBYTE_WDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (CPU_SB1)",
            "restrict": ""
        }
    ],
    "AR7_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (AR7 || ( MIPS && 32BIT && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "TXX9_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (CPU_TX49XX || ( MIPS && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "OCTEON_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (CAVIUM_OCTEON_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCM2835_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_BCM2835 || ( OF && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "BCM_KONA_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_BCM_MOBILE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM_KONA_WDT_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (BCM_KONA_WDT)",
            "restrict": ""
        }
    ],
    "BCM7038_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM) && (ARCH_BCM4908 || ARCH_BRCMSTB || BMIPS_GENERIC || BCM63XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IMGPDC_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (HAS_IOMEM) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LANTIQ_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (LANTIQ)",
            "restrict": ""
        }
    ],
    "LOONGSON1_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MACH_LOONGSON32)",
            "restrict": ""
        }
    ],
    "RALINK_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (RALINK)",
            "restrict": ""
        }
    ],
    "GXP_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_HPE_GXP)",
            "restrict": ""
        }
    ],
    "MT7621_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SOC_MT7620 || SOC_MT7621)",
            "restrict": ""
        }
    ],
    "PIC32_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MACH_PIC32 || ( MIPS && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PIC32_DMT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (MACH_PIC32 || ( MIPS && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "GEF_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (GE_FPGA)",
            "restrict": ""
        }
    ],
    "MPC5200_WDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PPC_MPC52xx || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "8xxx_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PPC_8xx || PPC_83xx || PPC_86xx || PPC_MPC512x)",
            "restrict": ""
        }
    ],
    "PIKA_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (WARP || ( PPC64 && COMPILE_TEST ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BOOKE_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (BOOKE || 4xx)",
            "restrict": ""
        }
    ],
    "BOOKE_WDT_DEFAULT_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (BOOKE_WDT)",
            "restrict": "( 0 63 )[PPC_FSL_BOOK3E] || ( 0 3 )[! PPC_FSL_BOOK3E] || ( 38 )[!(y) && (PPC_FSL_BOOK3E)] || ( 3 )[!(y) && (! PPC_FSL_BOOK3E)]"
        }
    ],
    "MEN_A21_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PSERIES_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "WATCHDOG_RTAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PPC_RTAS)",
            "restrict": ""
        }
    ],
    "DIAG288_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (S390)",
            "restrict": ""
        }
    ],
    "SH_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SUPERH && ( CPU_SH3 || CPU_SH4 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "WATCHDOG_CP1XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SPARC64 && PCI)",
            "restrict": ""
        }
    ],
    "WATCHDOG_RIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SPARC64 && PCI)",
            "restrict": ""
        }
    ],
    "WATCHDOG_SUN4V": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "XEN_WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (XEN)",
            "restrict": ""
        }
    ],
    "UML_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (UML || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCWATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ISA)",
            "restrict": ""
        }
    ],
    "MIXCOMWD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ISA)",
            "restrict": ""
        }
    ],
    "WDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ISA)",
            "restrict": ""
        }
    ],
    "PCIPCWATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PCI)",
            "restrict": ""
        }
    ],
    "WDTPCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (PCI)",
            "restrict": ""
        }
    ],
    "USBPCWATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (USB)",
            "restrict": ""
        }
    ],
    "KEEMBAY_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( WATCHDOG ) && (ARCH_KEEMBAY || ( ARM64 && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SSB_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM && HAS_DMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB": [
        {
            "type": "tristate",
            "rev_select": "B44 || B43[B43_SSB] || B43LEGACY",
            "dep": "(SSB_POSSIBLE)",
            "restrict": ""
        }
    ],
    "SSB_SPROM": [
        {
            "type": "bool",
            "rev_select": "SSB_PCIHOST || SSB_PCMCIAHOST || SSB_HOST_SOC",
            "dep": "( SSB )",
            "restrict": ""
        }
    ],
    "SSB_BLOCKIO": [
        {
            "type": "bool",
            "rev_select": "B43_PIO",
            "dep": "( SSB ) && (SSB)",
            "restrict": ""
        }
    ],
    "SSB_PCIHOST_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB && ( PCI = y || PCI = SSB ) && ( PCI_DRIVERS_LEGACY || ! MIPS ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_PCIHOST": [
        {
            "type": "bool",
            "rev_select": "B44_PCI_AUTOSELECT || B43_PCI_AUTOSELECT || B43LEGACY_PCI_AUTOSELECT",
            "dep": "( SSB ) && (SSB_PCIHOST_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_B43_PCI_BRIDGE": [
        {
            "type": "bool",
            "rev_select": "B43_PCI_AUTOSELECT || B43LEGACY_PCI_AUTOSELECT",
            "dep": "( SSB ) && (SSB_PCIHOST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SSB_PCMCIAHOST_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB && ( PCMCIA = y || PCMCIA = SSB ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_PCMCIAHOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB_PCMCIAHOST_POSSIBLE)",
            "restrict": ""
        }
    ],
    "SSB_SDIOHOST_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB && ( MMC = y || MMC = SSB ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_SDIOHOST": [
        {
            "type": "bool",
            "rev_select": "B43_SDIO",
            "dep": "( SSB ) && (SSB_SDIOHOST_POSSIBLE)",
            "restrict": ""
        }
    ],
    "SSB_HOST_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB && BCM47XX_NVRAM)",
            "restrict": ""
        }
    ],
    "SSB_SERIAL": [
        {
            "type": "bool",
            "rev_select": "SSB_DRIVER_MIPS",
            "dep": "( SSB ) && (SSB)",
            "restrict": ""
        }
    ],
    "SSB_DRIVER_PCICORE_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB_PCIHOST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_DRIVER_PCICORE": [
        {
            "type": "bool",
            "rev_select": "B44_PCICORE_AUTOSELECT || B43_PCICORE_AUTOSELECT || B43LEGACY_PCICORE_AUTOSELECT",
            "dep": "( SSB ) && (SSB_DRIVER_PCICORE_POSSIBLE)",
            "restrict": ""
        }
    ],
    "SSB_PCICORE_HOSTMODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB_DRIVER_PCICORE && SSB_DRIVER_MIPS && SSB = y)",
            "restrict": ""
        }
    ],
    "SSB_DRIVER_MIPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB && MIPS)",
            "restrict": ""
        }
    ],
    "SSB_SFLASH": [
        {
            "type": "bool",
            "rev_select": "SSB_DRIVER_MIPS",
            "dep": "( SSB ) && (SSB_DRIVER_MIPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_EMBEDDED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB_DRIVER_MIPS && SSB_PCICORE_HOSTMODE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SSB_DRIVER_EXTIF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB_DRIVER_MIPS)",
            "restrict": ""
        }
    ],
    "SSB_DRIVER_GIGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB_PCIHOST_POSSIBLE && SSB_EMBEDDED && MIPS)",
            "restrict": ""
        }
    ],
    "SSB_DRIVER_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SSB ) && (SSB && GPIOLIB)",
            "restrict": ""
        }
    ],
    "BCMA_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM && HAS_DMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA": [
        {
            "type": "tristate",
            "rev_select": "PCIE_IPROC_BCMA || B43[B43_BCMA] || BRCMSMAC",
            "dep": "(BCMA_POSSIBLE)",
            "restrict": ""
        }
    ],
    "BCMA_BLOCKIO": [
        {
            "type": "bool",
            "rev_select": "B43_BCMA_PIO",
            "dep": "( BCMA )",
            "restrict": ""
        }
    ],
    "BCMA_HOST_PCI_POSSIBLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (PCI = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA_HOST_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (BCMA_HOST_PCI_POSSIBLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA_HOST_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BCMA_DRIVER_PCI": [
        {
            "type": "bool",
            "rev_select": "BCMA_HOST_PCI",
            "dep": "( BCMA ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA_DRIVER_PCI_HOSTMODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (MIPS && BCMA_DRIVER_PCI && PCI_DRIVERS_LEGACY && BCMA = y)",
            "restrict": ""
        }
    ],
    "BCMA_DRIVER_MIPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCMA_PFLASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (BCMA_DRIVER_MIPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA_SFLASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (BCMA_HOST_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA_NFLASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (BCMA_DRIVER_MIPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BCMA_DRIVER_GMAC_CMN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA )",
            "restrict": ""
        }
    ],
    "BCMA_DRIVER_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "BCMA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BCMA )",
            "restrict": ""
        }
    ],
    "MFD_CORE": [
        {
            "type": "tristate",
            "rev_select": "ZYNQMP_FIRMWARE || HI6421V600_IRQ || MISC_ALCOR_PCI || MISC_RTSX_PCI || MISC_RTSX_USB || GPIO_VX855 || GPIO_RDC321X || KHADAS_MCU_FAN_THERMAL || IE6XX_WDT || MFD_CS5535 || MFD_ALTERA_A10SR || MFD_ACT8945A || MFD_SUN4I_GPADC || MFD_AS3711 || MFD_AS3722 || MFD_AAT2870_CORE || MFD_AT91_USART || MFD_ATMEL_FLEXCOM || MFD_ATMEL_HLCDC || MFD_BCM590XX || MFD_BD9571MWV || MFD_AC100 || MFD_AXP20X || MFD_CROS_EC_DEV || MFD_MADERA || MFD_ASIC3 || PMIC_DA9052 || MFD_DA9055 || MFD_DA9062 || MFD_DA9063 || MFD_DA9150 || MFD_DLN2 || MFD_ENE_KB3930 || MFD_EXYNOS_LPASS || MFD_GATEWORKS_GSC || MFD_MC13XXX || MFD_MP2629 || MFD_MXS_LRADC || MFD_HI6421_PMIC || MFD_HI6421_SPMI || MFD_HI655X_PMIC || HTC_PASIC3 || MFD_INTEL_QUARK_I2C_GPIO || LPC_ICH || LPC_SCH || INTEL_SOC_PMIC || INTEL_SOC_PMIC_BXTWC || INTEL_SOC_PMIC_CHTWC || INTEL_SOC_PMIC_CHTDC_TI || INTEL_SOC_PMIC_MRFLD || MFD_INTEL_LPSS || MFD_INTEL_PMC_BXT || MFD_IPAQ_MICRO || MFD_IQS62X || MFD_JANZ_CMODIO || MFD_KEMPLD || MFD_88PM800 || MFD_88PM805 || MFD_88PM860X || MFD_MAX14577 || MFD_MAX77620 || MFD_MAX77650 || MFD_MAX77686 || MFD_MAX77693 || MFD_MAX77714 || MFD_MAX77843 || MFD_MAX8907 || MFD_MAX8925 || MFD_MAX8997 || MFD_MAX8998 || MFD_MT6360 || MFD_MT6397 || MFD_MENF21BMC || MFD_CPCAP || MFD_VIPERBOARD || MFD_NTXEC || MFD_RETU || MFD_PM8XXX || MFD_RDC321X || MFD_RT4831 || MFD_RT5033 || MFD_RC5T583 || MFD_RK808 || MFD_RN5T618 || MFD_SEC_CORE || MFD_SI476X_CORE || MFD_SIMPLE_MFD_I2C || MFD_SKY81452 || MFD_SC27XX_PMIC || AB8500_CORE || MFD_DB8500_PRCMU || MFD_STMPE || MFD_STA2X11 || MFD_SUN6I_PRCM || MFD_DAVINCI_VOICECODEC || MFD_TI_AM335X_TSCADC || MFD_LP3943 || MFD_LP8788 || MFD_TI_LMU || MFD_PALMAS || TPS6105X || TPS6507X || MFD_TPS65086 || MFD_TPS65090 || MFD_TPS65217 || MFD_TI_LP873X || MFD_TI_LP87565 || MFD_TPS65218 || MFD_TPS6586X || MFD_TPS65910 || MFD_TPS65912 || MFD_TWL4030_AUDIO || TWL6040_CORE || MFD_WL1273_CORE || MFD_LM3533 || MFD_TIMBERDALE || MFD_TC3589X || MFD_T7L66XB || MFD_TC6387XB || MFD_TC6393XB || MFD_TQMX86 || MFD_VX855 || MFD_LOCHNAGAR || MFD_ARIZONA || MFD_WM8400 || MFD_WM831X_I2C || MFD_WM831X_SPI || MFD_WM8994 || MFD_WM97xx || MFD_STW481X || MFD_ROHM_BD718XX || MFD_ROHM_BD71828 || MFD_ROHM_BD957XMUF || MFD_STM32_LPTIMER || MFD_STM32_TIMERS || MFD_STPMIC1 || MFD_STMFX || MFD_WCD934X || MFD_ATC260X || MFD_KHADAS_MCU || MFD_ACER_A500_EC || MFD_VEXPRESS_SYSREG || SGI_MFD_IOC3 || MFD_INTEL_M10_BMC || MFD_RSMU_I2C || MFD_RSMU_SPI || RADIO_WL1273 || DRM_AMD_ACP || HID_SENSOR_HUB || MFD_NVEC || INTEL_SKL_INT3472 || EXYNOS_PMU || IIO_SSP_SENSORHUB",
            "dep": "( HAS_IOMEM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MFD_CS5535": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (PCI && ( X86_32 || ( X86 && COMPILE_TEST ) ))",
            "restrict": ""
        }
    ],
    "MFD_ALTERA_A10SR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_INTEL_SOCFPGA && SPI_MASTER = y && OF)",
            "restrict": ""
        }
    ],
    "MFD_ALTERA_SYSMGR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_INTEL_SOCFPGA && OF)",
            "restrict": ""
        }
    ],
    "MFD_ACT8945A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MFD_SUN4I_GPADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_SUNXI || COMPILE_TEST) && (! TOUCHSCREEN_SUN4I)",
            "restrict": ""
        }
    ],
    "MFD_AS3711": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_AS3722": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y && OF)",
            "restrict": ""
        }
    ],
    "PMIC_ADP5520": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_AAT2870_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_AT91_USART": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_ATMEL",
            "dep": "( HAS_IOMEM ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_ATMEL_FLEXCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_ATMEL_HLCDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_ATMEL_SMC": [
        {
            "type": "bool",
            "rev_select": "MTD_NAND_ATMEL || ATMEL_EBI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_BCM590XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_BD9571MWV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_AC100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SUNXI_RSB)",
            "restrict": ""
        }
    ],
    "MFD_AXP20X": [
        {
            "type": "tristate",
            "rev_select": "MFD_AXP20X_I2C || MFD_AXP20X_RSB",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_AXP20X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_AXP20X_RSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SUNXI_RSB)",
            "restrict": ""
        }
    ],
    "MFD_CROS_EC_DEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (CROS_EC)",
            "restrict": "( CROS_EC )[!(y)]"
        }
    ],
    "MFD_MADERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_MADERA_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MADERA_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_CS47L15": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA)",
            "restrict": ""
        }
    ],
    "MFD_CS47L35": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA)",
            "restrict": ""
        }
    ],
    "MFD_CS47L85": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA)",
            "restrict": ""
        }
    ],
    "MFD_CS47L90": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA)",
            "restrict": ""
        }
    ],
    "MFD_CS47L92": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_MADERA)",
            "restrict": ""
        }
    ],
    "MFD_ASIC3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (GPIOLIB) && (ARM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PMIC_DA903X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "PMIC_DA9052": [
        {
            "type": "bool",
            "rev_select": "MFD_DA9052_SPI || MFD_DA9052_I2C",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_DA9052_SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER = y)",
            "restrict": ""
        }
    ],
    "MFD_DA9052_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_DA9055": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_DA9062": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_DA9063": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_DA9150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_DLN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (USB)",
            "restrict": ""
        }
    ],
    "MFD_ENE_KB3930": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (MACH_MMP3_DT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_EXYNOS_LPASS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_GATEWORKS_GSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( I2C && OF ))",
            "restrict": ""
        }
    ],
    "MFD_MC13XXX": [
        {
            "type": "tristate",
            "rev_select": "MFD_MC13XXX_SPI || MFD_MC13XXX_I2C",
            "dep": "( HAS_IOMEM ) && (( SPI_MASTER || I2C ))",
            "restrict": ""
        }
    ],
    "MFD_MC13XXX_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_MC13XXX_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MP2629": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MXS_LRADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_MXS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_MX25_TSADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( SOC_IMX25 && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_HI6421_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_HI6421_SPMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF) && (SPMI)",
            "restrict": ""
        }
    ],
    "MFD_HI655X_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_HISI || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "HTC_PASIC3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "HTC_I2CPLD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y && GPIOLIB)",
            "restrict": ""
        }
    ],
    "MFD_INTEL_QUARK_I2C_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (PCI) && (X86) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "LPC_ICH": [
        {
            "type": "tristate",
            "rev_select": "ITCO_WDT[! EXPERT]",
            "dep": "( HAS_IOMEM ) && (PCI)",
            "restrict": ""
        }
    ],
    "LPC_SCH": [
        {
            "type": "tristate",
            "rev_select": "I2C_ISCH || IE6XX_WDT",
            "dep": "( HAS_IOMEM ) && (PCI)",
            "restrict": ""
        }
    ],
    "INTEL_SOC_PMIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ACPI && HAS_IOMEM && I2C = y && GPIOLIB && COMMON_CLK) && (X86 || COMPILE_TEST) && (I2C_DESIGNWARE_PLATFORM = y)",
            "restrict": ""
        }
    ],
    "INTEL_SOC_PMIC_BXTWC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_INTEL_PMC_BXT)",
            "restrict": ""
        }
    ],
    "INTEL_SOC_PMIC_CHTWC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ACPI && HAS_IOMEM && I2C = y && COMMON_CLK) && (X86 || COMPILE_TEST) && (I2C_DESIGNWARE_PLATFORM = y)",
            "restrict": ""
        }
    ],
    "INTEL_SOC_PMIC_CHTDC_TI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (GPIOLIB) && (I2C = y && I2C_DESIGNWARE_PLATFORM = y) && (ACPI) && (X86)",
            "restrict": ""
        }
    ],
    "INTEL_SOC_PMIC_MRFLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (GPIOLIB) && (ACPI) && (INTEL_SCU)",
            "restrict": ""
        }
    ],
    "MFD_INTEL_LPSS": [
        {
            "type": "tristate",
            "rev_select": "MFD_INTEL_LPSS_ACPI || MFD_INTEL_LPSS_PCI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_INTEL_LPSS_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "MFD_INTEL_LPSS_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "MFD_INTEL_PMC_BXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (X86) && (X86_PLATFORM_DEVICES) && (ACPI)",
            "restrict": ""
        }
    ],
    "MFD_IPAQ_MICRO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SA1100_H3100 || SA1100_H3600)",
            "restrict": ""
        }
    ],
    "MFD_IQS62X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_JANZ_CMODIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (PCI)",
            "restrict": ""
        }
    ],
    "MFD_KEMPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_88PM800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_88PM805": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_88PM860X": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_TTC_DKB",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_MAX14577": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MAX77620": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_MAX77650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_MAX77686": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_MAX77693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MAX77714": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_MAX77843": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_MAX8907": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MAX8925": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_MAX8997": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_MAX8998": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_MT6360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_MT6397": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_MENF21BMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "EZX_PCAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_VIPERBOARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (USB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MFD_NTXEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_RETU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_PCF50633": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "PCF50633_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "PCF50633_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "UCB1400_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AC97_BUS) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "MFD_PM8XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( ARM || HEXAGON || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "MFD_QCOM_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_QCOM && OF)",
            "restrict": ""
        }
    ],
    "MFD_SPMI_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_QCOM || COMPILE_TEST) && (OF) && (SPMI)",
            "restrict": ""
        }
    ],
    "MFD_RDC321X": [
        {
            "type": "tristate",
            "rev_select": "GPIO_RDC321X",
            "dep": "( HAS_IOMEM ) && (PCI)",
            "restrict": ""
        }
    ],
    "MFD_RT4831": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_RT5033": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_RC5T583": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_RK808": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MFD_RN5T618": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_SEC_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_SI476X_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_SIMPLE_MFD_I2C": [
        {
            "type": "tristate",
            "rev_select": "JOYSTICK_SENSEHAT || MFD_SL28CPLD",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_SL28CPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_SM501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "MFD_SM501_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_SM501 && GPIOLIB)",
            "restrict": ""
        }
    ],
    "MFD_SKY81452": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_SC27XX_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_SPRD || COMPILE_TEST) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "ABX500_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_U8500 || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_U8500)]"
        }
    ],
    "AB8500_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ABX500_CORE && MFD_DB8500_PRCMU)",
            "restrict": ""
        }
    ],
    "MFD_DB8500_PRCMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (UX500_SOC_DB8500)",
            "restrict": ""
        }
    ],
    "MFD_STMPE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( I2C = y || SPI_MASTER = y )) && (OF)",
            "restrict": ""
        }
    ],
    "STMPE_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( MFD_STMPE ) ) && (I2C = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "STMPE_SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( MFD_STMPE ) ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_STA2X11": [
        {
            "type": "bool",
            "rev_select": "STA2X11",
            "dep": "( HAS_IOMEM ) && (STA2X11)",
            "restrict": ""
        }
    ],
    "MFD_SUN6I_PRCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_SYSCON": [
        {
            "type": "bool",
            "rev_select": "PCIE_ROCKCHIP_HOST || PCIE_ROCKCHIP_EP || PCI_LAYERSCAPE || BT1_AXI || INTEL_IXP4XX_EB || MTD_NAND_STM32_FMC2 || MTD_NAND_MESON || AHCI_MTK || HIP04_ETH || SNI_AVE || STMMAC_PLATFORM || DWMAC_INGENIC || DWMAC_IPQ806X || DWMAC_LPC18XX || DWMAC_OXNAS || DWMAC_ROCKCHIP || DWMAC_SOCFPGA || DWMAC_STI || DWMAC_STM32 || DWMAC_IMX8 || TI_CPSW || TI_CPSW_SWITCHDEV || IXP4XX_HSS || TOUCHSCREEN_TS4800 || I2C_DESIGNWARE_PLATFORM[MIPS_BAIKAL_T1] || PINCTRL_GEMINI || PINCTRL_OXNAS || PINCTRL_ROCKCHIP || PINCTRL_ASPEED || PINCTRL_DOVE || PINCTRL_ARMADA_37XX || PINCTRL_STM32 || POWER_RESET_OCELOT_RESET || POWER_RESET_KEYSTONE || POWER_RESET_SYSCON || POWER_RESET_SYSCON_POWEROFF || ARMADA_37XX_WATCHDOG || S3C2410_WATCHDOG[ARCH_EXYNOS] || TS4800_WATCHDOG || JZ4740_WDT || MFD_ALTERA_SYSMGR || MFD_ATMEL_SMC || MFD_VEXPRESS_SYSREG || VIDEO_S5P_FIMC || VIDEO_OMAP3 || DRM_EXYNOS_FIMD || DRM_NWL_MIPI_DSI || DRM_ASPEED_GFX || DRM_MCDE || SND_SOC_MT8186[SND_SOC_MT6358] || SND_SOC_MT8195[SND_SOC_MT6359] || USB_XHCI_MTK || RTC_DRV_AT91SAM9 || LPC18XX_DMAMUX || IMG_ASCII_LCD || VIDEO_OMAP4 || COMMON_CLK_GEMINI || COMMON_CLK_ASPEED || COMMON_CLK_NXP[ARCH_LPC18XX] || COMMON_CLK_OXNAS || CLK_BT1_CCU_PLL || CLK_BT1_CCU_DIV || COMMON_CLK_BOSTON || INGENIC_TCU_CLK || COMMON_CLK_MESON8B || COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_G12A || CLK_MT7621 || HWSPINLOCK_QCOM || FTTMR010_TIMER || ATMEL_ST || INGENIC_TIMER || INGENIC_SYSOST || INGENIC_OST || QCOM_Q6V5_ADSP || QCOM_Q6V5_MSS || QCOM_Q6V5_PAS || QCOM_Q6V5_WCSS || APPLE_PMGR_PWRSTATE || ASPEED_LPC_CTRL || ASPEED_LPC_SNOOP || ASPEED_UART_ROUTING || ASPEED_P2A_CTRL || SOC_K210_SYSCTL || IXP4XX_NPE || QCOM_GSBI || EXYNOS_CHIPID || EXYNOS_USI || TI_K3_SOCINFO || TI_PRUSS || ATMEL_EBI || BT1_L2_CTL || STM32_FMC2_EBI || PWM_JZ4740 || ST_IRQCHIP || INGENIC_TCU_IRQ || LS_EXTIRQ || RESET_IMX7 || RESET_K210 || RESET_MCHP_SPARX5 || RESET_TI_SYSCON || PHY_MESON8_HDMI_TX || PHY_MESON_G12A_MIPI_DPHY_ANALOG || PHY_BCM_SR_PCIE || PHY_HI6220_USB || PHY_HI3660_USB || PHY_HI3670_USB || PHY_HI3670_PCIE || PHY_HISTB_COMBPHY || PHY_HISI_INNO_USB2 || PHY_HIX5HD2_SATA || PHY_RALINK_USB || PHY_ROCKCHIP_PCIE || PHY_SAMSUNG_USB2 || PHY_EXYNOS5_USBDRD || PHY_EXYNOS5250_SATA || PHY_UNIPHIER_USB2 || PHY_DA8XX_USB || PHY_INTEL_LGM_COMBO",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_DAVINCI_VOICECODEC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DM365_SELECT_VOICE_CODECS",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_TI_AM335X_TSCADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_DM355EVM_MSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y && MACH_DAVINCI_DM355_EVM)",
            "restrict": ""
        }
    ],
    "MFD_LP3943": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_LP8788": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_TI_LMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_OMAP_USB_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (USB_EHCI_HCD_OMAP || USB_OHCI_HCD_OMAP3) && (COMMON_CLK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MFD_PALMAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "TPS6105X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TPS65010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && GPIOLIB)",
            "restrict": "( y )[!(y) && (MACH_OMAP_H2 || MACH_OMAP_H3 || MACH_OMAP_OSK)]"
        }
    ],
    "TPS6507X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_TPS65086": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TPS65911_COMPARATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_TPS65090": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_TPS65217": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MFD_TI_LP873X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_TI_LP87565": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MFD_TPS65218": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MFD_TPS6586X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_TPS65910": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_TPS65912": [
        {
            "type": "tristate",
            "rev_select": "MFD_TPS65912_I2C || MFD_TPS65912_SPI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_TPS65912_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_TPS65912_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TWL4030_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "TWL4030_POWER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (TWL4030_CORE && ARM)",
            "restrict": ""
        }
    ],
    "MFD_TWL4030_AUDIO": [
        {
            "type": "bool",
            "rev_select": "INPUT_TWL4030_VIBRA || SND_SOC_TWL4030",
            "dep": "( HAS_IOMEM ) && (TWL4030_CORE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TWL6040_CORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MENELAUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y && ARCH_OMAP2)",
            "restrict": ""
        }
    ],
    "MFD_WL1273_CORE": [
        {
            "type": "tristate",
            "rev_select": "RADIO_WL1273",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MFD_LM3533": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_TIMBERDALE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (PCI && GPIOLIB && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "MFD_TC3589X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_TMIO": [
        {
            "type": "bool",
            "rev_select": "MFD_T7L66XB || MFD_TC6387XB || MFD_TC6393XB",
            "dep": "( HAS_IOMEM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MFD_T7L66XB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARM && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "MFD_TC6387XB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARM && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "MFD_TC6393XB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARM && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "MFD_TQMX86": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_VX855": [
        {
            "type": "tristate",
            "rev_select": "GPIO_VX855",
            "dep": "( HAS_IOMEM ) && (PCI)",
            "restrict": ""
        }
    ],
    "MFD_LOCHNAGAR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y && OF)",
            "restrict": ""
        }
    ],
    "MFD_ARIZONA": [
        {
            "type": "tristate",
            "rev_select": "MFD_ARIZONA_I2C || MFD_ARIZONA_SPI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_ARIZONA_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_ARIZONA_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_CS47L24": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "MFD_WM5102": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "MFD_WM5110": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "MFD_WM8997": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "MFD_WM8998": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "MFD_WM8400": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_WM831X": [
        {
            "type": "bool",
            "rev_select": "MFD_WM831X_I2C || MFD_WM831X_SPI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_WM831X_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_WM831X_SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_WM8350": [
        {
            "type": "bool",
            "rev_select": "MFD_WM8350_I2C",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_WM8350_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "MFD_WM8994": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_ASOC_CARD || SND_MMP_SOC_BROWNSTONE || SND_SOC_SAMSUNG_SMDK_WM8994 || SND_SOC_SMDK_WM8994_PCM || SND_SOC_LITTLEMILL || SND_SOC_ARNDALE",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_WM97xx": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AC97_BUS_NEW)",
            "restrict": ""
        }
    ],
    "MFD_STW481X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && ( ARCH_NOMADIK || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "MFD_ROHM_BD718XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_ROHM_BD71828": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_ROHM_BD957XMUF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C = y) && (OF)",
            "restrict": ""
        }
    ],
    "MFD_STM32_LPTIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( ARCH_STM32 && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_STM32_TIMERS": [
        {
            "type": "tristate",
            "rev_select": "STM32_ADC_CORE",
            "dep": "( HAS_IOMEM ) && (( ARCH_STM32 && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_STPMIC1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( I2C = y && OF ))",
            "restrict": ""
        }
    ],
    "MFD_STMFX": [
        {
            "type": "tristate",
            "rev_select": "PINCTRL_STMFX",
            "dep": "( HAS_IOMEM ) && (I2C) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_WCD934X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SLIMBUS)",
            "restrict": ""
        }
    ],
    "MFD_ATC260X": [
        {
            "type": "tristate",
            "rev_select": "MFD_ATC260X_I2C",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "MFD_ATC260X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C)",
            "restrict": ""
        }
    ],
    "MFD_KHADAS_MCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (ARCH_MESON || ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_ACER_A500_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C) && (( ARCH_TEGRA_2x_SOC && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MFD_QCOM_PM8008": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MCP": [
        {
            "type": "tristate",
            "rev_select": "MCP_SA11X0 || MCP_UCB1200",
            "dep": "( HAS_IOMEM ) && ( ( ARCH_SA1100 ) )",
            "restrict": ""
        }
    ],
    "MCP_SA11X0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( ARCH_SA1100 ) ) && (ARCH_SA1100)",
            "restrict": ""
        }
    ],
    "MCP_UCB1200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( ARCH_SA1100 ) ) && (MCP_SA11X0)",
            "restrict": ""
        }
    ],
    "MCP_UCB1200_TS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( ARCH_SA1100 ) ) && (MCP_UCB1200 && INPUT)",
            "restrict": ""
        }
    ],
    "MFD_VEXPRESS_SYSREG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (VEXPRESS_CONFIG && GPIOLIB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RAVE_SP_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "SGI_MFD_IOC3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (PCI && MIPS && 64BIT)",
            "restrict": ""
        }
    ],
    "MFD_INTEL_M10_BMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MFD_RSMU_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "MFD_RSMU_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SPI && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR": [
        {
            "type": "bool",
            "rev_select": "PINCTRL_PFC_SH73A0 || TPS6105X || DRM_MSM || SND_SOC_AMD_CZ_DA7219MX98357_MACH || MMC_MTK || MMC_LITEX || OLPC_EC || USB_LGM_PHY",
            "dep": "",
            "restrict": ""
        }
    ],
    "REGULATOR_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_FIXED_VOLTAGE": [
        {
            "type": "tristate",
            "rev_select": "TPS6105X || MMC_LITEX || USB_LGM_PHY",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_VIRTUAL_CONSUMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_USERSPACE_CONSUMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_88PG86X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_88PM800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_88PM800)",
            "restrict": ""
        }
    ],
    "REGULATOR_88PM8607": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_88PM860X = y)",
            "restrict": ""
        }
    ],
    "REGULATOR_ACT8865": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C) && (POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "REGULATOR_ACT8945A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ACT8945A)",
            "restrict": ""
        }
    ],
    "REGULATOR_AD5398": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_ANATOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_MXC || COMPILE_TEST) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "REGULATOR_AAT2870": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_AAT2870_CORE)",
            "restrict": ""
        }
    ],
    "REGULATOR_AB8500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REGULATOR ) && (AB8500_CORE)",
            "restrict": ""
        }
    ],
    "REGULATOR_ARIZONA_LDO1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ARIZONA || MFD_MADERA) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "REGULATOR_ARIZONA_MICSUPP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ARIZONA || MFD_MADERA) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "REGULATOR_ARM_SCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARM_SCMI_PROTOCOL && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_AS3711": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_AS3711)",
            "restrict": ""
        }
    ],
    "REGULATOR_AS3722": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_AS3722)",
            "restrict": ""
        }
    ],
    "REGULATOR_ATC260X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ATC260X)",
            "restrict": ""
        }
    ],
    "REGULATOR_AXP20X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_AXP20X)",
            "restrict": ""
        }
    ],
    "REGULATOR_BCM590XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_BCM590XX)",
            "restrict": ""
        }
    ],
    "REGULATOR_BD71815": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ROHM_BD71828)",
            "restrict": ""
        }
    ],
    "REGULATOR_BD71828": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ROHM_BD71828)",
            "restrict": ""
        }
    ],
    "REGULATOR_BD718XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ROHM_BD718XX)",
            "restrict": ""
        }
    ],
    "REGULATOR_BD9571MWV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_BD9571MWV)",
            "restrict": ""
        }
    ],
    "REGULATOR_BD957XMUF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_ROHM_BD957XMUF)",
            "restrict": ""
        }
    ],
    "REGULATOR_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_CPCAP)",
            "restrict": ""
        }
    ],
    "REGULATOR_CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (CROS_EC && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA903X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (PMIC_DA903X) && (! CC_IS_CLANG)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9055": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_DA9055)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9062": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_DA9062)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9063": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_DA9063 && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9121": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9210": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_DA9211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_DBX500_PRCMU": [
        {
            "type": "bool",
            "rev_select": "REGULATOR_DB8500_PRCMU",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_DB8500_PRCMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_DB8500_PRCMU)",
            "restrict": ""
        }
    ],
    "REGULATOR_FAN53555": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_FAN53880": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && ( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "REGULATOR_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_HI6421": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_HI6421_PMIC && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_HI6421V530": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_HI6421_PMIC && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_HI655X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_HISI || COMPILE_TEST) && (MFD_HI655X_PMIC && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_HI6421V600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_HI6421_SPMI && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_ISL9305": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_ISL6271A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_LM363X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TI_LMU)",
            "restrict": ""
        }
    ],
    "REGULATOR_LOCHNAGAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_LOCHNAGAR)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP3971": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP3972": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP872X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP873X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TI_LP873X && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP8755": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP87565": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TI_LP87565 && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_LP8788": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_LP8788)",
            "restrict": ""
        }
    ],
    "REGULATOR_LTC3589": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_LTC3676": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX14577": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX14577)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX1586": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX597X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C) && (OF) && (MFD_MAX597X)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX77620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX77620 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX77650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX77650 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8649": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8893": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8907": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX8907 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8925": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX8925)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8952": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8973": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C) && (THERMAL && THERMAL_OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8997": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX8997)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX8998)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX20086": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX77686": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX77686 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX77693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX77693 || MFD_MAX77843 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX77802": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MAX77686 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_MAX77826": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MC13XXX_CORE": [
        {
            "type": "tristate",
            "rev_select": "REGULATOR_MC13783 || REGULATOR_MC13892",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_MC13783": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "REGULATOR_MC13892": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "REGULATOR_MCP16502": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_MP5416": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_MP8859": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MP886X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && ( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "REGULATOR_MPQ7920": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6311": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6315": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (SPMI)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6323": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MT6397)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6358": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MT6397)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6359": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MT6397)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MT6360)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6370": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MT6370)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6380": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "REGULATOR_MT6397": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_MT6397)",
            "restrict": ""
        }
    ],
    "REGULATOR_MTK_DVFSRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MTK_DVFSRC)",
            "restrict": ""
        }
    ],
    "REGULATOR_PALMAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "REGULATOR_PBIAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (( ARCH_OMAP || COMPILE_TEST ) && MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "REGULATOR_PCA9450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_PCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (EZX_PCAP)",
            "restrict": ""
        }
    ],
    "REGULATOR_PCF50633": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "REGULATOR_PF8X00": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_PFUZE100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_PV88060": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_PV88080": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_PV88090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_PWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (PWM)",
            "restrict": ""
        }
    ],
    "REGULATOR_QCOM_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_QCOM_RPM)",
            "restrict": ""
        }
    ],
    "REGULATOR_QCOM_RPMH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (QCOM_RPMH || ( QCOM_RPMH = n && COMPILE_TEST )) && (QCOM_COMMAND_DB || ( QCOM_COMMAND_DB = n && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "REGULATOR_QCOM_SMD_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "REGULATOR_QCOM_SPMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (SPMI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_QCOM_USB_VBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (SPMI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_RASPBERRYPI_TOUCHSCREEN_ATTINY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (BACKLIGHT_CLASS_DEVICE) && (I2C) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "REGULATOR_RC5T583": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_RC5T583)",
            "restrict": ""
        }
    ],
    "REGULATOR_RK808": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_RK808)",
            "restrict": ""
        }
    ],
    "REGULATOR_RN5T618": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_RN5T618)",
            "restrict": ""
        }
    ],
    "REGULATOR_ROHM": [
        {
            "type": "tristate",
            "rev_select": "REGULATOR_BD71815 || REGULATOR_BD71828 || REGULATOR_BD718XX",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_RT4801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT4831": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_RT4831)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT5033": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_RT5033)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT5120": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_RT5120)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT5190A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT5759": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT6160": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RT6245": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RTQ2134": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RTMV20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_RTQ6752": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_S2MPA01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_SEC_CORE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_S2MPS11": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_SEC_CORE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_S5M8767": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_SEC_CORE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_SC2731": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_SC27XX_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_SKY81452": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_SKY81452)",
            "restrict": ""
        }
    ],
    "REGULATOR_SLG51000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_SM5703": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_SM5703)",
            "restrict": ""
        }
    ],
    "REGULATOR_STM32_BOOSTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_STM32_VREFBUF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_STM32_PWR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_STPMIC1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_STPMIC1)",
            "restrict": ""
        }
    ],
    "REGULATOR_TI_ABB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_OMAP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_STW481X_VMMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_STW481X || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (MFD_STW481X)]"
        }
    ],
    "REGULATOR_SY7636A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR )",
            "restrict": ""
        }
    ],
    "REGULATOR_SY8106A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && ( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "REGULATOR_SY8824X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && ( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "REGULATOR_SY8827N": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && ( OF || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS51632": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS6105X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (TPS6105X)",
            "restrict": "( y )[!(y) && (TPS6105X)]"
        }
    ],
    "REGULATOR_TPS62360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS6286X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65023": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS6507X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65086": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS65086)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS65090)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65132": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65217": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS65217)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65218": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS65218 && OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS6524X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (SPI)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS6586X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS6586X)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65910": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS65910)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS65912": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_TPS65912)",
            "restrict": ""
        }
    ],
    "REGULATOR_TPS68470": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (INTEL_SKL_INT3472 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REGULATOR_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "REGULATOR_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF)",
            "restrict": "( ARCH_UNIPHIER )[!(y)]"
        }
    ],
    "REGULATOR_VCTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (OF)",
            "restrict": ""
        }
    ],
    "REGULATOR_VEXPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (VEXPRESS_CONFIG)",
            "restrict": ""
        }
    ],
    "REGULATOR_VQMMC_IPQ4019": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "REGULATOR_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "REGULATOR_WM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "REGULATOR_WM8400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_WM8400)",
            "restrict": ""
        }
    ],
    "REGULATOR_WM8994": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (MFD_WM8994)",
            "restrict": ""
        }
    ],
    "REGULATOR_QCOM_LABIBB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REGULATOR ) && (SPMI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RC_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INPUT)",
            "restrict": ""
        }
    ],
    "BPF_LIRC_MODE2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && (BPF_SYSCALL) && (RC_CORE = y) && (LIRC)",
            "restrict": ""
        }
    ],
    "LIRC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE )",
            "restrict": ""
        }
    ],
    "RC_MAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && (RC_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RC_DECODERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE )",
            "restrict": ""
        }
    ],
    "IR_IMON_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_JVC_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_MCE_KBD_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_NEC_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_RC5_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_RC6_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_RCMM_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_SANYO_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_SHARP_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_SONY_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "IR_XMP_DECODER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DECODERS )",
            "restrict": ""
        }
    ],
    "RC_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE )",
            "restrict": ""
        }
    ],
    "IR_ENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (PNP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_FINTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (PNP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_GPIO_CIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (( OF && GPIOLIB ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_GPIO_TX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (LIRC) && (( OF && GPIOLIB ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_HIX5HD2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (( OF && HAS_IOMEM ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_IGORPLUGUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_IGUANA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_IMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_IMON_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_ITE_CIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (PNP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_MCEUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_MESON_TX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_MTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_NUVOTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (PNP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_PWM_TX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (LIRC) && (PWM) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_REDRAT3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_RX51": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (( OMAP_DM_TIMER && PWM_OMAP_DMTIMER && ARCH_OMAP2PLUS || COMPILE_TEST ) && RC_CORE)",
            "restrict": ""
        }
    ],
    "IR_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES )",
            "restrict": ""
        }
    ],
    "IR_SERIAL_TRANSMITTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_SERIAL)",
            "restrict": ""
        }
    ],
    "IR_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (SPI && LIRC) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_STREAMZAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_TOY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_TTUSBIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_WINBOND_CIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (( X86 && PNP ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RC_ATI_REMOTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "RC_LOOPBACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES )",
            "restrict": ""
        }
    ],
    "RC_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RC_XBOX_DVD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (USB)",
            "restrict": ""
        }
    ],
    "IR_IMG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (RC_CORE) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IR_IMG_RAW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG)",
            "restrict": ""
        }
    ],
    "IR_IMG_HW": [
        {
            "type": "bool",
            "rev_select": "IR_IMG[! IR_IMG_RAW]",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG)",
            "restrict": ""
        }
    ],
    "IR_IMG_NEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "IR_IMG_JVC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "IR_IMG_SONY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "IR_IMG_SHARP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "IR_IMG_SANYO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "IR_IMG_RC5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "IR_IMG_RC6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RC_CORE ) && ( RC_DEVICES ) && (IR_IMG_HW)",
            "restrict": ""
        }
    ],
    "CEC_CORE": [
        {
            "type": "tristate",
            "rev_select": "CEC_CH7322 || CEC_CROS_EC || CEC_MESON_AO || CEC_MESON_G12A_AO || CEC_GPIO || CEC_SAMSUNG_S5P || CEC_STI || CEC_STM32 || CEC_TEGRA || CEC_SECO || USB_PULSE8_CEC || USB_RAINSHADOW_CEC || VIDEO_VIVID_CEC || VIDEO_ADV7604_CEC || VIDEO_ADV7842_CEC || VIDEO_TC358743_CEC || VIDEO_ADV7511_CEC || DRM_DP_CEC || DRM_I2C_NXP_TDA998X[CEC_NOTIFIER] || DRM_I2C_NXP_TDA9950 || DRM_I915[CEC_NOTIFIER] || DRM_EXYNOS_HDMI[CEC_NOTIFIER] || DRM_SUN4I_HDMI_CEC || OMAP4_DSS_HDMI_CEC || DRM_TEGRA[CEC_NOTIFIER] || DRM_I2C_ADV7511_CEC || DRM_DW_HDMI[CEC_NOTIFIER] || DRM_DW_HDMI_CEC || DRM_VC4_HDMI_CEC || DRM_MESON[CEC_NOTIFIER]",
            "dep": "",
            "restrict": ""
        }
    ],
    "CEC_NOTIFIER": [
        {
            "type": "bool",
            "rev_select": "CEC_CROS_EC || CEC_MESON_AO || CEC_MESON_G12A_AO || CEC_GPIO || CEC_SAMSUNG_S5P || CEC_STI || CEC_TEGRA || CEC_SECO || DRM_I2C_NXP_TDA9950 || DRM_DW_HDMI_CEC",
            "dep": "",
            "restrict": ""
        }
    ],
    "CEC_PIN": [
        {
            "type": "bool",
            "rev_select": "CEC_GPIO || DRM_SUN4I_HDMI_CEC",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEDIA_CEC_RC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CEC_CORE && RC_CORE) && (CEC_CORE = m || RC_CORE = y)",
            "restrict": ""
        }
    ],
    "CEC_PIN_ERROR_INJ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CEC_PIN && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "MEDIA_CEC_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CEC_CH7322": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (I2C)",
            "restrict": ""
        }
    ],
    "CEC_CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "CEC_MESON_AO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CEC_MESON_G12A_AO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (ARCH_MESON || COMPILE_TEST) && (COMMON_CLK && OF)",
            "restrict": ""
        }
    ],
    "CEC_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (PREEMPTION || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CEC_SAMSUNG_S5P": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CEC_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CEC_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CEC_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CEC_SECO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (( X86 || IA64 ) || COMPILE_TEST) && (PCI && DMI)",
            "restrict": ""
        }
    ],
    "CEC_SECO_RC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && (CEC_SECO) && (RC_CORE = y || RC_CORE = CEC_SECO)",
            "restrict": ""
        }
    ],
    "USB_PULSE8_CEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && ( USB_SUPPORT && TTY )",
            "restrict": ""
        }
    ],
    "USB_RAINSHADOW_CEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_CEC_SUPPORT ) && ( USB_SUPPORT && TTY )",
            "restrict": ""
        }
    ],
    "MEDIA_SUPPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MEDIA_SUPPORT_FILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(y) && (! EMBEDDED && ! EXPERT)]"
        }
    ],
    "MEDIA_SUBDRV_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (HAS_IOMEM)",
            "restrict": "( y )[!(y) && (MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_CAMERA_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_ANALOG_TV_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_DIGITAL_TV_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_RADIO_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_SDR_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_PLATFORM_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "MEDIA_TEST_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( y )[!(MEDIA_SUPPORT_FILTER) && (! MEDIA_SUPPORT_FILTER)]"
        }
    ],
    "VIDEO_DEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (( I2C || I2C = n ))",
            "restrict": "( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT || MEDIA_PLATFORM_SUPPORT || MEDIA_TEST_SUPPORT )[!(( ! MEDIA_SUPPORT_FILTER ) && y)]"
        }
    ],
    "MEDIA_CONTROLLER": [
        {
            "type": "bool",
            "rev_select": "V4L2_FLASH_LED_CLASS || VIDEO_AU0828 || STA2X11_VIP || VIDEO_COBALT || VIDEO_IPU3_CIO2 || VIDEO_MUX || VIDEO_AMPHION_VPU || VIDEO_ATMEL_ISC || VIDEO_ATMEL_XISC || VIDEO_MICROCHIP_CSI2DC || VIDEO_CADENCE_CSI2RX || VIDEO_CADENCE_CSI2TX || VIDEO_MEDIATEK_VCODEC || VIDEO_TEGRA_VDE || VIDEO_IMX_MIPI_CSIS || VIDEO_QCOM_CAMSS || VIDEO_RCAR_ISP || VIDEO_RCAR_CSI2 || VIDEO_RCAR_VIN || VIDEO_RENESAS_VSP1 || VIDEO_ROCKCHIP_ISP1 || VIDEO_SAMSUNG_EXYNOS4_IS || VIDEO_S3C_CAMIF || VIDEO_STM32_DCMI || VIDEO_SUN4I_CSI || VIDEO_SUN6I_CSI || VIDEO_SUN6I_MIPI_CSI2 || VIDEO_SUN8I_A83T_MIPI_CSI2 || VIDEO_TI_CAL || VIDEO_AM437X_VPFE || VIDEO_OMAP3 || VIDEO_XILINX || VIDEO_VIM2M || VIDEO_VICODEC || VIDEO_VIMC || VIDEO_VIVID || VIDEO_AR0521 || VIDEO_HI556 || VIDEO_HI846 || VIDEO_HI847 || VIDEO_IMX208 || VIDEO_IMX214 || VIDEO_IMX219 || VIDEO_IMX258 || VIDEO_IMX274 || VIDEO_IMX290 || VIDEO_IMX319 || VIDEO_IMX334 || VIDEO_IMX335 || VIDEO_IMX355 || VIDEO_IMX412 || VIDEO_MT9M001 || VIDEO_MT9M032 || VIDEO_MT9P031 || VIDEO_MT9T001 || VIDEO_MT9V032 || VIDEO_NOON010PC30 || VIDEO_OG01A1B || VIDEO_OV02A10 || VIDEO_OV08D10 || VIDEO_OV13858 || VIDEO_OV13B10 || VIDEO_OV2680 || VIDEO_OV2685 || VIDEO_OV2740 || VIDEO_OV5640 || VIDEO_OV5645 || VIDEO_OV5647 || VIDEO_OV5648 || VIDEO_OV5670 || VIDEO_OV5675 || VIDEO_OV7251 || VIDEO_OV8856 || VIDEO_OV8865 || VIDEO_OV9282 || VIDEO_OV9650 || VIDEO_OV9734 || VIDEO_RDACM20 || VIDEO_RDACM21 || VIDEO_S5C73M3 || VIDEO_S5K4ECGX || VIDEO_S5K5BAF || VIDEO_S5K6A3 || VIDEO_S5K6AA || VIDEO_CCS || VIDEO_ET8EK8 || VIDEO_M5MOLS || VIDEO_AD5820 || VIDEO_AK7375 || VIDEO_DW9714 || VIDEO_DW9768 || VIDEO_DW9807_VCM || VIDEO_ADP1653 || VIDEO_LM3560 || VIDEO_LM3646 || VIDEO_TDA1997X || VIDEO_ADV7180 || VIDEO_ADV748X || VIDEO_ADV7604 || VIDEO_ADV7842 || VIDEO_ISL7998X || VIDEO_MAX9286 || VIDEO_TC358743 || VIDEO_AD9389B || VIDEO_ADV7511 || VIDEO_ST_MIPID02 || VIDEO_GS1662 || INTEL_ATOMISP || VIDEO_HANTRO || VIDEO_IMX_MEDIA || VIDEO_IPU3_IMGU || VIDEO_MAX96712 || VIDEO_OMAP4 || VIDEO_ROCKCHIP_VDEC || VIDEO_SUNXI_CEDRUS || VIDEO_TEGRA",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": "( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_PLATFORM_SUPPORT )[!(( ! MEDIA_SUPPORT_FILTER ) && y)]"
        }
    ],
    "DVB_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (MEDIA_DIGITAL_TV_SUPPORT) && (( I2C || I2C = n ))",
            "restrict": "( MEDIA_DIGITAL_TV_SUPPORT )[!(y)]"
        }
    ],
    "VIDEO_V4L2_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (I2C && VIDEO_DEV)",
            "restrict": "( y )[!(( VIDEO_DEV ) && y)]"
        }
    ],
    "VIDEO_V4L2_SUBDEV_API": [
        {
            "type": "bool",
            "rev_select": "V4L2_FLASH_LED_CLASS || STA2X11_VIP || VIDEO_COBALT || VIDEO_IPU3_CIO2 || VIDEO_MUX || VIDEO_ATMEL_ISC || VIDEO_ATMEL_XISC || VIDEO_MICROCHIP_CSI2DC || VIDEO_CADENCE_CSI2RX || VIDEO_CADENCE_CSI2TX || VIDEO_IMX_MIPI_CSIS || VIDEO_QCOM_CAMSS || VIDEO_RCAR_ISP || VIDEO_RCAR_CSI2 || VIDEO_RCAR_VIN || VIDEO_RENESAS_VSP1 || VIDEO_ROCKCHIP_ISP1 || VIDEO_SAMSUNG_EXYNOS4_IS || VIDEO_S3C_CAMIF || VIDEO_SUN4I_CSI || VIDEO_SUN6I_CSI || VIDEO_SUN6I_MIPI_CSI2 || VIDEO_SUN8I_A83T_MIPI_CSI2 || VIDEO_TI_CAL || VIDEO_AM437X_VPFE || VIDEO_OMAP3 || VIDEO_XILINX || VIDEO_VIMC || VIDEO_AR0521 || VIDEO_HI556 || VIDEO_HI846 || VIDEO_HI847 || VIDEO_IMX208 || VIDEO_IMX214 || VIDEO_IMX219 || VIDEO_IMX258 || VIDEO_IMX274 || VIDEO_IMX290 || VIDEO_IMX319 || VIDEO_IMX334 || VIDEO_IMX335 || VIDEO_IMX355 || VIDEO_IMX412 || VIDEO_MT9M001 || VIDEO_MT9M032 || VIDEO_MT9P031 || VIDEO_MT9T001 || VIDEO_MT9V032 || VIDEO_NOON010PC30 || VIDEO_OG01A1B || VIDEO_OV02A10 || VIDEO_OV08D10 || VIDEO_OV13858 || VIDEO_OV13B10 || VIDEO_OV2740 || VIDEO_OV5640 || VIDEO_OV5645 || VIDEO_OV5647 || VIDEO_OV5648 || VIDEO_OV5670 || VIDEO_OV5675 || VIDEO_OV7251 || VIDEO_OV8856 || VIDEO_OV8865 || VIDEO_OV9282 || VIDEO_OV9650 || VIDEO_OV9734 || VIDEO_RDACM20 || VIDEO_RDACM21 || VIDEO_S5C73M3 || VIDEO_S5K4ECGX || VIDEO_S5K5BAF || VIDEO_S5K6A3 || VIDEO_S5K6AA || VIDEO_CCS || VIDEO_ET8EK8 || VIDEO_M5MOLS || VIDEO_AK7375 || VIDEO_DW9714 || VIDEO_DW9768 || VIDEO_DW9807_VCM || VIDEO_TDA1997X || VIDEO_ADV7180 || VIDEO_ADV748X || VIDEO_ADV7604 || VIDEO_ADV7842 || VIDEO_ISL7998X || VIDEO_MAX9286 || VIDEO_TC358743 || VIDEO_AD9389B || VIDEO_ADV7511 || VIDEO_ST_MIPID02 || VIDEO_GS1662 || VIDEO_ATOMISP || VIDEO_IMX_MEDIA || VIDEO_IPU3_IMGU || VIDEO_MAX96712 || VIDEO_OMAP4",
            "dep": "( MEDIA_SUPPORT ) && (VIDEO_DEV && MEDIA_CONTROLLER)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEO_FIXED_MINOR_RANGES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEO_TUNER": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007 || VIDEO_PVRUSB2 || VIDEO_AU0828_V4L2 || VIDEO_CX231XX || VIDEO_TM6000 || VIDEO_EM28XX || VIDEO_IVTV || VIDEO_MXB || VIDEO_BT848 || VIDEO_CX18 || VIDEO_CX23885 || VIDEO_CX88 || VIDEO_SAA7134 || VIDEO_SAA7164",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "V4L2_JPEG_HELPER": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CODA || VIDEO_IMX8_JPEG",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "V4L2_H264": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MEDIATEK_VCODEC || VIDEO_TEGRA_VDE || VIDEO_HANTRO || VIDEO_ROCKCHIP_VDEC",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "V4L2_VP9": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MEDIATEK_VCODEC || VIDEO_HANTRO || VIDEO_ROCKCHIP_VDEC",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "V4L2_MEM2MEM_DEV": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MEM2MEM_DEINTERLACE || VIDEO_ALLEGRO_DVT || VIDEO_MESON_GE2D || VIDEO_AMPHION_VPU || VIDEO_CODA || VIDEO_MEDIATEK_JPEG || VIDEO_MEDIATEK_MDP || VIDEO_MEDIATEK_VCODEC || VIDEO_TEGRA_VDE || VIDEO_IMX_PXP || VIDEO_MX2_EMMAPRP || VIDEO_IMX8_JPEG || VIDEO_QCOM_VENUS || VIDEO_RENESAS_FDP1 || VIDEO_RENESAS_JPU || VIDEO_ROCKCHIP_RGA || VIDEO_SAMSUNG_EXYNOS_GSC || VIDEO_S5P_FIMC || VIDEO_SAMSUNG_S5P_G2D || VIDEO_SAMSUNG_S5P_JPEG || VIDEO_STI_BDISP || VIDEO_STI_DELTA_DRIVER || VIDEO_STI_HVA || VIDEO_STM32_DMA2D || VIDEO_SUN8I_DEINTERLACE || VIDEO_SUN8I_ROTATE || VIDEO_TI_VPE || VIDEO_VIM2M || VIDEO_VICODEC || VIDEO_HANTRO || VIDEO_IMX_MEDIA || VIDEO_MESON_VDEC || VIDEO_ROCKCHIP_VDEC || VIDEO_SUNXI_CEDRUS",
            "dep": "( MEDIA_SUPPORT ) && (VIDEOBUF2_CORE)",
            "restrict": ""
        }
    ],
    "V4L2_FLASH_LED_CLASS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (VIDEO_DEV) && (LEDS_CLASS_FLASH)",
            "restrict": ""
        }
    ],
    "V4L2_FWNODE": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IPU3_CIO2 || VIDEO_MUX || VIDEO_ATMEL_ISC || VIDEO_ATMEL_XISC || VIDEO_ATMEL_ISI || VIDEO_MICROCHIP_CSI2DC || VIDEO_CADENCE_CSI2RX || VIDEO_CADENCE_CSI2TX || VIDEO_PXA27x || VIDEO_IMX_MIPI_CSIS || VIDEO_QCOM_CAMSS || VIDEO_RENESAS_CEU || VIDEO_RCAR_ISP || VIDEO_RCAR_CSI2 || VIDEO_RCAR_VIN || VIDEO_ROCKCHIP_ISP1 || VIDEO_SAMSUNG_EXYNOS4_IS || VIDEO_S5P_MIPI_CSIS || VIDEO_STM32_DCMI || VIDEO_SUN4I_CSI || VIDEO_SUN6I_CSI || VIDEO_SUN6I_MIPI_CSI2 || VIDEO_SUN8I_A83T_MIPI_CSI2 || VIDEO_TI_CAL || VIDEO_AM437X_VPFE || VIDEO_DAVINCI_VPIF_CAPTURE || VIDEO_OMAP3 || VIDEO_XILINX || VIDEO_AR0521 || VIDEO_HI556 || VIDEO_HI846 || VIDEO_HI847 || VIDEO_IMX214 || VIDEO_IMX219 || VIDEO_IMX290 || VIDEO_IMX334 || VIDEO_IMX335 || VIDEO_IMX412 || VIDEO_MT9M111 || VIDEO_MT9P031 || VIDEO_MT9V032 || VIDEO_OG01A1B || VIDEO_OV02A10 || VIDEO_OV08D10 || VIDEO_OV13858 || VIDEO_OV13B10 || VIDEO_OV2659 || VIDEO_OV2680 || VIDEO_OV2685 || VIDEO_OV2740 || VIDEO_OV5640 || VIDEO_OV5645 || VIDEO_OV5647 || VIDEO_OV5648 || VIDEO_OV5670 || VIDEO_OV5675 || VIDEO_OV5693 || VIDEO_OV5695 || VIDEO_OV7251 || VIDEO_OV7670 || VIDEO_OV772X || VIDEO_OV8856 || VIDEO_OV8865 || VIDEO_OV9282 || VIDEO_OV9734 || VIDEO_RDACM20 || VIDEO_RDACM21 || VIDEO_S5C73M3 || VIDEO_S5K5BAF || VIDEO_CCS || VIDEO_ET8EK8 || VIDEO_DW9768 || VIDEO_TDA1997X || VIDEO_ADV748X || VIDEO_ADV7604 || VIDEO_ISL7998X || VIDEO_MAX9286 || VIDEO_TC358743 || VIDEO_TVP514X || VIDEO_TVP5150 || VIDEO_TVP7002 || VIDEO_ST_MIPID02 || VIDEO_IMX_MEDIA || VIDEO_MAX96712 || VIDEO_TEGRA",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "V4L2_ASYNC": [
        {
            "type": "tristate",
            "rev_select": "V4L2_FLASH_LED_CLASS || V4L2_FWNODE || VIDEO_RCAR_DRIF || VIDEO_OV2640 || VIDEO_AD5820 || VIDEO_AK7375 || VIDEO_DW9714 || VIDEO_DW9807_VCM || VIDEO_ADP1653 || VIDEO_LM3560 || VIDEO_LM3646 || VIDEO_ADV7180 || VIDEO_TW9910 || VIDEO_ADV7343 || VIDEO_THS8200 || VIDEO_UPD64031A || SDR_MAX2175 || VIDEO_THS7303",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF_GEN": [
        {
            "type": "tristate",
            "rev_select": "VIDEOBUF_DMA_SG || VIDEOBUF_VMALLOC || VIDEOBUF_DMA_CONTIG || USB_ZR364XX",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF_DMA_SG": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BT848 || VIDEO_SAA7146_VV",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF_VMALLOC": [
        {
            "type": "tristate",
            "rev_select": "USB_ZR364XX || VIDEO_TM6000 || VIDEO_CX18 || VIDEO_ATOMISP",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF_DMA_CONTIG": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_VIU || VIDEO_DM6446_CCDC || VIDEO_DM355_CCDC || VIDEO_DM365_ISIF",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "MEDIA_CONTROLLER_DVB": [
        {
            "type": "bool",
            "rev_select": "VIDEO_AU0828",
            "dep": "( MEDIA_SUPPORT ) && (MEDIA_CONTROLLER && DVB_CORE)",
            "restrict": ""
        }
    ],
    "MEDIA_CONTROLLER_REQUEST_API": [
        {
            "type": "bool",
            "rev_select": "VIDEO_MEDIATEK_VCODEC || VIDEO_TEGRA_VDE || VIDEO_VIM2M || VIDEO_VICODEC || VIDEO_VIVID || VIDEO_HANTRO || VIDEO_ROCKCHIP_VDEC || VIDEO_SUNXI_CEDRUS",
            "dep": "( MEDIA_SUPPORT ) && (MEDIA_CONTROLLER)",
            "restrict": ""
        }
    ],
    "DVB_MMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE) && (VIDEO_DEV = y || VIDEO_DEV = DVB_CORE)",
            "restrict": ""
        }
    ],
    "DVB_NET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (NET && INET && DVB_CORE)",
            "restrict": "( ( NET && INET ) )[!(( DVB_CORE ) && y)]"
        }
    ],
    "DVB_MAX_ADAPTERS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE)",
            "restrict": "( 1 255 ) || ( 16 )[!(( DVB_CORE ) && y)]"
        }
    ],
    "DVB_DYNAMIC_MINORS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE)",
            "restrict": "( y )[!(( DVB_CORE ) && y)]"
        }
    ],
    "DVB_DEMUX_SECTION_LOSS_LOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE)",
            "restrict": ""
        }
    ],
    "DVB_ULE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE)",
            "restrict": ""
        }
    ],
    "MEDIA_USB_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEO_CPIA2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (USB && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_GSPCA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV) && (INPUT || INPUT = n)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_BENQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_CONEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_CPIA1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_DTCS033": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_ETOMS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_FINEPIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_JEILINJ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_JL2005BCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_KINECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_KONICA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_MARS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_MR97310A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_NW80X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_OV519": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_OV534": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_OV534_9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_PAC207": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_PAC7302": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_PAC7311": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SE401": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SN9C2028": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SN9C20X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SONIXB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SONIXJ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA1528": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA505": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA506": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA508": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SPCA561": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SQ905": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SQ905C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SQ930X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_STK014": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_STK1135": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_STV0680": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_SUNPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_T613": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_TOPRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_TOUPTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_TV8532": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_VC032X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_VICAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_XIRLINK_CIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GSPCA_ZC3XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_GL860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_M5602": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (VIDEO_DEV && USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_STV06XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && ( USB_GSPCA && VIDEO_DEV ) && (USB_GSPCA)",
            "restrict": ""
        }
    ],
    "USB_PWC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_PWC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (USB_PWC)",
            "restrict": ""
        }
    ],
    "USB_PWC_INPUT_EVDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (USB_PWC && ( USB_PWC = INPUT || INPUT = y ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_S2255": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_USBTV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV && SND)",
            "restrict": ""
        }
    ],
    "USB_VIDEO_CLASS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_VIDEO_CLASS_INPUT_EVDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (USB_VIDEO_CLASS) && (USB_VIDEO_CLASS = INPUT || INPUT = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_ZR364XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_GO7007": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_DEV && I2C) && (SND && USB)",
            "restrict": ""
        }
    ],
    "VIDEO_GO7007_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_GO7007 && USB)",
            "restrict": ""
        }
    ],
    "VIDEO_GO7007_LOADER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_GO7007)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_GO7007_USB_S2250_BOARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_GO7007_USB && USB)",
            "restrict": ""
        }
    ],
    "VIDEO_HDPVR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_PVRUSB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_PVRUSB2_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_PVRUSB2 && SYSFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_PVRUSB2_DVB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_PVRUSB2 && DVB_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_PVRUSB2_DEBUGIFC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_PVRUSB2_SYSFS)",
            "restrict": ""
        }
    ],
    "VIDEO_STK1160_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_STK1160": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_STK1160_COMMON)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_AU0828": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (I2C && INPUT && DVB_CORE && USB && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_AU0828_V4L2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_AU0828) && (VIDEO_DEV = y || VIDEO_DEV = VIDEO_AU0828)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_AU0828_RC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (RC_CORE) && (! ( RC_CORE = m && VIDEO_AU0828 = y )) && (VIDEO_AU0828)",
            "restrict": ""
        }
    ],
    "VIDEO_CX231XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_DEV && I2C && I2C_MUX)",
            "restrict": ""
        }
    ],
    "VIDEO_CX231XX_RC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (RC_CORE = y || RC_CORE = VIDEO_CX231XX) && (VIDEO_CX231XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_CX231XX_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_CX231XX && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_CX231XX_DVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_CX231XX && DVB_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_TM6000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_DEV && I2C && INPUT && RC_CORE && USB)",
            "restrict": ""
        }
    ],
    "VIDEO_TM6000_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_TM6000 && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_TM6000_DVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_TM6000 && DVB_CORE && USB)",
            "restrict": ""
        }
    ],
    "DVB_AS102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && USB && I2C && INPUT)",
            "restrict": ""
        }
    ],
    "DVB_B2C2_FLEXCOP_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": ""
        }
    ],
    "DVB_B2C2_FLEXCOP_USB_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_B2C2_FLEXCOP_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && USB && I2C && ( RC_CORE || RC_CORE = n ))",
            "restrict": ""
        }
    ],
    "DVB_USB_AF9015": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2 && I2C_MUX)",
            "restrict": ""
        }
    ],
    "DVB_USB_AF9035": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_ANYSEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_AU6610": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_AZ6007": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_CE6230": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_DVBSKY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_EC168": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_GL861": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_LME2510": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "DVB_USB_MXL111SF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB_RTL28XXU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2 && I2C_MUX)",
            "restrict": ""
        }
    ],
    "DVB_USB_ZD1301": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB_V2 ) && (DVB_USB_V2)",
            "restrict": ""
        }
    ],
    "DVB_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && USB && I2C && RC_CORE)",
            "restrict": ""
        }
    ],
    "DVB_USB_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_A800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_AF9005": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_AF9005_REMOTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB_AF9005)",
            "restrict": ""
        }
    ],
    "DVB_USB_AZ6027": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_CINERGY_T2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_CXUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_CXUSB_ANALOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB_CXUSB && VIDEO_DEV) && (VIDEO_DEV = y || VIDEO_DEV = DVB_USB_CXUSB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DIB0700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DIB3000MC": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_A800 || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIBUSB_MC || DVB_USB_NOVA_T_USB2 || DVB_USB_UMT_010",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DIBUSB_MB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB) && (DVB_DIB3000MC || ! DVB_DIB3000MC)",
            "restrict": ""
        }
    ],
    "DVB_USB_DIBUSB_MB_FAULTY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB_DIBUSB_MB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DIBUSB_MC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DIGITV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DTT200U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DTV5100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_DW2102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_GP8PSK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_M920X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_NOVA_T_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_OPERA1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_PCTV452E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_TECHNISAT_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_TTUSB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_UMT_010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_VP702X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "DVB_USB_VP7045": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && ( DVB_USB ) && (DVB_USB)",
            "restrict": ""
        }
    ],
    "SMS_USB_DRV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && HAS_DMA) && (! RC_CORE || RC_CORE)",
            "restrict": ""
        }
    ],
    "DVB_TTUSB_BUDGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && USB && I2C && PCI)",
            "restrict": ""
        }
    ],
    "DVB_TTUSB_DEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( I2C && MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && USB && INPUT && PCI)",
            "restrict": ""
        }
    ],
    "VIDEO_EM28XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_EM28XX_V4L2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_EM28XX)",
            "restrict": ""
        }
    ],
    "VIDEO_EM28XX_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_EM28XX && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_EM28XX_DVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (VIDEO_EM28XX && DVB_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_EM28XX_RC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( ( MEDIA_CAMERA_SUPPORT || MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) ) && (RC_CORE) && (VIDEO_EM28XX) && (! ( RC_CORE = m && VIDEO_EM28XX = y ))",
            "restrict": "( VIDEO_EM28XX )[!(y)]"
        }
    ],
    "USB_AIRSPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_SDR_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_HACKRF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_SDR_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_MSI2500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( USB && MEDIA_SUPPORT ) && ( MEDIA_USB_SUPPORT ) && ( MEDIA_SDR_SUPPORT ) && (VIDEO_DEV && SPI)",
            "restrict": ""
        }
    ],
    "MEDIA_PCI_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI )",
            "restrict": ""
        }
    ],
    "VIDEO_MEYE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (PCI && VIDEO_DEV) && (SONY_LAPTOP) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SOLO6X10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (PCI && VIDEO_DEV && SND && I2C)",
            "restrict": ""
        }
    ],
    "STA2X11_VIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (PCI && VIDEO_DEV && I2C) && (STA2X11 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_TW5864": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV && PCI)",
            "restrict": ""
        }
    ],
    "VIDEO_TW68": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (VIDEO_DEV && PCI)",
            "restrict": ""
        }
    ],
    "VIDEO_TW686X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_CAMERA_SUPPORT ) && (PCI && VIDEO_DEV && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_DT3155": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (PCI && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IVTV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_DEV && PCI && I2C) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_IVTV_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_IVTV && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_FB_IVTV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_IVTV && FB)",
            "restrict": ""
        }
    ],
    "VIDEO_FB_IVTV_FORCE_PAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (VIDEO_FB_IVTV && X86_PAT)",
            "restrict": ""
        }
    ],
    "VIDEO_HEXIUM_GEMINI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (PCI && VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_HEXIUM_ORION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (PCI && VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_MXB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT ) && (PCI && VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_BT848": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (PCI && I2C && VIDEO_DEV) && (RC_CORE) && (MEDIA_RADIO_SUPPORT)",
            "restrict": ""
        }
    ],
    "DVB_BT8XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C && VIDEO_BT848)",
            "restrict": ""
        }
    ],
    "VIDEO_COBALT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_DEV && I2C) && (PCI_MSI && MTD_COMPLEX_MAPPINGS) && (( GPIOLIB && DRM_I2C_ADV7511 = n ) || COMPILE_TEST) && (SND) && (MTD)",
            "restrict": ""
        }
    ],
    "VIDEO_CX18": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_DEV && DVB_CORE && PCI && I2C) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_CX18_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX18 && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_CX23885": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && VIDEO_DEV && PCI && I2C && INPUT && SND) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "MEDIA_ALTERA_CI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX23885 && DVB_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_CX25821": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_DEV && PCI && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_CX25821_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX25821 && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_CX88": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_DEV && PCI && I2C && RC_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_CX88_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX88 && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_CX88_BLACKBIRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX88)",
            "restrict": ""
        }
    ],
    "VIDEO_CX88_DVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX88 && DVB_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_CX88_ENABLE_VP3054": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX88_DVB && DVB_MT352)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_CX88_VP3054": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX88_DVB && VIDEO_CX88_ENABLE_VP3054)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_CX88_MPEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_CX88_DVB || VIDEO_CX88_BLACKBIRD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_SAA7134": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_DEV && PCI && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7134_ALSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_SAA7134 && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7134_RC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (RC_CORE) && (VIDEO_SAA7134) && (! ( RC_CORE = m && VIDEO_SAA7134 = y ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_SAA7134_DVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_SAA7134 && DVB_CORE)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7134_GO7007": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_SAA7134) && (VIDEO_GO7007)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7164": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && VIDEO_DEV && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_B2C2_FLEXCOP_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": ""
        }
    ],
    "DVB_B2C2_FLEXCOP_PCI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_B2C2_FLEXCOP_PCI)",
            "restrict": ""
        }
    ],
    "DVB_DDBRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_DDBRIDGE_MSIENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_DDBRIDGE) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "DVB_DM1105": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C && I2C_ALGOBIT) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "MANTIS_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (PCI && I2C && INPUT && RC_CORE)",
            "restrict": ""
        }
    ],
    "DVB_MANTIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (MANTIS_CORE && DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_HOPPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (MANTIS_CORE && DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_NETUP_UNIDVB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && VIDEO_DEV && PCI && I2C && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "DVB_NGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_PLUTO2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_PT1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_PT3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_SMIPCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "DVB_BUDGET_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && PCI && I2C)",
            "restrict": ""
        }
    ],
    "DVB_BUDGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_BUDGET_CORE && I2C)",
            "restrict": ""
        }
    ],
    "DVB_BUDGET_CI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_BUDGET_CORE && I2C) && (RC_CORE)",
            "restrict": ""
        }
    ],
    "DVB_BUDGET_AV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_BUDGET_CORE && I2C) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_PCI_SKELETON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && (SAMPLES) && (MEDIA_TEST_SUPPORT) && (PCI && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IPU3_CIO2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && (VIDEO_DEV && PCI) && (ACPI || COMPILE_TEST) && (X86)",
            "restrict": ""
        }
    ],
    "CIO2_BRIDGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( PCI ) && ( MEDIA_PCI_SUPPORT ) && (VIDEO_IPU3_CIO2 && ACPI)",
            "restrict": ""
        }
    ],
    "RADIO_ADAPTERS": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BT848 || SND_ES1968_RADIO || SND_FM801_TEA575X_BOOL",
            "dep": "( MEDIA_SUPPORT ) && (VIDEO_DEV) && (MEDIA_RADIO_SUPPORT)",
            "restrict": ""
        }
    ],
    "RADIO_MAXIRADIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (PCI)",
            "restrict": ""
        }
    ],
    "RADIO_SAA7706H": [
        {
            "type": "tristate",
            "rev_select": "RADIO_TIMBERDALE",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C)",
            "restrict": ""
        }
    ],
    "RADIO_SHARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "RADIO_SHARK2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "RADIO_SI4713": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS )",
            "restrict": ""
        }
    ],
    "RADIO_SI476X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C) && (MFD_SI476X_CORE) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "RADIO_TEA575X": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BT848 || RADIO_MAXIRADIO || RADIO_SHARK || RADIO_SF16FMR2 || SND_ES1968_RADIO || SND_FM801_TEA575X_BOOL",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS )",
            "restrict": ""
        }
    ],
    "RADIO_TEA5764": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C)",
            "restrict": ""
        }
    ],
    "RADIO_TEA5764_XTAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (RADIO_TEA5764 = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RADIO_TEF6862": [
        {
            "type": "tristate",
            "rev_select": "RADIO_TIMBERDALE",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C)",
            "restrict": ""
        }
    ],
    "RADIO_TIMBERDALE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (MFD_TIMBERDALE) && (I2C)",
            "restrict": ""
        }
    ],
    "RADIO_WL1273": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C)",
            "restrict": ""
        }
    ],
    "USB_DSBR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "USB_KEENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "USB_MA901": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "USB_MR800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "USB_RAREMONO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB)",
            "restrict": ""
        }
    ],
    "RADIO_SI470X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_SI470X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB && RADIO_SI470X)",
            "restrict": ""
        }
    ],
    "I2C_SI470X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C && RADIO_SI470X)",
            "restrict": ""
        }
    ],
    "USB_SI4713": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (USB && I2C && RADIO_SI4713)",
            "restrict": ""
        }
    ],
    "PLATFORM_SI4713": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C && RADIO_SI4713)",
            "restrict": ""
        }
    ],
    "I2C_SI4713": [
        {
            "type": "tristate",
            "rev_select": "USB_SI4713 || PLATFORM_SI4713",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (I2C && RADIO_SI4713)",
            "restrict": ""
        }
    ],
    "RADIO_WL128X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (VIDEO_DEV && RFKILL && TTY && TI_ST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "V4L_RADIO_ISA_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_AZTECH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_AZTECH_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_AZTECH = y)",
            "restrict": "( 350 )[!(y)]"
        }
    ],
    "RADIO_CADET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_GEMTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_GEMTEK_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_GEMTEK = y)",
            "restrict": "( \"34c\" )[!(y)]"
        }
    ],
    "RADIO_GEMTEK_PROBE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_GEMTEK = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RADIO_ISA": [
        {
            "type": "tristate",
            "rev_select": "RADIO_AZTECH || RADIO_GEMTEK || RADIO_RTRACK || RADIO_RTRACK2 || RADIO_TERRATEC || RADIO_TRUST || RADIO_TYPHOON || RADIO_ZOLTRIX",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_MIROPCM20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST) && (ISA_DMA_API && SND)",
            "restrict": ""
        }
    ],
    "RADIO_RTRACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_RTRACK2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_RTRACK2_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_RTRACK2 = y)",
            "restrict": "( \"30c\" )[!(y)]"
        }
    ],
    "RADIO_RTRACK_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_RTRACK = y)",
            "restrict": "( \"30f\" )[!(y)]"
        }
    ],
    "RADIO_SF16FMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_SF16FMR2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_TERRATEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_TRUST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_TRUST_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_TRUST = y)",
            "restrict": "( 350 )[!(y)]"
        }
    ],
    "RADIO_TYPHOON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_TYPHOON_MUTEFREQ": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_TYPHOON = y)",
            "restrict": "( 87500 )[!(y)]"
        }
    ],
    "RADIO_TYPHOON_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_TYPHOON = y)",
            "restrict": "( 316 )[!(y)]"
        }
    ],
    "RADIO_ZOLTRIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (ISA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RADIO_ZOLTRIX_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( RADIO_ADAPTERS ) && ( V4L_RADIO_ISA_DRIVERS ) && (RADIO_ZOLTRIX = y)",
            "restrict": "( \"20c\" )[!(y)]"
        }
    ],
    "MEDIA_PLATFORM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT )",
            "restrict": ""
        }
    ],
    "V4L_PLATFORM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": ""
        }
    ],
    "SDR_PLATFORM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (MEDIA_SDR_SUPPORT)",
            "restrict": ""
        }
    ],
    "DVB_PLATFORM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (MEDIA_DIGITAL_TV_SUPPORT)",
            "restrict": ""
        }
    ],
    "V4L_MEM2MEM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MEM2MEM_DEINTERLACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIDEO_MUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF)",
            "restrict": ""
        }
    ],
    "VIDEO_ALLEGRO_DVT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_ZYNQMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_MESON_GE2D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_AMPHION_VPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (ARCH_MXC || COMPILE_TEST) && (MEDIA_SUPPORT) && (VIDEO_DEV && MAILBOX)",
            "restrict": ""
        }
    ],
    "VIDEO_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATMEL_ISC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && COMMON_CLK) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ATMEL_XISC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && COMMON_CLK) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ATMEL_ISC_BASE": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ATMEL_ISC || VIDEO_ATMEL_XISC",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VIDEO_ATMEL_ISI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_MICROCHIP_CSI2DC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && COMMON_CLK && OF) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_CADENCE_CSI2RX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_CADENCE_CSI2TX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_CODA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV && OF && ( ARCH_MXC || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "VIDEO_IMX_VDOA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": "( VIDEO_CODA )[!(y) && (SOC_IMX6Q || COMPILE_TEST)]"
        }
    ],
    "VIDEO_PXA27x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (PXA27x || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_CAFE_CCIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (PCI && I2C && VIDEO_DEV) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "VIDEO_MMP_CAMERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (I2C && VIDEO_DEV) && (ARCH_MMP || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "VIDEO_MEDIATEK_JPEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (MTK_IOMMU_V1 || MTK_IOMMU || COMPILE_TEST) && (VIDEO_DEV) && (ARCH_MEDIATEK || COMPILE_TEST) && (MTK_SMI || ( COMPILE_TEST && MTK_SMI = n ))",
            "restrict": ""
        }
    ],
    "VIDEO_MEDIATEK_MDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (MTK_IOMMU || COMPILE_TEST) && (VIDEO_DEV) && (ARCH_MEDIATEK || COMPILE_TEST) && (MTK_SMI || ( COMPILE_TEST && MTK_SMI = n ))",
            "restrict": ""
        }
    ],
    "VIDEO_MEDIATEK_VCODEC_SCP": [
        {
            "type": "bool",
            "rev_select": "VIDEO_MEDIATEK_VCODEC[MTK_SCP]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": ""
        }
    ],
    "VIDEO_MEDIATEK_VCODEC_VPU": [
        {
            "type": "bool",
            "rev_select": "VIDEO_MEDIATEK_VCODEC[VIDEO_MEDIATEK_VPU]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": ""
        }
    ],
    "VIDEO_MEDIATEK_VCODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (MTK_IOMMU || COMPILE_TEST) && (VIDEO_DEV) && (ARCH_MEDIATEK || COMPILE_TEST) && (VIDEO_MEDIATEK_VPU || MTK_SCP) && (VIDEO_MEDIATEK_VPU || ! VIDEO_MEDIATEK_VPU) && (MTK_SCP || ! MTK_SCP) && (MTK_SMI || ( COMPILE_TEST && MTK_SMI = n ))",
            "restrict": ""
        }
    ],
    "VIDEO_MEDIATEK_VPU": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MEDIATEK_MDP",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_TEGRA_VDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (ARCH_TEGRA || COMPILE_TEST) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX_MIPI_CSIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (ARCH_MXC || COMPILE_TEST) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_VIU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && ( PPC_MPC512x || COMPILE_TEST ) && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX_PXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV && ( ARCH_MXC || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "VIDEO_MX2_EMMAPRP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (SOC_IMX27 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX8_JPEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (ARCH_MXC || COMPILE_TEST) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_QCOM_CAMSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (( ARCH_QCOM && IOMMU_DMA ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_QCOM_VENUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV && QCOM_SMEM) && (( ARCH_QCOM && IOMMU_DMA ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RENESAS_CEU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_SHMOBILE || ARCH_R7S72100 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RCAR_ISP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SH_VOU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && I2C) && (ARCH_SHMOBILE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RCAR_CSI2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RCAR_VIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RENESAS_FCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (ARCH_RENESAS || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "VIDEO_RENESAS_FDP1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_RENESAS || COMPILE_TEST) && (( ! ARM64 && ! VIDEO_RENESAS_FCP ) || VIDEO_RENESAS_FCP)",
            "restrict": ""
        }
    ],
    "VIDEO_RENESAS_JPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RENESAS_VSP1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_RENESAS || COMPILE_TEST) && (( ! ARM64 && ! VIDEO_RENESAS_FCP ) || VIDEO_RENESAS_FCP)",
            "restrict": ""
        }
    ],
    "VIDEO_RCAR_DRIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (SDR_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ROCKCHIP_RGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ROCKCHIP_ISP1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF) && (ARCH_ROCKCHIP || ARCH_MXC || COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VIDEO_SAMSUNG_EXYNOS_GSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SAMSUNG_EXYNOS4_IS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF && COMMON_CLK) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_EXYNOS4_IS_COMMON": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_S5P_FIMC || VIDEO_EXYNOS_FIMC_LITE || VIDEO_EXYNOS4_ISP_DMA_CAPTURE",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && ( VIDEO_SAMSUNG_EXYNOS4_IS )",
            "restrict": ""
        }
    ],
    "VIDEO_S5P_FIMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && ( VIDEO_SAMSUNG_EXYNOS4_IS ) && (I2C) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIDEO_S5P_MIPI_CSIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && ( VIDEO_SAMSUNG_EXYNOS4_IS ) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "VIDEO_EXYNOS_FIMC_LITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && ( VIDEO_SAMSUNG_EXYNOS4_IS ) && (I2C) && (SOC_EXYNOS4412 || SOC_EXYNOS5250 || COMPILE_TEST) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIDEO_EXYNOS4_FIMC_IS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && ( VIDEO_SAMSUNG_EXYNOS4_IS ) && (I2C) && (HAS_DMA) && (OF)",
            "restrict": ""
        }
    ],
    "VIDEO_EXYNOS4_ISP_DMA_CAPTURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && ( VIDEO_SAMSUNG_EXYNOS4_IS ) && (VIDEO_EXYNOS4_FIMC_IS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_S3C_CAMIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && I2C && PM) && (ARCH_S3C64XX || PLAT_S3C24XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SAMSUNG_S5P_G2D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SAMSUNG_S5P_JPEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SAMSUNG_S5P_MFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_STI_BDISP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DVB_C8SECTPFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (DVB_PLATFORM_DRIVERS) && (PINCTRL && DVB_CORE && I2C) && (ARCH_STI || ARCH_MULTIPLATFORM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_STI_DELTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_STI_DELTA_MJPEG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_STI_DELTA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_STI_DELTA_DRIVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_STI_DELTA) && (VIDEO_STI_DELTA_MJPEG)",
            "restrict": "( VIDEO_STI_DELTA_MJPEG )[!(y)]"
        }
    ],
    "VIDEO_STI_HVA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_STI_HVA_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_STI_HVA) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "VIDEO_STM32_DCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_STM32_DMA2D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SUN4I_CSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && COMMON_CLK && RESET_CONTROLLER && HAS_DMA) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SUN6I_CSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && COMMON_CLK && RESET_CONTROLLER && HAS_DMA) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SUN6I_MIPI_CSI2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS && VIDEO_DEV) && (ARCH_SUNXI || COMPILE_TEST) && (PM && COMMON_CLK && RESET_CONTROLLER) && (PHY_SUN6I_MIPI_DPHY)",
            "restrict": ""
        }
    ],
    "VIDEO_SUN8I_A83T_MIPI_CSI2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS && VIDEO_DEV) && (ARCH_SUNXI || COMPILE_TEST) && (PM && COMMON_CLK && RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "VIDEO_SUN8I_DEINTERLACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_SUNXI || COMPILE_TEST) && (COMMON_CLK && RESET_CONTROLLER && OF) && (PM)",
            "restrict": ""
        }
    ],
    "VIDEO_SUN8I_ROTATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (ARCH_SUNXI || COMPILE_TEST) && (COMMON_CLK && RESET_CONTROLLER && OF) && (PM)",
            "restrict": ""
        }
    ],
    "VIDEO_TI_VPDMA": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_TI_VPE",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": ""
        }
    ],
    "VIDEO_TI_SC": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_TI_VPE",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": ""
        }
    ],
    "VIDEO_TI_CSC": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_TI_VPE",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS )",
            "restrict": ""
        }
    ],
    "VIDEO_TI_CAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_DEV) && (V4L_PLATFORM_DRIVERS) && (SOC_DRA7XX || ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_TI_CAL_MC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_TI_CAL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VIDEO_TI_VPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_MEM2MEM_DRIVERS) && (VIDEO_DEV) && (SOC_DRA7XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_TI_VPE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_TI_VPE)",
            "restrict": ""
        }
    ],
    "VIDEO_AM437X_VPFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (SOC_AM43XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_DAVINCI_VPIF_DISPLAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_DAVINCI || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_DAVINCI_VPIF_CAPTURE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_DAVINCI || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_DM6446_CCDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_DAVINCI || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_DM355_CCDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_DAVINCI || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_DM365_ISIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_DAVINCI || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_DAVINCI_VPBE_DISPLAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV) && (ARCH_DAVINCI || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_OMAP2_VOUT_VRFB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_OMAP2_VOUT && ( OMAP2_VRFB || COMPILE_TEST ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_OMAP2_VOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (MMU) && (FB_OMAP2 || ( COMPILE_TEST && FB_OMAP2 = n )) && (ARCH_OMAP2 || ARCH_OMAP3 || COMPILE_TEST) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OMAP3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && I2C) && (( ARCH_OMAP3 && OMAP_IOMMU ) || COMPILE_TEST) && (COMMON_CLK && OF)",
            "restrict": ""
        }
    ],
    "VIDEO_OMAP3_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_OMAP3)",
            "restrict": ""
        }
    ],
    "VIDEO_VIA_CAMERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (FB_VIA && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (V4L_PLATFORM_DRIVERS) && (VIDEO_DEV && OF && HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIDEO_XILINX_CSI2RXSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_XILINX)",
            "restrict": ""
        }
    ],
    "VIDEO_XILINX_TPG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_XILINX)",
            "restrict": ""
        }
    ],
    "VIDEO_XILINX_VTC": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_XILINX_TPG",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && ( MEDIA_PLATFORM_DRIVERS ) && (VIDEO_XILINX)",
            "restrict": ""
        }
    ],
    "SMS_SDIO_DRV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_PLATFORM_SUPPORT ) && (DVB_CORE && HAS_DMA) && (MMC) && (! RC_CORE || RC_CORE)",
            "restrict": ""
        }
    ],
    "V4L_TEST_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_VIM2M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( V4L_TEST_DRIVERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_VICODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( V4L_TEST_DRIVERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_VIMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( V4L_TEST_DRIVERS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_VIVID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( V4L_TEST_DRIVERS ) && (VIDEO_DEV && ! SPARC32 && ! SPARC64 && FB) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIDEO_VIVID_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( V4L_TEST_DRIVERS ) && (VIDEO_VIVID)",
            "restrict": ""
        }
    ],
    "VIDEO_VIVID_MAX_DEVS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( V4L_TEST_DRIVERS ) && (VIDEO_VIVID)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "DVB_TEST_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && (DVB_CORE && MEDIA_SUPPORT && I2C)",
            "restrict": ""
        }
    ],
    "DVB_VIDTV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_TEST_SUPPORT ) && ( DVB_TEST_DRIVERS ) && (DVB_CORE && MEDIA_SUPPORT && I2C)",
            "restrict": ""
        }
    ],
    "DVB_FIREDTV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( DVB_CORE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "DVB_FIREDTV_INPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( DVB_CORE && FIREWIRE ) && ( DVB_FIREDTV )",
            "restrict": "( INPUT = y || ( INPUT = m && DVB_FIREDTV = m ) )[!(y)]"
        }
    ],
    "MEDIA_COMMON_OPTIONS": [
        {
            "type": "bool",
            "rev_select": "SMS_USB_DRV || SMS_SDIO_DRV",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "CYPRESS_FIRMWARE": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007 || DVB_USB_AZ6007 || DVB_USB",
            "dep": "( MEDIA_SUPPORT ) && (USB)",
            "restrict": ""
        }
    ],
    "TTPCI_EEPROM": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_PCTV452E || DVB_BUDGET_CORE || DVB_AV7110",
            "dep": "( MEDIA_SUPPORT ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_CX2341X": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2 || VIDEO_CX231XX || VIDEO_IVTV || VIDEO_CX18 || VIDEO_CX23885 || VIDEO_CX88_BLACKBIRD",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEO_TVEEPROM": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2 || VIDEO_AU0828 || VIDEO_CX231XX || DVB_USB_MXL111SF || VIDEO_EM28XX || VIDEO_IVTV || VIDEO_BT848 || VIDEO_CX18 || VIDEO_CX23885 || VIDEO_CX88 || VIDEO_SAA7134 || VIDEO_SAA7164",
            "dep": "( MEDIA_SUPPORT ) && (I2C)",
            "restrict": ""
        }
    ],
    "DVB_B2C2_FLEXCOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE && I2C) && (DVB_B2C2_FLEXCOP_PCI || DVB_B2C2_FLEXCOP_USB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DVB_B2C2_FLEXCOP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "DVB_B2C2_FLEXCOP_USB_DEBUG || DVB_B2C2_FLEXCOP_PCI_DEBUG",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7146": [
        {
            "type": "tristate",
            "rev_select": "DVB_BUDGET_CORE || VIDEO_SAA7146_VV",
            "dep": "( MEDIA_SUPPORT ) && (I2C && PCI)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7146_VV": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_HEXIUM_GEMINI || VIDEO_HEXIUM_ORION || VIDEO_MXB || DVB_BUDGET_AV || DVB_AV7110",
            "dep": "( MEDIA_SUPPORT ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "SMS_SIANO_MDTV": [
        {
            "type": "tristate",
            "rev_select": "SMS_USB_DRV || SMS_SDIO_DRV",
            "dep": "( MEDIA_SUPPORT ) && (DVB_CORE && HAS_DMA) && (! RC_CORE || RC_CORE) && (SMS_USB_DRV || SMS_SDIO_DRV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SMS_SIANO_RC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (SMS_SIANO_MDTV && RC_CORE) && (SMS_USB_DRV || SMS_SDIO_DRV) && (MEDIA_COMMON_OPTIONS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SMS_SIANO_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (SMS_SIANO_MDTV) && (DEBUG_FS) && (SMS_USB_DRV = SMS_SDIO_DRV)",
            "restrict": ""
        }
    ],
    "VIDEO_V4L2_TPG": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_VIMC || VIDEO_VIVID",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_CORE": [
        {
            "type": "tristate",
            "rev_select": "VIDEOBUF2_DMA_CONTIG || VIDEOBUF2_VMALLOC || VIDEOBUF2_DMA_SG || VIDEOBUF2_DVB",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_V4L2": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_DEV[VIDEOBUF2_CORE]",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_MEMOPS": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PCI_SKELETON || VIDEOBUF2_DMA_CONTIG || VIDEOBUF2_VMALLOC || VIDEOBUF2_DMA_SG",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_DMA_CONTIG": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_SOLO6X10 || STA2X11_VIP || VIDEO_TW5864 || VIDEO_TW686X || VIDEO_DT3155 || VIDEO_PCI_SKELETON || VIDEO_MEM2MEM_DEINTERLACE || VIDEO_ALLEGRO_DVT || VIDEO_MESON_GE2D || VIDEO_AMPHION_VPU || VIDEO_ASPEED || VIDEO_ATMEL_ISC || VIDEO_ATMEL_XISC || VIDEO_ATMEL_ISI || VIDEO_CODA || VIDEO_CAFE_CCIC || VIDEO_MMP_CAMERA || VIDEO_MEDIATEK_JPEG || VIDEO_MEDIATEK_MDP || VIDEO_MEDIATEK_VCODEC || VIDEO_TEGRA_VDE || VIDEO_IMX_PXP || VIDEO_MX2_EMMAPRP || VIDEO_IMX8_JPEG || VIDEO_QCOM_VENUS || VIDEO_RENESAS_CEU || VIDEO_SH_VOU || VIDEO_RCAR_VIN || VIDEO_RENESAS_FDP1 || VIDEO_RENESAS_JPU || VIDEO_RENESAS_VSP1 || VIDEO_ROCKCHIP_ISP1 || VIDEO_SAMSUNG_EXYNOS_GSC || VIDEO_S5P_FIMC || VIDEO_EXYNOS_FIMC_LITE || VIDEO_EXYNOS4_FIMC_IS || VIDEO_S3C_CAMIF || VIDEO_SAMSUNG_S5P_G2D || VIDEO_SAMSUNG_S5P_JPEG || VIDEO_SAMSUNG_S5P_MFC || VIDEO_STI_BDISP || VIDEO_STI_DELTA_DRIVER || VIDEO_STI_HVA || VIDEO_STM32_DCMI || VIDEO_STM32_DMA2D || VIDEO_SUN4I_CSI || VIDEO_SUN6I_CSI || VIDEO_SUN8I_DEINTERLACE || VIDEO_SUN8I_ROTATE || VIDEO_TI_CAL || VIDEO_TI_VPE || VIDEO_AM437X_VPFE || VIDEO_DAVINCI_VPIF_DISPLAY || VIDEO_DAVINCI_VPIF_CAPTURE || VIDEO_DAVINCI_VPBE_DISPLAY || VIDEO_OMAP2_VOUT || VIDEO_OMAP3 || VIDEO_XILINX || VIDEO_VIMC || VIDEO_VIVID || VIDEO_HANTRO || VIDEO_IMX_MEDIA || VIDEO_MESON_VDEC || VIDEO_OMAP4 || VIDEO_ROCKCHIP_VDEC || VIDEO_SUNXI_CEDRUS || VIDEO_TEGRA || VIDEO_ZORAN",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_VMALLOC": [
        {
            "type": "tristate",
            "rev_select": "TOUCHSCREEN_ATMEL_MXT_T37 || RMI4_F54 || DVB_MMAP || USB_GSPCA || USB_PWC || USB_S2255 || VIDEO_USBTV || USB_VIDEO_CLASS || VIDEO_GO7007 || VIDEO_STK1160 || VIDEO_AU0828[VIDEO_DEV] || VIDEO_CX231XX || DVB_USB_CXUSB_ANALOG || VIDEO_EM28XX_V4L2 || USB_AIRSPY || USB_HACKRF || USB_MSI2500 || VIDEO_TW686X || DVB_NETUP_UNIDVB || VIDEO_AMPHION_VPU || VIDEO_CODA || VIDEO_CAFE_CCIC || VIDEO_MMP_CAMERA || VIDEO_RENESAS_VSP1 || VIDEO_RCAR_DRIF || VIDEO_ROCKCHIP_ISP1 || VIDEO_VIM2M || VIDEO_VICODEC || VIDEO_VIMC || VIDEO_VIVID || VIDEO_I2C || DVB_RTL2832_SDR || USB_CONFIGFS_F_UVC || USB_G_WEBCAM || VIDEO_HANTRO || VIDEO_ROCKCHIP_VDEC || VIDEO_BCM2835",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_DMA_SG": [
        {
            "type": "tristate",
            "rev_select": "TOUCHSCREEN_SUR40 || VIDEO_SOLO6X10 || VIDEO_TW68 || VIDEO_TW686X || VIDEO_COBALT || VIDEO_CX23885 || VIDEO_CX25821 || VIDEO_CX88 || VIDEO_SAA7134 || VIDEO_IPU3_CIO2 || VIDEO_PXA27x || VIDEO_CAFE_CCIC || VIDEO_MMP_CAMERA || VIDEO_TEGRA_VDE || VIDEO_QCOM_CAMSS || VIDEO_ROCKCHIP_RGA || VIDEO_VIA_CAMERA || USB_CONFIGFS_F_UVC || USB_G_WEBCAM || VIDEO_IPU3_IMGU",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "VIDEOBUF2_DVB": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX23885 || VIDEO_CX88_DVB || VIDEO_SAA7134_DVB || DVB_NETUP_UNIDVB",
            "dep": "( MEDIA_SUPPORT )",
            "restrict": ""
        }
    ],
    "MEDIA_HIDE_ANCILLARY_SUBDRV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (MEDIA_SUBDRV_AUTOSELECT && ! COMPILE_TEST && ! EXPERT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MEDIA_ATTACH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT) && (MODULES)",
            "restrict": "( MODULES )[!(y)]"
        }
    ],
    "VIDEO_IR_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && RC_CORE)",
            "restrict": "( y )[!(! MEDIA_SUBDRV_AUTOSELECT || EXPERT)]"
        }
    ],
    "VIDEO_APTINA_PLL": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MT9M032 || VIDEO_MT9P031",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV )",
            "restrict": ""
        }
    ],
    "VIDEO_CCS_PLL": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CCS",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV )",
            "restrict": ""
        }
    ],
    "VIDEO_AR0521": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_HI556": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_HI846": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_HI847": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX208": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV) && (MEDIA_CAMERA_SUPPORT)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX214": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (GPIOLIB && I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX219": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX258": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX274": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX290": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX319": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX334": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (OF_GPIO) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX335": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (OF_GPIO) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX355": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX412": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (OF_GPIO) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MAX9271_LIB": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_RDACM20 || VIDEO_RDACM21",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV )",
            "restrict": ""
        }
    ],
    "VIDEO_MT9M001": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9M032": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9M111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9P031": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9T001": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9T112": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9V011": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_V4L2[MEDIA_SUBDRV_AUTOSELECT && MEDIA_CAMERA_SUPPORT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9V032": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MT9V111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_NOON010PC30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OG01A1B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV02A10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_OV08D10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV13858": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV13B10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV2640": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_V4L2[MEDIA_SUBDRV_AUTOSELECT && MEDIA_CAMERA_SUPPORT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_OV2659": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "VIDEO_OV2680": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_OV2685": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_OV2740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (ACPI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5640": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (OF) && (GPIOLIB && VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5645": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (OF) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5647": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5648": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && PM && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5670": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5675": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV5695": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV6650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV7251": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV7640": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT && MEDIA_CAMERA_SUPPORT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV7670": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CAFE_CCIC || VIDEO_MMP_CAMERA || VIDEO_VIA_CAMERA",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV772X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV7740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV8856": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV8865": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && PM && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV9282": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (OF_GPIO) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV9640": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV9650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_OV9734": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (ACPI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_RDACM20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_RDACM21": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_RJ54N1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_S5C73M3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && SPI && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_S5K4ECGX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_S5K5BAF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_S5K6A3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_S5K6AA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_SR030PC30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_VS6624": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_CCS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "VIDEO_ET8EK8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_M5MOLS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_AD5820": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (GPIOLIB && I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_AK7375": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_DW9714": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_DW9768": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_DW9807_VCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ADP1653": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_LM3560": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_LM3646": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_CS3308": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX23885",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_CS5345": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX18",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_CS53L32A": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2 || VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_MSP3400": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2 || VIDEO_EM28XX_V4L2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_IVTV || VIDEO_BT848[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SONY_BTF_MPX": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TDA1997X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "VIDEO_TDA7432": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BT848[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TDA9840": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MXB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TEA6415C": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MXB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TEA6420": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_MXB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TLV320AIC23B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TVAUDIO": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BT848[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_UDA1342": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_VP27SMPX": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_WM8739": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_WM8775": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2 || VIDEO_IVTV || VIDEO_CX88[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA6588": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BT848[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7180": [
        {
            "type": "tristate",
            "rev_select": "STA2X11_VIP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (GPIOLIB && VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7183": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV748X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (OF)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7604": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_COBALT",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7604_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_ADV7604)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7842": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_COBALT",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7842_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_ADV7842)",
            "restrict": ""
        }
    ],
    "VIDEO_BT819": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_LML33]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_BT856": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_LML33 || VIDEO_ZORAN_AVS6EYES]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_BT866": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_AVS6EYES]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ISL7998X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "VIDEO_KS0127": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_AVS6EYES]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_MAX9286": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && I2C_MUX) && (VIDEO_DEV) && (OF_GPIO)",
            "restrict": ""
        }
    ],
    "VIDEO_ML86V7667": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7110": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_DC10]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA711X": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_PVRUSB2 || VIDEO_STK1160 || VIDEO_EM28XX_V4L2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_IVTV || VIDEO_MXB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_ZORAN[VIDEO_ZORAN_BUZ || VIDEO_ZORAN_LML33R10]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TC358743": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TC358743_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_TC358743)",
            "restrict": ""
        }
    ],
    "VIDEO_TVP514X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TVP5150": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_V4L2[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TVP7002": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TW2804": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TW9903": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TW9906": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_GO7007[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_TW9910": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_VPX3220": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_DC30]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA717X": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_CX25840": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2 || VIDEO_CX231XX || DVB_USB_CXUSB_ANALOG || VIDEO_IVTV || VIDEO_CX23885",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_AD9389B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7170": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_LML33R10]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7175": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_DC10 || VIDEO_ZORAN_DC30]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7343": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_DAVINCI_VPIF_DISPLAY[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7393": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7511": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_COBALT",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C) && (DRM_I2C_ADV7511 = n || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ADV7511_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_ADV7511)",
            "restrict": ""
        }
    ],
    "VIDEO_AK881X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7127": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA7185": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_ZORAN[VIDEO_ZORAN_BUZ]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_THS8200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_UPD64031A": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_UPD64083": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_SAA6752HS": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_SAA7134[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "SDR_MAX2175": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && MEDIA_SDR_SUPPORT && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_M52790": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_IVTV",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ST_MIPID02": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_THS7303": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_DAVINCI_VPIF_DISPLAY[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV ) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "CXD2880_SPI_DRV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV && SPI ) && (DVB_CORE && SPI)",
            "restrict": "( m )[!(y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "VIDEO_GS1662": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( VIDEO_DEV && SPI ) && (SPI && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "MEDIA_TUNER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) && I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MEDIA_TUNER_E4000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU[( MEDIA_SUBDRV_AUTOSELECT && VIDEO_DEV )]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C && VIDEO_DEV)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_FC0011": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_FC0012": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_FC0013": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_FC2580": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9035[( MEDIA_SUBDRV_AUTOSELECT && VIDEO_DEV )] || DVB_USB_RTL28XXU[( MEDIA_SUBDRV_AUTOSELECT && VIDEO_DEV )]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C && VIDEO_DEV)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_IT913X": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_M88RS6000T": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_SMIPCIE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MAX2165": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MC44S803": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MSI001": [
        {
            "type": "tristate",
            "rev_select": "USB_MSI2500",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && SPI && VIDEO_DEV)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MT2060": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_ZD1301[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_A800[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9005[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIBUSB_MB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIBUSB_MC[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_NOVA_T_USB2[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_UMT_010[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MT2063": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AZ6007[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MT20XX": [
        {
            "type": "tristate",
            "rev_select": "MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MT2131": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MT2266": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MXL301RF": [
        {
            "type": "tristate",
            "rev_select": "DVB_PT3[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MXL5005S": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CE6230[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_EC168[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX18[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_MXL5007T": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_AU0828[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_QM1D1B0004": [
        {
            "type": "tristate",
            "rev_select": "DVB_PT1[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_QM1D1C0042": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_PT3[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_QT1010": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AU6610[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_GL861[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9005[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DTV5100[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_M920X[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_R820T": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_SI2157": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DVBSKY[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_SMIPCIE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_SIMPLE": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_M920X[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA18212": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA18218": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA18250": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA18271": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_AU0828[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX18[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7164[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER_TDA8290",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA827X": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_M920X[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_TTUSB2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER_TDA8290",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA8290": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX18[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TDA9887": [
        {
            "type": "tristate",
            "rev_select": "MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER_SIMPLE",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TEA5761": [
        {
            "type": "tristate",
            "rev_select": "MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT && MEDIA_RADIO_SUPPORT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TEA5767": [
        {
            "type": "tristate",
            "rev_select": "MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT && MEDIA_RADIO_SUPPORT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_TUA9001": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_XC2028": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_TM6000 || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_XC4000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "MEDIA_TUNER_XC5000": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_AU0828[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_TM6000 || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || MEDIA_TUNER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( ( MEDIA_ANALOG_TV_SUPPORT || MEDIA_DIGITAL_TV_SUPPORT || MEDIA_RADIO_SUPPORT || MEDIA_SDR_SUPPORT ) ) && (MEDIA_SUPPORT && I2C)",
            "restrict": "( m )[!(y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_M88DS3103": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DVBSKY[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_SMIPCIE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MXL5XX": [
        {
            "type": "tristate",
            "rev_select": "DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STB0899": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AZ6027[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_PCTV452E[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STB6100": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AZ6027[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_PCTV452E[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV090x": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_TECHNISAT_USB2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV0910": [
        {
            "type": "tristate",
            "rev_select": "DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV6110x": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_TECHNISAT_USB2[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV6111": [
        {
            "type": "tristate",
            "rev_select": "DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DRXK": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AZ6007[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MN88472": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MN88473": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_SI2165": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA18271C2DD": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CX24110": [
        {
            "type": "tristate",
            "rev_select": "DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CX24116": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CX24117": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CX24120": [
        {
            "type": "tristate",
            "rev_select": "DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CX24123": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DS3000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MB86A16": [
        {
            "type": "tristate",
            "rev_select": "DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MT312": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_S5H1420": [
        {
            "type": "tristate",
            "rev_select": "DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_SI21XX": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STB6000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV0288": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV0299": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_OPERA1[MEDIA_SUBDRV_AUTOSELECT] || DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_PATCH[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV0900": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV6110": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA10071": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA10086": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_TTUSB2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA8083": [
        {
            "type": "tristate",
            "rev_select": "DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_PATCH[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA8261": [
        {
            "type": "tristate",
            "rev_select": "DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA826X": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_TTUSB2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TS2020": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DVBSKY[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT] || DVB_SMIPCIE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TUA6100": [
        {
            "type": "tristate",
            "rev_select": "DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TUNER_CX24113": [
        {
            "type": "tristate",
            "rev_select": "DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TUNER_ITD1000": [
        {
            "type": "tristate",
            "rev_select": "DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_VES1X93": [
        {
            "type": "tristate",
            "rev_select": "DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_PATCH[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ZL10036": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ZL10039": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_AF9013": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_AS102_FE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE)",
            "restrict": "( DVB_AS102 )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y)]"
        }
    ],
    "DVB_CX22700": [
        {
            "type": "tristate",
            "rev_select": "DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CX22702": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CXD2820R": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CXD2841ER": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NETUP_UNIDVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DIB3000MB": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIBUSB_MB",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DIB3000MC": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB3000MC",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DIB7000M": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DIB7000P": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DIB9000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DRXD": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_EC100": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_EC168",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_GP8PSK_FE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE)",
            "restrict": "( DVB_USB_GP8PSK )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y)]"
        }
    ],
    "DVB_L64781": [
        {
            "type": "tristate",
            "rev_select": "DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MT352": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIGITV[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_M920X[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_UMT_010[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_NXT6000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIGITV[MEDIA_SUBDRV_AUTOSELECT] || DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_RTL2830": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_RTL2832": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU || DVB_RTL2832_SDR",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_RTL2832_SDR": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_RTL28XXU[( MEDIA_SUBDRV_AUTOSELECT && MEDIA_SDR_SUPPORT && VIDEO_DEV )]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX && VIDEO_DEV && MEDIA_SDR_SUPPORT && USB)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_S5H1432": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_SI2168": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AF9035[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DVBSKY[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_RTL28XXU[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_SMIPCIE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_SP887X": [
        {
            "type": "tristate",
            "rev_select": "DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV0367": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA10048": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_TTUSB2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7164[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA1004X": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_M920X[MEDIA_SUBDRV_AUTOSELECT] || DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_PLUTO2 || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ZD1301_DEMOD": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ZD1301[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ZL10353": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_TM6000_DVB || DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_AU6610[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CE6230 || DVB_USB_GL861[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DTV5100[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_HOPPER[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CXD2880": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && SPI)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_STV0297": [
        {
            "type": "tristate",
            "rev_select": "DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA10021": [
        {
            "type": "tristate",
            "rev_select": "DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA10023": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_TTUSB2[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_VES1820": [
        {
            "type": "tristate",
            "rev_select": "DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_AU8522": [
        {
            "type": "tristate",
            "rev_select": "DVB_AU8522_DTV || DVB_AU8522_V4L",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": ""
        }
    ],
    "DVB_AU8522_DTV": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_AU0828[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_AU8522_V4L": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_AU0828_V4L2[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (VIDEO_DEV && DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_BCM3510": [
        {
            "type": "tristate",
            "rev_select": "DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LG2160": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_MXL111SF[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LGDT3305": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_MXL111SF[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LGDT3306A": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C && I2C_MUX)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LGDT330X": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MXL692": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_NXT200X": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_OR51132": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_OR51211": [
        {
            "type": "tristate",
            "rev_select": "DVB_BT8XX[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_S5H1409": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX18[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_S5H1411": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_PVRUSB2_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX18[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7164[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DIB8000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MB86A20S": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX231XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_S921": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_MN88443X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TC90522": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_GL861[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_PT1[MEDIA_SUBDRV_AUTOSELECT] || DVB_PT3[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_PLL": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9015[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_GL861[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_A800[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIBUSB_MB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIGITV[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_NOVA_T_USB2[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_OPERA1[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_UMT_010[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DM1105[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS || DVB_HOPPER || DVB_PT1[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_AV[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TUNER_DIB0070": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TUNER_DIB0090": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DIB0700[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_A8293": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_AF9033": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_AF9035",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ASCOT2E": [
        {
            "type": "tristate",
            "rev_select": "DVB_NETUP_UNIDVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ATBM8830": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_HELENE": [
        {
            "type": "tristate",
            "rev_select": "DVB_NETUP_UNIDVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_HORUS3A": [
        {
            "type": "tristate",
            "rev_select": "DVB_NETUP_UNIDVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ISL6405": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ISL6421": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_CX88_DVB[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_B2C2_FLEXCOP[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_ISL6423": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_ANYSEE[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_PCTV452E[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_IX2505V": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LGS8GL5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LGS8GXX": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_CXUSB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LNBH25": [
        {
            "type": "tristate",
            "rev_select": "DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NETUP_UNIDVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LNBH29": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LNBP21": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_TTUSB2[MEDIA_SUBDRV_AUTOSELECT] || DVB_TTUSB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_CX23885[MEDIA_SUBDRV_AUTOSELECT] || VIDEO_SAA7134_DVB[MEDIA_SUBDRV_AUTOSELECT] || DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET[MEDIA_SUBDRV_AUTOSELECT] || DVB_BUDGET_CI[MEDIA_SUBDRV_AUTOSELECT] || DVB_C8SECTPFE[MEDIA_SUBDRV_AUTOSELECT] || DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_LNBP22": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_PCTV452E[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_M88RS2000": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_LME2510[MEDIA_SUBDRV_AUTOSELECT] || DVB_USB_DW2102[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_TDA665x": [
        {
            "type": "tristate",
            "rev_select": "DVB_MANTIS[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DRX39XYJ": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_EM28XX_DVB[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_CXD2099": [
        {
            "type": "tristate",
            "rev_select": "DVB_DDBRIDGE[MEDIA_SUBDRV_AUTOSELECT] || DVB_NGENE[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(( ! MEDIA_HIDE_ANCILLARY_SUBDRV ) && y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_SP2": [
        {
            "type": "tristate",
            "rev_select": "DVB_USB_DVBSKY[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( MEDIA_SUPPORT ) && ( MEDIA_DIGITAL_TV_SUPPORT ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "DVB_DUMMY_FE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEDIA_SUPPORT ) && (MEDIA_TEST_SUPPORT && DVB_CORE)",
            "restrict": ""
        }
    ],
    "APERTURE_HELPERS": [
        {
            "type": "bool",
            "rev_select": "DRM_SIMPLEDRM || FB_OF || FB_VGA16 || FB_VESA || FB_EFI || FB_SIMPLE || VGA_CONSOLE[( DRM || FB || VFIO_PCI_CORE )]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FB_ATMEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "AGP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ALPHA || IA64 || PARISC || PPC || X86) && (PCI)",
            "restrict": ""
        }
    ],
    "AGP_ALI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86_32)",
            "restrict": ""
        }
    ],
    "AGP_ATI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86_32)",
            "restrict": ""
        }
    ],
    "AGP_AMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86_32)",
            "restrict": ""
        }
    ],
    "AGP_AMD64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86 && AMD_NB)",
            "restrict": ""
        }
    ],
    "AGP_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86)",
            "restrict": ""
        }
    ],
    "AGP_NVIDIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86_32)",
            "restrict": ""
        }
    ],
    "AGP_SIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86)",
            "restrict": ""
        }
    ],
    "AGP_SWORKS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86_32)",
            "restrict": ""
        }
    ],
    "AGP_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86)",
            "restrict": ""
        }
    ],
    "AGP_I460": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && IA64)",
            "restrict": ""
        }
    ],
    "AGP_HP_ZX1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && IA64)",
            "restrict": ""
        }
    ],
    "AGP_PARISC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && PARISC && 64BIT && IOMMU_SBA)",
            "restrict": ""
        }
    ],
    "AGP_ALPHA_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && ( ALPHA_GENERIC || ALPHA_TITAN || ALPHA_MARVEL ))",
            "restrict": "( AGP )[!(y)]"
        }
    ],
    "AGP_UNINORTH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && PPC_PMAC)",
            "restrict": ""
        }
    ],
    "AGP_EFFICEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (AGP && X86_32)",
            "restrict": ""
        }
    ],
    "INTEL_GTT": [
        {
            "type": "tristate",
            "rev_select": "AGP_INTEL || DRM_I915[X86]",
            "dep": "( HAS_IOMEM ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "VGA_SWITCHEROO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (X86) && (ACPI) && (PCI) && (( FRAMEBUFFER_CONSOLE = n || FB = y ))",
            "restrict": ""
        }
    ],
    "TEGRA_HOST1X_CONTEXT_BUS": [
        {
            "type": "bool",
            "rev_select": "TEGRA_HOST1X",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "TEGRA_HOST1X": [
        {
            "type": "tristate",
            "rev_select": "DRM_TEGRA",
            "dep": "( HAS_IOMEM ) && (ARCH_TEGRA || ( ARM && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "TEGRA_HOST1X_FIREWALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( TEGRA_HOST1X )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMX_IPUV3_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (SOC_IMX5 || SOC_IMX6Q || ARCH_MULTIPLATFORM || COMPILE_TEST) && (DRM || ! DRM)",
            "restrict": ""
        }
    ],
    "DRM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( AGP || AGP = n ) && ! EMULATED_CMPXCHG && HAS_DMA)",
            "restrict": ""
        }
    ],
    "DRM_MIPI_DBI": [
        {
            "type": "tristate",
            "rev_select": "DRM_PANEL_ILITEK_ILI9341 || DRM_PANEL_NEWVISION_NV3052C || DRM_PANEL_SAMSUNG_DB7430 || DRM_PANEL_SAMSUNG_S6D27A1 || DRM_PANEL_SAMSUNG_S6E63M0_SPI || DRM_PANEL_WIDECHIPS_WS2401 || DRM_PANEL_MIPI_DBI || TINYDRM_HX8357D || TINYDRM_ILI9163 || TINYDRM_ILI9225 || TINYDRM_ILI9341 || TINYDRM_ILI9486 || TINYDRM_MI0283QT || TINYDRM_ST7586 || TINYDRM_ST7735R",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_MIPI_DSI": [
        {
            "type": "bool",
            "rev_select": "DRM_I915 || DRM_KMB_DISPLAY || DRM_EXYNOS_DSI || DRM_RCAR_MIPI_DSI || DRM_SUN6I_DSI || OMAP2_DSS_DSI || DRM_MSM_DSI || DRM_TEGRA || DRM_PANEL_SAMSUNG_S6E88A0_AMS452EF01 || DRM_PANEL_SAMSUNG_S6E8AA0 || DRM_CDNS_DSI || DRM_CHIPONE_ICN6211 || DRM_LONTIUM_LT8912B || DRM_LONTIUM_LT9211 || DRM_LONTIUM_LT9611 || DRM_LONTIUM_LT9611UXC || DRM_NWL_MIPI_DSI || DRM_PARADE_PS8640 || DRM_TOSHIBA_TC358762 || DRM_TOSHIBA_TC358764 || DRM_TOSHIBA_TC358767 || DRM_TOSHIBA_TC358768 || DRM_TOSHIBA_TC358775 || DRM_TI_DLPC3433 || DRM_TI_SN65DSI83 || DRM_TI_SN65DSI86 || DRM_ANALOGIX_ANX7625 || DRM_I2C_ADV7511 || DRM_DW_MIPI_DSI || DRM_VC4 || DRM_HISI_KIRIN || DRM_MEDIATEK || DRM_MCDE || DRM_SPRD",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_DEBUG_MM": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG[DRM = y]",
            "dep": "( HAS_IOMEM ) && (DRM = y) && (STACKTRACE_SUPPORT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_DEBUG_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && (DRM) && (DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "DRM_KMS_HELPER": [
        {
            "type": "tristate",
            "rev_select": "DRM_MIPI_DBI || DRM_DEBUG_SELFTEST || DRM_KUNIT_TEST || DRM_HDLCD || DRM_MALI_DISPLAY || DRM_KOMEDA || DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || DRM_I915 || DRM_KMB_DISPLAY || DRM_VKMS || DRM_EXYNOS || DRM_ROCKCHIP || DRM_VMWGFX || DRM_GMA500 || DRM_UDL || DRM_AST || DRM_MGAG200 || DRM_ARMADA || DRM_ATMEL_HLCDC || DRM_RCAR_DU || DRM_RCAR_LVDS || DRM_SHMOBILE || DRM_SUN4I || DRM_OMAP || DRM_TILCDC || DRM_QXL || DRM_VIRTIO_GPU || DRM_MSM || DRM_FSL_DCU || DRM_TEGRA || DRM_STM || DRM_PANEL_EDP || DRM_PANEL_ILITEK_ILI9341 || DRM_CDNS_DSI || DRM_CHIPONE_ICN6211 || DRM_CHRONTEL_CH7033 || DRM_CROS_EC_ANX7688 || DRM_FSL_LDB || DRM_ITE_IT6505 || DRM_LONTIUM_LT8912B || DRM_LONTIUM_LT9211 || DRM_LONTIUM_LT9611 || DRM_LONTIUM_LT9611UXC || DRM_ITE_IT66121 || DRM_LVDS_CODEC || DRM_MEGACHIPS_STDPXXXX_GE_B850V3_FW || DRM_NWL_MIPI_DSI || DRM_NXP_PTN3460 || DRM_PARADE_PS8622 || DRM_PARADE_PS8640 || DRM_SIL_SII8620 || DRM_SII902X || DRM_SIMPLE_BRIDGE || DRM_TOSHIBA_TC358762 || DRM_TOSHIBA_TC358764 || DRM_TOSHIBA_TC358767 || DRM_TOSHIBA_TC358768 || DRM_TOSHIBA_TC358775 || DRM_TI_TFP410 || DRM_TI_SN65DSI83 || DRM_TI_SN65DSI86 || DRM_TI_TPD12S015 || DRM_ANALOGIX_ANX6345 || DRM_ANALOGIX_ANX78XX || DRM_I2C_ADV7511 || DRM_CDNS_MHDP8546 || DRM_IMX8QM_LDB || DRM_IMX8QXP_LDB || DRM_IMX8QXP_PIXEL_COMBINER || DRM_IMX8QXP_PIXEL_LINK || DRM_IMX8QXP_PIXEL_LINK_TO_DPI || DRM_DW_HDMI || DRM_DW_MIPI_DSI || DRM_STI || DRM_IMX || DRM_IMX || DRM_IMX_DCSS || DRM_INGENIC || DRM_VC4 || DRM_HISI_HIBMC || DRM_HISI_KIRIN || DRM_LOGICVC || DRM_MEDIATEK || DRM_MXSFB || DRM_IMX_LCDIF || DRM_MESON || DRM_ARCPGU || DRM_BOCHS || DRM_CIRRUS_QEMU || DRM_GM12U320 || DRM_PANEL_MIPI_DBI || DRM_SIMPLEDRM || TINYDRM_HX8357D || TINYDRM_ILI9163 || TINYDRM_ILI9225 || TINYDRM_ILI9341 || TINYDRM_ILI9486 || TINYDRM_MI0283QT || TINYDRM_REPAPER || TINYDRM_ST7586 || TINYDRM_ST7735R || DRM_PL111 || DRM_TVE200 || DRM_XEN_FRONTEND || DRM_VBOXVIDEO || DRM_ASPEED_GFX || DRM_MCDE || DRM_TIDSS || DRM_ZYNQMP_DPSUB || DRM_GUD || DRM_SSD130X || DRM_SPRD || DRM_HYPERV",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_DEBUG_DP_MST_TOPOLOGY_REFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (STACKTRACE_SUPPORT) && (DRM_KMS_HELPER) && (DEBUG_KERNEL) && (EXPERT)",
            "restrict": ""
        }
    ],
    "DRM_DEBUG_MODESET_LOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (STACKTRACE_SUPPORT) && (DEBUG_KERNEL) && (EXPERT)",
            "restrict": "( y )[!(y) && (DEBUG_WW_MUTEX_SLOWPATH)]"
        }
    ],
    "DRM_FBDEV_EMULATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_KMS_HELPER) && (FB = y || FB = DRM_KMS_HELPER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_FBDEV_OVERALLOC": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_FBDEV_EMULATION)",
            "restrict": "( 100 )[!(y)]"
        }
    ],
    "DRM_FBDEV_LEAK_PHYS_SMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_FBDEV_EMULATION && EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_LOAD_EDID_FIRMWARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_DP_AUX_BUS": [
        {
            "type": "tristate",
            "rev_select": "DRM_MSM || DRM_TEGRA || DRM_PANEL_EDP || DRM_PANEL_SAMSUNG_ATNA33XC20 || DRM_ITE_IT6505 || DRM_PARADE_PS8640 || DRM_TI_SN65DSI86 || DRM_ANALOGIX_ANX7625",
            "dep": "( HAS_IOMEM ) && (DRM) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_DISPLAY_HELPER": [
        {
            "type": "tristate",
            "rev_select": "DRM_DEBUG_SELFTEST || DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || DRM_I915 || DRM_EXYNOS[DRM_EXYNOS_DP] || ROCKCHIP_ANALOGIX_DP || ROCKCHIP_CDN_DP || DRM_MSM || DRM_TEGRA || DRM_PANEL_EDP || DRM_PANEL_SAMSUNG_ATNA33XC20 || DRM_ITE_IT6505 || DRM_PARADE_PS8640 || DRM_TOSHIBA_TC358767 || DRM_TOSHIBA_TC358775 || DRM_TI_SN65DSI86 || DRM_ANALOGIX_ANX6345 || DRM_ANALOGIX_ANX78XX || DRM_ANALOGIX_ANX7625 || DRM_CDNS_MHDP8546 || DRM_DW_HDMI || DRM_VC4 || DRM_ZYNQMP_DPSUB",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_DISPLAY_DP_HELPER": [
        {
            "type": "bool",
            "rev_select": "DRM_DEBUG_SELFTEST || DRM_DP_AUX_CHARDEV || DRM_DP_CEC || DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || DRM_I915 || DRM_EXYNOS_DP || ROCKCHIP_ANALOGIX_DP || ROCKCHIP_CDN_DP || DRM_MSM || DRM_TEGRA || DRM_PANEL_EDP || DRM_PANEL_SAMSUNG_ATNA33XC20 || DRM_ITE_IT6505 || DRM_PARADE_PS8640 || DRM_TOSHIBA_TC358767 || DRM_TOSHIBA_TC358775 || DRM_TI_SN65DSI86 || DRM_ANALOGIX_ANX6345 || DRM_ANALOGIX_ANX78XX || DRM_ANALOGIX_ANX7625 || DRM_CDNS_MHDP8546 || DRM_ZYNQMP_DPSUB",
            "dep": "( HAS_IOMEM ) && (DRM_DISPLAY_HELPER)",
            "restrict": ""
        }
    ],
    "DRM_DISPLAY_HDCP_HELPER": [
        {
            "type": "bool",
            "rev_select": "DRM_AMD_DC_HDCP || DRM_I915 || DRM_ITE_IT6505 || DRM_ANALOGIX_ANX7625 || DRM_CDNS_MHDP8546",
            "dep": "( HAS_IOMEM ) && (DRM_DISPLAY_HELPER)",
            "restrict": ""
        }
    ],
    "DRM_DISPLAY_HDMI_HELPER": [
        {
            "type": "bool",
            "rev_select": "DRM_AMDGPU || DRM_NOUVEAU || DRM_I915 || DRM_TEGRA || DRM_DW_HDMI || DRM_VC4",
            "dep": "( HAS_IOMEM ) && (DRM_DISPLAY_HELPER)",
            "restrict": ""
        }
    ],
    "DRM_DP_AUX_CHARDEV": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && (DRM && DRM_DISPLAY_HELPER)",
            "restrict": ""
        }
    ],
    "DRM_DP_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && DRM_DISPLAY_HELPER)",
            "restrict": ""
        }
    ],
    "DRM_TTM": [
        {
            "type": "tristate",
            "rev_select": "DRM_TTM_HELPER || DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || DRM_I915 || DRM_VMWGFX || DRM_AST || DRM_QXL || DRM_HISI_HIBMC || DRM_BOCHS || DRM_VBOXVIDEO",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": ""
        }
    ],
    "DRM_BUDDY": [
        {
            "type": "tristate",
            "rev_select": "DRM_DEBUG_SELFTEST || DRM_AMDGPU || DRM_I915",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_VRAM_HELPER": [
        {
            "type": "tristate",
            "rev_select": "DRM_AST || DRM_HISI_HIBMC || DRM_BOCHS || DRM_VBOXVIDEO",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_TTM_HELPER": [
        {
            "type": "tristate",
            "rev_select": "DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU || DRM_VMWGFX || DRM_AST || DRM_QXL || DRM_HISI_HIBMC || DRM_BOCHS || DRM_VBOXVIDEO",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_GEM_CMA_HELPER": [
        {
            "type": "tristate",
            "rev_select": "DRM_HDLCD || DRM_MALI_DISPLAY || DRM_KOMEDA || DRM_KMB_DISPLAY || DRM_ROCKCHIP || DRM_ATMEL_HLCDC || DRM_RCAR_DU || DRM_SHMOBILE || DRM_SUN4I || DRM_TILCDC || DRM_FSL_DCU || DRM_STM || DRM_STI || DRM_IMX || DRM_IMX_DCSS || DRM_INGENIC || DRM_VC4 || DRM_HISI_KIRIN || DRM_LOGICVC || DRM_MEDIATEK || DRM_MXSFB || DRM_IMX_LCDIF || DRM_MESON || DRM_ARCPGU || DRM_PANEL_MIPI_DBI || TINYDRM_HX8357D || TINYDRM_ILI9163 || TINYDRM_ILI9225 || TINYDRM_ILI9341 || TINYDRM_ILI9486 || TINYDRM_MI0283QT || TINYDRM_REPAPER || TINYDRM_ST7586 || TINYDRM_ST7735R || DRM_PL111 || DRM_TVE200 || DRM_ASPEED_GFX || DRM_MCDE || DRM_TIDSS || DRM_ZYNQMP_DPSUB || DRM_SPRD",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_GEM_SHMEM_HELPER": [
        {
            "type": "tristate",
            "rev_select": "DRM_VGEM || DRM_VKMS || DRM_UDL || DRM_MGAG200 || DRM_VIRTIO_GPU || DRM_V3D || DRM_CIRRUS_QEMU || DRM_GM12U320 || DRM_SIMPLEDRM || DRM_LIMA || DRM_PANFROST || DRM_GUD || DRM_SSD130X || DRM_HYPERV",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": ""
        }
    ],
    "DRM_SCHED": [
        {
            "type": "tristate",
            "rev_select": "DRM_AMDGPU || DRM_MSM || DRM_V3D || DRM_ETNAVIV || DRM_LIMA || DRM_PANFROST",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_I2C_CH7006": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_KMS_HELPER && I2C ) )",
            "restrict": "( m )[!(y) && (DRM_NOUVEAU)]"
        }
    ],
    "DRM_I2C_SIL164": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_KMS_HELPER && I2C ) )",
            "restrict": "( m )[!(y) && (DRM_NOUVEAU)]"
        }
    ],
    "DRM_I2C_NXP_TDA998X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_KMS_HELPER && I2C ) )",
            "restrict": "( m )[!(y) && (DRM_TILCDC)]"
        }
    ],
    "DRM_I2C_NXP_TDA9950": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_KMS_HELPER && I2C ) )",
            "restrict": ""
        }
    ],
    "DRM_HDLCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && ( ARM || ARM64 || COMPILE_TEST )) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_HDLCD_SHOW_UNDERRUN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_HDLCD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_MALI_DISPLAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && ( ARM || ARM64 || COMPILE_TEST )) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_KOMEDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_RADEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU) && (AGP || ! AGP)",
            "restrict": ""
        }
    ],
    "DRM_RADEON_USERPTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_RADEON)",
            "restrict": ""
        }
    ],
    "DRM_AMDGPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "DRM_AMDGPU_SI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_AMDGPU)",
            "restrict": ""
        }
    ],
    "DRM_AMDGPU_CIK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_AMDGPU)",
            "restrict": ""
        }
    ],
    "DRM_AMDGPU_USERPTR": [
        {
            "type": "bool",
            "rev_select": "HSA_AMD",
            "dep": "( HAS_IOMEM ) && (DRM_AMDGPU) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_AMD_ACP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_AMDGPU ) ) && (DRM_AMDGPU)",
            "restrict": ""
        }
    ],
    "DRM_AMD_DC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_AMDGPU ) )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_AMD_DC_DCN": [
        {
            "type": "bool",
            "rev_select": "DRM_AMD_DC[( X86 || PPC_LONG_DOUBLE_128 )]",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_AMDGPU ) )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_AMD_DC_HDCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_AMDGPU ) ) && (DRM_AMD_DC)",
            "restrict": ""
        }
    ],
    "DRM_AMD_DC_SI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_AMDGPU ) ) && (DRM_AMDGPU_SI) && (DRM_AMD_DC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DEBUG_KERNEL_DC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_AMDGPU ) ) && (DRM_AMD_DC) && (KGDB)",
            "restrict": ""
        }
    ],
    "DRM_AMD_SECURE_DISPLAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_AMDGPU ) ) && (DEBUG_FS) && (DRM_AMD_DC_DCN)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HSA_AMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_AMDGPU && ( X86_64 || ARM64 || PPC64 ))",
            "restrict": ""
        }
    ],
    "HSA_AMD_SVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (HSA_AMD && DEVICE_PRIVATE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HSA_AMD_P2P": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (HSA_AMD && PCI_P2PDMA && DMABUF_MOVE_NOTIFY)",
            "restrict": ""
        }
    ],
    "DRM_NOUVEAU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "NOUVEAU_LEGACY_CTX_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NOUVEAU_PLATFORM_DRIVER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU && ARCH_TEGRA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NOUVEAU_DEBUG": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU)",
            "restrict": "( 0 7 ) || ( 5 )[!(y)]"
        }
    ],
    "NOUVEAU_DEBUG_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU)",
            "restrict": "( 0 7 ) || ( 3 )[!(y)]"
        }
    ],
    "NOUVEAU_DEBUG_MMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NOUVEAU_DEBUG_PUSH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_NOUVEAU_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_NOUVEAU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_NOUVEAU_SVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DEVICE_PRIVATE) && (DRM_NOUVEAU) && (MMU) && (STAGING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (X86 && PCI) && (! PREEMPT_RT)",
            "restrict": ""
        }
    ],
    "DRM_I915_FORCE_PROBE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_I915)",
            "restrict": ""
        }
    ],
    "DRM_I915_CAPTURE_ERROR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_I915)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_I915_COMPRESS_ERROR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_I915_CAPTURE_ERROR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_I915_USERPTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_I915)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_I915_GVT": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_GVT_KVMGT",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "DRM_I915_GVT_KVMGT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_I915) && (X86) && (64BIT) && (KVM) && (VFIO_MDEV)",
            "restrict": ""
        }
    ],
    "DRM_I915_PXP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_I915) && (INTEL_MEI && INTEL_MEI_PXP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_WERROR": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (EXPERT) && (! COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915) && (EXPERT) && (! COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG_MMIO": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG_GEM": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915_WERROR)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG_GEM_ONCE": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915_DEBUG_GEM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_ERRLOG_GEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915_DEBUG_GEM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_TRACE_GEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915_DEBUG_GEM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_TRACE_GTT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915_DEBUG_GEM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_SW_FENCE_DEBUG_OBJECTS": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_SW_FENCE_CHECK_DAG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG_GUC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_SELFTEST_BROKEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915_SELFTEST) && (BROKEN)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_LOW_LEVEL_TRACEPOINTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG_VBLANK_EVADE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_DEBUG_RUNTIME_PM": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) && ( EXPERT ) ) && (DRM_I915)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_I915_REQUEST_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 20000 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_FENCE_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 10000 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_USERFAULT_AUTOSUSPEND": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 250 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_HEARTBEAT_INTERVAL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 2500 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_PREEMPT_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 640 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_MAX_REQUEST_BUSYWAIT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 8000 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_STOP_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 100 )[!(( EXPERT ) && y)]"
        }
    ],
    "DRM_I915_TIMESLICE_DURATION": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) )",
            "restrict": "( 1 )[!(y)]"
        }
    ],
    "DRM_I915_UNSTABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM_I915 ) ) && (EXPERT) && (STAGING) && (BROKEN) && (! COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_KMB_DISPLAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (ARCH_KEEMBAY || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_VGEM": [
        {
            "type": "tristate",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": ""
        }
    ],
    "DRM_VKMS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF && DRM && COMMON_CLK) && (ARCH_S3C64XX || ARCH_S5PV210 || ARCH_EXYNOS || ARCH_MULTIPLATFORM || COMPILE_TEST) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_FIMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (! FB_S3C)",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS5433_DECON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS7_DECON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (! FB_S3C)",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_MIXER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_VIDI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_DPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (DRM_EXYNOS_FIMD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_EXYNOS_DSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (DRM_EXYNOS_FIMD || DRM_EXYNOS5433_DECON || DRM_EXYNOS7_DECON)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_EXYNOS_DP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (DRM_EXYNOS_FIMD || DRM_EXYNOS7_DECON)",
            "restrict": "( DRM_EXYNOS )[!(y)]"
        }
    ],
    "DRM_EXYNOS_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (DRM_EXYNOS_MIXER || DRM_EXYNOS5433_DECON)",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_MIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (DRM_EXYNOS5433_DECON)",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_G2D": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (VIDEO_SAMSUNG_S5P_G2D = n || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_IPP": [
        {
            "type": "bool",
            "rev_select": "DRM_EXYNOS_FIMC || DRM_EXYNOS_ROTATOR || DRM_EXYNOS_SCALER || DRM_EXYNOS_GSC",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_FIMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_ROTATOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_SCALER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS )",
            "restrict": ""
        }
    ],
    "DRM_EXYNOS_GSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_EXYNOS ) && (VIDEO_SAMSUNG_EXYNOS_GSC = n || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && ROCKCHIP_IOMMU)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_VOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ROCKCHIP_VOP2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP )",
            "restrict": ""
        }
    ],
    "ROCKCHIP_ANALOGIX_DP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP ) && (ROCKCHIP_VOP)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_CDN_DP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP ) && (EXTCON = y || ( EXTCON = m && DRM_ROCKCHIP = m ))",
            "restrict": ""
        }
    ],
    "ROCKCHIP_DW_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP )",
            "restrict": ""
        }
    ],
    "ROCKCHIP_DW_MIPI_DSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP )",
            "restrict": ""
        }
    ],
    "ROCKCHIP_INNO_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP )",
            "restrict": ""
        }
    ],
    "ROCKCHIP_LVDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP ) && (DRM_ROCKCHIP) && (PINCTRL && OF)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_RGB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP ) && (DRM_ROCKCHIP) && (PINCTRL)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_RK3066_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_ROCKCHIP ) && (DRM_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "DRM_VMWGFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU) && (X86 || ARM64)",
            "restrict": ""
        }
    ],
    "DRM_VMWGFX_FBCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_VMWGFX && DRM_FBDEV_EMULATION)",
            "restrict": ""
        }
    ],
    "DRM_VMWGFX_MKSSTATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_VMWGFX) && (X86)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_GMA500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && X86 && MMU)",
            "restrict": ""
        }
    ],
    "DRM_UDL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (USB) && (USB_ARCH_HAS_HCD) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_AST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "DRM_MGAG200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "DRM_ARMADA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && HAVE_CLK && ARM && MMU)",
            "restrict": ""
        }
    ],
    "DRM_ATMEL_HLCDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && COMMON_CLK && MFD_ATMEL_HLCDC && ARM)",
            "restrict": ""
        }
    ],
    "DRM_RCAR_DU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (ARM || ARM64) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_RCAR_USE_CMM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_RCAR_DU)",
            "restrict": "( DRM_RCAR_DU )[!(y)]"
        }
    ],
    "DRM_RCAR_CMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_RCAR_USE_CMM)",
            "restrict": "( DRM_RCAR_DU )[!(y)]"
        }
    ],
    "DRM_RCAR_DW_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF)",
            "restrict": ""
        }
    ],
    "DRM_RCAR_USE_LVDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_BRIDGE && OF)",
            "restrict": "( DRM_RCAR_DU )[!(y)]"
        }
    ],
    "DRM_RCAR_LVDS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_RCAR_USE_LVDS)",
            "restrict": "( DRM_RCAR_DU )[!(y)]"
        }
    ],
    "DRM_RCAR_MIPI_DSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && DRM_BRIDGE && OF)",
            "restrict": ""
        }
    ],
    "DRM_RCAR_VSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_RCAR_DU) && (VIDEO_RENESAS_VSP1 = y || ( VIDEO_RENESAS_VSP1 && DRM_RCAR_DU = m ))",
            "restrict": "( y )[!(ARM) && (ARM64)]"
        }
    ],
    "DRM_RCAR_WRITEBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_RCAR_DU)",
            "restrict": "( y )[!(y) && (ARM64)]"
        }
    ],
    "DRM_SHMOBILE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && ARM) && (ARCH_SHMOBILE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && COMMON_CLK) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_SUN4I_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I )",
            "restrict": "( DRM_SUN4I )[!(y)]"
        }
    ],
    "DRM_SUN4I_HDMI_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I ) && (DRM_SUN4I_HDMI)",
            "restrict": ""
        }
    ],
    "DRM_SUN4I_BACKEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I )",
            "restrict": "( DRM_SUN4I )[!(y)]"
        }
    ],
    "DRM_SUN6I_DSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "DRM_SUN8I_DW_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I ) && (DRM_SUN4I)",
            "restrict": ""
        }
    ],
    "DRM_SUN8I_MIXER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I )",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "DRM_SUN8I_TCON_TOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_SUN4I )",
            "restrict": "( DRM_SUN4I )[!(y) && (DRM_SUN8I_MIXER != n)]"
        }
    ],
    "DRM_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (ARCH_OMAP2PLUS || ARCH_MULTIPLATFORM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP ) && (DEBUG_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_COLLECT_IRQ_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP ) && (OMAP2_DSS_DEBUGFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_DPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OMAP2_DSS_VENC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OMAP2_DSS_HDMI_COMMON": [
        {
            "type": "bool",
            "rev_select": "OMAP4_DSS_HDMI || OMAP5_DSS_HDMI",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": ""
        }
    ],
    "OMAP4_DSS_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OMAP4_DSS_HDMI_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP ) && (OMAP4_DSS_HDMI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OMAP5_DSS_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_SDI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_DSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OMAP2_DSS_MIN_FCK_PER_PCK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( 0 32 ) || ( 0 )[!(y)]"
        }
    ],
    "OMAP2_DSS_SLEEP_AFTER_VENC_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_OMAP )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_TILCDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && ARM)",
            "restrict": ""
        }
    ],
    "DRM_QXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "DRM_VIRTIO_GPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && VIRTIO_MENU && MMU)",
            "restrict": ""
        }
    ],
    "DRM_MSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (ARCH_QCOM || SOC_IMX5 || COMPILE_TEST) && (COMMON_CLK) && (IOMMU_SUPPORT) && (QCOM_OCMEM || QCOM_OCMEM = n) && (QCOM_LLCC || QCOM_LLCC = n) && (QCOM_COMMAND_DB || QCOM_COMMAND_DB = n)",
            "restrict": ""
        }
    ],
    "DRM_MSM_GPU_STATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM && ( DEBUG_FS || DEV_COREDUMP ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_GPU_SUDO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM && EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_MSM_MDSS": [
        {
            "type": "bool",
            "rev_select": "DRM_MSM_MDP5 || DRM_MSM_DPU",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_MSM_MDP4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_MDP5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI_28NM_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM_DSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI_20NM_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM_DSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI_28NM_8960_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM_DSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI_14NM_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM_DSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI_10NM_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM_DSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_DSI_7NM_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM_DSI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_MSM_HDMI_HDCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MSM && DRM_MSM_HDMI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_FSL_DCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && ARM && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_TEGRA || ( ARM && COMPILE_TEST )) && (COMMON_CLK) && (DRM) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TEGRA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_TEGRA )",
            "restrict": ""
        }
    ],
    "DRM_TEGRA_STAGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_TEGRA ) && (STAGING)",
            "restrict": ""
        }
    ],
    "DRM_STM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && ( ARCH_STM32 || ARCH_MULTIPLATFORM ))",
            "restrict": ""
        }
    ],
    "DRM_STM_DSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_STM)",
            "restrict": ""
        }
    ],
    "DRM_PANEL": [
        {
            "type": "bool",
            "rev_select": "DRM_I915 || DRM_EXYNOS_DPI || DRM_EXYNOS_DSI || DRM_EXYNOS_DP || DRM_ROCKCHIP || DRM_ATMEL_HLCDC || DRM_RCAR_LVDS || DRM_SUN4I || DRM_MSM || DRM_MSM_DSI || DRM_FSL_DCU || DRM_TEGRA || DRM_PANEL_BRIDGE || DRM_MEGACHIPS_STDPXXXX_GE_B850V3_FW || DRM_NXP_PTN3460 || DRM_PARADE_PS8622 || DRM_PARADE_PS8640 || DRM_TOSHIBA_TC358764 || DRM_TOSHIBA_TC358767 || DRM_TOSHIBA_TC358768 || DRM_TOSHIBA_TC358775 || DRM_TI_SN65DSI83 || DRM_TI_SN65DSI86 || DRM_STI || DRM_IMX_PARALLEL_DISPLAY || DRM_IMX_LDB || DRM_MEDIATEK || DRM_MXSFB || DRM_IMX_LCDIF",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ABT_Y030XX067A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ARM_VERSATILE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ASUS_Z00T_TM5P5_NT35596": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_BOE_BF060Y8M_AJ0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_BOE_HIMAX8279D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_BOE_TV101WUM_NL6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_DSI_CM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_LVDS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SIMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (BACKLIGHT_CLASS_DEVICE) && (PM)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_EDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (BACKLIGHT_CLASS_DEVICE) && (PM)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_EBBG_FT8719": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ELIDA_KD35T133": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_FEIXIN_K101_IM2BA02": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_FEIYANG_FY07024DI26A30D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ILITEK_IL9322": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ILITEK_ILI9341": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ILITEK_ILI9881C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_INNOLUX_EJ030NA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_INNOLUX_P079ZCA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_JDI_LT070ME05000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_JDI_R63452": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_KHADAS_TS050": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_KINGDISPLAY_KD097D04": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_LEADTEK_LTK050H3146W": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_LEADTEK_LTK500HD1829": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_LD9040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_LG_LB035Q02": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_LG_LG4573": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NEC_NL8048HL11": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NEWVISION_NV3052C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NOVATEK_NT35510": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NOVATEK_NT35560": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NOVATEK_NT35950": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NOVATEK_NT36672A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_NOVATEK_NT39016": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_MANTIX_MLAF057WE51": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_OLIMEX_LCD_OLINUXINO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (I2C) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ORISETECH_OTM8009A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_OSD_OSD101T2587_53TS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_PANASONIC_VVX10F034N00": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_RASPBERRYPI_TOUCHSCREEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (DRM_MIPI_DSI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_RAYDIUM_RM67191": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_RAYDIUM_RM68200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_RONBO_RB070D30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_ATNA33XC20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (BACKLIGHT_CLASS_DEVICE) && (PM)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_DB7430": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI && GPIOLIB) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6D16D0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6D27A1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI && GPIOLIB)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E3HA2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E63J0X03": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E63M0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E63M0_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (SPI) && (DRM_PANEL_SAMSUNG_S6E63M0)",
            "restrict": "( DRM_PANEL_SAMSUNG_S6E63M0 )[!(y)]"
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E63M0_DSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (DRM_MIPI_DSI) && (DRM_PANEL_SAMSUNG_S6E63M0)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E88A0_AMS452EF01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_S6E8AA0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SAMSUNG_SOFEF00": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SEIKO_43WVF1G": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SHARP_LQ101R1SX01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SHARP_LS037V7DW01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF && REGULATOR)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SHARP_LS043T1LE01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SHARP_LS060T1SX01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SITRONIX_ST7701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SITRONIX_ST7703": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SITRONIX_ST7789V": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SONY_ACX565AKM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF && SPI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_SONY_TULIP_TRULY_NT35521": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_TDO_TL070WSH30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_TPO_TD028TTEC1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_TPO_TD043MTEA1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (GPIOLIB && OF && REGULATOR && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_TPO_TPG110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF && SPI && GPIOLIB) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_TRULY_NT35597_WQXGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_VISIONOX_RM69299": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_WIDECHIPS_WS2401": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (SPI && GPIOLIB) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_XINPENG_XPP055C272": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_PANEL ) ) && (OF) && (DRM_MIPI_DSI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "DRM_BRIDGE": [
        {
            "type": "bool",
            "rev_select": "DRM_TILCDC || DRM_MSM || DRM_INGENIC || DRM_PL111 || DRM_TVE200 || DRM_MCDE",
            "dep": "( HAS_IOMEM ) && (DRM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_PANEL_BRIDGE": [
        {
            "type": "bool",
            "rev_select": "DRM_TILCDC || DRM_MSM || DRM_STM || DRM_CDNS_DSI || DRM_CHIPONE_ICN6211 || DRM_FSL_LDB || DRM_LONTIUM_LT8912B || DRM_LONTIUM_LT9211 || DRM_LONTIUM_LT9611 || DRM_LONTIUM_LT9611UXC || DRM_LVDS_CODEC || DRM_NWL_MIPI_DSI || DRM_TOSHIBA_TC358762 || DRM_CDNS_MHDP8546 || DRM_DW_MIPI_DSI || DRM_INGENIC || DRM_VC4 || DRM_MXSFB || DRM_IMX_LCDIF || DRM_PL111 || DRM_TVE200 || DRM_MCDE",
            "dep": "( HAS_IOMEM ) && (DRM_BRIDGE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_CDNS_DSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_CHIPONE_ICN6211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_CHRONTEL_CH7033": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_CROS_EC_ANX7688": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF) && (I2C_CROS_EC_TUNNEL || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_DISPLAY_CONNECTOR": [
        {
            "type": "tristate",
            "rev_select": "DRM_MESON",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_FSL_LDB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_ITE_IT6505": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_LONTIUM_LT8912B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_LONTIUM_LT9211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_LONTIUM_LT9611": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_LONTIUM_LT9611UXC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_ITE_IT66121": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_LVDS_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_MEGACHIPS_STDPXXXX_GE_B850V3_FW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_NWL_MIPI_DSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM) && (COMMON_CLK) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "DRM_NXP_PTN3460": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_PARADE_PS8622": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_PARADE_PS8640": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_SIL_SII8620": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF) && (RC_CORE || ! RC_CORE)",
            "restrict": ""
        }
    ],
    "DRM_SII902X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_SII9234": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_SIMPLE_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_THINE_THC63LVD1024": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TOSHIBA_TC358762": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TOSHIBA_TC358764": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TOSHIBA_TC358767": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TOSHIBA_TC358768": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TOSHIBA_TC358775": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TI_DLPC3433": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM && DRM_PANEL) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TI_TFP410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TI_SN65DSI83": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TI_SN65DSI86": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_TI_TPD12S015": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_ANALOGIX_ANX6345": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_ANALOGIX_ANX78XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) )",
            "restrict": ""
        }
    ],
    "DRM_ANALOGIX_DP": [
        {
            "type": "tristate",
            "rev_select": "DRM_EXYNOS_DP || DRM_ROCKCHIP[ROCKCHIP_ANALOGIX_DP] || DRM_ANALOGIX_ANX6345 || DRM_ANALOGIX_ANX78XX",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM)",
            "restrict": ""
        }
    ],
    "DRM_ANALOGIX_ANX7625": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_I2C_ADV7511": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_I2C_ADV7511_AUDIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM_I2C_ADV7511 && SND_SOC)",
            "restrict": ""
        }
    ],
    "DRM_I2C_ADV7511_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM_I2C_ADV7511)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_CDNS_MHDP8546": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_CDNS_MHDP8546_J721E": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && ( DRM_CDNS_MHDP8546 ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_IMX8QM_LDB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && ( ARCH_MXC || COMPILE_TEST ) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_IMX8QXP_LDB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && ( ARCH_MXC || COMPILE_TEST ) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_IMX8QXP_PIXEL_COMBINER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && ( ARCH_MXC || COMPILE_TEST ) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_IMX8QXP_PIXEL_LINK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && ( ARCH_MXC || COMPILE_TEST ) && (OF) && (IMX_SCU)",
            "restrict": ""
        }
    ],
    "DRM_IMX8QXP_PIXEL_LINK_TO_DPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && ( ARCH_MXC || COMPILE_TEST ) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_DW_HDMI": [
        {
            "type": "tristate",
            "rev_select": "DRM_ROCKCHIP[ROCKCHIP_DW_HDMI] || DRM_RCAR_DW_HDMI || DRM_SUN8I_DW_HDMI || DRM_IMX_HDMI || DRM_INGENIC_DW_HDMI || DRM_MESON_DW_HDMI",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) )",
            "restrict": ""
        }
    ],
    "DRM_DW_HDMI_AHB_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM_DW_HDMI && SND)",
            "restrict": ""
        }
    ],
    "DRM_DW_HDMI_I2S_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_RK3288_HDMI_ANALOG[DRM_DW_HDMI]",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (SND_SOC) && (DRM_DW_HDMI)",
            "restrict": "( DRM_MESON_DW_HDMI )"
        }
    ],
    "DRM_DW_HDMI_GP_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM_DW_HDMI && SND)",
            "restrict": ""
        }
    ],
    "DRM_DW_HDMI_CEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) ) && (DRM_DW_HDMI)",
            "restrict": ""
        }
    ],
    "DRM_DW_MIPI_DSI": [
        {
            "type": "tristate",
            "rev_select": "DRM_ROCKCHIP[ROCKCHIP_DW_MIPI_DSI] || DRM_STM_DSI",
            "dep": "( HAS_IOMEM ) && ( ( DRM && DRM_BRIDGE ) )",
            "restrict": ""
        }
    ],
    "DRM_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (OF && DRM && ( ARCH_STI || ARCH_MULTIPLATFORM ))",
            "restrict": ""
        }
    ],
    "DRM_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && ( ARCH_MXC || ARCH_MULTIPLATFORM || COMPILE_TEST )) && (IMX_IPUV3_CORE)",
            "restrict": ""
        }
    ],
    "DRM_IMX_PARALLEL_DISPLAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_IMX)",
            "restrict": ""
        }
    ],
    "DRM_IMX_TVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_IMX) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_IMX_LDB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_IMX && MFD_SYSCON) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_IMX_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_IMX && OF)",
            "restrict": ""
        }
    ],
    "DRM_IMX_DCSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && ARCH_MXC && ARM64)",
            "restrict": ""
        }
    ],
    "DRM_INGENIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MIPS || COMPILE_TEST) && (DRM) && (CMA) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_INGENIC_IPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_INGENIC )",
            "restrict": ""
        }
    ],
    "DRM_INGENIC_DW_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_INGENIC ) && (MACH_JZ4780)",
            "restrict": ""
        }
    ],
    "DRM_V3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_BCM || ARCH_BRCMSTB || ARCH_BCM2835 || COMPILE_TEST) && (DRM) && (COMMON_CLK) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_VC4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_BCM || ARCH_BCM2835 || COMPILE_TEST) && (RASPBERRYPI_FIRMWARE || ( COMPILE_TEST && ! RASPBERRYPI_FIRMWARE )) && (DRM) && (SND && SND_SOC) && (COMMON_CLK) && (PM)",
            "restrict": ""
        }
    ],
    "DRM_VC4_HDMI_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_VC4)",
            "restrict": ""
        }
    ],
    "DRM_ETNAVIV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_ETNAVIV_THERMAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_ETNAVIV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DRM_HISI_HIBMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && ( ARM64 || COMPILE_TEST )) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_HISI_KIRIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && ARM64)",
            "restrict": ""
        }
    ],
    "DRM_LOGICVC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (ARCH_MEDIATEK || ( ARM && COMPILE_TEST )) && (COMMON_CLK) && (HAVE_ARM_SMCCC) && (OF) && (MTK_MMSYS)",
            "restrict": ""
        }
    ],
    "DRM_MEDIATEK_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MEDIATEK)",
            "restrict": ""
        }
    ],
    "DRM_MXS": [
        {
            "type": "bool",
            "rev_select": "DRM_MXSFB || DRM_IMX_LCDIF",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "DRM_MXSFB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_IMX_LCDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF && ( ARM || ARM64 )) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_MESON_DW_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_MESON)",
            "restrict": "( y )[!(y) && (DRM_MESON)]"
        }
    ],
    "DRM_ARCPGU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF)",
            "restrict": ""
        }
    ],
    "DRM_BOCHS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "DRM_CIRRUS_QEMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU)",
            "restrict": ""
        }
    ],
    "DRM_GM12U320": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && USB && MMU)",
            "restrict": ""
        }
    ],
    "DRM_PANEL_MIPI_DBI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "DRM_SIMPLEDRM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": ""
        }
    ],
    "TINYDRM_HX8357D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_ILI9163": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_ILI9225": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_ILI9341": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_ILI9486": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_MI0283QT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_REPAPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_ST7586": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "TINYDRM_ST7735R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && SPI)",
            "restrict": ""
        }
    ],
    "DRM_PL111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (ARM || ARM64 || COMPILE_TEST) && (VEXPRESS_CONFIG || VEXPRESS_CONFIG = n) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_TVE200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (CMA) && (ARM || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_XEN": [
        {
            "type": "bool",
            "rev_select": "DRM_XEN_FRONTEND",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "DRM_XEN_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (XEN && DRM)",
            "restrict": ""
        }
    ],
    "DRM_VBOXVIDEO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && X86 && PCI)",
            "restrict": ""
        }
    ],
    "DRM_LIMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (ARM || ARM64 || COMPILE_TEST) && (MMU) && (COMMON_CLK) && (OF)",
            "restrict": ""
        }
    ],
    "DRM_PANFROST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (ARM || ARM64 || ( COMPILE_TEST && ! GENERIC_ATOMIC64 )) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_ASPEED_GFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (( COMPILE_TEST || ARCH_ASPEED )) && (MMU)",
            "restrict": ""
        }
    ],
    "DRM_MCDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM) && (CMA) && (ARM || COMPILE_TEST) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "DRM_TIDSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && OF) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DRM_ZYNQMP_DPSUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_ZYNQMP || COMPILE_TEST) && (COMMON_CLK && DRM && OF) && (DMADEVICES) && (PHY_XILINX_ZYNQMP) && (XILINX_ZYNQMP_DPDMA)",
            "restrict": ""
        }
    ],
    "DRM_GUD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && USB && MMU)",
            "restrict": ""
        }
    ],
    "DRM_SSD130X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": ""
        }
    ],
    "DRM_SSD130X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_SSD130X && I2C)",
            "restrict": ""
        }
    ],
    "DRM_SSD130X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM_SSD130X && SPI)",
            "restrict": ""
        }
    ],
    "DRM_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARCH_SPRD || COMPILE_TEST) && (DRM && OF)",
            "restrict": ""
        }
    ],
    "DRM_HYPERV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (DRM && PCI && MMU && HYPERV)",
            "restrict": ""
        }
    ],
    "DRM_LEGACY": [
        {
            "type": "bool",
            "rev_select": "NOUVEAU_LEGACY_CTX_SUPPORT",
            "dep": "( HAS_IOMEM ) && (DRM && MMU)",
            "restrict": ""
        }
    ],
    "DRM_TDFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && PCI)",
            "restrict": ""
        }
    ],
    "DRM_R128": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && PCI)",
            "restrict": ""
        }
    ],
    "DRM_I810": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && AGP && AGP_INTEL && ( ! PREEMPTION || BROKEN ))",
            "restrict": ""
        }
    ],
    "DRM_MGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && PCI)",
            "restrict": ""
        }
    ],
    "DRM_SIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && AGP) && (FB_SIS || FB_SIS = n)",
            "restrict": ""
        }
    ],
    "DRM_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && PCI)",
            "restrict": ""
        }
    ],
    "DRM_SAVAGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( DRM_LEGACY ) && (DRM && PCI)",
            "restrict": ""
        }
    ],
    "DRM_EXPORT_FOR_TESTS": [
        {
            "type": "bool",
            "rev_select": "DRM_DEBUG_SELFTEST[m] || DRM_I915_DEBUG[m] || DRM_I915_SELFTEST[m]",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "DRM_PANEL_ORIENTATION_QUIRKS": [
        {
            "type": "tristate",
            "rev_select": "DRM || FB_EFI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "DRM_NOMODESET": [
        {
            "type": "bool",
            "rev_select": "DRM",
            "dep": "( HAS_IOMEM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_LIB_RANDOM": [
        {
            "type": "bool",
            "rev_select": "DRM_DEBUG_SELFTEST",
            "dep": "( HAS_IOMEM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DRM_PRIVACY_SCREEN": [
        {
            "type": "bool",
            "rev_select": "CHROMEOS_PRIVACY_SCREEN || THINKPAD_ACPI",
            "dep": "( HAS_IOMEM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FB_CMDLINE": [
        {
            "type": "bool",
            "rev_select": "DRM || FB",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "FB_NOTIFY": [
        {
            "type": "bool",
            "rev_select": "FB",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "FB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "FIRMWARE_EDID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_DDC": [
        {
            "type": "tristate",
            "rev_select": "FB_CYBER2000_DDC || FB_NVIDIA_I2C || FB_RIVA_I2C || FB_I740 || FB_I810_I2C || FB_INTEL_I2C || FB_MATROX_I2C || FB_RADEON_I2C || FB_S3_DDC || FB_SAVAGE_I2C || FB_3DFX_I2C || FB_TRIDENT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_CFB_FILLRECT": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_FB_IVTV || VIDEO_VIVID || DRM_FBDEV_EMULATION || FB_GRVGA || FB_CIRRUS || FB_PM2 || FB_ARMCLCD || FB_ACORN || FB_SA1100 || FB_IMX || FB_CYBER2000 || FB_APOLLO || FB_Q40 || FB_FM2 || FB_ATARI || FB_OF || FB_CONTROL || FB_PLATINUM || FB_VALKYRIE || FB_CT65550 || FB_ASILIANT || FB_VGA16 || FB_STI || FB_MAC || FB_TGA || FB_UVESA || FB_VESA || FB_EFI || FB_GBE || FB_BW2 || FB_CG3 || FB_TCX || FB_CG14 || FB_P9100 || FB_LEO || FB_XVR500 || FB_XVR2500 || FB_XVR1000 || FB_PVR2 || FB_OPENCORES || FB_S1D13XXX || FB_ATMEL || FB_NVIDIA || FB_RIVA || FB_I740 || FB_I810 || FB_LE80578 || FB_INTEL || FB_MATROX || FB_RADEON || FB_ATY128 || FB_ATY || FB_S3 || FB_SAVAGE || FB_SIS || FB_VIA || FB_NEOMAGIC || FB_KYRO || FB_3DFX || FB_VOODOO1 || FB_VT8623 || FB_TRIDENT || FB_ARK || FB_PM3 || FB_CARMINE || FB_AU1100 || FB_GEODE_LX || FB_GEODE_GX || FB_GEODE_GX1 || FB_HIT || FB_PMAG_AA || FB_PMAG_BA || FB_PMAGB_B || FB_MAXINE || FB_G364 || FB_68328 || FB_PXA168 || FB_PXA || FB_FSL_DIU || FB_W100 || FB_TMIO || FB_S3C || FB_S3C2410 || FB_SM501 || FB_IBM_GXT4500 || FB_XILINX || FB_GOLDFISH || FB_SH7760 || FB_DA8XX || FB_MB862XX || FB_EP93XX || FB_MX3 || FB_HYPERV || FB_SIMPLE || FB_SM712 || FB_OMAP || FB_OMAP2 || MMP_FB || FB_SM750 || SAMPLE_VFIO_MDEV_MDPY_FB",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_CFB_COPYAREA": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_FB_IVTV || VIDEO_VIVID || DRM_FBDEV_EMULATION || FB_GRVGA || FB_CIRRUS || FB_PM2 || FB_ARMCLCD || FB_ACORN || FB_SA1100 || FB_IMX || FB_CYBER2000 || FB_Q40 || FB_FM2 || FB_ATARI || FB_OF || FB_CONTROL || FB_PLATINUM || FB_VALKYRIE || FB_CT65550 || FB_ASILIANT || FB_VGA16 || FB_STI || FB_MAC || FB_TGA || FB_UVESA || FB_VESA || FB_EFI || FB_GBE || FB_BW2 || FB_CG3 || FB_CG6 || FB_FFB || FB_TCX || FB_CG14 || FB_P9100 || FB_LEO || FB_XVR500 || FB_XVR2500 || FB_XVR1000 || FB_PVR2 || FB_OPENCORES || FB_S1D13XXX || FB_ATMEL || FB_NVIDIA || FB_RIVA || FB_I740 || FB_I810 || FB_LE80578 || FB_INTEL || FB_MATROX || FB_RADEON || FB_ATY128 || FB_ATY || FB_S3 || FB_SAVAGE || FB_SIS || FB_VIA || FB_NEOMAGIC || FB_KYRO || FB_3DFX || FB_VOODOO1 || FB_VT8623 || FB_TRIDENT || FB_ARK || FB_PM3 || FB_CARMINE || FB_AU1100 || FB_GEODE_LX || FB_GEODE_GX || FB_GEODE_GX1 || FB_HIT || FB_PMAG_AA || FB_PMAG_BA || FB_PMAGB_B || FB_MAXINE || FB_G364 || FB_68328 || FB_PXA168 || FB_PXA || FB_FSL_DIU || FB_W100 || FB_TMIO || FB_S3C || FB_S3C2410 || FB_SM501 || FB_IBM_GXT4500 || FB_XILINX || FB_GOLDFISH || FB_SH7760 || FB_DA8XX || FB_MB862XX || FB_EP93XX || FB_MX3 || FB_HYPERV || FB_SIMPLE || FB_SM712 || FB_OMAP || FB_OMAP2 || MMP_FB || FB_SM750 || SAMPLE_VFIO_MDEV_MDPY_FB",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_CFB_IMAGEBLIT": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_FB_IVTV || VIDEO_VIVID || DRM_FBDEV_EMULATION || FB_GRVGA || FB_CIRRUS || FB_PM2 || FB_ARMCLCD || FB_ACORN || FB_SA1100 || FB_IMX || FB_CYBER2000 || FB_APOLLO || FB_Q40 || FB_FM2 || FB_ATARI || FB_OF || FB_CONTROL || FB_PLATINUM || FB_VALKYRIE || FB_CT65550 || FB_ASILIANT || FB_IMSTT || FB_VGA16 || FB_STI || FB_MAC || FB_HP300 || FB_TGA || FB_UVESA || FB_VESA || FB_EFI || FB_GBE || FB_BW2 || FB_CG3 || FB_CG6 || FB_FFB || FB_TCX || FB_CG14 || FB_P9100 || FB_LEO || FB_XVR500 || FB_XVR2500 || FB_XVR1000 || FB_PVR2 || FB_OPENCORES || FB_S1D13XXX || FB_ATMEL || FB_NVIDIA || FB_RIVA || FB_I740 || FB_I810 || FB_LE80578 || FB_INTEL || FB_MATROX || FB_RADEON || FB_ATY128 || FB_ATY || FB_S3 || FB_SAVAGE || FB_SIS || FB_VIA || FB_NEOMAGIC || FB_KYRO || FB_3DFX || FB_VOODOO1 || FB_VT8623 || FB_TRIDENT || FB_ARK || FB_PM3 || FB_CARMINE || FB_AU1100 || FB_GEODE_LX || FB_GEODE_GX || FB_GEODE_GX1 || FB_HIT || FB_PMAG_AA || FB_PMAG_BA || FB_PMAGB_B || FB_MAXINE || FB_G364 || FB_68328 || FB_PXA168 || FB_PXA || FB_FSL_DIU || FB_W100 || FB_TMIO || FB_S3C || FB_S3C2410 || FB_SM501 || FB_IBM_GXT4500 || FB_XILINX || FB_GOLDFISH || FB_SH7760 || FB_DA8XX || FB_MB862XX || FB_EP93XX || FB_MX3 || FB_HYPERV || FB_SIMPLE || FB_SM712 || FB_OMAP || FB_OMAP2 || MMP_FB || FB_SM750 || SAMPLE_VFIO_MDEV_MDPY_FB",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_CFB_REV_PIXELS_IN_BYTE": [
        {
            "type": "bool",
            "rev_select": "FB_DA8XX",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_SYS_FILLRECT": [
        {
            "type": "tristate",
            "rev_select": "DRM_FBDEV_EMULATION || FB_CLPS711X || FB_ARC || FB_N411 || FB_AU1200 || FB_VT8500[( ! FB_WMT_GE_ROPS )] || FB_WM8505[( ! FB_WMT_GE_ROPS )] || FB_SH_MOBILE_LCDC || FB_SMSCUFX || FB_UDL || FB_PS3 || FB_VIRTUAL || XEN_FBDEV_FRONTEND || FB_METRONOME || FB_BROADSHEET || FB_SSD1307 || HID_PICOLCD_FB || CFAG12864B || HT16K33 || FB_TFT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_SYS_COPYAREA": [
        {
            "type": "tristate",
            "rev_select": "DRM_FBDEV_EMULATION || FB_CLPS711X || FB_ARC || FB_N411 || FB_AU1200 || FB_VT8500[( ! FB_WMT_GE_ROPS )] || FB_WM8505[( ! FB_WMT_GE_ROPS )] || FB_SH_MOBILE_LCDC || FB_SMSCUFX || FB_UDL || FB_PS3 || FB_VIRTUAL || XEN_FBDEV_FRONTEND || FB_METRONOME || FB_BROADSHEET || FB_SSD1307 || HID_PICOLCD_FB || CFAG12864B || HT16K33 || FB_TFT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_SYS_IMAGEBLIT": [
        {
            "type": "tristate",
            "rev_select": "DRM_FBDEV_EMULATION || FB_CLPS711X || FB_ARC || FB_N411 || FB_AU1200 || FB_VT8500 || FB_WM8505 || FB_SH_MOBILE_LCDC || FB_SMSCUFX || FB_UDL || FB_PS3 || FB_VIRTUAL || XEN_FBDEV_FRONTEND || FB_METRONOME || FB_BROADSHEET || FB_SSD1307 || HID_PICOLCD_FB || CFAG12864B || HT16K33 || FB_TFT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_PROVIDE_GET_FB_UNMAPPED_AREA": [
        {
            "type": "bool",
            "rev_select": "DRM_STM[FB]",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_FOREIGN_ENDIAN": [
        {
            "type": "bool",
            "rev_select": "FB_MB862XX_LIME",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_BOTH_ENDIAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( FB_FOREIGN_ENDIAN ) ) && ( FB_BOTH_ENDIAN &&  !FB_BIG_ENDIAN &&  !FB_LITTLE_ENDIAN )",
            "restrict": ""
        }
    ],
    "FB_BIG_ENDIAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( FB_FOREIGN_ENDIAN ) ) && ( FB_BIG_ENDIAN &&  !FB_BOTH_ENDIAN &&  !FB_LITTLE_ENDIAN )",
            "restrict": ""
        }
    ],
    "FB_LITTLE_ENDIAN": [
        {
            "type": "bool",
            "rev_select": "FB_MB862XX_LIME",
            "dep": "( HAS_IOMEM ) && ( ( FB_FOREIGN_ENDIAN ) ) && ( FB_LITTLE_ENDIAN &&  !FB_BOTH_ENDIAN &&  !FB_BIG_ENDIAN )",
            "restrict": ""
        }
    ],
    "FB_SYS_FOPS": [
        {
            "type": "tristate",
            "rev_select": "DRM_FBDEV_EMULATION || FB_ARC || FB_N411 || FB_AU1200 || FB_SH_MOBILE_LCDC || FB_SMSCUFX || FB_UDL || FB_PS3 || FB_VIRTUAL || XEN_FBDEV_FRONTEND || FB_METRONOME || FB_BROADSHEET || FB_SSD1307 || HID_PICOLCD_FB || CFAG12864B || HT16K33 || FB_TFT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_DEFERRED_IO": [
        {
            "type": "bool",
            "rev_select": "DRM_FBDEV_EMULATION || FB_N411 || FB_SH_MOBILE_LCDC || FB_SMSCUFX || FB_UDL || XEN_FBDEV_FRONTEND || FB_METRONOME || FB_BROADSHEET || FB_HYPERV || FB_SSD1307 || HID_PICOLCD_FB || FB_TFT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_HECUBA": [
        {
            "type": "tristate",
            "rev_select": "FB_N411",
            "dep": "( HAS_IOMEM ) && (FB) && (FB_DEFERRED_IO)",
            "restrict": ""
        }
    ],
    "FB_SVGALIB": [
        {
            "type": "tristate",
            "rev_select": "FB_S3 || FB_VT8623 || FB_ARK",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_MACMODES": [
        {
            "type": "tristate",
            "rev_select": "FB_OF || FB_CONTROL || FB_PLATINUM || FB_VALKYRIE || FB_IMSTT[PPC_PMAC] || FB_MAC || FB_MATROX[PPC_PMAC] || FB_RADEON[PPC] || FB_ATY128[PPC_PMAC] || FB_ATY[PPC]",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_BACKLIGHT": [
        {
            "type": "tristate",
            "rev_select": "PMAC_BACKLIGHT || FB_ATMEL || FB_NVIDIA[FB_NVIDIA_BACKLIGHT] || FB_RIVA[FB_RIVA_BACKLIGHT] || FB_RADEON[FB_RADEON_BACKLIGHT] || FB_ATY128[FB_ATY128_BACKLIGHT] || FB_ATY[FB_ATY_BACKLIGHT] || FB_SH_MOBILE_LCDC || FB_SSD1307 || HT16K33 || FB_TFT",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_MODE_HELPERS": [
        {
            "type": "bool",
            "rev_select": "FB_ARMCLCD[OF] || FB_CLPS711X || FB_IMX || FB_UVESA || FB_ATMEL || FB_NVIDIA || FB_RIVA || FB_I740 || FB_I810 || FB_LE80578 || FB_INTEL || FB_RADEON || FB_SAVAGE || FB_NEOMAGIC || FB_3DFX || FB_TRIDENT || FB_VT8500 || FB_WM8505 || FB_PXA[OF] || FB_FSL_DIU || FB_SMSCUFX || FB_UDL || FB_DA8XX || FB_SM750",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_TILEBLITTING": [
        {
            "type": "bool",
            "rev_select": "FB_MATROX || FB_S3 || FB_VT8623 || FB_ARK",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_GRVGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && SPARC)",
            "restrict": ""
        }
    ],
    "FB_CIRRUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( ZORRO || PCI ))",
            "restrict": ""
        }
    ],
    "FB_PM2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( ( AMIGA && BROKEN ) || PCI ))",
            "restrict": ""
        }
    ],
    "FB_PM2_FIFO_DISCONNECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_PM2 && PCI)",
            "restrict": ""
        }
    ],
    "FB_ARMCLCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (ARM || ARM64 || COMPILE_TEST) && (FB && ARM_AMBA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FB_ACORN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ARM && ARCH_ACORN)",
            "restrict": ""
        }
    ],
    "FB_CLPS711X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( ARCH_CLPS711X || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_SA1100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ARM && ARCH_SA1100)",
            "restrict": ""
        }
    ],
    "FB_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAVE_CLK && HAS_IOMEM) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_CYBER2000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI && ( BROKEN || ! SPARC64 ))",
            "restrict": ""
        }
    ],
    "FB_CYBER2000_DDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_CYBER2000)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_CYBER2000_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_CYBER2000 && I2C && ARCH_NETWINDER) && (I2C = y || FB_CYBER2000 = m)",
            "restrict": ""
        }
    ],
    "FB_APOLLO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && APOLLO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_Q40": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && Q40)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_AMIGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && AMIGA)",
            "restrict": ""
        }
    ],
    "FB_AMIGA_OCS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_AMIGA)",
            "restrict": ""
        }
    ],
    "FB_AMIGA_ECS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_AMIGA)",
            "restrict": ""
        }
    ],
    "FB_AMIGA_AGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_AMIGA)",
            "restrict": ""
        }
    ],
    "FB_FM2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ZORRO)",
            "restrict": ""
        }
    ],
    "FB_ARC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( X86 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_ATARI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ATARI)",
            "restrict": ""
        }
    ],
    "FB_OF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PPC && ( ! PPC_PSERIES || PCI ))",
            "restrict": ""
        }
    ],
    "FB_CONTROL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( ( PPC_PMAC && PPC32 ) || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_PLATINUM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PPC_PMAC && PPC32)",
            "restrict": ""
        }
    ],
    "FB_VALKYRIE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( MAC || ( PPC_PMAC && PPC32 ) ))",
            "restrict": ""
        }
    ],
    "FB_CT65550": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PPC32 && PCI)",
            "restrict": ""
        }
    ],
    "FB_ASILIANT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PCI)",
            "restrict": ""
        }
    ],
    "FB_IMSTT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PCI)",
            "restrict": ""
        }
    ],
    "FB_VGA16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( X86 || PPC ))",
            "restrict": ""
        }
    ],
    "FB_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PARISC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_MAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && MAC)",
            "restrict": ""
        }
    ],
    "FB_HP300": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && DIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_TGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB) && (PCI || TC) && (ALPHA || TC)",
            "restrict": ""
        }
    ],
    "FB_UVESA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && CONNECTOR)",
            "restrict": ""
        }
    ],
    "FB_VESA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && X86)",
            "restrict": ""
        }
    ],
    "FB_EFI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ! IA64 && EFI)",
            "restrict": ""
        }
    ],
    "FB_N411": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && X86 && MMU)",
            "restrict": ""
        }
    ],
    "FB_HGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && X86)",
            "restrict": ""
        }
    ],
    "FB_GBE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && HAS_IOMEM) && (SGI_IP32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_GBE_MEM": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_GBE)",
            "restrict": "( 4 )[!(y)]"
        }
    ],
    "FB_SBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && SPARC)",
            "restrict": ""
        }
    ],
    "FB_BW2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( SPARC && FB_SBUS ))",
            "restrict": ""
        }
    ],
    "FB_CG3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( SPARC && FB_SBUS ))",
            "restrict": ""
        }
    ],
    "FB_CG6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( SPARC && FB_SBUS ))",
            "restrict": ""
        }
    ],
    "FB_FFB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SBUS && SPARC64)",
            "restrict": ""
        }
    ],
    "FB_TCX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SBUS)",
            "restrict": ""
        }
    ],
    "FB_CG14": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SBUS)",
            "restrict": ""
        }
    ],
    "FB_P9100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SBUS)",
            "restrict": ""
        }
    ],
    "FB_LEO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SBUS)",
            "restrict": ""
        }
    ],
    "FB_XVR500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PCI && SPARC64)",
            "restrict": ""
        }
    ],
    "FB_XVR2500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && PCI && SPARC64)",
            "restrict": ""
        }
    ],
    "FB_XVR1000": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && SPARC64)",
            "restrict": ""
        }
    ],
    "FB_PVR2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAS_IOMEM) && (SH_DREAMCAST || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_OPENCORES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAS_DMA)",
            "restrict": ""
        }
    ],
    "FB_S1D13XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && OF && HAVE_CLK && HAS_IOMEM) && (HAVE_FB_ATMEL || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_NVIDIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_NVIDIA_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_NVIDIA)",
            "restrict": ""
        }
    ],
    "FB_NVIDIA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_NVIDIA)",
            "restrict": ""
        }
    ],
    "FB_NVIDIA_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_NVIDIA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_RIVA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_RIVA_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_RIVA)",
            "restrict": ""
        }
    ],
    "FB_RIVA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_RIVA)",
            "restrict": ""
        }
    ],
    "FB_RIVA_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_RIVA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_I740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_I810": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI && X86_32 && AGP_INTEL)",
            "restrict": ""
        }
    ],
    "FB_I810_GTF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_I810)",
            "restrict": ""
        }
    ],
    "FB_I810_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_I810 && FB_I810_GTF)",
            "restrict": ""
        }
    ],
    "FB_LE80578": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI && X86)",
            "restrict": ""
        }
    ],
    "FB_CARILLO_RANCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_LE80578 && FB && PCI && X86)",
            "restrict": ""
        }
    ],
    "FB_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI && X86 && AGP_INTEL && EXPERT) && (! DRM_I915)",
            "restrict": ""
        }
    ],
    "FB_INTEL_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_INTEL)",
            "restrict": ""
        }
    ],
    "FB_INTEL_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_INTEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_MATROX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_MATROX_MILLENIUM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_MATROX)",
            "restrict": ""
        }
    ],
    "FB_MATROX_MYSTIQUE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_MATROX)",
            "restrict": ""
        }
    ],
    "FB_MATROX_G": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_MATROX)",
            "restrict": ""
        }
    ],
    "FB_MATROX_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_MATROX)",
            "restrict": ""
        }
    ],
    "FB_MATROX_MAVEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_MATROX_G && FB_MATROX_I2C)",
            "restrict": ""
        }
    ],
    "FB_RADEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_RADEON_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_RADEON)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_RADEON_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_RADEON)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_RADEON_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_RADEON)",
            "restrict": ""
        }
    ],
    "FB_ATY128": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_ATY128_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_ATY128)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_ATY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ! SPARC32)",
            "restrict": ""
        }
    ],
    "FB_ATY_CT": [
        {
            "type": "bool",
            "rev_select": "FB_ATY[SPARC64 && PCI]",
            "dep": "( HAS_IOMEM ) && (PCI && FB_ATY)",
            "restrict": ""
        }
    ],
    "FB_ATY_GENERIC_LCD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_ATY_CT)",
            "restrict": ""
        }
    ],
    "FB_ATY_GX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_ATY)",
            "restrict": "( y )[!(PCI) && (ATARI)]"
        }
    ],
    "FB_ATY_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_ATY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_S3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_S3_DDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_S3)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_SAVAGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_SAVAGE_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SAVAGE)",
            "restrict": ""
        }
    ],
    "FB_SAVAGE_ACCEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SAVAGE)",
            "restrict": ""
        }
    ],
    "FB_SIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_SIS_300": [
        {
            "type": "bool",
            "rev_select": "FB_SIS[! FB_SIS_315]",
            "dep": "( HAS_IOMEM ) && (FB_SIS)",
            "restrict": ""
        }
    ],
    "FB_SIS_315": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_SIS)",
            "restrict": ""
        }
    ],
    "FB_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI && GPIOLIB && I2C && ( X86 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_VIA_DIRECT_PROCFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( FB_VIA )",
            "restrict": ""
        }
    ],
    "FB_VIA_X_COMPATIBILITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( FB_VIA )",
            "restrict": ""
        }
    ],
    "FB_NEOMAGIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_KYRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_3DFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_3DFX_ACCEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_3DFX)",
            "restrict": ""
        }
    ],
    "FB_3DFX_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_3DFX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_VOODOO1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_VT8623": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_TRIDENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_ARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_PM3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_CARMINE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_CARMINE_DRAM_EVAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( FB_CARMINE ) ) && ( FB_CARMINE_DRAM_EVAL &&  !CARMINE_DRAM_CUSTOM )",
            "restrict": ""
        }
    ],
    "CARMINE_DRAM_CUSTOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( FB_CARMINE ) ) && ( CARMINE_DRAM_CUSTOM &&  !FB_CARMINE_DRAM_EVAL )",
            "restrict": ""
        }
    ],
    "FB_AU1100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "FB_AU1200": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "FB_VT8500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ARM && ARCH_VT8500)",
            "restrict": ""
        }
    ],
    "FB_WM8505": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && HAS_IOMEM && ( ARCH_VT8500 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_WMT_GE_ROPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( FB_VT8500 || FB_WM8505 ))",
            "restrict": ""
        }
    ],
    "FB_GEODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI && ( X86_32 || ( X86 && COMPILE_TEST ) ))",
            "restrict": ""
        }
    ],
    "FB_GEODE_LX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && FB_GEODE)",
            "restrict": ""
        }
    ],
    "FB_GEODE_GX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && FB_GEODE)",
            "restrict": ""
        }
    ],
    "FB_GEODE_GX1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && FB_GEODE)",
            "restrict": ""
        }
    ],
    "FB_HIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HD64461)",
            "restrict": ""
        }
    ],
    "FB_PMAG_AA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && TC)",
            "restrict": ""
        }
    ],
    "FB_PMAG_BA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && TC)",
            "restrict": ""
        }
    ],
    "FB_PMAGB_B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && TC)",
            "restrict": ""
        }
    ],
    "FB_MAXINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && MACH_DECSTATION)",
            "restrict": ""
        }
    ],
    "FB_G364": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( MIPS_MAGNUM_4000 || OLIVETTI_M700 ))",
            "restrict": ""
        }
    ],
    "FB_68328": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (( FB = y ) && ( M68328 || M68EZ328 || M68VZ328 ))",
            "restrict": ""
        }
    ],
    "FB_PXA168": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAVE_CLK && HAS_IOMEM) && (CPU_PXA168 || CPU_PXA910 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_PXA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ARCH_PXA)",
            "restrict": ""
        }
    ],
    "FB_PXA_OVERLAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_PXA && ( PXA27x || PXA3xx ))",
            "restrict": ""
        }
    ],
    "FB_PXA_SMARTPANEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_PXA)",
            "restrict": ""
        }
    ],
    "FB_PXA_PARAMETERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_PXA)",
            "restrict": ""
        }
    ],
    "PXA3XX_GCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_PXA)",
            "restrict": ""
        }
    ],
    "FB_FSL_DIU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && FSL_SOC)",
            "restrict": ""
        }
    ],
    "FB_W100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAS_IOMEM && ( ARCH_PXA || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_SH_MOBILE_LCDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAVE_CLK && HAS_IOMEM) && (SUPERH || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_TMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( MFD_TMIO || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_TMIO_ACCELL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_TMIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_S3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAVE_CLK && HAS_IOMEM) && (( CPU_S3C2416 || ARCH_S3C64XX ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_S3C_DEBUG_REGWRITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_S3C)",
            "restrict": ""
        }
    ],
    "FB_S3C2410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ARCH_S3C24XX)",
            "restrict": ""
        }
    ],
    "FB_S3C2410_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_S3C2410)",
            "restrict": ""
        }
    ],
    "FB_SM501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && MFD_SM501)",
            "restrict": ""
        }
    ],
    "FB_SMSCUFX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && USB)",
            "restrict": ""
        }
    ],
    "FB_UDL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && USB)",
            "restrict": ""
        }
    ],
    "FB_IBM_GXT4500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_PS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PS3_PS3AV)",
            "restrict": ""
        }
    ],
    "FB_PS3_DEFAULT_SIZE_M": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_PS3)",
            "restrict": "( 9 )[!(y)]"
        }
    ],
    "FB_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( MICROBLAZE || ARCH_ZYNQ || ARCH_ZYNQMP ))",
            "restrict": ""
        }
    ],
    "FB_GOLDFISH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB) && (GOLDFISH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_COBALT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && MIPS_COBALT)",
            "restrict": ""
        }
    ],
    "FB_SH7760": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( CPU_SUBTYPE_SH7760 || CPU_SUBTYPE_SH7763 || CPU_SUBTYPE_SH7720 || CPU_SUBTYPE_SH7721 ))",
            "restrict": ""
        }
    ],
    "FB_DA8XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HAVE_CLK && HAS_IOMEM) && (ARCH_DAVINCI_DA8XX || SOC_AM33XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_VIRTUAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "XEN_FBDEV_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && XEN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_METRONOME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB)",
            "restrict": ""
        }
    ],
    "FB_MB862XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB) && (PCI || ( OF && PPC ))",
            "restrict": ""
        }
    ],
    "FB_MB862XX_PCI_GDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( FB_MB862XX ) ) && (PCI) && ( FB_MB862XX_PCI_GDC &&  !FB_MB862XX_LIME )",
            "restrict": ""
        }
    ],
    "FB_MB862XX_LIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( ( FB_MB862XX ) ) && (OF && PPC) && ( FB_MB862XX_LIME &&  !FB_MB862XX_PCI_GDC )",
            "restrict": ""
        }
    ],
    "FB_MB862XX_I2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_MB862XX && I2C) && (FB_MB862XX = m || I2C = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ARCH_EP93XX)",
            "restrict": ""
        }
    ],
    "FB_PRE_INIT_FB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && FB_MB862XX_LIME)",
            "restrict": ""
        }
    ],
    "FB_MX3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && MX3_IPU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_BROADSHEET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && ( ARCH_PXA || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_HYPERV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && HYPERV)",
            "restrict": ""
        }
    ],
    "FB_SIMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB) && (! DRM_SIMPLEDRM)",
            "restrict": ""
        }
    ],
    "FB_SSD1307": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_SM712": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "FB_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB) && (ARCH_OMAP1 || ( ARM && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FB_OMAP_LCDC_EXTERNAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_OMAP)",
            "restrict": ""
        }
    ],
    "FB_OMAP_LCDC_HWA742": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_OMAP && FB_OMAP_LCDC_EXTERNAL)",
            "restrict": ""
        }
    ],
    "FB_OMAP_MANUAL_UPDATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_OMAP && FB_OMAP_LCDC_EXTERNAL)",
            "restrict": ""
        }
    ],
    "FB_OMAP_LCD_MIPID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_OMAP && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "FB_OMAP_LCD_H3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (MACH_OMAP_H3 || COMPILE_TEST) && (TPS65010 = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_OMAP_DMA_TUNE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (FB_OMAP)",
            "restrict": ""
        }
    ],
    "OMAP2_VRFB": [
        {
            "type": "bool",
            "rev_select": "VIDEO_OMAP2_VOUT[ARCH_OMAP2 || ARCH_OMAP3] || FB_OMAP2[ARCH_OMAP2 || ARCH_OMAP3]",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && (FB) && (DRM_OMAP = n) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DEBUG_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && (FB_OMAP2)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_OMAP2_NUM_FBS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && (FB_OMAP2)",
            "restrict": "( 1 10 ) || ( 3 )[!(y)]"
        }
    ],
    "FB_OMAP2_DSS_INIT": [
        {
            "type": "bool",
            "rev_select": "FB_OMAP2_DSS",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS": [
        {
            "type": "tristate",
            "rev_select": "FB_OMAP2",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_COLLECT_IRQ_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && (FB_OMAP2_DSS_DEBUGFS)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_DPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_OMAP2_DSS_VENC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_OMAP2_DSS_HDMI_COMMON": [
        {
            "type": "bool",
            "rev_select": "FB_OMAP4_DSS_HDMI || FB_OMAP5_DSS_HDMI",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP4_DSS_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_OMAP5_DSS_HDMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_SDI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_DSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_DSS_MIN_FCK_PER_PCK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": "( 0 32 ) || ( 0 )[!(y)]"
        }
    ],
    "FB_OMAP2_DSS_SLEEP_AFTER_VENC_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FB_OMAP2_ENCODER_OPA362": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_ENCODER_TFP410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_ENCODER_TPD12S015": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_CONNECTOR_DVI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (I2C)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_CONNECTOR_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_CONNECTOR_ANALOG_TV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_DPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) )",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_DSI_CM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (BACKLIGHT_CLASS_DEVICE) && (DRM_PANEL_DSI_CM = n)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_SONY_ACX565AKM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (SPI && BACKLIGHT_CLASS_DEVICE) && (DRM_PANEL_SONY_ACX565AKM = n)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_LGPHILIPS_LB035Q02": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_SHARP_LS037V7DW01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (BACKLIGHT_CLASS_DEVICE) && (DRM_PANEL_SHARP_LS037V7DW01 = n)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_TPO_TD028TTEC1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (SPI) && (DRM_PANEL_TPO_TD028TTEC1 = n)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_TPO_TD043MTEA1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (SPI) && (DRM_PANEL_TPO_TD043MTEA1 = n)",
            "restrict": ""
        }
    ],
    "FB_OMAP2_PANEL_NEC_NL8048HL11": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( OF && ( ARCH_OMAP2PLUS || COMPILE_TEST ) ) && ( FB_OMAP2 ) && ( ( FB_OMAP2_DSS ) ) && (SPI) && (BACKLIGHT_CLASS_DEVICE) && (DRM_PANEL_NEC_NL8048HL11 = n)",
            "restrict": ""
        }
    ],
    "MMP_DISP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && (CPU_PXA910 || CPU_MMP2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMP_DISP_CONTROLLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( MMP_DISP ) && (HAVE_CLK && HAS_IOMEM) && (CPU_PXA910 || CPU_MMP2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMP_DISP_SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( MMP_DISP ) && (MMP_DISP_CONTROLLER && SPI_MASTER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMP_PANEL_TPOHVGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( MMP_DISP ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MMP_FB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( MMP_DISP ) && (FB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LCD_CLASS_DEVICE": [
        {
            "type": "tristate",
            "rev_select": "FB_CLPS711X || FB_IMX",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "LCD_CORGI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI_MASTER && PXA_SHARPSL && BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "LCD_L4F00242T03": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI_MASTER) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LCD_LMS283GF05": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI_MASTER) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LCD_LTV350QV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "LCD_ILI922X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI)",
            "restrict": ""
        }
    ],
    "LCD_ILI9320": [
        {
            "type": "tristate",
            "rev_select": "LCD_VGG2432A4",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI)",
            "restrict": ""
        }
    ],
    "LCD_TDO24M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "LCD_VGG2432A4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "LCD_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE )",
            "restrict": ""
        }
    ],
    "LCD_TOSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (I2C && SPI && MACH_TOSA)",
            "restrict": ""
        }
    ],
    "LCD_HP700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SA1100_JORNADA720_SSP && ! PREEMPTION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LCD_AMS369FG06": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI && BACKLIGHT_CLASS_DEVICE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "LCD_LMS501KF03": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "LCD_HX8357": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI)",
            "restrict": ""
        }
    ],
    "LCD_OTM3225A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( LCD_CLASS_DEVICE ) && (SPI)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_CLASS_DEVICE": [
        {
            "type": "tristate",
            "rev_select": "DRM_RADEON || DRM_AMDGPU || DRM_NOUVEAU[DRM_NOUVEAU_BACKLIGHT] || DRM_NOUVEAU[ACPI && X86] || DRM_I915[ACPI] || DRM_GMA500[ACPI] || DRM_SHMOBILE || DRM_TILCDC || DRM_FSL_DCU || DRM_PARADE_PS8622 || DRM_PANEL_MIPI_DBI || TINYDRM_HX8357D || TINYDRM_ILI9163 || TINYDRM_ILI9341 || TINYDRM_ILI9486 || TINYDRM_MI0283QT || TINYDRM_ST7735R || DRM_GUD || DRM_SSD130X || FB_BACKLIGHT || FB_ARMCLCD[OF] || FB_MX3 || USB_APPLEDISPLAY || FB_OLPC_DCON || SAMSUNG_Q10 || ACPI_CMPC",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "BACKLIGHT_ATMEL_LCDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (FB_ATMEL)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (FB_EP93XX)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_IPAQ_MICRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_IPAQ_MICRO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BACKLIGHT_KTD253": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LM3533": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_LM3533)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LOCOMO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (SHARP_LOCOMO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BACKLIGHT_OMAP1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (ARCH_OMAP1 || COMPILE_TEST)",
            "restrict": "( ARCH_OMAP1 )[!(y)]"
        }
    ],
    "BACKLIGHT_HP680": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (SH_HP6XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BACKLIGHT_HP700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (SA1100_JORNADA720_SSP && ! PREEMPTION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BACKLIGHT_CARILLO_RANCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (LCD_CLASS_DEVICE && PCI && X86 && FB_LE80578)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_PWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (PWM)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_DA903X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (PMIC_DA903X)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_MAX8925": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_MAX8925)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_APPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_TOSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C && MACH_TOSA && LCD_TOSA)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_QCOM_WLED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE )",
            "restrict": ""
        }
    ],
    "BACKLIGHT_RT4831": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_RT4831)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_SAHARA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (X86)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_ADP5520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (PMIC_ADP5520)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_ADP8860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_ADP8870": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_PCF50633": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_AAT2870": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_AAT2870_CORE)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LM3630A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C && PWM)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LM3639": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LP855X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C && PWM)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LP8788": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_LP8788 && PWM)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_PANDORA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_SKY81452": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_SKY81452)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_TPS65217": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_TPS65217)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_AS3711": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (MFD_AS3711)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LV5207LP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_BD6107": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_ARCXCNN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (I2C)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_RAVE_SP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (RAVE_SP_CORE)",
            "restrict": ""
        }
    ],
    "BACKLIGHT_LED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HAS_IOMEM ) && ( BACKLIGHT_CLASS_DEVICE ) && (LEDS_CLASS && OF)",
            "restrict": ""
        }
    ],
    "VGASTATE": [
        {
            "type": "tristate",
            "rev_select": "FB_VGA16 || FB_NVIDIA || FB_RIVA || FB_I740 || FB_I810 || FB_S3 || FB_SAVAGE || FB_NEOMAGIC || FB_VT8623 || FB_ARK",
            "dep": "( HAS_IOMEM )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VIDEOMODE_HELPERS": [
        {
            "type": "bool",
            "rev_select": "DRM_MALI_DISPLAY || DRM_KOMEDA || DRM_EXYNOS || DRM_ROCKCHIP || DRM_RCAR_DU || DRM_SUN4I || DRM_OMAP || DRM_TILCDC || DRM_FSL_DCU || DRM_STM || DRM_PANEL_ARM_VERSATILE || DRM_PANEL_LVDS || DRM_PANEL_SIMPLE || DRM_PANEL_EDP || DRM_PANEL_SAMSUNG_LD9040 || DRM_PANEL_LG_LG4573 || DRM_PANEL_NOVATEK_NT35560 || DRM_PANEL_SAMSUNG_S6D16D0 || DRM_PANEL_SAMSUNG_S6E3HA2 || DRM_PANEL_SAMSUNG_S6E63J0X03 || DRM_PANEL_SAMSUNG_S6E88A0_AMS452EF01 || DRM_PANEL_SAMSUNG_S6E8AA0 || DRM_PANEL_SAMSUNG_SOFEF00 || DRM_PANEL_SEIKO_43WVF1G || DRM_LONTIUM_LT8912B || DRM_IMX || DRM_IMX_PARALLEL_DISPLAY || DRM_IMX_DCSS || DRM_MEDIATEK || DRM_MESON || DRM_PANEL_MIPI_DBI || DRM_XEN_FRONTEND || DRM_SPRD || FB_ARMCLCD[OF] || FB_CLPS711X || FB_IMX || FB_ATMEL || FB_VT8500 || FB_WM8505 || FB_PXA[OF] || FB_DA8XX || FB_OMAP2_DSS",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "HDMI": [
        {
            "type": "bool",
            "rev_select": "VIDEO_TDA1997X || VIDEO_ADV7604 || VIDEO_ADV7842 || VIDEO_TC358743 || VIDEO_ADV7511 || DRM || DRM_OMAP || FB_OMAP2_DSS || SND_SOC_HDMI_CODEC || SND_SOC_HDAC_HDMI",
            "dep": "( HAS_IOMEM )",
            "restrict": ""
        }
    ],
    "VGA_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VT ) && (! 4xx && ! PPC_8xx && ! SPARC && ! M68K && ! PARISC && ! SUPERH && ( ! ARM || ARCH_FOOTBRIDGE || ARCH_INTEGRATOR || ARCH_NETWINDER ) && ! ARM64 && ! ARC && ! MICROBLAZE && ! OPENRISC && ! S390 && ! UML)",
            "restrict": "( y )[!(EXPERT || ! X86)]"
        }
    ],
    "MDA_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VT ) && (! M68K && ! PARISC && ISA)",
            "restrict": ""
        }
    ],
    "SGI_NEWPORT_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VT ) && (SGI_IP22 && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "DUMMY_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VT )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DUMMY_CONSOLE_COLUMNS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( VT ) && (DUMMY_CONSOLE && ! ARM)",
            "restrict": "( 160 )[!(y) && (PARISC)] || ( 80 )[!(y)]"
        }
    ],
    "DUMMY_CONSOLE_ROWS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( VT ) && (DUMMY_CONSOLE && ! ARM)",
            "restrict": "( 64 )[!(y) && (PARISC)] || ( 25 )[!(y)]"
        }
    ],
    "FRAMEBUFFER_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "DRM_FBDEV_EMULATION[! EXPERT]",
            "dep": "( VT ) && (FB && ! UML)",
            "restrict": ""
        }
    ],
    "FRAMEBUFFER_CONSOLE_LEGACY_ACCELERATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": "( y )[!(y) && (PARISC)] || ( n )[!(y)]"
        }
    ],
    "FRAMEBUFFER_CONSOLE_DETECT_PRIMARY": [
        {
            "type": "bool",
            "rev_select": "DRM_FBDEV_EMULATION[FRAMEBUFFER_CONSOLE]",
            "dep": "( VT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FRAMEBUFFER_CONSOLE_ROTATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": ""
        }
    ],
    "FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VT ) && (FB = y && FRAMEBUFFER_CONSOLE && DUMMY_CONSOLE)",
            "restrict": ""
        }
    ],
    "STI_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VT ) && (PARISC && HAS_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && (FB || SGI_NEWPORT_CONSOLE)",
            "restrict": ""
        }
    ],
    "FB_LOGO_EXTRA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (FB = y)",
            "restrict": "( y )[!(y) && (SPU_BASE)]"
        }
    ],
    "LOGO_LINUX_MONO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_LINUX_VGA16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_LINUX_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_DEC_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (MACH_DECSTATION || ALPHA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_MAC_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (MAC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_PARISC_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (PARISC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_SGI_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (SGI_IP22 || SGI_IP27 || SGI_IP32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_SUN_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (SPARC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_SUPERH_MONO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (SUPERH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_SUPERH_VGA16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (SUPERH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOGO_SUPERH_CLUT224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FB || SGI_NEWPORT_CONSOLE ) && ( LOGO ) && (SUPERH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SOUND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SOUND_OSS_CORE": [
        {
            "type": "bool",
            "rev_select": "DMASOUND || SND_OSSEMUL",
            "dep": "( SOUND )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SOUND_OSS_CORE_PRECLAIM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && (SOUND_OSS_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMASOUND_ATARI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && (ATARI && SOUND)",
            "restrict": ""
        }
    ],
    "DMASOUND_PAULA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && (AMIGA && SOUND)",
            "restrict": ""
        }
    ],
    "DMASOUND_Q40": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && (Q40 && SOUND)",
            "restrict": ""
        }
    ],
    "DMASOUND": [
        {
            "type": "tristate",
            "rev_select": "DMASOUND_ATARI || DMASOUND_PAULA || DMASOUND_Q40",
            "dep": "( SOUND )",
            "restrict": ""
        }
    ],
    "SND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML )",
            "restrict": ""
        }
    ],
    "SND_TIMER": [
        {
            "type": "tristate",
            "rev_select": "SND_PCM[SND_PCM_TIMER] || SND_HRTIMER || SND_SEQUENCER || SND_OPL3_LIB || SND_OPL4_LIB || SND_ALOOP || SND_VIRMIDI || SND_WSS_LIB || SND_AD1816A || SND_GUSCLASSIC || SND_GUSEXTREME || SND_AZT3328 || SND_EMU10K1 || SND_YMFPCI || SND_SUN_CS4231",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_PCM": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_USBTV || VIDEO_GO7007 || VIDEO_CX231XX_ALSA || VIDEO_TM6000_ALSA || VIDEO_EM28XX_ALSA || VIDEO_SOLO6X10 || VIDEO_TW686X || VIDEO_IVTV_ALSA || VIDEO_COBALT || VIDEO_CX18_ALSA || VIDEO_CX23885 || VIDEO_CX25821_ALSA || VIDEO_CX88_ALSA || VIDEO_SAA7134_ALSA || VIDEO_TDA1997X || DRM_DW_HDMI_AHB_AUDIO || DRM_DW_HDMI_GP_AUDIO || DRM_VC4 || SND_PCM_OSS || SND_VX_LIB || SND_AC97_CODEC || SND_PCSP || SND_DUMMY || SND_ALOOP || SND_WSS_LIB || SND_SB8_DSP || SND_SB16_DSP || SND_AD1816A || SND_ES1688 || SND_ES18XX || SND_GUSCLASSIC || SND_GUSEXTREME || SND_MIRO || SND_MSND_PINNACLE || SND_MSND_CLASSIC || SND_ALS300 || SND_ALS4000 || SND_ASIHPI || SND_AZT3328 || SND_BT87X || SND_CMIPCI || SND_OXYGEN || SND_CS5535AUDIO || SND_CTXFI || SND_DARLA20 || SND_GINA20 || SND_LAYLA20 || SND_DARLA24 || SND_GINA24 || SND_LAYLA24 || SND_MONA || SND_MIA || SND_ECHO3G || SND_INDIGO || SND_INDIGOIO || SND_INDIGODJ || SND_INDIGOIOX || SND_INDIGODJX || SND_ENS1370 || SND_HDSP || SND_HDSPM || SND_KORG1212 || SND_LOLA || SND_LX6464ES || SND_MIXART || SND_PCXHR || SND_RME32 || SND_RME96 || SND_RME9652 || SND_SE6X || SND_VIRTUOSO || SND_HDA || SND_POWERMAC || SND_PS3 || SND_AOA || SND_AOA_SOUNDBUS || SND_ARMAACI || SND_ATMEL_AC97C || SND_AT73C213 || SND_SGI_O2 || SND_SGI_HAL2 || SND_N64 || SND_AICA || SND_SH_DAC_AUDIO || SND_USB_AUDIO || SND_USB_UA101 || SND_USB_USX2Y || SND_USB_CAIAQ || SND_USB_6FIRE || SND_USB_HIFACE || SND_USB_LINE6 || SND_FIREWIRE_LIB || SND_PDAUDIOCF || SND_SUN_AMD7930 || SND_SUN_CS4231 || SND_SUN_DBRI || SND_HARMONY || SND_SOC || SND_PXA910_SOC || HDMI_LPE_AUDIO || SND_XEN_FRONTEND || SND_VIRTIO || USB_CONFIGFS_F_UAC1 || USB_CONFIGFS_F_UAC1_LEGACY || USB_CONFIGFS_F_UAC2 || USB_AUDIO || SND_BCM2835 || MOST_SND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_PCM_ELD": [
        {
            "type": "bool",
            "rev_select": "DRM_DW_HDMI_AHB_AUDIO || DRM_DW_HDMI_GP_AUDIO || DRM_VC4 || SND_SOC_HDMI_CODEC || SND_SOC_HDAC_HDMI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_PCM_IEC958": [
        {
            "type": "bool",
            "rev_select": "DRM_DW_HDMI_AHB_AUDIO || DRM_DW_HDMI_GP_AUDIO || SND_MESON_AIU || SND_MESON_AXG_SPDIFOUT || SND_SOC_STM32_SAI || SND_SOC_HDMI_CODEC",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_DMAENGINE_PCM": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_LIB || SND_SOC_GENERIC_DMAENGINE_PCM || SND_SOC_INTEL_KEEMBAY",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HWDEP": [
        {
            "type": "tristate",
            "rev_select": "SND_OPL3_LIB || SND_OPL4_LIB || SND_VX_LIB || SND_ASIHPI || SND_EMU10K1 || SND_HDSP || SND_HDSPM || SND_MIXART || SND_PCXHR || SND_HDA_HWDEP || SND_USB_AUDIO || SND_USB_USX2Y || SND_USB_CAIAQ || SND_USB_US122L || SND_USB_LINE6 || SND_DICE || SND_OXFW || SND_FIREWORKS || SND_BEBOB || SND_FIREWIRE_DIGI00X || SND_FIREWIRE_TASCAM || SND_FIREWIRE_MOTU || SND_FIREFACE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SEQ_DEVICE": [
        {
            "type": "tristate",
            "rev_select": "SND_RAWMIDI[SND_SEQUENCER != n] || SND_SEQUENCER || SND_OPL3_LIB[SND_SEQUENCER != n] || SND_OPL4_LIB[SND_SEQUENCER != n] || SND_SBAWE[SND_SEQUENCER != n] || SND_EMU10K1[SND_SEQUENCER != n]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_RAWMIDI": [
        {
            "type": "tristate",
            "rev_select": "SND_MPU401_UART || SND_VIRMIDI || SND_MTPAV || SND_MTS64 || SND_SERIAL_U16550 || SND_SERIAL_GENERIC || SND_PORTMAN2X4 || SND_GUSCLASSIC || SND_GUSMAX || SND_INTERWAVE || SND_INTERWAVE_STB || SND_SB8 || SND_AZT3328 || SND_CA0106 || SND_CS4281 || SND_CS46XX || SND_LAYLA20 || SND_LAYLA24 || SND_MONA || SND_MIA || SND_ECHO3G || SND_EMU10K1 || SND_EMU10K1X || SND_ENS1370 || SND_ENS1371 || SND_HDSP || SND_HDSPM || SND_ICE1724 || SND_USB_AUDIO || SND_USB_UA101 || SND_USB_USX2Y || SND_USB_CAIAQ || SND_USB_US122L || SND_USB_6FIRE || SND_BCD2000 || SND_USB_LINE6 || SND_FIREWIRE_LIB || HID_PRODIKEYS || USB_CONFIGFS_F_MIDI || USB_MIDI_GADGET",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_COMPRESS_OFFLOAD": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_COMPRESS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_JACK": [
        {
            "type": "bool",
            "rev_select": "SND_VIRTUOSO || SND_HDA || SND_SOC || SND_VIRTIO",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_JACK_INPUT_DEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_JACK)",
            "restrict": "( y )[!(y) && (INPUT = y || INPUT = SND)]"
        }
    ],
    "SND_OSSEMUL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_MIXER_OSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_OSSEMUL)",
            "restrict": ""
        }
    ],
    "SND_PCM_OSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_OSSEMUL)",
            "restrict": ""
        }
    ],
    "SND_PCM_OSS_PLUGINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_PCM_OSS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_PCM_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SND_HRTIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (HIGH_RES_TIMERS)",
            "restrict": ""
        }
    ],
    "SND_DYNAMIC_MINORS": [
        {
            "type": "bool",
            "rev_select": "SND_HDA_CODEC_HDMI || SND_SOC_TOPOLOGY",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_MAX_CARDS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_DYNAMIC_MINORS)",
            "restrict": "( 4 256 ) || ( 32 )[!(y)]"
        }
    ],
    "SND_SUPPORT_OLD_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_PROC_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (PROC_FS)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SND_VERBOSE_PROCFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_PROC_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_VERBOSE_PRINTK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_CTL_FAST_LOOKUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SND_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_DEBUG_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_DEBUG)",
            "restrict": ""
        }
    ],
    "SND_PCM_XRUN_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_DEBUG && SND_VERBOSE_PROCFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SND_CTL_INPUT_VALIDATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_CTL_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_DEBUG)",
            "restrict": ""
        }
    ],
    "SND_JACK_INJECTION_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_JACK && SND_DEBUG && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "SND_VMASTER": [
        {
            "type": "bool",
            "rev_select": "SND_AC97_CODEC || SND_CA0106 || SND_ICE1724 || SND_HDA || SND_POWERMAC || SND_USB_6FIRE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_DMA_SGBUF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_CTL_LED": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_GENERIC[SND_HDA_GENERIC_LEDS]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SEQUENCER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SEQ_DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER )",
            "restrict": ""
        }
    ],
    "SND_SEQUENCER_OSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER ) && (SND_OSSEMUL)",
            "restrict": ""
        }
    ],
    "SND_SEQ_HRTIMER_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER ) && (SND_HRTIMER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_SEQ_MIDI_EVENT": [
        {
            "type": "tristate",
            "rev_select": "SND_SEQUENCER_OSS || SND_SEQ_MIDI || SND_OPL3_LIB_SEQ || SND_OPL4_LIB_SEQ || SND_VIRMIDI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER )",
            "restrict": ""
        }
    ],
    "SND_SEQ_MIDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER )",
            "restrict": "( SND_RAWMIDI )[!(y)]"
        }
    ],
    "SND_SEQ_MIDI_EMUL": [
        {
            "type": "tristate",
            "rev_select": "SND_OPL3_LIB_SEQ || SND_OPL4_LIB_SEQ || SND_SBAWE_SEQ || SND_EMU10K1_SEQ",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER )",
            "restrict": ""
        }
    ],
    "SND_SEQ_VIRMIDI": [
        {
            "type": "tristate",
            "rev_select": "SND_VIRMIDI || SND_SBAWE_SEQ || SND_EMU10K1_SEQ",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SEQUENCER )",
            "restrict": ""
        }
    ],
    "SND_MPU401_UART": [
        {
            "type": "tristate",
            "rev_select": "SND_MPU401 || SND_AD1816A || SND_ALS100 || SND_AZT1605 || SND_AZT2316 || SND_AZT2320 || SND_CMI8328 || SND_CMI8330 || SND_CS4231 || SND_CS4236 || SND_ES1688 || SND_ES18XX || SND_SC6000 || SND_GUSEXTREME || SND_JAZZ16 || SND_OPL3SA2 || SND_OPTI92X_AD1848 || SND_OPTI92X_CS4231 || SND_OPTI93X || SND_MIRO || SND_SB16 || SND_SBAWE || SND_SSCAPE || SND_WAVEFRONT || SND_MSND_PINNACLE || SND_MSND_CLASSIC || SND_ALS4000 || SND_ALI5451 || SND_AU8810 || SND_AU8820 || SND_AU8830 || SND_AZT3328 || SND_CMIPCI || SND_OXYGEN || SND_ES1938 || SND_ES1968 || SND_FM801 || SND_ICE1712 || SND_RIPTIDE || SND_SE6X || SND_SONICVIBES || SND_TRIDENT || SND_VIA82XX || SND_VIRTUOSO || SND_YMFPCI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_OPL3_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_ADLIB || SND_AD1816A || SND_ALS100 || SND_AZT1605 || SND_AZT2316 || SND_AZT2320 || SND_CMI8328 || SND_CMI8330 || SND_CS4236 || SND_ES1688 || SND_ES18XX || SND_SC6000 || SND_GUSEXTREME || SND_JAZZ16 || SND_OPL3SA2 || SND_OPTI92X_AD1848 || SND_OPTI92X_CS4231 || SND_OPTI93X || SND_SB8 || SND_SB16 || SND_SBAWE || SND_WAVEFRONT || SND_ALS300 || SND_ALS4000 || SND_AZT3328 || SND_CMIPCI || SND_CS4281 || SND_ES1938 || SND_FM801 || SND_RIPTIDE || SND_SONICVIBES || SND_YMFPCI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_OPL4_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_OPTI92X_AD1848 || SND_OPTI92X_CS4231 || SND_MIRO",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_OPL3_LIB_SEQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": "( SND_SEQUENCER && SND_OPL3_LIB )[!(y)]"
        }
    ],
    "SND_OPL4_LIB_SEQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": "( SND_SEQUENCER && SND_OPL4_LIB )[!(y)]"
        }
    ],
    "SND_VX_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_VX222 || SND_VXPOCKET",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_AC97_CODEC": [
        {
            "type": "tristate",
            "rev_select": "SND_AD1889 || SND_ALS300 || SND_ALI5451 || SND_ATIIXP || SND_ATIIXP_MODEM || SND_AU8810 || SND_AU8820 || SND_AU8830 || SND_AZT3328 || SND_CA0106 || SND_CS4281 || SND_CS46XX || SND_CS5535AUDIO || SND_EMU10K1 || SND_EMU10K1X || SND_ENS1371 || SND_ES1938 || SND_ES1968 || SND_FM801 || SND_ICE1712 || SND_ICE1724 || SND_INTEL8X0 || SND_INTEL8X0M || SND_MAESTRO3 || SND_NM256 || SND_RIPTIDE || SND_SIS7019 || SND_SONICVIBES || SND_TRIDENT || SND_VIA82XX || SND_VIA82XX_MODEM || SND_YMFPCI || SND_ARMAACI || SND_PXA2XX_AC97 || SND_ATMEL_AC97C || SND_SOC_AU1XPSC_AC97 || SND_SOC_AU1XAC97C || SND_SOC_AC97_CODEC",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_PCSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (PCSPKR_PLATFORM && X86 && HIGH_RES_TIMERS) && (INPUT)",
            "restrict": ""
        }
    ],
    "SND_DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS )",
            "restrict": ""
        }
    ],
    "SND_ALOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS )",
            "restrict": ""
        }
    ],
    "SND_VIRMIDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (SND_SEQUENCER)",
            "restrict": ""
        }
    ],
    "SND_MTPAV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS )",
            "restrict": ""
        }
    ],
    "SND_MTS64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "SND_SERIAL_U16550": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS )",
            "restrict": ""
        }
    ],
    "SND_SERIAL_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (SERIAL_DEV_BUS) && (OF)",
            "restrict": ""
        }
    ],
    "SND_MPU401": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS )",
            "restrict": ""
        }
    ],
    "SND_PORTMAN2X4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "SND_AC97_POWER_SAVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (SND_AC97_CODEC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SND_AC97_POWER_SAVE_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_DRIVERS ) && (SND_AC97_POWER_SAVE)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "SND_WSS_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_AD1848 || SND_AZT1605 || SND_AZT2316 || SND_AZT2320 || SND_CMI8328 || SND_CMI8330 || SND_CS4231 || SND_CS4236 || SND_SC6000 || SND_GUSMAX || SND_INTERWAVE || SND_INTERWAVE_STB || SND_OPL3SA2 || SND_OPTI92X_AD1848 || SND_OPTI92X_CS4231 || SND_OPTI93X || SND_MIRO || SND_SSCAPE || SND_WAVEFRONT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SB_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SB8_DSP || SND_SB16_DSP || SND_ALS4000",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SB8_DSP": [
        {
            "type": "tristate",
            "rev_select": "SND_JAZZ16 || SND_SB8",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SB16_DSP": [
        {
            "type": "tristate",
            "rev_select": "SND_ALS100 || SND_CMI8330 || SND_SB16 || SND_SBAWE || SND_CS5530",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_ISA": [
        {
            "type": "bool",
            "rev_select": "RADIO_MIROPCM20",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (ISA || COMPILE_TEST) && (ISA_DMA_API)",
            "restrict": ""
        }
    ],
    "SND_ADLIB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_AD1816A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (PNP)",
            "restrict": ""
        }
    ],
    "SND_AD1848": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_ALS100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (PNP)",
            "restrict": ""
        }
    ],
    "SND_AZT1605": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (SND)",
            "restrict": ""
        }
    ],
    "SND_AZT2316": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (SND)",
            "restrict": ""
        }
    ],
    "SND_AZT2320": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (PNP)",
            "restrict": ""
        }
    ],
    "SND_CMI8328": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_CMI8330": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_CS4231": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_CS4236": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_ES1688": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_ES18XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_SC6000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "SND_GUSCLASSIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_GUSEXTREME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_GUSMAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_INTERWAVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (PNP)",
            "restrict": ""
        }
    ],
    "SND_INTERWAVE_STB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (PNP)",
            "restrict": ""
        }
    ],
    "SND_JAZZ16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_OPL3SA2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_OPTI92X_AD1848": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_OPTI92X_CS4231": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_OPTI93X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_MIRO": [
        {
            "type": "tristate",
            "rev_select": "RADIO_MIROPCM20",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_SB8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_SB16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_SBAWE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_SBAWE_SEQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": "( SND_SEQUENCER && SND_SBAWE )[!(y)]"
        }
    ],
    "SND_SB16_CSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (( SND_SB16 || SND_SBAWE ) && ( BROKEN || ! PPC ))",
            "restrict": ""
        }
    ],
    "SND_SSCAPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_WAVEFRONT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA )",
            "restrict": ""
        }
    ],
    "SND_MSND_PINNACLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (X86)",
            "restrict": ""
        }
    ],
    "SND_MSND_CLASSIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ISA ) && (X86)",
            "restrict": ""
        }
    ],
    "SND_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (PCI)",
            "restrict": ""
        }
    ],
    "SND_AD1889": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_ALS300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_ALS4000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ISA_DMA_API)",
            "restrict": ""
        }
    ],
    "SND_ALI5451": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_ASIHPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (X86)",
            "restrict": ""
        }
    ],
    "SND_ATIIXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_ATIIXP_MODEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_AU8810": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_AU8820": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_AU8830": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_AW2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_AZT3328": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_BT87X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_BT87X_OVERCLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_BT87X)",
            "restrict": ""
        }
    ],
    "SND_CA0106": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_CMIPCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_OXYGEN_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_OXYGEN || SND_SE6X || SND_VIRTUOSO",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_OXYGEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_CS4281": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_CS46XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_CS46XX_NEW_DSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_CS46XX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_CS5530": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ISA_DMA_API && ( X86_32 || COMPILE_TEST )) && (! M68K)",
            "restrict": ""
        }
    ],
    "SND_CS5535AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (X86_32 || MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_CTXFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_DARLA20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_GINA20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_LAYLA20": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_DARLA24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_GINA24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_LAYLA24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_MONA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_MIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_ECHO3G": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INDIGO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INDIGOIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INDIGODJ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INDIGOIOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INDIGODJX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_EMU10K1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_EMU10K1_SEQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": "( SND_SEQUENCER && SND_EMU10K1 )[!(y)]"
        }
    ],
    "SND_EMU10K1X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_ENS1370": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_ENS1371": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_ES1938": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_ES1968": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_ES1968_INPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_ES1968) && (INPUT = y || INPUT = SND_ES1968)",
            "restrict": ""
        }
    ],
    "SND_ES1968_RADIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_ES1968) && (MEDIA_RADIO_SUPPORT) && (VIDEO_DEV = y || VIDEO_DEV = SND_ES1968)",
            "restrict": ""
        }
    ],
    "SND_FM801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_FM801_TEA575X_BOOL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_FM801) && (MEDIA_RADIO_SUPPORT) && (VIDEO_DEV = y || VIDEO_DEV = SND_FM801)",
            "restrict": ""
        }
    ],
    "SND_HDSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_HDSPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_ICE1712": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_ICE1724": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INTEL8X0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_INTEL8X0M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_KORG1212": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_LOLA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_LX6464ES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (HAS_IOPORT_MAP)",
            "restrict": ""
        }
    ],
    "SND_MAESTRO3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_MAESTRO3_INPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_MAESTRO3) && (INPUT = y || INPUT = SND_MAESTRO3)",
            "restrict": ""
        }
    ],
    "SND_MIXART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_NM256": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_PCXHR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_RIPTIDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_RME32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_RME96": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_RME9652": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_SE6X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (SND_OXYGEN = n && SND_VIRTUOSO = n)",
            "restrict": ""
        }
    ],
    "SND_SIS7019": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (X86_32) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_SONICVIBES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_TRIDENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI ) && (ZONE_DMA)",
            "restrict": ""
        }
    ],
    "SND_VIA82XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_VIA82XX_MODEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_VIRTUOSO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_VX222": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_YMFPCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCI )",
            "restrict": ""
        }
    ],
    "SND_HDA": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_INTEL || SND_HDA_TEGRA || SND_SOC_HDAC_HDA || SND_SOC_HDA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_GENERIC_LEDS": [
        {
            "type": "bool",
            "rev_select": "SND_HDA_CODEC_REALTEK || SND_HDA_CODEC_SIGMATEL || SND_HDA_CODEC_CONEXANT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_PCI)",
            "restrict": ""
        }
    ],
    "SND_HDA_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (ARCH_TEGRA)",
            "restrict": ""
        }
    ],
    "SND_HDA_HWDEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_RECONFIG": [
        {
            "type": "bool",
            "rev_select": "SND_HDA_PATCH_LOADER",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_INPUT_BEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (INPUT = y || INPUT = SND_HDA)",
            "restrict": ""
        }
    ],
    "SND_HDA_INPUT_BEEP_MODE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (SND_HDA_INPUT_BEEP = y)",
            "restrict": "( 0 1 ) || ( 1 )[!(y)]"
        }
    ],
    "SND_HDA_PATCH_LOADER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_SCODEC_CS35L41": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_SCODEC_CS35L41_I2C || SND_HDA_SCODEC_CS35L41_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CS_DSP_CONTROLS": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_SCODEC_CS35L41_I2C || SND_HDA_SCODEC_CS35L41_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_SCODEC_CS35L41_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (I2C) && (ACPI) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "SND_HDA_SCODEC_CS35L41_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (SPI_MASTER) && (ACPI) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_REALTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_SIGMATEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_VIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_CIRRUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_CS8409": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_CONEXANT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_CA0110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_CA0132": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_CA0132_DSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (SND_HDA_CODEC_CA0132)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_HDA_CODEC_CMEDIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_CODEC_SI3054": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_SCODEC_CS35L41 || SND_HDA_CODEC_REALTEK || SND_HDA_CODEC_ANALOG || SND_HDA_CODEC_SIGMATEL || SND_HDA_CODEC_VIA || SND_HDA_CODEC_CIRRUS || SND_HDA_CODEC_CS8409 || SND_HDA_CODEC_CONEXANT || SND_HDA_CODEC_CA0110 || SND_HDA_CODEC_CMEDIA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA )",
            "restrict": ""
        }
    ],
    "SND_HDA_POWER_SAVE_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (PM)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "SND_HDA_INTEL_HDMI_SILENT_STREAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_HDA ) && (SND_HDA_INTEL)",
            "restrict": ""
        }
    ],
    "SND_HDA_CORE": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA || SND_HDA_EXT_CORE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_DSP_LOADER": [
        {
            "type": "bool",
            "rev_select": "SND_HDA_CODEC_CA0132_DSP || SND_SOC_INTEL_SKYLAKE_COMMON || SND_SOC_INTEL_AVS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_ALIGNED_MMIO": [
        {
            "type": "bool",
            "rev_select": "SND_HDA_TEGRA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_COMPONENT": [
        {
            "type": "bool",
            "rev_select": "DRM_AMD_DC[SND_HDA_CORE] || DRM_NOUVEAU[SND_HDA_CORE] || SND_HDA_I915",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_I915": [
        {
            "type": "bool",
            "rev_select": "DRM_I915[SND_HDA_CORE]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_EXT_CORE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE_COMMON || SND_SOC_INTEL_AVS || SND_SOC_SOF_HDA[SND_SOC_SOF_HDA_LINK] || SND_SOC_HDAC_HDMI || SND_SOC_HDA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_HDA_PREALLOC_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": "( 0 32768 ) || ( 0 )[!(! SND_DMA_SGBUF) && (SND_DMA_SGBUF)] || ( 64 )[!(! SND_DMA_SGBUF) && (! SND_DMA_SGBUF)]"
        }
    ],
    "SND_INTEL_NHLT": [
        {
            "type": "bool",
            "rev_select": "SND_INTEL_DSP_CONFIG[ACPI]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_INTEL_DSP_CONFIG": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_INTEL || SND_SOC_INTEL_CATPT || SND_SST_ATOM_HIFI2_PLATFORM_ACPI || SND_SOC_INTEL_SKYLAKE_COMMON || SND_SOC_INTEL_AVS || SND_SOC_SOF_INTEL_COMMON || SND_SOC_SOF_HDA_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_INTEL_SOUNDWIRE_ACPI": [
        {
            "type": "tristate",
            "rev_select": "SND_INTEL_DSP_CONFIG[ACPI] || SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE[SND_SOC_SOF_INTEL_SOUNDWIRE]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_INTEL_BYT_PREFER_SOF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SND_SST_ATOM_HIFI2_PLATFORM_ACPI && SND_SOC_SOF_BAYTRAIL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SND_PPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (PPC)",
            "restrict": ""
        }
    ],
    "SND_POWERMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PPC ) && (I2C && INPUT && PPC_PMAC)",
            "restrict": ""
        }
    ],
    "SND_POWERMAC_AUTO_DRC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PPC ) && (SND_POWERMAC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_PS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PPC ) && (PS3_PS3AV)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SND_PS3_DEFAULT_START_DELAY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PPC ) && (SND_PS3)",
            "restrict": "( 2000 )[!(y)]"
        }
    ],
    "AC97_BUS_NEW": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_AC97 || SND_PXA2XX_SOC_TOSA || SND_PXA2XX_SOC_E740 || SND_PXA2XX_SOC_E800 || SND_PXA2XX_SOC_EM_X270 || SND_PXA2XX_SOC_PALM27X || SND_SOC_ZYLONITE || SND_PXA2XX_SOC_MIOA701",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "AC97_BUS_COMPAT": [
        {
            "type": "bool",
            "rev_select": "MFD_WM97xx || SND_PXA2XX_SOC_TOSA || SND_PXA2XX_SOC_E740 || SND_PXA2XX_SOC_E800 || SND_PXA2XX_SOC_EM_X270 || SND_PXA2XX_SOC_PALM27X || SND_SOC_ZYLONITE || SND_PXA2XX_SOC_MIOA701 || SND_SOC_WM9705[AC97_BUS_NEW] || SND_SOC_WM9712[AC97_BUS_NEW] || SND_SOC_WM9713[AC97_BUS_NEW]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (AC97_BUS_NEW) && (! AC97_BUS)",
            "restrict": ""
        }
    ],
    "SND_AOA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (PPC_PMAC)",
            "restrict": ""
        }
    ],
    "SND_AOA_FABRIC_LAYOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_AOA )",
            "restrict": ""
        }
    ],
    "SND_AOA_ONYX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_AOA )",
            "restrict": ""
        }
    ],
    "SND_AOA_TAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_AOA )",
            "restrict": ""
        }
    ],
    "SND_AOA_TOONIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_AOA )",
            "restrict": ""
        }
    ],
    "SND_AOA_SOUNDBUS": [
        {
            "type": "tristate",
            "rev_select": "SND_AOA_FABRIC_LAYOUT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_AOA )",
            "restrict": ""
        }
    ],
    "SND_AOA_SOUNDBUS_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_AOA_FABRIC_LAYOUT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_AOA ) && (SND_AOA_SOUNDBUS && PCI)",
            "restrict": ""
        }
    ],
    "SND_ARM": [
        {
            "type": "bool",
            "rev_select": "SND_MMP_SOC_SSPA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (ARM)",
            "restrict": ""
        }
    ],
    "SND_ARMAACI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ARM ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_AC97": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_ARM ) && (ARCH_PXA)",
            "restrict": ""
        },
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_AC97 || SND_PXA2XX_SOC || SND_PXA2XX_SOC_AC97 || SND_PXA2XX_SOC_I2S || SND_PXA_SOC_SSP",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_LIB_AC97": [
        {
            "type": "bool",
            "rev_select": "SND_PXA2XX_AC97 || SND_PXA2XX_SOC_AC97",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_ATMEL_AC97C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( ( ARCH_AT91 ) ) && (ARCH_AT91)",
            "restrict": ""
        }
    ],
    "SND_SPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SPI)",
            "restrict": ""
        }
    ],
    "SND_AT73C213": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SPI ) && (ATMEL_SSC)",
            "restrict": ""
        }
    ],
    "SND_AT73C213_TARGET_BITRATE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SPI ) && (SND_AT73C213)",
            "restrict": "( 8000 50000 ) || ( 48000 )[!(y)]"
        }
    ],
    "SND_MIPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (MIPS)",
            "restrict": ""
        }
    ],
    "SND_SGI_O2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_MIPS ) && (SGI_IP32)",
            "restrict": ""
        }
    ],
    "SND_SGI_HAL2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_MIPS ) && (SGI_HAS_HAL2)",
            "restrict": ""
        }
    ],
    "SND_N64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_MIPS ) && (MACH_NINTENDO64 && SND = y)",
            "restrict": ""
        }
    ],
    "SND_SUPERH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SUPERH)",
            "restrict": ""
        }
    ],
    "SND_AICA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SUPERH ) && (SH_DREAMCAST)",
            "restrict": ""
        }
    ],
    "SND_SH_DAC_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SUPERH ) && (SND) && (CPU_SH3 && HIGH_RES_TIMERS)",
            "restrict": ""
        }
    ],
    "SND_USB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (USB)",
            "restrict": ""
        }
    ],
    "SND_USB_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_AUDIO_USE_MEDIA_CONTROLLER": [
        {
            "type": "bool",
            "rev_select": "SND_USB_AUDIO[MEDIA_CONTROLLER && ( MEDIA_SUPPORT = y || MEDIA_SUPPORT = SND_USB_AUDIO )]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_UA101": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_USX2Y": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB ) && (X86 || PPC || ALPHA)",
            "restrict": ""
        }
    ],
    "SND_USB_CAIAQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_CAIAQ_INPUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB ) && (SND_USB_CAIAQ) && (INPUT = y || INPUT = SND_USB_CAIAQ)",
            "restrict": ""
        }
    ],
    "SND_USB_US122L": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB ) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_USB_6FIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_HIFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_BCD2000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_LINE6": [
        {
            "type": "tristate",
            "rev_select": "SND_USB_POD || SND_USB_PODHD || SND_USB_TONEPORT || SND_USB_VARIAX",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_POD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_PODHD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_TONEPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_USB_VARIAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_USB && USB )",
            "restrict": ""
        }
    ],
    "SND_FIREWIRE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (FIREWIRE)",
            "restrict": ""
        }
    ],
    "SND_FIREWIRE_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_DICE || SND_OXFW || SND_ISIGHT || SND_FIREWORKS || SND_BEBOB || SND_FIREWIRE_DIGI00X || SND_FIREWIRE_TASCAM || SND_FIREWIRE_MOTU || SND_FIREFACE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_DICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_OXFW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_ISIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_FIREWORKS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_BEBOB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_FIREWIRE_DIGI00X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_FIREWIRE_TASCAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_FIREWIRE_MOTU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_FIREFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_FIREWIRE && FIREWIRE )",
            "restrict": ""
        }
    ],
    "SND_PCMCIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "SND_VXPOCKET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCMCIA && PCMCIA )",
            "restrict": ""
        }
    ],
    "SND_PDAUDIOCF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_PCMCIA && PCMCIA )",
            "restrict": ""
        }
    ],
    "SND_SPARC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (SPARC)",
            "restrict": ""
        }
    ],
    "SND_SUN_AMD7930": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SPARC ) && (SBUS)",
            "restrict": ""
        }
    ],
    "SND_SUN_CS4231": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SPARC )",
            "restrict": ""
        }
    ],
    "SND_SUN_DBRI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SPARC ) && (SBUS)",
            "restrict": ""
        }
    ],
    "SND_GSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (GSC)",
            "restrict": ""
        }
    ],
    "SND_HARMONY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_GSC )",
            "restrict": ""
        }
    ],
    "SND_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_SOC_AC97_BUS": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_AU1XPSC_AC97 || SND_SOC_AU1XAC97C || SND_EP93XX_SOC_AC97 || SND_SOC_MPC5200_AC97 || SND_SOC_SH4_HAC || SND_SOC_TEGRA20_AC97 || SND_SOC_AC97_CODEC",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_GENERIC_DMAENGINE_PCM": [
        {
            "type": "bool",
            "rev_select": "DRM_VC4 || SND_SOC_ADI_AXI_I2S || SND_SOC_ADI_AXI_SPDIF || SND_ATMEL_SOC_DMA || SND_ATMEL_SOC_CLASSD || SND_ATMEL_SOC_PDMIC || SND_ATMEL_SOC_I2S || SND_MCHP_SOC_I2S_MCC || SND_MCHP_SOC_SPDIFTX || SND_MCHP_SOC_SPDIFRX || SND_MCHP_SOC_PDMC || SND_BCM2835_SOC_I2S || SND_EP93XX_SOC || SND_DESIGNWARE_I2S || SND_SOC_FSL_ASRC || SND_SOC_FSL_SAI || SND_SOC_FSL_MICFIL || SND_SOC_FSL_EASRC || SND_SOC_FSL_XCVR || SND_SOC_IMX_PCM_DMA || SND_SOC_IMX_PCM_RPMSG || SND_I2S_HI6210_I2S || SND_JZ4740_SOC_I2S || SND_SOC_IMG_I2S_IN || SND_SOC_IMG_I2S_OUT || SND_SOC_IMG_PARALLEL_OUT || SND_SOC_IMG_SPDIF_IN || SND_SOC_IMG_SPDIF_OUT || SND_SOC_INTEL_KEEMBAY || SND_MXS_SOC || SND_MMP_SOC_SSPA || SND_SOC_ROCKCHIP_I2S || SND_SOC_ROCKCHIP_I2S_TDM || SND_SOC_ROCKCHIP_PDM || SND_SOC_ROCKCHIP_SPDIF || SND_SOC_SAMSUNG || SND_SPEAR_SOC || SND_SOC_STI || SND_SOC_STM32_SAI || SND_SOC_STM32_I2S || SND_SOC_STM32_SPDIFRX || SND_SOC_STM32_DFSDM || SND_SUN4I_CODEC || SND_SUN4I_I2S || SND_SUN4I_SPDIF || SND_SOC_TEGRA || SND_SOC_TI_EDMA_PCM || SND_SOC_TI_SDMA_PCM || SND_SOC_TI_UDMA_PCM || SND_SOC_UX500_PLAT_DMA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_COMPRESS": [
        {
            "type": "bool",
            "rev_select": "SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_QDSP6_ASM_DAI || SND_SOC_QDSP6_APM_DAI || SND_SOC_SOF_COMPRESS || SND_SOC_SOF_DEBUG_PROBES || SND_SOC_SPRD || SND_SOC_UNIPHIER_AIO || SND_SOC_WM_ADSP",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_TOPOLOGY": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_INTEL_SKYLAKE_COMMON || SND_SOC_INTEL_AVS || SND_SOC_QDSP6 || SND_SOC_SOF",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_TOPOLOGY_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (KUNIT) && (SND_SOC_TOPOLOGY)",
            "restrict": "( KUNIT_ALL_TESTS )[!(y)]"
        }
    ],
    "SND_SOC_UTILS_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(y)]"
        }
    ],
    "SND_SOC_ACPI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_ST_ES8336_MACH[ACPI] || SND_AMD_ACP_CONFIG[ACPI] || SND_SOC_AMD_ACP_PCM[ACPI] || SND_SOC_ACPI_INTEL_MATCH[ACPI] || SND_SOC_INTEL_AVS[ACPI] || SND_SOC_INTEL_BYTCR_RT5640_MACH || SND_SOC_INTEL_BYTCR_RT5651_MACH || SND_SOC_INTEL_BYTCR_WM5102_MACH || SND_SOC_INTEL_CHT_BSW_RT5672_MACH || SND_SOC_INTEL_CHT_BSW_RT5645_MACH || SND_SOC_INTEL_CHT_BSW_NAU8824_MACH || SND_SOC_INTEL_BYT_CHT_CX2072X_MACH || SND_SOC_INTEL_BYT_CHT_DA7213_MACH || SND_SOC_INTEL_BYT_CHT_ES8316_MACH || SND_SOC_SOF_AMD_COMMON[ACPI] || SND_SOC_SOF_INTEL_COMMON[ACPI]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADI_AXI_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_ADI)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADI_AXI_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_ADI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_CZ_DA7219MX98357_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_ACP && I2C && GPIOLIB && ACPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_CZ_RT5645_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_ACP && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ST_ES8336_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_ACP && ACPI) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP3x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_RV_RT5682_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_ACP3x && I2C && CROS_EC && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_RENOIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_RENOIR_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_RENOIR && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP5x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_VANGOGH_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_ACP5x && I2C && SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP6x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_YC_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AMD_ACP6x)",
            "restrict": ""
        }
    ],
    "SND_AMD_ACP_CONFIG": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_RENOIR || SND_SOC_AMD_ACP_COMMON || SND_SOC_SOF_AMD_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP_PDM": [
        {
            "type": "tristate",
            "rev_select": "SND_AMD_ASOC_RENOIR || SND_AMD_ASOC_REMBRANDT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON )",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_AMD_ASOC_RENOIR || SND_AMD_ASOC_REMBRANDT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON )",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP_PCM": [
        {
            "type": "tristate",
            "rev_select": "SND_AMD_ASOC_RENOIR || SND_AMD_ASOC_REMBRANDT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON )",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_ACP_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_AMD_ASOC_RENOIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_AMD_ASOC_REMBRANDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_MACH_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_LEGACY_MACH || SND_SOC_AMD_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON ) && (X86 && PCI && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_LEGACY_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON ) && (X86 && PCI && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_SOF_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_AMD_ACP_COMMON ) && (X86 && PCI && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AMD_RPL_ACP6x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_PDC": [
        {
            "type": "bool",
            "rev_select": "SND_ATMEL_SOC_SSC || SND_ATMEL_SOC_SSC_PDC",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC )",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_DMA": [
        {
            "type": "bool",
            "rev_select": "SND_ATMEL_SOC_SSC || SND_ATMEL_SOC_SSC_DMA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC )",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_SSC": [
        {
            "type": "tristate",
            "rev_select": "SND_ATMEL_SOC_SSC_PDC || SND_ATMEL_SOC_SSC_DMA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC )",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_SSC_PDC": [
        {
            "type": "tristate",
            "rev_select": "SND_AT91_SOC_SAM9G20_WM8731",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ATMEL_SSC)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_SSC_DMA": [
        {
            "type": "tristate",
            "rev_select": "SND_ATMEL_SOC_WM8904 || SND_AT91_SOC_SAM9X5_WM8731 || SND_ATMEL_SOC_TSE850_PCM5142",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ATMEL_SSC)",
            "restrict": ""
        }
    ],
    "SND_AT91_SOC_SAM9G20_WM8731": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ARCH_AT91 || COMPILE_TEST) && (ATMEL_SSC && I2C)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_WM8904": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ARCH_AT91 || COMPILE_TEST) && (ATMEL_SSC && I2C)",
            "restrict": ""
        }
    ],
    "SND_AT91_SOC_SAM9X5_WM8731": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ARCH_AT91 || COMPILE_TEST) && (ATMEL_SSC && SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_CLASSD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_PDMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_TSE850_PCM5142": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (ARCH_AT91 && OF) && (ATMEL_SSC && I2C)",
            "restrict": ""
        }
    ],
    "SND_ATMEL_SOC_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SND_SOC_MIKROE_PROTO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_MCHP_SOC_I2S_MCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SND_MCHP_SOC_SPDIFTX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SND_MCHP_SOC_SPDIFRX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF && ( ARCH_AT91 || COMPILE_TEST )) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_MCHP_SOC_PDMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_ATMEL_SOC ) && (OF && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SND_SOC_AU1XPSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "SND_SOC_AU1XPSC_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DB1200",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AU1XPSC_AC97": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DB1200",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AU1XAUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "SND_SOC_AU1XAC97C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DB1000",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AU1XI2SC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_DB1000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AU1XAUDIO)",
            "restrict": ""
        }
    ],
    "SND_SOC_DB1200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AU1XPSC)",
            "restrict": ""
        }
    ],
    "SND_BCM2835_SOC_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_BCM2835 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_CYGNUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_BCM_CYGNUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_BCM63XX_I2S_WHISTLER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_EP93XX_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_EP93XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_EP93XX_SOC_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_EP93XX_SOC_SNAPPERCL15 || SND_EP93XX_SOC_EDB93XX",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_EP93XX_SOC_I2S_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_EP93XX_SOC_I2S )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_EP93XX_SOC_AC97": [
        {
            "type": "tristate",
            "rev_select": "SND_EP93XX_SOC_SIMONE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_EP93XX_SOC_SNAPPERCL15": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_EP93XX_SOC && MACH_SNAPPER_CL15 && I2C)",
            "restrict": ""
        }
    ],
    "SND_EP93XX_SOC_SIMONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_EP93XX_SOC && MACH_SIM_ONE)",
            "restrict": ""
        }
    ],
    "SND_EP93XX_SOC_EDB93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_EP93XX_SOC && ( MACH_EDB9301 || MACH_EDB9302 || MACH_EDB9302A || MACH_EDB9307A || MACH_EDB9315A ))",
            "restrict": ""
        }
    ],
    "SND_DESIGNWARE_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAVE_CLK)",
            "restrict": ""
        }
    ],
    "SND_DESIGNWARE_PCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_DESIGNWARE_I2S)",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_ASRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_SAI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_ASOC_CARD || SND_SOC_IMX_AUDMIX || SND_SOC_IMX_HDMI || SND_SOC_IMX_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_MQS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_FSL_SAI)",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_AUDMIX": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_AUDMIX",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_SSI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MPC8610_HPCD || SND_SOC_P1022_DS || SND_SOC_P1022_RDK || SND_SOC_EUKREA_TLV320 || SND_SOC_IMX_ES8328 || SND_SOC_IMX_SGTL5000 || SND_SOC_FSL_ASOC_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_SPDIF",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_ESAI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_ASOC_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_MICFIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_EASRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_FSL_ASRC)",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_XCVR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_AUD2HTX": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_HDMI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_UTILS": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_SAI || SND_SOC_FSL_SPDIF || SND_SOC_FSL_MICFIL || SND_SOC_MPC8610_HPCD || SND_SOC_P1022_DS || SND_SOC_P1022_RDK",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_RPMSG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK) && (RPMSG) && (SND_IMX_SOC || SND_IMX_SOC = n)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_PCM_DMA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_SAI[SND_IMX_SOC != n] || SND_SOC_FSL_SSI[SND_IMX_SOC != n] || SND_SOC_FSL_SPDIF[SND_IMX_SOC != n] || SND_SOC_FSL_ESAI[SND_IMX_SOC != n] || SND_SOC_FSL_MICFIL[SND_IMX_SOC != n] || SND_SOC_FSL_XCVR[SND_IMX_SOC != n] || SND_SOC_FSL_AUD2HTX[SND_IMX_SOC != n] || SND_SOC_EUKREA_TLV320 || SND_SOC_IMX_ES8328 || SND_SOC_IMX_SGTL5000 || SND_SOC_IMX_SPDIF || SND_SOC_FSL_ASOC_CARD || SND_SOC_IMX_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_AUDIO_RPMSG": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_RPMSG",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (RPMSG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_PCM_RPMSG": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_RPMSG",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMX_AUDIO_RPMSG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_AUDMUX": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_EUKREA_TLV320 || SND_SOC_IMX_ES8328 || SND_SOC_IMX_SGTL5000 || SND_SOC_FSL_ASOC_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_POWERPC_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (FSL_SOC || PPC_MPC52xx)",
            "restrict": ""
        }
    ],
    "SND_IMX_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_MPC52xx_DMA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MPC5200_I2S || SND_SOC_MPC5200_AC97",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_POWERPC_DMA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MPC8610_HPCD || SND_SOC_P1022_DS || SND_SOC_P1022_RDK",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MPC8610_HPCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (MPC8610_HPCD && I2C)",
            "restrict": "( y )[!(y) && (MPC8610_HPCD)]"
        }
    ],
    "SND_SOC_P1022_DS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (P1022_DS && I2C)",
            "restrict": "( y )[!(y) && (P1022_DS)]"
        }
    ],
    "SND_SOC_P1022_RDK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (P1022_RDK && I2C)",
            "restrict": "( y )[!(y) && (P1022_RDK)]"
        }
    ],
    "SND_SOC_MPC5200_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (PPC_MPC52xx && PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "SND_SOC_MPC5200_AC97": [
        {
            "type": "tristate",
            "rev_select": "SND_MPC52xx_SOC_PCM030 || SND_MPC52xx_SOC_EFIKA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (PPC_MPC52xx && PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "SND_MPC52xx_SOC_PCM030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (PPC_MPC5200_SIMPLE)",
            "restrict": ""
        }
    ],
    "SND_MPC52xx_SOC_EFIKA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_POWERPC_SOC ) && (PPC_EFIKA)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_PCM_FIQ": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_SSI[SND_IMX_SOC != n && ( MXC_TZIC || MXC_AVIC )] || SND_SOC_FSL_SPDIF[SND_IMX_SOC != n && ( MXC_TZIC || MXC_AVIC )]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (( SND_SOC_FSL_SSI = m || SND_SOC_FSL_SPDIF = m ) && ( MXC_TZIC || MXC_AVIC ))]"
        }
    ],
    "SND_SOC_EUKREA_TLV320": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC ) && (ARCH_MXC && ! ARM64 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_ES8328": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC ) && (OF && ( I2C || SPI ))",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_SGTL5000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC ) && (OF && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_FSL_ASOC_CARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC ) && (OF && I2C) && (SND_AC97_CODEC || SND_AC97_CODEC = n)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_AUDMIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_RPMSG": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_RPMSG[SND_IMX_SOC != n]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC ) && (RPMSG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMX_CARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_IMX_SOC ) && (OF && I2C)",
            "restrict": ""
        }
    ],
    "SND_I2S_HI6210_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_JZ4740_SOC_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MIPS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SND_KIRKWOOD_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_DOVE || ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_KIRKWOOD_SOC_ARMADA370_DB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_KIRKWOOD_SOC && ( ARCH_MVEBU || COMPILE_TEST ) && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG_I2S_IN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG_I2S_OUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG_PARALLEL_OUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG_SPDIF_IN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG_SPDIF_OUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMG)",
            "restrict": ""
        }
    ],
    "SND_SOC_IMG_PISTACHIO_INTERNAL_DAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_IMG)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SST_TOPLEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_SOC_INTEL_SST": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CATPT": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_HASWELL",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (ACPI || COMPILE_TEST) && (DMADEVICES && SND_DMA_SGBUF)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_HASWELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SST_ATOM_HIFI2_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "SND_SST_ATOM_HIFI2_PLATFORM_PCI || SND_SST_ATOM_HIFI2_PLATFORM_ACPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SST_ATOM_HIFI2_PLATFORM_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "SND_SST_ATOM_HIFI2_PLATFORM_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (X86 && ACPI && PCI)",
            "restrict": "( ACPI )[!(y)]"
        }
    ],
    "SND_SOC_INTEL_SKYLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_APL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KBL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_GLK": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CNL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CFL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CML_H": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CML_LP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && (PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKYLAKE_FAMILY": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKL || SND_SOC_INTEL_APL || SND_SOC_INTEL_KBL || SND_SOC_INTEL_GLK || SND_SOC_INTEL_CNL || SND_SOC_INTEL_CFL || SND_SOC_INTEL_CML_H || SND_SOC_INTEL_CML_LP",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKYLAKE_SSP_CLK": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH || SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && ( SND_SOC_INTEL_SKYLAKE_FAMILY )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKYLAKE_HDAUDIO_CODEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && ( SND_SOC_INTEL_SKYLAKE_FAMILY )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKYLAKE_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE_FAMILY",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL ) && ( SND_SOC_INTEL_SKYLAKE_FAMILY )",
            "restrict": ""
        }
    ],
    "SND_SOC_ACPI_INTEL_MATCH": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_CATPT || SND_SST_ATOM_HIFI2_PLATFORM_ACPI || SND_SOC_INTEL_SKYLAKE_COMMON || SND_SOC_SOF_INTEL_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_SST_TOPLEVEL || SND_SOC_SOF_INTEL_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KEEMBAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_KEEMBAY || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (X86 || COMPILE_TEST) && (PCI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_DA7219": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_DMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_HDAUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_I2S_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_MAX98357A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_MAX98373": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_NAU8825": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_RT274": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_RT286": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_RT298": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_RT5682": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_AVS_MACH_SSM4567": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SND_SOC_INTEL_AVS ) ) && (I2C) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_MACH": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_INTEL_SST_TOPLEVEL || SND_SOC_SOF_INTEL_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_INTEL_SST_TOPLEVEL || SND_SOC_SOF_INTEL_TOPLEVEL)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_USER_FRIENDLY_LONG_NAMES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_HDA_DSP_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_DA7219_MAX98357A_GENERIC || SND_SOC_INTEL_BXT_RT298_MACH || SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH || SND_SOC_INTEL_SKL_HDA_DSP_GENERIC_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_CS42L42_MACH || SND_SOC_INTEL_SOF_PCM512x_MACH || SND_SOC_INTEL_SOF_ES8336_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH || SND_SOC_INTEL_SOF_DA7219_MAX98373_MACH || SND_SOC_INTEL_SOF_SSP_AMP_MACH || SND_SOC_INTEL_EHL_RT5660_MACH || SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_MAXIM_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_CS42L42_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_REALTEK_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_SSP_AMP_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_CIRRUS_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_SSP_AMP_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_HASWELL_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_CATPT ) && (I2C) && (I2C_DESIGNWARE_PLATFORM || COMPILE_TEST) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BDW_RT5650_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_CATPT || SND_SOC_SOF_BROADWELL ) && (I2C) && (I2C_DESIGNWARE_PLATFORM || COMPILE_TEST) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BDW_RT5677_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_CATPT || SND_SOC_SOF_BROADWELL ) && (I2C) && (I2C_DESIGNWARE_PLATFORM || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST) && (X86_INTEL_LPSS || COMPILE_TEST) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BROADWELL_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_CATPT || SND_SOC_SOF_BROADWELL ) && (I2C) && (I2C_DESIGNWARE_PLATFORM || COMPILE_TEST) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYTCR_RT5640_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYTCR_RT5651_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYTCR_WM5102_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (MFD_ARIZONA && MFD_WM5102 && SPI_MASTER && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CHT_BSW_RT5672_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CHT_BSW_RT5645_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CHT_BSW_MAX98090_TI_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CHT_BSW_NAU8824_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYT_CHT_CX2072X_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYT_CHT_DA7213_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYT_CHT_ES8316_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BYT_CHT_NOCODEC_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SST_ATOM_HIFI2_PLATFORM ) && (I2C && ACPI) && (X86_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKL_RT286_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_SKL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKL_NAU88L25_SSM4567_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_SKL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKL_NAU88L25_MAX98357A_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_SKL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_DA7219_MAX98357A_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BXT_DA7219_MAX98357A_COMMON || SND_SOC_INTEL_KBL_DA7219_MAX98357A_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BXT_DA7219_MAX98357A_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BXT_DA7219_MAX98357A_MACH || SND_SOC_INTEL_GLK_DA7219_MAX98357A_MACH || SND_SOC_INTEL_CML_LP_DA7219_MAX98357A_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH )",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BXT_DA7219_MAX98357A_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_APL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_HDA_CODEC_HDMI)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_BXT_RT298_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_APL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_WM8804_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_APOLLOLAKE ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_KBL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_KBL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KBL_DA7219_MAX98357A_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_KBL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_KBL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_KBL_RT5660_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_KBL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_GLK_DA7219_MAX98357A_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_GEMINILAKE ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_GEMINILAKE ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SKL_HDA_DSP_GENERIC_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_INTEL_SKYLAKE_HDAUDIO_CODEC || SND_SOC_SOF_HDA_AUDIO_CODEC ) && (SND_HDA_CODEC_HDMI)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_RT5682_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_HDA_LINK || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (( ( SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC ) && ( MFD_INTEL_LPSS || COMPILE_TEST ) ) || ( SND_SOC_SOF_BAYTRAIL && ( X86_INTEL_LPSS || COMPILE_TEST ) ))",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_CS42L42_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_HDA_LINK || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (( ( SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC ) && ( MFD_INTEL_LPSS || COMPILE_TEST ) ))",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_PCM512x_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_HDA_LINK || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (( SND_SOC_SOF_HDA_AUDIO_CODEC && ( MFD_INTEL_LPSS || COMPILE_TEST ) ) || ( SND_SOC_SOF_BAYTRAIL && ( X86_INTEL_LPSS || COMPILE_TEST ) )) && (SND_HDA_CODEC_HDMI)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_ES8336_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_HDA_LINK || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST) && (SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_NAU8825_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_HDA_LINK || SND_SOC_SOF_BAYTRAIL ) && (I2C && ACPI) && (( ( SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC ) && ( MFD_INTEL_LPSS || COMPILE_TEST ) ))",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_CML_LP_DA7219_MAX98357A_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( ( SND_SOC_SOF_COMETLAKE && SND_SOC_SOF_HDA_LINK ) ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( ( SND_SOC_SOF_COMETLAKE && SND_SOC_SOF_HDA_LINK ) ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_DA7219_MAX98373_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_JASPERLAKE ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOF_SSP_AMP_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_HDA_LINK ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_EHL_RT5660_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_ELKHARTLAKE ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_HDA_CODEC_HDMI && SND_SOC_SOF_HDA_AUDIO_CODEC)",
            "restrict": ""
        }
    ],
    "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_INTEL_MACH ) && ( SND_SOC_SOF_INTEL_SOUNDWIRE ) && (I2C && ACPI) && (MFD_INTEL_LPSS || COMPILE_TEST) && (SND_SOC_INTEL_USER_FRIENDLY_LONG_NAMES || COMPILE_TEST) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MT2701 || SND_SOC_MT6797 || SND_SOC_MT8173 || SND_SOC_MT8183 || SND_SOC_MT8186 || SND_SOC_MT8192 || SND_SOC_MT8195",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MT2701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT2701_CS42448": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT2701 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT2701_WM8960": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT2701 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6797": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6797_MT6351": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT6797 && MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8173": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8173_MAX98090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT8173 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8173_RT5650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT8173 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8173_RT5650_RT5514": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT8173 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8173_RT5650_RT5676": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT8173 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8183": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && GPIOLIB) && (SND_SOC_MT8183)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8183_DA7219_MAX98357A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_MT8183 && I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8186": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8186_MT6366_DA7219_MAX98357": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && GPIOLIB) && (SND_SOC_MT8186 && MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8186_MT6366_RT1019_RT5682S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && GPIOLIB) && (SND_SOC_MT8186 && MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_MTK_BTCVSD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8192": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8192_MT6359_RT1015_RT5682": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && GPIOLIB) && (SND_SOC_MT8192 && MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8195": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MEDIATEK || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT8195_MT6359": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && GPIOLIB) && (SND_SOC_MT8195 && MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_MESON_AIU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": "( SND_MESON_GX_SOUND_CARD )"
        }
    ],
    "SND_MESON_AXG_FIFO": [
        {
            "type": "tristate",
            "rev_select": "SND_MESON_AXG_FRDDR || SND_MESON_AXG_TODDR",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_AXG_FRDDR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": "( SND_MESON_AXG_SOUND_CARD )"
        }
    ],
    "SND_MESON_AXG_TODDR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": "( SND_MESON_AXG_SOUND_CARD )"
        }
    ],
    "SND_MESON_AXG_TDM_FORMATTER": [
        {
            "type": "tristate",
            "rev_select": "SND_MESON_AXG_TDM_INTERFACE || SND_MESON_AXG_TDMIN || SND_MESON_AXG_TDMOUT",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_AXG_TDM_INTERFACE": [
        {
            "type": "tristate",
            "rev_select": "SND_MESON_AXG_TDMIN || SND_MESON_AXG_TDMOUT || SND_MESON_AXG_SOUND_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_AXG_TDMIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": "( SND_MESON_AXG_SOUND_CARD )"
        }
    ],
    "SND_MESON_AXG_TDMOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": "( SND_MESON_AXG_SOUND_CARD )"
        }
    ],
    "SND_MESON_AXG_SOUND_CARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_AXG_SPDIFOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_AXG_SPDIFIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_AXG_PDM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_CARD_UTILS": [
        {
            "type": "tristate",
            "rev_select": "SND_MESON_AXG_SOUND_CARD || SND_MESON_GX_SOUND_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_CODEC_GLUE": [
        {
            "type": "tristate",
            "rev_select": "SND_MESON_AIU || SND_MESON_G12A_TOACODEC || SND_MESON_G12A_TOHDMITX",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_GX_SOUND_CARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_G12A_TOACODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MESON_G12A_TOHDMITX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": "( SND_MESON_AXG_SOUND_CARD )[ DRM_MESON_DW_HDMI ]"
        }
    ],
    "SND_SOC_MESON_T9015": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_MESON || ( COMPILE_TEST && COMMON_CLK ) ) )",
            "restrict": ""
        }
    ],
    "SND_MXS_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MXS || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MXS_SGTL5000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_MXS_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_PXA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_MMP_SOC": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_TTC_DKB || SND_MMP_SOC_BROWNSTONE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_AC97": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_TOSA || SND_PXA2XX_SOC_E740 || SND_PXA2XX_SOC_E750 || SND_PXA2XX_SOC_E800 || SND_PXA2XX_SOC_EM_X270 || SND_PXA2XX_SOC_PALM27X || SND_SOC_ZYLONITE || SND_PXA2XX_SOC_MIOA701",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_CORGI || SND_PXA2XX_SOC_SPITZ || SND_PXA2XX_SOC_Z2 || SND_PXA2XX_SOC_POODLE || SND_PXA2XX_SOC_HX4700 || SND_PXA2XX_SOC_MAGICIAN",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_PXA_SOC_SSP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TTC_DKB || SND_SOC_ZYLONITE || SND_PXA2XX_SOC_MAGICIAN",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (PLAT_PXA)",
            "restrict": ""
        }
    ],
    "SND_MMP_SOC_SSPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MMP)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_CORGI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && PXA_SHARP_C7xx && I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_SPITZ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && PXA_SHARP_Cxx00 && I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_Z2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_ZIPIT2 && I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_POODLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_POODLE && I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_TOSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_TOSA) && (MFD_TC6393XB) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_E740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_E740) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_E750": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_E750) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_E800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_E800) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_EM_X270": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_CM_X300) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_PALM27X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && ( MACH_PALMLD || MACH_PALMTX || MACH_PALMT5 || MACH_PALMTE2 )) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA910_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_MMP && SND)",
            "restrict": ""
        }
    ],
    "SND_SOC_TTC_DKB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA910_SOC && MACH_TTC_DKB && I2C = y)",
            "restrict": ""
        }
    ],
    "SND_SOC_ZYLONITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_ZYLONITE) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_HX4700": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_H4700 && I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_MAGICIAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_MAGICIAN && I2C)",
            "restrict": ""
        }
    ],
    "SND_PXA2XX_SOC_MIOA701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_PXA2XX_SOC && MACH_MIOA701) && (AC97_BUS = n)",
            "restrict": ""
        }
    ],
    "SND_MMP_SOC_BROWNSTONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_MMP_SOC_SSPA && MACH_BROWNSTONE && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_CPU": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_LPASS_IPQ806X || SND_SOC_LPASS_APQ8016 || SND_SOC_LPASS_SC7180 || SND_SOC_LPASS_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_HDMI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_LPASS_SC7180 || SND_SOC_LPASS_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_LPASS_IPQ806X || SND_SOC_LPASS_APQ8016 || SND_SOC_LPASS_SC7180 || SND_SOC_LPASS_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_CDC_DMA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_LPASS_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_IPQ806X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_STORM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_APQ8016": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_APQ8016_SBC",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_SC7180": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SC7180",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_SC7280": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_STORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_APQ8016_SBC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QCOM_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_APQ8016_SBC || SND_SOC_MSM8996 || SND_SOC_SDM845 || SND_SOC_SM8250 || SND_SOC_SC7180 || SND_SOC_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_CORE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_AFE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_AFE_DAI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_AFE_CLOCKS": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_ADM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_ROUTING": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_ASM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_ASM_DAI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_APM_DAI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6_APM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_APM_LPASS_DAI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6_APM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_APM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_PRM_LPASS_CLOCKS": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6_PRM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6_PRM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_QDSP6",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM )",
            "restrict": ""
        }
    ],
    "SND_SOC_QDSP6": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MSM8996 || SND_SOC_SDM845 || SND_SOC_SM8250",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (QCOM_APR) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_MSM8996": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (QCOM_APR) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_SDM845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (QCOM_APR && I2C && SOUNDWIRE) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_SM8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (QCOM_APR && SOUNDWIRE) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_SC7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_SC7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_QCOM ) && (I2C && SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMPILE_TEST || ARCH_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ROCKCHIP_MAX98090 || SND_SOC_ROCKCHIP_RT5645 || SND_SOC_RK3288_HDMI_ANALOG || SND_SOC_RK3399_GRU_SOUND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAVE_CLK && SND_SOC_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP_I2S_TDM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAVE_CLK && SND_SOC_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP_PDM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAVE_CLK && SND_SOC_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (HAVE_CLK && SND_SOC_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP_MAX98090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_ROCKCHIP && I2C && GPIOLIB && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_ROCKCHIP_RT5645": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_ROCKCHIP && I2C && GPIOLIB && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_RK3288_HDMI_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_ROCKCHIP && I2C && GPIOLIB && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_RK3399_GRU_SOUND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_ROCKCHIP && I2C && GPIOLIB && HAVE_CLK && SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (PLAT_SAMSUNG || ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_S3C24XX_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_NEO1973_WM8753 || SND_SOC_SAMSUNG_S3C24XX_UDA134X || SND_SOC_SAMSUNG_SIMTEC_TLV320AIC23 || SND_SOC_SAMSUNG_SIMTEC_HERMES || SND_SOC_SAMSUNG_H1940_UDA1380 || SND_SOC_SAMSUNG_RX1950_UDA1380",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_S3C_I2SV2_SOC": [
        {
            "type": "tristate",
            "rev_select": "SND_S3C2412_SOC_I2S",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_S3C2412_SOC_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_JIVE_WM8750",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_SAMSUNG_PCM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SMDK_WM8994_PCM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_SAMSUNG_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_SMDK_SPDIF",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_SAMSUNG_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_SMDK_WM8580 || SND_SOC_SAMSUNG_SMDK_WM8994 || SND_SOC_SMARTQ || SND_SOC_SPEYSIDE || SND_SOC_TOBERMORY || SND_SOC_BELLS || SND_SOC_LOWLAND || SND_SOC_LITTLEMILL || SND_SOC_SNOW || SND_SOC_ODROID || SND_SOC_ARNDALE || SND_SOC_SAMSUNG_TM2_WM5110 || SND_SOC_SAMSUNG_ARIES_WM8994 || SND_SOC_SAMSUNG_MIDAS_WM1811",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_NEO1973_WM8753": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (MACH_NEO1973_GTA02 || COMPILE_TEST) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_JIVE_WM8750": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (MACH_JIVE && I2C || COMPILE_TEST && ARM) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_SMDK_WM8580": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (MACH_SMDK6410 || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_SMDK_WM8994": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_S3C24XX_UDA134X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (ARCH_S3C24XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_SIMTEC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_SIMTEC_TLV320AIC23 || SND_SOC_SAMSUNG_SIMTEC_HERMES",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_SIMTEC_TLV320AIC23": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (ARCH_S3C24XX || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_SIMTEC_HERMES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (ARCH_S3C24XX || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_H1940_UDA1380": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (ARCH_H1940 || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_RX1950_UDA1380": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (MACH_RX1950 || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SMARTQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (MACH_SMARTQ || COMPILE_TEST) && (GPIOLIB || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_SMDK_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SMDK_WM8994_PCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C = y)",
            "restrict": ""
        }
    ],
    "SND_SOC_SPEYSIDE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C && SPI_MASTER) && (MACH_WLF_CRAGG_6410 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_TOBERMORY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (INPUT && I2C) && (MACH_WLF_CRAGG_6410 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_BELLS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (MFD_ARIZONA && MFD_WM5102 && MFD_WM5110 && I2C && SPI_MASTER) && (MACH_WLF_CRAGG_6410 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_LOWLAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C) && (MACH_WLF_CRAGG_6410 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_LITTLEMILL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C) && (MACH_WLF_CRAGG_6410 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SNOW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ODROID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (SND_SOC_SAMSUNG && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ARNDALE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_TM2_WM5110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (SND_SOC_SAMSUNG && MFD_ARIZONA && MFD_WM5110 && I2C && SPI_MASTER) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_ARIES_WM8994": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (SND_SOC_SAMSUNG && MFD_WM8994 && IIO && EXTCON)",
            "restrict": ""
        }
    ],
    "SND_SOC_SAMSUNG_MIDAS_WM1811": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SAMSUNG ) && (SND_SOC_SAMSUNG)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM_SH7760": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (CPU_SUBTYPE_SH7760 && SH_DMABRG)",
            "restrict": ""
        }
    ],
    "SND_SOC_SH4_HAC": [
        {
            "type": "tristate",
            "rev_select": "SND_SH7760_AC97",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_SH4_SSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_SH4_FSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (SUPERH || COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_SH4_SIU": [
        {
            "type": "tristate",
            "rev_select": "SND_SIU_MIGOR",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (ARCH_SHMOBILE && HAVE_CLK) && (DMADEVICES)",
            "restrict": ""
        }
    ],
    "SND_SOC_RCAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (COMMON_CLK) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_RZ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (ARCH_RZG2L || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SH7760_AC97": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (CPU_SUBTYPE_SH7760 && SND_SOC_PCM_SH7760)",
            "restrict": ""
        }
    ],
    "SND_SIU_MIGOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( SUPERH || ARCH_RENESAS || COMPILE_TEST ) ) && (SH_MIGOR && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_TOPLEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_PCI_DEV": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_AMD_COMMON || SND_SOC_SOF_MERRIFIELD || SND_SOC_SOF_HDA_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (ACPI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_ACPI_DEV": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_BAYTRAIL || SND_SOC_SOF_BROADWELL",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_OF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_OF_DEV": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_IMX_COMMON || SND_SOC_SOF_MTK_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_COMPRESS": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_SOF_IMX_COMMON || SND_SOC_SOF_MTK_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_PROBES": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_HDA_PROBES",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_CLIENT": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_DEBUG_PROBES || SND_SOC_SOF_DEBUG_IPC_FLOOD_TEST || SND_SOC_SOF_DEBUG_IPC_MSG_INJECTOR",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEVELOPER_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (EXPERT && SND_SOC_SOF)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_FORCE_PROBE_WORKQUEUE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_NOCODEC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF[SND_SOC_SOF_NOCODEC_SUPPORT]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_NOCODEC_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_STRICT_ABI_CHECKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_FORCE_NOCODEC_MODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG ) && (SND_SOC_SOF_NOCODEC_SUPPORT)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_XRUN_STOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_VERBOSE_IPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_FORCE_IPC_POSITION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_ENABLE_DEBUGFS_CACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_ENABLE_FIRMWARE_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_IPC_FLOOD_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG ) && (SND_SOC_SOF)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_IPC_FLOOD_TEST_NUM": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG ) && (SND_SOC_SOF_DEBUG_IPC_FLOOD_TEST)",
            "restrict": "( 1 32 ) || ( 2 )[!(y)]"
        }
    ],
    "SND_SOC_SOF_DEBUG_IPC_MSG_INJECTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG ) && (SND_SOC_SOF)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_DEBUG_RETAIN_DSP_CONTEXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_DEVELOPER_SUPPORT ) && ( SND_SOC_SOF_DEBUG )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_AMD_COMMON || SND_SOC_SOF_IMX_COMMON || SND_SOC_SOF_INTEL_COMMON || SND_SOC_SOF_MTK_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_PROBE_WORK_QUEUE": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_SOF_FORCE_PROBE_WORKQUEUE || SND_SOC_SOF_HDA_LINK",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_IPC3": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_SOF_AMD_COMMON || SND_SOC_SOF_IMX_COMMON || SND_SOC_SOF_BAYTRAIL || SND_SOC_SOF_BROADWELL || SND_SOC_SOF_MERRIFIELD || SND_SOC_SOF_INTEL_APL || SND_SOC_SOF_INTEL_CNL || SND_SOC_SOF_INTEL_ICL || SND_SOC_SOF_INTEL_TGL || SND_SOC_SOF_MTK_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_IPC4": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_SOF_INTEL_APL || SND_SOC_SOF_INTEL_CNL || SND_SOC_SOF_INTEL_ICL || SND_SOC_SOF_INTEL_TGL || SND_SOC_SOF_INTEL_MTL",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_AMD_TOPLEVEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_AMD_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_AMD_RENOIR",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_AMD_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_AMD_RENOIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_AMD_TOPLEVEL ) && (SND_SOC_SOF_PCI)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_IMX_TOPLEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (ARM64 || COMPILE_TEST) && (SND_SOC_SOF_OF)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_IMX_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_IMX8 || SND_SOC_SOF_IMX8M",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_IMX_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_IMX8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_IMX_TOPLEVEL ) && (IMX_SCU) && (IMX_DSP)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_IMX8M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_IMX_TOPLEVEL ) && (IMX_DSP)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_TOPLEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_HIFI_EP_IPC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_INTEL_ATOM_HIFI_EP || SND_SOC_SOF_BROADWELL",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_ATOM_HIFI_EP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_BAYTRAIL || SND_SOC_SOF_MERRIFIELD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_INTEL_ATOM_HIFI_EP || SND_SOC_SOF_BAYTRAIL || SND_SOC_SOF_BROADWELL || SND_SOC_SOF_HDA_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_BAYTRAIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_ACPI )",
            "restrict": "( SND_SOC_SOF_ACPI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_BROADWELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_ACPI )",
            "restrict": "( SND_SOC_SOF_ACPI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_MERRIFIELD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_INTEL_APL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_APOLLOLAKE || SND_SOC_SOF_GEMINILAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_APOLLOLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_GEMINILAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_INTEL_CNL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_CANNONLAKE || SND_SOC_SOF_COFFEELAKE || SND_SOC_SOF_COMETLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_CANNONLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_COFFEELAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_COMETLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_INTEL_ICL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_ICELAKE || SND_SOC_SOF_JASPERLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_ICELAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_JASPERLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_INTEL_TGL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_TIGERLAKE || SND_SOC_SOF_ELKHARTLAKE || SND_SOC_SOF_ALDERLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_TIGERLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_ELKHARTLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_ALDERLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_INTEL_MTL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_METEORLAKE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_METEORLAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": "( SND_SOC_SOF_PCI )[!(y)]"
        }
    ],
    "SND_SOC_SOF_HDA_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_INTEL_APL || SND_SOC_SOF_INTEL_CNL || SND_SOC_SOF_INTEL_ICL || SND_SOC_SOF_INTEL_TGL || SND_SOC_SOF_INTEL_MTL",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_HDA_LINK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI ) && ( SND_SOC_SOF_HDA_COMMON ) && (SND_SOC_SOF_NOCODEC = n)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_HDA_AUDIO_CODEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI ) && ( SND_SOC_SOF_HDA_COMMON ) && (SND_SOC_SOF_HDA_LINK)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_HDA_LINK_BASELINE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_HDA_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_HDA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_HDA_LINK_BASELINE[SND_SOC_SOF_HDA_LINK]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_HDA_PROBES": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_HDA_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_INTEL_CNL || SND_SOC_SOF_INTEL_ICL || SND_SOC_SOF_INTEL_TGL || SND_SOC_SOF_INTEL_MTL",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_INTEL_SOUNDWIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_INTEL_TOPLEVEL ) && ( SND_SOC_SOF_PCI ) && (SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE) && (ACPI && SOUNDWIRE) && (! ( SOUNDWIRE = m && SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE = y ))",
            "restrict": "( SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE )[!(y)]"
        }
    ],
    "SND_SOC_SOF_MTK_TOPLEVEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && (ARM64 || COMPILE_TEST) && (SND_SOC_SOF_OF)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_MTK_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_MT8186 || SND_SOC_SOF_MT8195",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_MTK_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_MT8186": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_MTK_TOPLEVEL ) && (MTK_ADSP_IPC)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_MT8195": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL ) && ( SND_SOC_SOF_MTK_TOPLEVEL ) && (MTK_ADSP_IPC)",
            "restrict": ""
        }
    ],
    "SND_SOC_SOF_XTENSA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_IMX_COMMON || SND_SOC_SOF_INTEL_COMMON || SND_SOC_SOF_MTK_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_SOF_TOPLEVEL )",
            "restrict": ""
        }
    ],
    "SND_SPEAR_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SPEAR_SPDIF_OUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SPEAR_SPDIF_IN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_SPRD_MCDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_SPRD)",
            "restrict": ""
        }
    ],
    "SND_SOC_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_STM32_SAI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (( ARCH_STM32 && OF ) || COMPILE_TEST) && (COMMON_CLK) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "SND_SOC_STM32_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (( ARCH_STM32 && OF ) || COMPILE_TEST) && (COMMON_CLK) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "SND_SOC_STM32_SPDIFRX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (( ARCH_STM32 && OF ) || COMPILE_TEST) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "SND_SOC_STM32_DFSDM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ARCH_STM32 || COMPILE_TEST) && (SND_SOC) && (STM32_DFSDM_ADC)",
            "restrict": ""
        }
    ],
    "SND_SUN4I_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SUN8I_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) ) && (OF) && (MACH_SUN8I || ( ARM64 && ARCH_SUNXI ) || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SUN8I_CODEC_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) ) && (MACH_SUN8I || ( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SUN50I_CODEC_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SUN4I_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SUN4I_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) ) && (OF)",
            "restrict": ""
        }
    ],
    "SND_SUN8I_ADDA_PR_REGMAP": [
        {
            "type": "tristate",
            "rev_select": "SND_SUN8I_CODEC_ANALOG || SND_SUN50I_CODEC_ANALOG",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( ARCH_SUNXI || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (( ARCH_TEGRA && TEGRA20_APB_DMA ) || COMPILE_TEST) && (COMMON_CLK) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA20_AC97": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TEGRA_WM9712",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA20_DAS": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TEGRA20_AC97 || SND_SOC_TEGRA20_I2S",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA20_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA20_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA30_AHUB": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TEGRA30_I2S",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA30_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_AHUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_DMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_OPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA186_ASRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA186_DSPK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_ADMAIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_MVC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_SFC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_AMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_ADX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA210_MIXER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_AUDIO_GRAPH_CARD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (SND_AUDIO_GRAPH_CARD)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_MACHINE_DRV": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TEGRA_RT5640 || SND_SOC_TEGRA_WM8753 || SND_SOC_TEGRA_WM8903 || SND_SOC_TEGRA_WM9712 || SND_SOC_TEGRA_TRIMSLICE || SND_SOC_TEGRA_ALC5632 || SND_SOC_TEGRA_MAX98090 || SND_SOC_TEGRA_RT5677 || SND_SOC_TEGRA_SGTL5000",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA )",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_RT5640": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_WM8753": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_WM8903": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_WM9712": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_TRIMSLICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_ALC5632": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_MAX98090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_RT5677": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TEGRA_SGTL5000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( SND_SOC_TEGRA ) && (I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TI_EDMA_PCM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DAVINCI_ASP || SND_SOC_DAVINCI_MCASP || SND_SOC_DAVINCI_VCIF",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_TI_SDMA_PCM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DAVINCI_MCASP || SND_SOC_OMAP_DMIC || SND_SOC_OMAP_MCBSP || SND_SOC_OMAP_MCPDM || SND_SOC_OMAP_HDMI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_TI_UDMA_PCM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DAVINCI_MCASP",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "SND_SOC_DAVINCI_ASP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DAVINCI_EVM[MACH_DAVINCI_DM355_EVM] || SND_SOC_DAVINCI_EVM[SND_SOC_DM365_AIC3X_CODEC] || SND_SOC_DAVINCI_EVM[MACH_DAVINCI_EVM]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_DAVINCI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_DAVINCI_MCASP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DAVINCI_EVM[MACH_DAVINCI_DM6467_EVM] || SND_SOC_DAVINCI_EVM[MACH_DAVINCI_DA830_EVM] || SND_SOC_DAVINCI_EVM[MACH_DAVINCI_DA850_EVM] || SND_SOC_J721E_EVM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_DAVINCI_VCIF": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DAVINCI_EVM[SND_SOC_DM365_VOICE_CODEC]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_DAVINCI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_DMIC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_OMAP_ABE_TWL6040",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_OMAP4 || SOC_OMAP5 || COMPILE_TEST && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_MCBSP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_NOKIA_N810 || SND_SOC_NOKIA_RX51 || SND_SOC_OMAP3_PANDORA || SND_SOC_OMAP3_TWL4030 || SND_SOC_OMAP_AMS_DELTA || SND_SOC_OMAP_OSK5912",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_OMAP || ARCH_OMAP1 || COMPILE_TEST && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_MCPDM": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_OMAP_ABE_TWL6040",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_OMAP4 || SOC_OMAP5 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_NOKIA_N810": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (MACH_NOKIA_N810 && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NOKIA_RX51": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_OMAP3 && I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP3_PANDORA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_OMAP3) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP3_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_OMAP3 || COMPILE_TEST && COMMON_CLK) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_ABE_TWL6040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (TWL6040_CORE && COMMON_CLK) && (ARCH_OMAP4 || ( SOC_OMAP5 && MFD_PALMAS ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_AMS_DELTA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (MACH_AMS_DELTA && TTY)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (OMAP4_DSS_HDMI || OMAP5_DSS_HDMI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_OMAP_OSK5912": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (MACH_OMAP_OSK && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DAVINCI_EVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_DAVINCI && I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DM365_AIC3X_CODEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && ( ( SND_SOC_DAVINCI_EVM ) && ( MACH_DAVINCI_DM365_EVM ) ) && ( SND_SOC_DM365_AIC3X_CODEC &&  !SND_SOC_DM365_VOICE_CODEC )",
            "restrict": ""
        }
    ],
    "SND_SOC_DM365_VOICE_CODEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && ( ( SND_SOC_DAVINCI_EVM ) && ( MACH_DAVINCI_DM365_EVM ) ) && ( SND_SOC_DM365_VOICE_CODEC &&  !SND_SOC_DM365_AIC3X_CODEC )",
            "restrict": ""
        }
    ],
    "SND_SOC_DM365_SELECT_VOICE_CODECS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (SND_SOC_DM365_VOICE_CODEC && SND_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SND_SOC_J721E_EVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && ( ( DMA_OMAP || TI_EDMA || TI_K3_UDMA || COMPILE_TEST ) ) && (ARCH_K3 || COMPILE_TEST && COMMON_CLK) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (( ARCH_UNIPHIER || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SND_SOC_UNIPHIER_AIO": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_UNIPHIER_LD11 || SND_SOC_UNIPHIER_PXS2",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_UNIPHIER)",
            "restrict": ""
        }
    ],
    "SND_SOC_UNIPHIER_LD11": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_UNIPHIER)",
            "restrict": ""
        }
    ],
    "SND_SOC_UNIPHIER_PXS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_UNIPHIER)",
            "restrict": ""
        }
    ],
    "SND_SOC_UNIPHIER_EVEA_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_UNIPHIER)",
            "restrict": ""
        }
    ],
    "SND_SOC_UX500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC) && (MFD_DB8500_PRCMU)",
            "restrict": ""
        }
    ],
    "SND_SOC_UX500_PLAT_MSP_I2S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_UX500_MACH_MOP500",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_UX500)",
            "restrict": ""
        }
    ],
    "SND_SOC_UX500_PLAT_DMA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_UX500_MACH_MOP500",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_UX500)",
            "restrict": ""
        }
    ],
    "SND_SOC_UX500_MACH_MOP500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (AB8500_CORE && AB8500_GPADC && SND_SOC_UX500)",
            "restrict": ""
        }
    ],
    "SND_SOC_XILINX_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_XILINX_AUDIO_FORMATTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_XILINX_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_XTFPGA_I2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_I2C_AND_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( m )[!(y) && (I2C = m)] || ( y )[!(y) && (I2C = y)] || ( y )[!(y) && (SPI_MASTER = y)]"
        }
    ],
    "SND_SOC_ALL_CODECS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TTC_DKB",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "SND_SOC_ARIZONA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (SND_SOC_CS47L24 = y)] || ( y )[!(y) && (SND_SOC_WM5102 = y)] || ( y )[!(y) && (SND_SOC_WM5110 = y)] || ( y )[!(y) && (SND_SOC_WM8997 = y)] || ( y )[!(y) && (SND_SOC_WM8998 = y)] || ( m )[!(y) && (SND_SOC_CS47L24 = m)] || ( m )[!(y) && (SND_SOC_WM5102 = m)] || ( m )[!(y) && (SND_SOC_WM5110 = m)] || ( m )[!(y) && (SND_SOC_WM8997 = m)] || ( m )[!(y) && (SND_SOC_WM8998 = m)]"
        }
    ],
    "SND_SOC_WM_HUBS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (SND_SOC_WM8993 = y || SND_SOC_WM8994 = y)] || ( m )[!(y) && (SND_SOC_WM8993 = m || SND_SOC_WM8994 = m)]"
        }
    ],
    "SND_SOC_WM_ADSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (SND_SOC_MADERA = y)] || ( y )[!(y) && (SND_SOC_CS47L24 = y)] || ( y )[!(y) && (SND_SOC_WM5102 = y)] || ( y )[!(y) && (SND_SOC_WM5110 = y)] || ( y )[!(y) && (SND_SOC_WM2200 = y)] || ( y )[!(y) && (SND_SOC_CS35L41_SPI = y)] || ( y )[!(y) && (SND_SOC_CS35L41_I2C = y)] || ( m )[!(y) && (SND_SOC_MADERA = m)] || ( m )[!(y) && (SND_SOC_CS47L24 = m)] || ( m )[!(y) && (SND_SOC_WM5102 = m)] || ( m )[!(y) && (SND_SOC_WM5110 = m)] || ( m )[!(y) && (SND_SOC_WM2200 = m)] || ( m )[!(y) && (SND_SOC_CS35L41_SPI = m)] || ( m )[!(y) && (SND_SOC_CS35L41_I2C = m)]"
        }
    ],
    "SND_SOC_AB8500_CODEC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_UX500_MACH_MOP500",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (ABX500_CORE)",
            "restrict": ""
        }
    ],
    "SND_SOC_AC97_CODEC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DB1000 || SND_SOC_DB1200 || SND_EP93XX_SOC_SIMONE || SND_SH7760_AC97",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AD1836": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_AD193X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AD193X_SPI || SND_SOC_AD193X_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AD193X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_AD193X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AD1980": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AC97_BUS)",
            "restrict": ""
        }
    ],
    "SND_SOC_AD73311": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU_UTILS": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1372 || SND_SOC_ADAU1373 || SND_SOC_ADAU17X1",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1372": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1372_I2C || SND_SOC_ADAU1372_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1372_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1372_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1373": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU17X1": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1761 || SND_SOC_ADAU1781",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1761": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1761_I2C || SND_SOC_ADAU1761_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1761_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1761_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1781": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1781_I2C || SND_SOC_ADAU1781_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1781_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1781_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1977": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1977_SPI || SND_SOC_ADAU1977_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1977_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU1977_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU7002": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_CZ_DA7219MX98357_MACH || SND_SOC_SC7180",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU7118": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU7118_HW || SND_SOC_ADAU7118_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU7118_HW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAU7118_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAV80X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAV801 || SND_SOC_ADAV803",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAV801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADAV803": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ADS117X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4104": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4118": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4375": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4458": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4535": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4554": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4613": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4641": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_HX4700",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4642": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK4671": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AK5386": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_AK5558": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ALC5623": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ALC5632": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TEGRA_ALC5632",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_AW8738": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_BD28623": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_BT_SCO": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MT2701_CS42448 || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8186_MT6366_DA7219_MAX98357 || SND_SOC_MT8186_MT6366_RT1019_RT5682S || SND_SOC_SAMSUNG_NEO1973_WM8753 || SND_SOC_SAMSUNG_ARIES_WM8994",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CPCAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_CQ0093VC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DM365_SELECT_VOICE_CODECS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CROS_EC_CODEC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_RV_RT5682_MACH || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A[CROS_EC]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L33": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L34": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L35": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L36": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L41_LIB": [
        {
            "type": "tristate",
            "rev_select": "SND_HDA_SCODEC_CS35L41_I2C || SND_HDA_SCODEC_CS35L41_SPI || SND_SOC_CS35L41_SPI || SND_SOC_CS35L41_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L41": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_CS35L41_SPI || SND_SOC_CS35L41_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L41_SPI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_VANGOGH_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L41_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_SSP_AMP_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L45_TABLES": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_CS35L45_SPI || SND_SOC_CS35L45_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L45": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_CS35L45_SPI || SND_SOC_CS35L45_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L45_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS35L45_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42L42": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_CS42L42_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42L51": [
        {
            "type": "tristate",
            "rev_select": "SND_KIRKWOOD_SOC_ARMADA370_DB || SND_SOC_CS42L51_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42L51_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42L52": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && INPUT)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42L56": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && INPUT)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42L73": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4234": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4265": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4270": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MPC8610_HPCD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4270_VD33_ERRATA": [
        {
            "type": "bool",
            "rev_select": "SND_SOC_MPC8610_HPCD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_CS4270)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4271": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_CS4271_I2C || SND_SOC_CS4271_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4271_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_EP93XX_SOC_EDB93XX[I2C]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4271_SPI": [
        {
            "type": "tristate",
            "rev_select": "SND_EP93XX_SOC_EDB93XX[SPI_MASTER]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42XX8": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_CS42XX8_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_CS42XX8_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MT2701_CS42448",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS43130": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4341": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS4349": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS47L15": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CS47L15)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS47L24": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CS47L24 && MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS47L35": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CS47L35)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS47L85": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CS47L85)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS47L90": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CS47L90)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS47L92": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_CS47L92)",
            "restrict": ""
        }
    ],
    "SND_SOC_CS53L30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_CX20442": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_OMAP_AMS_DELTA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (TTY)",
            "restrict": ""
        }
    ],
    "SND_SOC_CX2072X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BYT_CHT_CX2072X_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_JZ4740_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MACH_INGENIC || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SND_SOC_JZ4725B_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MACH_INGENIC || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SND_SOC_JZ4760_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MACH_INGENIC || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SND_SOC_JZ4770_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MACH_INGENIC || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SND_SOC_L3": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_S3C24XX_UDA134X",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_DA7210": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_DA7213": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BYT_CHT_DA7213_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DA7218": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DA7219": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_CZ_DA7219MX98357_MACH || SND_SOC_INTEL_AVS_MACH_DA7219 || SND_SOC_INTEL_DA7219_MAX98357A_GENERIC || SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH || SND_SOC_INTEL_SOF_DA7219_MAX98373_MACH || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8186_MT6366_DA7219_MAX98357 || SND_SOC_RK3399_GRU_SOUND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DA732X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DA9055": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_DMIC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_RENOIR_MACH || SND_SOC_AMD_YC_MACH || SND_SOC_AMD_MACH_COMMON || SND_SOC_INTEL_AVS_MACH_DMIC || SND_SOC_INTEL_SKL_RT286_MACH || SND_SOC_INTEL_SKL_NAU88L25_SSM4567_MACH || SND_SOC_INTEL_SKL_NAU88L25_MAX98357A_MACH || SND_SOC_INTEL_DA7219_MAX98357A_GENERIC || SND_SOC_INTEL_BXT_RT298_MACH || SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH || SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH || SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH || SND_SOC_INTEL_SKL_HDA_DSP_GENERIC_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_CS42L42_MACH || SND_SOC_INTEL_SOF_ES8336_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH || SND_SOC_INTEL_SOF_DA7219_MAX98373_MACH || SND_SOC_INTEL_SOF_SSP_AMP_MACH || SND_SOC_INTEL_EHL_RT5660_MACH || SND_SOC_INTEL_SOUNDWIRE_SOF_MACH || SND_SOC_MT8186_MT6366_DA7219_MAX98357 || SND_SOC_MT8186_MT6366_RT1019_RT5682S || SND_SOC_MT8192_MT6359_RT1015_RT5682 || SND_SOC_MT8195_MT6359 || SND_SOC_RK3399_GRU_SOUND || SND_SOC_STM32_DFSDM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_HDMI_CODEC": [
        {
            "type": "tristate",
            "rev_select": "DRM_I2C_NXP_TDA998X[SND_SOC] || DRM_EXYNOS[SND_SOC] || DRM_ROCKCHIP[ROCKCHIP_CDN_DP && SND_SOC] || DRM_MSM[SND_SOC] || DRM_TEGRA[SND_SOC_TEGRA20_SPDIF] || DRM_LONTIUM_LT9611[SND_SOC] || DRM_LONTIUM_LT9611UXC[SND_SOC] || DRM_SII902X[SND_SOC] || DRM_I2C_ADV7511_AUDIO || DRM_DW_HDMI_I2S_AUDIO || DRM_STI[SND_SOC] || DRM_VC4 || DRM_MEDIATEK_HDMI[SND_SOC] || SND_SOC_IMX_HDMI || SND_SOC_MT8173_RT5650 || SND_SOC_MT8173_RT5650_RT5676 || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8186_MT6366_DA7219_MAX98357 || SND_SOC_MT8186_MT6366_RT1019_RT5682S || SND_SOC_MT8195_MT6359 || SND_SOC_ROCKCHIP_MAX98090 || SND_SOC_RK3288_HDMI_ANALOG || SND_SOC_RK3399_GRU_SOUND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( SND_MESON_AIU )[ DRM_MESON_DW_HDMI ]"
        }
    ],
    "SND_SOC_ES7134": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ES7241": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ES8316": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_ST_ES8336_MACH || SND_SOC_INTEL_BYT_CHT_ES8316_MACH || SND_SOC_INTEL_SOF_ES8336_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ES8328": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ES8328_I2C || SND_SOC_ES8328_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ES8328_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_ES8328[I2C] || SND_SOC_RK3288_HDMI_ANALOG",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_ES8328_SPI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_ES8328[SPI_MASTER] || SND_SOC_RK3288_HDMI_ANALOG[SPI_MASTER]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_GTM601": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_HDAC_HDMI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKL_RT286_MACH || SND_SOC_INTEL_SKL_NAU88L25_SSM4567_MACH || SND_SOC_INTEL_SKL_NAU88L25_MAX98357A_MACH || SND_SOC_INTEL_DA7219_MAX98357A_GENERIC || SND_SOC_INTEL_BXT_RT298_MACH || SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH || SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH || SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH || SND_SOC_INTEL_KBL_RT5660_MACH || SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH || SND_SOC_INTEL_SKL_HDA_DSP_GENERIC_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_CS42L42_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH || SND_SOC_INTEL_SOF_SSP_AMP_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_HDAC_HDA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SKYLAKE_COMMON[SND_SOC_INTEL_SKYLAKE_HDAUDIO_CODEC] || SND_SOC_SOF_HDA[SND_SOC_SOF_HDA_AUDIO_CODEC]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_HDA": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_AVS || SND_SOC_INTEL_AVS_MACH_HDAUDIO",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ICS43432": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_INNO_RK3036": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_ISABELLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_LM49453": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_LOCHNAGAR_SC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_LOCHNAGAR)",
            "restrict": ""
        }
    ],
    "SND_SOC_MADERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (SND_SOC_CS47L15 = y)] || ( y )[!(y) && (SND_SOC_CS47L35 = y)] || ( y )[!(y) && (SND_SOC_CS47L85 = y)] || ( y )[!(y) && (SND_SOC_CS47L90 = y)] || ( y )[!(y) && (SND_SOC_CS47L92 = y)] || ( m )[!(y) && (SND_SOC_CS47L15 = m)] || ( m )[!(y) && (SND_SOC_CS47L35 = m)] || ( m )[!(y) && (SND_SOC_CS47L85 = m)] || ( m )[!(y) && (SND_SOC_CS47L90 = m)] || ( m )[!(y) && (SND_SOC_CS47L92 = m)]"
        }
    ],
    "SND_SOC_MAX98088": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98090": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_CHT_BSW_MAX98090_TI_MACH || SND_SOC_MT8173_MAX98090 || SND_SOC_ROCKCHIP_MAX98090 || SND_SOC_SNOW || SND_SOC_ODROID || SND_SOC_TEGRA_MAX98090",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98095": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SNOW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98357A": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_CZ_DA7219MX98357_MACH || SND_SOC_AMD_RV_RT5682_MACH || SND_SOC_AMD_MACH_COMMON || SND_SOC_INTEL_AVS_MACH_MAX98357A || SND_SOC_INTEL_SKL_NAU88L25_MAX98357A_MACH || SND_SOC_INTEL_DA7219_MAX98357A_GENERIC || SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH || SND_SOC_INTEL_SOF_CS42L42_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8186_MT6366_DA7219_MAX98357 || SND_SOC_STORM || SND_SOC_SC7180 || SND_SOC_SC7280 || SND_SOC_RK3399_GRU_SOUND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98371": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98504": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_TM2_WM5110",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX9867": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98925": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98926": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98927": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH || SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH || SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH || SND_SOC_SDM845",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98373": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_AVS_MACH_MAX98373 || SND_SOC_MAX98373_I2C || SND_SOC_MAX98373_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98373_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_DA7219_MAX98927_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_INTEL_SOF_DA7219_MAX98373_MACH || SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98373_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98390": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_DA7219_MAX98357A_GENERIC || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_MT8195_MT6359",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX98396": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX9850": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX9860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MSM8916_WCD_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPMI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SND_SOC_MSM8916_WCD_DIGITAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM1681": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM1789": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_PCM1789_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM1789_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM179X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_PCM179X_I2C || SND_SOC_PCM179X_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM179X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM179X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM186X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_PCM186X_I2C || SND_SOC_PCM186X_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM186X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM186X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3008": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3060": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_PCM3060_I2C || SND_SOC_PCM3060_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3060_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3060_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3168A": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_PCM3168A_I2C || SND_SOC_PCM3168A_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3168A_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_J721E_EVM",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM3168A_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM5102A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM512x": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_PCM512x_I2C || SND_SOC_PCM512x_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM512x_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_ATMEL_SOC_TSE850_PCM5142 || SND_SOC_INTEL_SOF_PCM512x_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_PCM512x_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_RK3328": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_RK817": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_RK808)",
            "restrict": ""
        }
    ],
    "SND_SOC_RL6231": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (SND_SOC_RT5514 = y)] || ( y )[!(y) && (SND_SOC_RT5616 = y)] || ( y )[!(y) && (SND_SOC_RT5640 = y)] || ( y )[!(y) && (SND_SOC_RT5645 = y)] || ( y )[!(y) && (SND_SOC_RT5651 = y)] || ( y )[!(y) && (SND_SOC_RT5659 = y)] || ( y )[!(y) && (SND_SOC_RT5660 = y)] || ( y )[!(y) && (SND_SOC_RT5663 = y)] || ( y )[!(y) && (SND_SOC_RT5665 = y)] || ( y )[!(y) && (SND_SOC_RT5668 = y)] || ( y )[!(y) && (SND_SOC_RT5670 = y)] || ( y )[!(y) && (SND_SOC_RT5677 = y)] || ( y )[!(y) && (SND_SOC_RT5682 = y)] || ( y )[!(y) && (SND_SOC_RT1011 = y)] || ( y )[!(y) && (SND_SOC_RT1015 = y)] || ( y )[!(y) && (SND_SOC_RT1015P = y)] || ( y )[!(y) && (SND_SOC_RT1019 = y)] || ( y )[!(y) && (SND_SOC_RT1305 = y)] || ( y )[!(y) && (SND_SOC_RT1308 = y)] || ( m )[!(y) && (SND_SOC_RT5514 = m)] || ( m )[!(y) && (SND_SOC_RT5616 = m)] || ( m )[!(y) && (SND_SOC_RT5640 = m)] || ( m )[!(y) && (SND_SOC_RT5645 = m)] || ( m )[!(y) && (SND_SOC_RT5651 = m)] || ( m )[!(y) && (SND_SOC_RT5659 = m)] || ( m )[!(y) && (SND_SOC_RT5660 = m)] || ( m )[!(y) && (SND_SOC_RT5663 = m)] || ( m )[!(y) && (SND_SOC_RT5665 = m)] || ( m )[!(y) && (SND_SOC_RT5668 = m)] || ( m )[!(y) && (SND_SOC_RT5670 = m)] || ( m )[!(y) && (SND_SOC_RT5677 = m)] || ( m )[!(y) && (SND_SOC_RT5682 = m)] || ( m )[!(y) && (SND_SOC_RT1011 = m)] || ( m )[!(y) && (SND_SOC_RT1015 = m)] || ( m )[!(y) && (SND_SOC_RT1015P = m)] || ( m )[!(y) && (SND_SOC_RT1019 = m)] || ( m )[!(y) && (SND_SOC_RT1305 = m)] || ( m )[!(y) && (SND_SOC_RT1308 = m)]"
        }
    ],
    "SND_SOC_RL6347A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( y )[!(y) && (SND_SOC_RT274 = y)] || ( y )[!(y) && (SND_SOC_RT286 = y)] || ( y )[!(y) && (SND_SOC_RT298 = y)] || ( m )[!(y) && (SND_SOC_RT274 = m)] || ( m )[!(y) && (SND_SOC_RT286 = m)] || ( m )[!(y) && (SND_SOC_RT298 = m)]"
        }
    ],
    "SND_SOC_RT274": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_AVS_MACH_RT274",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT286": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_AVS_MACH_RT286 || SND_SOC_INTEL_BROADWELL_MACH || SND_SOC_INTEL_SKL_RT286_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT298": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_AVS_MACH_RT298 || SND_SOC_INTEL_BXT_RT298_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1011": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH || SND_SOC_MT8195_MT6359",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1015": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_RV_RT5682_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8192_MT6359_RT1015_RT5682",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1015P": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_RV_RT5682_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8186_MT6366_RT1019_RT5682S || SND_SOC_MT8192_MT6359_RT1015_RT5682 || SND_SOC_MT8195_MT6359",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1016": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1019": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_MACH_COMMON",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1305": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1308": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_SSP_AMP_MACH || SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1308_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT1316_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5514": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH || SND_SOC_MT8173_RT5650_RT5514 || SND_SOC_RK3399_GRU_SOUND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5514_SPI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH || SND_SOC_RK3399_GRU_SOUND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5514_SPI_BUILTIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( SND_SOC_RT5514 = y && SND_SOC_RT5514_SPI = m )[!(y)]"
        }
    ],
    "SND_SOC_RT5616": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5631": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ARNDALE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5640": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_HASWELL_MACH || SND_SOC_INTEL_BYTCR_RT5640_MACH || SND_SOC_TEGRA_RT5640",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5645": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_CZ_RT5645_MACH || SND_SOC_INTEL_BDW_RT5650_MACH || SND_SOC_INTEL_CHT_BSW_RT5645_MACH || SND_SOC_MT8173_RT5650 || SND_SOC_MT8173_RT5650_RT5514 || SND_SOC_MT8173_RT5650_RT5676 || SND_SOC_ROCKCHIP_RT5645",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5651": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BYTCR_RT5651_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5659": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5660": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_RT5660_MACH || SND_SOC_INTEL_EHL_RT5660_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5663": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_KBL_RT5663_MAX98927_MACH || SND_SOC_INTEL_KBL_RT5663_RT5514_MAX98927_MACH || SND_SOC_SDM845",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5665": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5668": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5670": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_CHT_BSW_RT5672_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5677": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BDW_RT5677_MACH || SND_SOC_MT8173_RT5650_RT5676 || SND_SOC_TEGRA_RT5677",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5677_SPI": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BDW_RT5677_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": "( SND_SOC_RT5677 && SPI )[!(y)]"
        }
    ],
    "SND_SOC_RT5682": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_RT5682_I2C || SND_SOC_RT5682_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5682_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_CZ_DA7219MX98357_MACH || SND_SOC_AMD_RV_RT5682_MACH || SND_SOC_AMD_MACH_COMMON || SND_SOC_INTEL_AVS_MACH_RT5682 || SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_INTEL_SOF_CML_RT1011_RT5682_MACH || SND_SOC_MT8192_MT6359_RT1015_RT5682 || SND_SOC_MT8195_MT6359 || SND_SOC_SC7180 || SND_SOC_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5682_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT5682S": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_MACH_COMMON || SND_SOC_INTEL_GLK_RT5682_MAX98357A_MACH || SND_SOC_INTEL_SOF_RT5682_MACH || SND_SOC_MT8186_MT6366_RT1019_RT5682S || SND_SOC_MT8192_MT6359_RT1015_RT5682 || SND_SOC_MT8195_MT6359 || SND_SOC_SC7180 || SND_SOC_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT700": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_RT700_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_RT700_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT711": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_RT711_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_RT711_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT711_SDCA_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT715": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_RT715_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_RT715_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT715_SDCA_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOUNDWIRE_SOF_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_RT9120": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SDW_MOCKUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (EXPERT) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_SGTL5000": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_IMX_SGTL5000 || SND_SOC_MXS_SGTL5000 || SND_SOC_TEGRA_SGTL5000",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SI476X": [
        {
            "type": "tristate",
            "rev_select": "RADIO_SI476X",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SIGMADSP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SIGMADSP_I2C || SND_SOC_SIGMADSP_REGMAP",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SIGMADSP_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU1701",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SIGMADSP_REGMAP": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ADAU17X1",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SIMPLE_AMPLIFIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SIMPLE_MUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_SPDIF": [
        {
            "type": "tristate",
            "rev_select": "SND_KIRKWOOD_SOC_ARMADA370_DB || SND_SAMSUNG_SPDIF || SND_SOC_STM32_SPDIFRX || SND_SOC_DAVINCI_EVM[MACH_DAVINCI_DM6467_EVM]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SSM2305": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SSM2518": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SSM2602": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SSM2602_SPI || SND_SOC_SSM2602_I2C",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_SSM2602_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_SSM2602_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_SSM4567": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_AVS_MACH_SSM4567 || SND_SOC_INTEL_SKL_NAU88L25_SSM4567_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_STA32X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_STA350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_STA529": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_STAC9766": [
        {
            "type": "tristate",
            "rev_select": "SND_MPC52xx_SOC_EFIKA",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AC97_BUS)",
            "restrict": ""
        }
    ],
    "SND_SOC_STI_SAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS2552": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS2562": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS2764": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS2770": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS2780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS5086": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS571X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS5720": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS5805M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TAS6424": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TDA7419": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TFA9879": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TFA989X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320ADC3XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC23": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TLV320AIC23_I2C || SND_SOC_TLV320AIC23_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC23_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_EP93XX_SOC_SNAPPERCL15 || SND_SOC_EUKREA_TLV320 || SND_SOC_SAMSUNG_SIMTEC_TLV320AIC23 || SND_SOC_TEGRA_TRIMSLICE || SND_SOC_OMAP_OSK5912",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC23_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC26": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC31XX": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_ASOC_CARD",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC32X4": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TLV320AIC32X4_I2C || SND_SOC_TLV320AIC32X4_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC32X4_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC32X4_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC3X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_SIMTEC_HERMES || SND_SOC_NOKIA_N810 || SND_SOC_NOKIA_RX51 || SND_SOC_DAVINCI_EVM || SND_SOC_TLV320AIC3X_I2C || SND_SOC_TLV320AIC3X_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC3X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320AIC3X_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320DAC33": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TLV320ADCX140": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TS3A227E": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_CHT_BSW_MAX98090_TI_MACH || SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_ROCKCHIP_MAX98090",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TSCS42XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TSCS454": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_OMAP3_PANDORA || SND_SOC_OMAP3_TWL4030",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "SND_SOC_TWL6040": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_OMAP_ABE_TWL6040",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (TWL6040_CORE)",
            "restrict": ""
        }
    ],
    "SND_SOC_UDA1334": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_UDA134X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_S3C24XX_UDA134X",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_UDA1380": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_MAGICIAN || SND_SOC_SAMSUNG_H1940_UDA1380 || SND_SOC_SAMSUNG_RX1950_UDA1380",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WCD9335": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SLIMBUS)",
            "restrict": ""
        }
    ],
    "SND_SOC_WCD_MBHC": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_WCD934X || SND_SOC_WCD938X_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WCD934X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK) && (MFD_WCD934X)",
            "restrict": ""
        }
    ],
    "SND_SOC_WCD938X": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_WCD938X_SDW",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_WCD938X_SDW) && (SOUNDWIRE || ! SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_WCD938X_SDW": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SC7280",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_WL1273": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WM0010": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SPEYSIDE || SND_SOC_BELLS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM1250_EV1": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SPEYSIDE || SND_SOC_BELLS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM2000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM2200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM5100": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_LOWLAND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM5102": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_BYTCR_WM5102_MACH || SND_SOC_BELLS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_WM5102 && MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM5110": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_BELLS || SND_SOC_SAMSUNG_TM2_WM5110",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_WM5110 && MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_WM8400)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8510": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8523": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8524": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8580": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_SMDK_WM8580",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8711": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8727": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8728": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8731": [
        {
            "type": "tristate",
            "rev_select": "SND_AT91_SOC_SAM9X5_WM8731 || SND_SOC_MIKROE_PROTO || SND_SOC_WM8731_I2C || SND_SOC_WM8731_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8731_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_AT91_SOC_SAM9G20_WM8731 || SND_SOC_DB1200 || SND_PXA2XX_SOC_CORGI || SND_PXA2XX_SOC_POODLE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8731_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8737": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8741": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8750": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_SPITZ || SND_PXA2XX_SOC_Z2 || SND_SOC_SAMSUNG_JIVE_WM8750 || SND_SOC_SMARTQ",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8753": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SAMSUNG_NEO1973_WM8753 || SND_SOC_TEGRA_WM8753",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8770": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8776": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_P1022_DS",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8782": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8804": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_WM8804_I2C || SND_SOC_WM8804_SPI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8804_I2C": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_SOF_WM8804_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8804_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8900": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8903": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TEGRA_WM8903",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8904": [
        {
            "type": "tristate",
            "rev_select": "SND_ATMEL_SOC_WM8904",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8940": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8955": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8960": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_P1022_RDK || SND_SOC_MT2701_WM8960",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8961": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8962": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_TOBERMORY",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C && INPUT)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8971": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8974": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8978": [
        {
            "type": "tristate",
            "rev_select": "SND_SIU_MIGOR",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8983": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8985": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8988": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8990": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8991": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8993": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8994": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_ASOC_CARD || SND_MMP_SOC_BROWNSTONE || SND_SOC_SAMSUNG_SMDK_WM8994 || SND_SOC_SMDK_WM8994_PCM || SND_SOC_LITTLEMILL || SND_SOC_ARNDALE || SND_SOC_SAMSUNG_ARIES_WM8994 || SND_SOC_SAMSUNG_MIDAS_WM1811",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8995": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8996": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SPEYSIDE",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8997": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_WM8997 && MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_WM8998 && MFD_ARIZONA)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM9081": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SPEYSIDE || SND_SOC_BELLS || SND_SOC_LOWLAND",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM9090": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM9705": [
        {
            "type": "tristate",
            "rev_select": "SND_PXA2XX_SOC_E740 || SND_PXA2XX_SOC_E750",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AC97_BUS || AC97_BUS_NEW)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM9712": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_DB1200 || SND_MPC52xx_SOC_PCM030 || SND_PXA2XX_SOC_TOSA || SND_PXA2XX_SOC_E800 || SND_PXA2XX_SOC_EM_X270 || SND_PXA2XX_SOC_PALM27X || SND_SOC_TEGRA_WM9712",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AC97_BUS || AC97_BUS_NEW)",
            "restrict": ""
        }
    ],
    "SND_SOC_WM9713": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_ZYLONITE || SND_PXA2XX_SOC_MIOA701",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_SOC_AC97_BUS || AC97_BUS_NEW)",
            "restrict": ""
        }
    ],
    "SND_SOC_WSA881X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_WSA883X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SOUNDWIRE)",
            "restrict": ""
        }
    ],
    "SND_SOC_ZL38060": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SND_SOC_LM4857": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX9759": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX9768": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MAX9877": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MC13783": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "SND_SOC_ML26124": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6351": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MT6797_MT6351",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6358": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MT8183_MT6358_TS3A227E_MAX98357A || SND_SOC_MT8183_DA7219_MAX98357A || SND_SOC_MT8186 || SND_SOC_MT8186_MT6366_DA7219_MAX98357 || SND_SOC_MT8186_MT6366_RT1019_RT5682S",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6359": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MT8192_MT6359_RT1015_RT5682 || SND_SOC_MT8195_MT6359",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6359_ACCDET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (MTK_PMIC_WRAP)",
            "restrict": ""
        }
    ],
    "SND_SOC_MT6660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8315": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8540": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8810": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8821": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_VANGOGH_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8822": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8824": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_INTEL_CHT_BSW_NAU8824_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_NAU8825": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_AMD_MACH_COMMON || SND_SOC_INTEL_AVS_MACH_NAU8825 || SND_SOC_INTEL_SKL_NAU88L25_SSM4567_MACH || SND_SOC_INTEL_SKL_NAU88L25_MAX98357A_MACH || SND_SOC_INTEL_SOF_NAU8825_MACH",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_TPA6130A2": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_NOKIA_RX51",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (I2C)",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_MACRO_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SC7280 || SND_SOC_LPASS_VA_MACRO || SND_SOC_LPASS_RX_MACRO || SND_SOC_LPASS_TX_MACRO",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_WSA_MACRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_VA_MACRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_RX_MACRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SOC_LPASS_TX_MACRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "SND_SIMPLE_CARD_UTILS": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_FSL_ASOC_CARD || SND_SOC_IMX_CARD || SND_SOC_RCAR || SND_SIMPLE_CARD || SND_AUDIO_GRAPH_CARD || SND_AUDIO_GRAPH_CARD2",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_SIMPLE_CARD": [
        {
            "type": "tristate",
            "rev_select": "DRM_TEGRA[SND_SOC_TEGRA20_SPDIF] || SND_SOC_SH4_FSI",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC )",
            "restrict": ""
        }
    ],
    "SND_AUDIO_GRAPH_CARD": [
        {
            "type": "tristate",
            "rev_select": "DRM_TEGRA[SND_SOC_TEGRA20_SPDIF]",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (OF)",
            "restrict": ""
        }
    ],
    "SND_AUDIO_GRAPH_CARD2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (OF)",
            "restrict": ""
        }
    ],
    "SND_AUDIO_GRAPH_CARD2_CUSTOM_SAMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (SND_AUDIO_GRAPH_CARD2)",
            "restrict": ""
        }
    ],
    "SND_TEST_COMPONENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_SOC ) && (OF)",
            "restrict": ""
        }
    ],
    "SND_X86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (X86)",
            "restrict": ""
        }
    ],
    "HDMI_LPE_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && ( SND_X86 ) && (DRM_I915)",
            "restrict": ""
        }
    ],
    "SND_SYNTH_EMUX": [
        {
            "type": "tristate",
            "rev_select": "SND_SBAWE_SEQ || SND_EMU10K1_SEQ",
            "dep": "( SOUND ) && ( ! UML ) && ( SND )",
            "restrict": ""
        }
    ],
    "SND_XEN_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (XEN)",
            "restrict": ""
        }
    ],
    "SND_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUND ) && ( ! UML ) && ( SND ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "AC97_BUS": [
        {
            "type": "tristate",
            "rev_select": "SND_AC97_CODEC || SND_SOC[SND_SOC_AC97_BUS] || SND_SOC_AU1XPSC_AC97 || SND_SOC_AU1XAC97C || SND_EP93XX_SOC_AC97 || SND_SOC_SH4_HAC",
            "dep": "",
            "restrict": ""
        }
    ],
    "HID": [
        {
            "type": "tristate",
            "rev_select": "BT_HIDP || USB_HID || I2C_HID_CORE || INTEL_ISH_HID || SURFACE_HID_CORE",
            "dep": "( ( INPUT ) ) && (INPUT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HID_BATTERY_STRENGTH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && (HID)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HIDRAW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && (HID)",
            "restrict": ""
        }
    ],
    "UHID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && (HID)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HID_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && (HID)",
            "restrict": "( HID )[!(y)]"
        }
    ],
    "HID_A4TECH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_ACCUTOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_ACRUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_ACRUX_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_ACRUX)",
            "restrict": ""
        }
    ],
    "HID_APPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID) && (LEDS_CLASS) && (NEW_LEDS)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_APPLEIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (( USB_HID ))",
            "restrict": ""
        }
    ],
    "HID_ASUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID) && (LEDS_CLASS) && (ASUS_WMI || ASUS_WMI = n)",
            "restrict": ""
        }
    ],
    "HID_AUREAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_BELKIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_BETOP_FF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_BIGBEN_FF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID) && (NEW_LEDS) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "HID_CHERRY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_CHICONY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_CORSAIR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID && LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "HID_COUGAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_MACALLY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_PRODIKEYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID && SND)",
            "restrict": ""
        }
    ],
    "HID_CMEDIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_CP2112": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID && HIDRAW && I2C && GPIOLIB)",
            "restrict": ""
        }
    ],
    "HID_CREATIVE_SB0540": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_CYPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_DRAGONRISE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "DRAGONRISE_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_DRAGONRISE)",
            "restrict": ""
        }
    ],
    "HID_EMS_FF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_ELAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (LEDS_CLASS && USB_HID)",
            "restrict": ""
        }
    ],
    "HID_ELECOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_ELO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_EZKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_FT260": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID && HIDRAW && I2C)",
            "restrict": ""
        }
    ],
    "HID_GEMBIRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_GFRM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_GLORIOUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_HOLTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HOLTEK_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_HOLTEK)",
            "restrict": ""
        }
    ],
    "HID_VIVALDI_COMMON": [
        {
            "type": "tristate",
            "rev_select": "HID_GOOGLE_HAMMER || HID_VIVALDI",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) )",
            "restrict": ""
        }
    ],
    "HID_GOOGLE_HAMMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID && LEDS_CLASS && CROS_EC)",
            "restrict": ""
        }
    ],
    "HID_VIVALDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_GT683R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (LEDS_CLASS && USB_HID)",
            "restrict": ""
        }
    ],
    "HID_KEYTOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_KYE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_UCLOGIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_WALTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_VIEWSONIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_XIAOMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_GYRATION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_ICADE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_ITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_JABRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_TWINHAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_KENSINGTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_LCPOWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_LED": [
        {
            "type": "tristate",
            "rev_select": "HID_THINGM",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "HID_LENOVO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_LETSKETCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_LOGITECH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID) && (LEDS_CLASS)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_LOGITECH_DJ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID) && (HIDRAW) && (HID_LOGITECH)",
            "restrict": ""
        }
    ],
    "HID_LOGITECH_HIDPP": [
        {
            "type": "tristate",
            "rev_select": "HID_LOGITECH_DJ",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_LOGITECH)",
            "restrict": ""
        }
    ],
    "LOGITECH_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_LOGITECH)",
            "restrict": ""
        }
    ],
    "LOGIRUMBLEPAD2_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_LOGITECH)",
            "restrict": ""
        }
    ],
    "LOGIG940_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_LOGITECH)",
            "restrict": ""
        }
    ],
    "LOGIWHEELS_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_LOGITECH)",
            "restrict": "( LOGITECH_FF )[!(y)]"
        }
    ],
    "HID_MAGICMOUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_MALTRON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_MAYFLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_MEGAWORLD_FF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_REDRAGON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_MICROSOFT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_MONTEREY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": "( ! EXPERT )[!(y)]"
        }
    ],
    "HID_MULTITOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_NINTENDO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID) && (NEW_LEDS) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "NINTENDO_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_NINTENDO)",
            "restrict": ""
        }
    ],
    "HID_NTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) )",
            "restrict": ""
        }
    ],
    "HID_NTRIG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_ORTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_PANTHERLORD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "PANTHERLORD_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PANTHERLORD)",
            "restrict": ""
        }
    ],
    "HID_PENMOUNT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_PETALYNX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_PICOLCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_PICOLCD_FB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PICOLCD) && (HID_PICOLCD = FB || FB = y)",
            "restrict": "( ! EXPERT )[!(EXPERT)]"
        }
    ],
    "HID_PICOLCD_BACKLIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PICOLCD) && (HID_PICOLCD = BACKLIGHT_CLASS_DEVICE || BACKLIGHT_CLASS_DEVICE = y)",
            "restrict": "( ! EXPERT )[!(EXPERT)]"
        }
    ],
    "HID_PICOLCD_LCD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PICOLCD) && (HID_PICOLCD = LCD_CLASS_DEVICE || LCD_CLASS_DEVICE = y)",
            "restrict": "( ! EXPERT )[!(EXPERT)]"
        }
    ],
    "HID_PICOLCD_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PICOLCD) && (HID_PICOLCD = LEDS_CLASS || LEDS_CLASS = y)",
            "restrict": "( ! EXPERT )[!(EXPERT)]"
        }
    ],
    "HID_PICOLCD_CIR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PICOLCD) && (HID_PICOLCD = RC_CORE || RC_CORE = y)",
            "restrict": "( ! EXPERT )[!(EXPERT)]"
        }
    ],
    "HID_PLANTRONICS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_PLAYSTATION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID) && (LEDS_CLASS_MULTICOLOR)",
            "restrict": ""
        }
    ],
    "PLAYSTATION_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_PLAYSTATION)",
            "restrict": ""
        }
    ],
    "HID_RAZER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_PRIMAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_RETRODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_ROCCAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_SAITEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_SAMSUNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_SEMITEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_SIGMAMICRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_SONY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID) && (NEW_LEDS) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "SONY_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_SONY)",
            "restrict": ""
        }
    ],
    "HID_SPEEDLINK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_STEAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_STEELSERIES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_SUNPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_RMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_GREENASIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "GREENASIA_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_GREENASIA)",
            "restrict": ""
        }
    ],
    "HID_HYPERV_MOUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HYPERV)",
            "restrict": ""
        }
    ],
    "HID_SMARTJOYPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "SMARTJOYPLUS_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_SMARTJOYPLUS)",
            "restrict": ""
        }
    ],
    "HID_TIVO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_TOPSEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_TOPRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_THINGM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "HID_THRUSTMASTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "THRUSTMASTER_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_THRUSTMASTER)",
            "restrict": ""
        }
    ],
    "HID_UDRAW_PS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_U2FZERO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID) && (LEDS_CLASS) && (HW_RANDOM)",
            "restrict": ""
        }
    ],
    "HID_WACOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "HID_WIIMOTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "HID_XINMO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_ZEROPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "ZEROPLUS_FF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_ZEROPLUS)",
            "restrict": ""
        }
    ],
    "HID_ZYDACRON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_HUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID && HAS_IOMEM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HID_SENSOR_CUSTOM_SENSOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID_SENSOR_HUB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HID_ALPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (HID)",
            "restrict": ""
        }
    ],
    "HID_MCP2221": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (USB_HID && I2C) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "HID_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( HID ) && ( ( HID ) ) && (KUNIT = y) && (HID_UCLOGIC)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "USB_HID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( USB ) ) && (USB && INPUT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HID_PID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( USB ) )",
            "restrict": ""
        }
    ],
    "USB_HIDDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( USB ) ) && (USB_HID)",
            "restrict": ""
        }
    ],
    "USB_KBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( USB ) ) && ( ( USB != n && USB_HID != y && EXPERT ) ) && (USB && INPUT)",
            "restrict": ""
        }
    ],
    "USB_MOUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( USB ) ) && ( ( USB != n && USB_HID != y && EXPERT ) ) && (USB && INPUT)",
            "restrict": ""
        }
    ],
    "I2C_HID_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( I2C ) ) && (I2C && INPUT && ACPI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "I2C_HID_OF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( I2C ) ) && (I2C && INPUT && OF)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "I2C_HID_OF_ELAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( I2C ) ) && (I2C && INPUT && OF)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "I2C_HID_OF_GOODIX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( I2C ) ) && (I2C && INPUT && OF)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "I2C_HID_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) )",
            "restrict": "( y )[!(y) && (I2C_HID_ACPI = y || I2C_HID_OF = y || I2C_HID_OF_GOODIX = y)] || ( m )[!(y) && (I2C_HID_ACPI = m || I2C_HID_OF = m || I2C_HID_OF_GOODIX = m)]"
        }
    ],
    "INTEL_ISH_HID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( ( X86_64 || COMPILE_TEST ) && PCI ) ) && (X86)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INTEL_ISH_FIRMWARE_DOWNLOADER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( ( X86_64 || COMPILE_TEST ) && PCI ) ) && (INTEL_ISH_HID) && (X86)",
            "restrict": ""
        }
    ],
    "AMD_SFH_HID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( X86_64 || COMPILE_TEST ) && ( PCI ) && ( HID ) )",
            "restrict": ""
        }
    ],
    "SURFACE_HID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( SURFACE_AGGREGATOR ) && ( INPUT ) ) && (SURFACE_AGGREGATOR_REGISTRY)",
            "restrict": ""
        }
    ],
    "SURFACE_KBD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( INPUT ) ) && ( ( SURFACE_AGGREGATOR ) && ( INPUT ) )",
            "restrict": ""
        }
    ],
    "SURFACE_HID_CORE": [
        {
            "type": "tristate",
            "rev_select": "SURFACE_HID || SURFACE_KBD",
            "dep": "( ( INPUT ) )",
            "restrict": ""
        }
    ],
    "USB_OHCI_BIG_ENDIAN_DESC": [
        {
            "type": "bool",
            "rev_select": "USB_OHCI_HCD_PPC_OF_BE",
            "dep": "",
            "restrict": ""
        }
    ],
    "USB_OHCI_BIG_ENDIAN_MMIO": [
        {
            "type": "bool",
            "rev_select": "USB_OHCI_HCD_PPC_OF_BE || USB_OCTEON_OHCI[CPU_BIG_ENDIAN]",
            "dep": "",
            "restrict": ""
        }
    ],
    "USB_OHCI_LITTLE_ENDIAN": [
        {
            "type": "bool",
            "rev_select": "USB_OHCI_HCD_PPC_OF_LE || USB_OHCI_HCD_PCI || USB_OCTEON_OHCI",
            "dep": "",
            "restrict": "( n )[!(y) && (PPC_MPC52xx)] || ( y )[!(y)]"
        }
    ],
    "USB_EHCI_BIG_ENDIAN_MMIO": [
        {
            "type": "bool",
            "rev_select": "XPS_USB_HCD_XILINX || USB_OCTEON_EHCI[CPU_BIG_ENDIAN]",
            "dep": "",
            "restrict": ""
        }
    ],
    "USB_EHCI_BIG_ENDIAN_DESC": [
        {
            "type": "bool",
            "rev_select": "XPS_USB_HCD_XILINX",
            "dep": "",
            "restrict": ""
        }
    ],
    "USB_UHCI_BIG_ENDIAN_MMIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "USB_UHCI_BIG_ENDIAN_DESC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "USB_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_COMMON": [
        {
            "type": "tristate",
            "rev_select": "USB_ULPI_BUS || USB || USBIP_CORE || AM335X_PHY_USB || USB_TEGRA_PHY || USB_GADGET || PHY_SUN4I_USB || PHY_SUN9I_USB || PHY_MESON8B_USB2 || PHY_RCAR_GEN3_USB2 || PHY_ROCKCHIP_INNO_USB2 || PHY_TEGRA_XUSB",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_LED_TRIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (LEDS_CLASS && USB_COMMON && LEDS_TRIGGERS)",
            "restrict": ""
        }
    ],
    "USB_ULPI_BUS": [
        {
            "type": "tristate",
            "rev_select": "USB_CHIPIDEA",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_CONN_GPIO": [
        {
            "type": "tristate",
            "rev_select": "PHY_TEGRA_XUSB",
            "dep": "( USB_SUPPORT ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "USB_ARCH_HAS_HCD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB": [
        {
            "type": "tristate",
            "rev_select": "MOUSE_APPLETOUCH || MOUSE_BCM5974 || MOUSE_SYNAPTICS_USB || JOYSTICK_XPAD || JOYSTICK_PXRC || TABLET_USB_ACECAD || TABLET_USB_AIPTEK || TABLET_USB_HANWANG || TABLET_USB_KBTAB || TABLET_USB_PEGASUS || TOUCHSCREEN_USB_COMPOSITE || INPUT_ATI_REMOTE2 || INPUT_KEYSPAN_REMOTE || INPUT_POWERMATE || INPUT_YEALINK || INPUT_CM109 || USB_PULSE8_CEC || USB_RAINSHADOW_CEC",
            "dep": "( USB_SUPPORT ) && (USB_ARCH_HAS_HCD)",
            "restrict": ""
        }
    ],
    "USB_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_ANNOUNCE_NEW_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_DEFAULT_PERSIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_FEW_INIT_RETRIES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_DYNAMIC_MINORS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_OTG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (PM)",
            "restrict": ""
        }
    ],
    "USB_OTG_PRODUCTLIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB)",
            "restrict": ""
        }
    ],
    "USB_OTG_DISABLE_EXTERNAL_HUB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_OTG || EXPERT)",
            "restrict": ""
        }
    ],
    "USB_OTG_FSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB && USB_OTG)",
            "restrict": ""
        }
    ],
    "USB_LEDS_TRIGGER_USBPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB && LEDS_TRIGGERS)",
            "restrict": ""
        }
    ],
    "USB_AUTOSUSPEND_DELAY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB)",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "USB_MON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_C67X00_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_XHCI_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_XHCI_DBGCAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_XHCI_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (USB_PCI) && (USB_XHCI_PCI_RENESAS || ! USB_XHCI_PCI_RENESAS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_XHCI_PCI_RENESAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD )",
            "restrict": ""
        }
    ],
    "USB_XHCI_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "USB_XHCI_MVEBU || USB_BRCMSTB[USB_XHCI_HCD] || USB_CDNS_SUPPORT[USB_XHCI_HCD] || USB_DWC3[USB_XHCI_HCD]",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD )",
            "restrict": ""
        }
    ],
    "USB_XHCI_HISTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (USB_XHCI_PLATFORM && ( ARCH_HISI || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "USB_XHCI_MTK": [
        {
            "type": "tristate",
            "rev_select": "USB_MTU3[USB_SUPPORT && USB_XHCI_HCD]",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (( MIPS && SOC_MT7621 ) || ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_XHCI_MVEBU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (HAS_IOMEM) && (ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_XHCI_RCAR": [
        {
            "type": "tristate",
            "rev_select": "USB_XHCI_PLATFORM[ARCH_RENESAS]",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (USB_XHCI_PLATFORM) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_XHCI_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_XHCI_HCD ) && (PHY_TEGRA_XUSB) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "USB_EHCI_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "USB_BRCMSTB[USB_EHCI_HCD]",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (( ARCH_BRCMSTB && PHY_BRCM_USB ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_EHCI_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_EHCI_ROOT_HUB_TT": [
        {
            "type": "bool",
            "rev_select": "USB_EHCI_FSL || USB_EHCI_MV || USB_CHIPIDEA_HOST",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_EHCI_HCD)",
            "restrict": ""
        }
    ],
    "USB_EHCI_TT_NEWSCHED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_EHCI_HCD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_EHCI_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (USB_PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XPS_USB_HCD_XILINX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (( PPC32 || MICROBLAZE ))",
            "restrict": ""
        }
    ],
    "USB_EHCI_FSL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD )",
            "restrict": ""
        }
    ],
    "USB_EHCI_HCD_NPCM7XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (( USB_EHCI_HCD && ARCH_NPCM7XX ) || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (( USB_EHCI_HCD && ARCH_NPCM7XX ))]"
        }
    ],
    "USB_EHCI_HCD_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (ARCH_OMAP || COMPILE_TEST) && (NOP_USB_XCEIV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_EHCI_HCD_ORION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (USB_EHCI_HCD && ( PLAT_ORION || ARCH_MVEBU || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (( PLAT_ORION || ARCH_MVEBU ))]"
        }
    ],
    "USB_EHCI_HCD_SPEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (USB_EHCI_HCD && ( PLAT_SPEAR || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (PLAT_SPEAR)]"
        }
    ],
    "USB_EHCI_HCD_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (( ARCH_STI || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "USB_EHCI_HCD_AT91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (USB_EHCI_HCD && ( ARCH_AT91 || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (ARCH_AT91)]"
        }
    ],
    "USB_EHCI_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (ARCH_TEGRA)",
            "restrict": ""
        }
    ],
    "USB_EHCI_HCD_PPC_OF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (PPC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_EHCI_SH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (SUPERH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_EHCI_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_EHCI_MV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (ARCH_PXA || ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_OCTEON_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (CAVIUM_OCTEON_SOC && USB)",
            "restrict": ""
        }
    ],
    "USB_CNS3XXX_EHCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (ARCH_CNS3XXX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_EHCI_HCD_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "USB_EHCI_HCD_STI || USB_CNS3XXX_EHCI || USB_OCTEON_EHCI || USB_HCD_BCMA[USB_EHCI_HCD] || USB_HCD_SSB[USB_EHCI_HCD]",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD )",
            "restrict": ""
        }
    ],
    "USB_OCTEON_EHCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_EHCI_HCD ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "USB_OXU210HP_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_ISP116X_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_ISP1362_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_IOMEM) && (COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_FOTG210_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB && HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_MAX3421_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB && SPI)",
            "restrict": ""
        }
    ],
    "USB_OHCI_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_OHCI_HCD_OMAP1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (ARCH_OMAP1) && (ISP1301_OMAP || ! ( MACH_OMAP_H2 || MACH_OMAP_H3 ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_OHCI_HCD_SPEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (USB_OHCI_HCD && ( PLAT_SPEAR || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (PLAT_SPEAR)]"
        }
    ],
    "USB_OHCI_HCD_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (( ARCH_STI || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "USB_OHCI_HCD_S3C2410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (USB_OHCI_HCD && ( ARCH_S3C24XX || ARCH_S3C64XX || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (( ARCH_S3C24XX || ARCH_S3C64XX ))]"
        }
    ],
    "USB_OHCI_HCD_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (USB_OHCI_HCD) && (ARCH_LPC32XX || COMPILE_TEST) && (USB_ISP1301)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_OHCI_HCD_PXA27X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (USB_OHCI_HCD && ( PXA27x || PXA3xx ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_OHCI_HCD_AT91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (USB_OHCI_HCD && ( ARCH_AT91 || COMPILE_TEST ) && OF)",
            "restrict": "( y )[!(y) && (ARCH_AT91)]"
        }
    ],
    "USB_OHCI_HCD_OMAP3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (ARCH_OMAP3 || ARCH_OMAP4 || SOC_OMAP5 || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_OMAP3 || ARCH_OMAP4 || SOC_OMAP5)]"
        }
    ],
    "USB_OHCI_HCD_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (ARCH_DAVINCI_DA8XX || COMPILE_TEST) && (USB_OHCI_HCD)",
            "restrict": "( y )[!(y) && (ARCH_DAVINCI_DA8XX)]"
        }
    ],
    "USB_OHCI_HCD_PPC_OF_BE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (PPC)",
            "restrict": ""
        }
    ],
    "USB_OHCI_HCD_PPC_OF_LE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (PPC)",
            "restrict": ""
        }
    ],
    "USB_OHCI_HCD_PPC_OF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (PPC)",
            "restrict": "( USB_OHCI_HCD_PPC_OF_BE || USB_OHCI_HCD_PPC_OF_LE )[!(y)]"
        }
    ],
    "USB_OHCI_HCD_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (USB_PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_OHCI_HCD_SSB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (( SSB = y || SSB = USB_OHCI_HCD ))",
            "restrict": ""
        }
    ],
    "USB_OHCI_SH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (SUPERH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_OHCI_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_CNS3XXX_OHCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (ARCH_CNS3XXX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_OHCI_HCD_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "USB_BRCMSTB[USB_OHCI_HCD] || USB_OHCI_HCD_STI || USB_OHCI_HCD_OMAP3 || USB_OHCI_HCD_SSB || USB_OHCI_SH || USB_CNS3XXX_OHCI || USB_OCTEON_OHCI || USB_HCD_BCMA[USB_OHCI_HCD] || USB_HCD_SSB[USB_OHCI_HCD]",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD )",
            "restrict": ""
        }
    ],
    "USB_OCTEON_OHCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_OHCI_HCD ) && (CAVIUM_OCTEON_SOC)",
            "restrict": "( USB_OCTEON_EHCI )[!(y)]"
        }
    ],
    "USB_UHCI_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_PCI || USB_UHCI_SUPPORT_NON_PCI_HC)",
            "restrict": ""
        }
    ],
    "USB_UHCI_SUPPORT_NON_PCI_HC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": "( y )[!(y) && (( SPARC_LEON || USB_UHCI_PLATFORM ))]"
        }
    ],
    "USB_UHCI_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": "( y )[!(y) && (( ARCH_VT8500 || ARCH_ASPEED ))]"
        }
    ],
    "USB_UHCI_ASPEED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": "( y )[!(y) && (ARCH_ASPEED)]"
        }
    ],
    "USB_FHCI_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (OF_GPIO && QE_GPIO && QUICC_ENGINE)",
            "restrict": ""
        }
    ],
    "FHCI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_FHCI_HCD && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "USB_U132_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_FTDI_ELAN)",
            "restrict": ""
        }
    ],
    "USB_SL811_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_SL811_HCD_ISO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_SL811_HCD)",
            "restrict": ""
        }
    ],
    "USB_SL811_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_SL811_HCD && PCMCIA)",
            "restrict": ""
        }
    ],
    "USB_R8A66597_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_RENESAS_USBHS_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_RENESAS_USBHS)",
            "restrict": ""
        }
    ],
    "USB_HCD_BCMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (BCMA)",
            "restrict": ""
        }
    ],
    "USB_HCD_SSB": [
        {
            "type": "tristate",
            "rev_select": "USB_OHCI_HCD_SSB",
            "dep": "( USB_SUPPORT ) && ( USB ) && (SSB)",
            "restrict": ""
        }
    ],
    "USB_HCD_TEST_MODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_XEN_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (XEN)",
            "restrict": ""
        }
    ],
    "USB_RENESAS_USBHS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USB_GADGET) && (ARCH_RENESAS || SUPERH || COMPILE_TEST) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "USB_ACM": [
        {
            "type": "tristate",
            "rev_select": "USB_VL600 || USB_PULSE8_CEC || USB_RAINSHADOW_CEC",
            "dep": "( USB_SUPPORT ) && ( USB ) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_PRINTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_WDM": [
        {
            "type": "tristate",
            "rev_select": "USB_NET_HUAWEI_CDC_NCM || USB_NET_CDC_MBIM || USB_NET_QMI_WWAN",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_TMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_STORAGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (SCSI)",
            "restrict": ""
        }
    ],
    "USB_STORAGE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_REALTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "REALTEK_AUTOPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE ) && (USB_STORAGE_REALTEK && PM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_STORAGE_DATAFAB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_FREECOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_ISD200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_USBAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_SDDR09": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_SDDR55": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_JUMPSHOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_ALAUDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_ONETOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE ) && (INPUT = y || INPUT = USB_STORAGE)",
            "restrict": ""
        }
    ],
    "USB_STORAGE_KARMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_CYPRESS_ATACB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_STORAGE_ENE_UB6250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_STORAGE )",
            "restrict": ""
        }
    ],
    "USB_UAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (SCSI && USB_STORAGE)",
            "restrict": ""
        }
    ],
    "USB_MDC800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_MICROTEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (SCSI)",
            "restrict": ""
        }
    ],
    "USBIP_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (NET)",
            "restrict": ""
        }
    ],
    "USBIP_VHCI_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USBIP_CORE && USB)",
            "restrict": ""
        }
    ],
    "USBIP_VHCI_HC_PORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USBIP_VHCI_HCD)",
            "restrict": "( 1 15 ) || ( 8 )[!(y)]"
        }
    ],
    "USBIP_VHCI_NR_HCS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USBIP_VHCI_HCD)",
            "restrict": "( 1 128 ) || ( 1 )[!(y)]"
        }
    ],
    "USBIP_HOST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USBIP_CORE && USB)",
            "restrict": ""
        }
    ],
    "USBIP_VUDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USBIP_CORE && USB_GADGET)",
            "restrict": ""
        }
    ],
    "USBIP_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (USBIP_CORE)",
            "restrict": ""
        }
    ],
    "USB_CDNS_SUPPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (USB_SUPPORT && ( USB || USB_GADGET ) && HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_CDNS_HOST": [
        {
            "type": "bool",
            "rev_select": "USB_CDNS3_HOST || USB_CDNSP_HOST",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_CDNS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS_SUPPORT ) && (USB_CDNS_SUPPORT)",
            "restrict": ""
        }
    ],
    "USB_CDNS3_GADGET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS3 ) && (USB_GADGET = y || USB_GADGET = USB_CDNS3)",
            "restrict": ""
        }
    ],
    "USB_CDNS3_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS3 ) && (USB = y || USB = USB_CDNS3)",
            "restrict": ""
        }
    ],
    "USB_CDNS3_PCI_WRAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS3 ) && (USB_PCI && ACPI)",
            "restrict": "( USB_CDNS3 )[!(y)]"
        }
    ],
    "USB_CDNS3_TI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS3 ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": "( USB_CDNS3 )[!(y)]"
        }
    ],
    "USB_CDNS3_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS3 ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": "( USB_CDNS3 )[!(y)]"
        }
    ],
    "USB_CDNSP_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNS_SUPPORT ) && (USB_CDNS_SUPPORT && USB_PCI && ACPI)",
            "restrict": ""
        }
    ],
    "USB_CDNSP_GADGET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNSP_PCI ) && (USB_GADGET = y || USB_GADGET = USB_CDNSP_PCI)",
            "restrict": ""
        }
    ],
    "USB_CDNSP_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CDNSP_PCI ) && (USB = y || USB = USB_CDNSP_PCI)",
            "restrict": ""
        }
    ],
    "USB_MTU3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (USB || USB_GADGET) && (ARCH_MEDIATEK || COMPILE_TEST) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "USB_MTU3_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MTU3 ) && (USB = y || USB = USB_MTU3) && ( USB_MTU3_HOST &&  !USB_MTU3_GADGET &&  !USB_MTU3_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_MTU3_GADGET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MTU3 ) && (USB_GADGET = y || USB_GADGET = USB_MTU3) && ( USB_MTU3_GADGET &&  !USB_MTU3_HOST &&  !USB_MTU3_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_MTU3_DUAL_ROLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MTU3 ) && (( ( USB = y || USB = USB_MTU3 ) && ( USB_GADGET = y || USB_GADGET = USB_MTU3 ) )) && (( EXTCON = y || EXTCON = USB_MTU3 )) && ( USB_MTU3_DUAL_ROLE &&  !USB_MTU3_HOST &&  !USB_MTU3_GADGET )",
            "restrict": ""
        }
    ],
    "USB_MTU3_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MTU3 )",
            "restrict": ""
        }
    ],
    "USB_MUSB_HDRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (( USB || USB_GADGET )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_MUSB_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (USB = y || USB = USB_MUSB_HDRC) && ( USB_MUSB_HOST &&  !USB_MUSB_GADGET &&  !USB_MUSB_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_MUSB_GADGET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (USB_GADGET = y || USB_GADGET = USB_MUSB_HDRC) && (HAS_DMA) && ( USB_MUSB_GADGET &&  !USB_MUSB_HOST &&  !USB_MUSB_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_MUSB_DUAL_ROLE": [
        {
            "type": "bool",
            "rev_select": "USB_MUSB_POLARFIRE_SOC",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (( ( USB = y || USB = USB_MUSB_HDRC ) && ( USB_GADGET = y || USB_GADGET = USB_MUSB_HDRC ) )) && (HAS_DMA) && ( USB_MUSB_DUAL_ROLE &&  !USB_MUSB_HOST &&  !USB_MUSB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_MUSB_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_SUNXI) && (NOP_USB_XCEIV) && (PHY_SUN4I_USB) && (EXTCON)",
            "restrict": ""
        }
    ],
    "USB_MUSB_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_DAVINCI_DMx) && (NOP_USB_XCEIV) && (BROKEN)",
            "restrict": ""
        }
    ],
    "USB_MUSB_DA8XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_DAVINCI_DA8XX) && (NOP_USB_XCEIV)",
            "restrict": ""
        }
    ],
    "USB_MUSB_TUSB6010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (HAS_IOMEM) && (ARCH_OMAP2PLUS || COMPILE_TEST) && (NOP_USB_XCEIV != m || USB_MUSB_HDRC = m)",
            "restrict": ""
        }
    ],
    "USB_MUSB_OMAP2PLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_OMAP2PLUS && USB) && (OMAP_CONTROL_PHY || ! OMAP_CONTROL_PHY)",
            "restrict": ""
        }
    ],
    "USB_MUSB_AM35X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_OMAP) && (NOP_USB_XCEIV)",
            "restrict": ""
        }
    ],
    "USB_MUSB_DSPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_OMAP2PLUS || COMPILE_TEST) && (OF_IRQ)",
            "restrict": ""
        }
    ],
    "USB_MUSB_UX500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_U8500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_MUSB_JZ4740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (OF) && (MIPS || COMPILE_TEST) && (USB_MUSB_GADGET) && (USB = n || USB_OTG_DISABLE_EXTERNAL_HUB)",
            "restrict": ""
        }
    ],
    "USB_MUSB_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (ARCH_MEDIATEK || COMPILE_TEST) && (NOP_USB_XCEIV)",
            "restrict": ""
        }
    ],
    "USB_MUSB_POLARFIRE_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && (SOC_MICROCHIP_POLARFIRE || COMPILE_TEST) && (NOP_USB_XCEIV)",
            "restrict": ""
        }
    ],
    "MUSB_PIO_ONLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC )",
            "restrict": ""
        }
    ],
    "USB_UX500_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && ( ! MUSB_PIO_ONLY ) && (USB_MUSB_UX500)",
            "restrict": ""
        }
    ],
    "USB_INVENTRA_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && ( ! MUSB_PIO_ONLY ) && (USB_MUSB_OMAP2PLUS || USB_MUSB_MEDIATEK || USB_MUSB_JZ4740 || USB_MUSB_POLARFIRE_SOC)",
            "restrict": ""
        }
    ],
    "USB_TI_CPPI_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && ( ! MUSB_PIO_ONLY ) && (USB_MUSB_DAVINCI)",
            "restrict": ""
        }
    ],
    "USB_TI_CPPI41_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && ( ! MUSB_PIO_ONLY ) && (( ARCH_OMAP || ARCH_DAVINCI_DA8XX ) && DMADEVICES)",
            "restrict": ""
        }
    ],
    "USB_TUSB_OMAP_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_MUSB_HDRC ) && ( ! MUSB_PIO_ONLY ) && (USB_MUSB_TUSB6010 = USB_MUSB_HDRC) && (ARCH_OMAP)",
            "restrict": ""
        }
    ],
    "USB_DWC3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (( USB || USB_GADGET ) && HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_DWC3_ULPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (USB_ULPI_BUS = y || USB_ULPI_BUS = USB_DWC3)",
            "restrict": ""
        }
    ],
    "USB_DWC3_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (USB = y || USB = USB_DWC3) && ( USB_DWC3_HOST &&  !USB_DWC3_GADGET &&  !USB_DWC3_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_DWC3_GADGET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (USB_GADGET = y || USB_GADGET = USB_DWC3) && ( USB_DWC3_GADGET &&  !USB_DWC3_HOST &&  !USB_DWC3_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_DWC3_DUAL_ROLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (( ( USB = y || USB = USB_DWC3 ) && ( USB_GADGET = y || USB_GADGET = USB_DWC3 ) )) && (( EXTCON = y || EXTCON = USB_DWC3 )) && ( USB_DWC3_DUAL_ROLE &&  !USB_DWC3_HOST &&  !USB_DWC3_GADGET )",
            "restrict": ""
        }
    ],
    "USB_DWC3_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (ARCH_OMAP2PLUS || COMPILE_TEST) && (EXTCON || ! EXTCON) && (OF)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (( ARCH_EXYNOS || COMPILE_TEST ) && OF)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (USB_PCI && ACPI)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_HAPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (USB_PCI)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_KEYSTONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_MESON_G12A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (OF && COMMON_CLK) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_OF_SIMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (OF && COMMON_CLK)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (( ARCH_STI || COMPILE_TEST ) && OF)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (ARCH_QCOM || COMPILE_TEST) && (EXTCON || ! EXTCON) && (( OF || ACPI ))",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_IMX8MP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (OF && COMMON_CLK) && (( ARCH_MXC && ARM64 ) || COMPILE_TEST)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (( ARCH_ZYNQMP || ARCH_VERSAL ) && OF)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC3_AM62": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC3 ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": "( USB_DWC3 )[!(y)]"
        }
    ],
    "USB_DWC2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (HAS_DMA) && (USB || USB_GADGET) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_DWC2_HOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 ) && (USB = y || ( USB_DWC2 = m && USB )) && ( USB_DWC2_HOST &&  !USB_DWC2_PERIPHERAL &&  !USB_DWC2_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_DWC2_PERIPHERAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 ) && (USB_GADGET = y || USB_GADGET = USB_DWC2) && ( USB_DWC2_PERIPHERAL &&  !USB_DWC2_HOST &&  !USB_DWC2_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_DWC2_DUAL_ROLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 ) && (( USB = y && USB_GADGET = y ) || ( USB_DWC2 = m && USB && USB_GADGET )) && ( USB_DWC2_DUAL_ROLE &&  !USB_DWC2_HOST &&  !USB_DWC2_PERIPHERAL )",
            "restrict": ""
        }
    ],
    "USB_DWC2_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 ) && (USB_PCI) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "USB_DWC2_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 )",
            "restrict": ""
        }
    ],
    "USB_DWC2_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 ) && (USB_DWC2_DEBUG)",
            "restrict": ""
        }
    ],
    "USB_DWC2_TRACK_MISSED_SOFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 )",
            "restrict": ""
        }
    ],
    "USB_DWC2_DEBUG_PERIODIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_DWC2 ) && (USB_DWC2_DEBUG || USB_DWC2_VERBOSE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_CHIPIDEA": [
        {
            "type": "tristate",
            "rev_select": "USB_EHCI_TEGRA",
            "dep": "( USB_SUPPORT ) && (( ( USB_EHCI_HCD && USB_GADGET ) || ( USB_EHCI_HCD && ! USB_GADGET ) || ( ! USB_EHCI_HCD && USB_GADGET ) ) && HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_CHIPIDEA_UDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA ) && (USB_GADGET)",
            "restrict": ""
        }
    ],
    "USB_CHIPIDEA_HOST": [
        {
            "type": "bool",
            "rev_select": "USB_EHCI_TEGRA",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA ) && (USB_EHCI_HCD)",
            "restrict": ""
        }
    ],
    "USB_CHIPIDEA_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA ) && (USB_PCI) && (NOP_USB_XCEIV)",
            "restrict": "( USB_CHIPIDEA )[!(EMBEDDED)]"
        }
    ],
    "USB_CHIPIDEA_MSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA )",
            "restrict": "( USB_CHIPIDEA )[!(EMBEDDED)]"
        }
    ],
    "USB_CHIPIDEA_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA ) && (OF)",
            "restrict": "( USB_CHIPIDEA )[!(EMBEDDED)]"
        }
    ],
    "USB_CHIPIDEA_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA )",
            "restrict": "( USB_CHIPIDEA )[!(EMBEDDED)]"
        }
    ],
    "USB_CHIPIDEA_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "USB_EHCI_TEGRA",
            "dep": "( USB_SUPPORT ) && ( USB_CHIPIDEA ) && (OF)",
            "restrict": "( USB_CHIPIDEA )[!(EMBEDDED)]"
        }
    ],
    "USB_ISP1760": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (USB || USB_GADGET)",
            "restrict": ""
        }
    ],
    "USB_ISP1760_HCD": [
        {
            "type": "bool",
            "rev_select": "USB_ISP1760_HOST_ROLE || USB_ISP1760_DUAL_ROLE",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_ISP1761_UDC": [
        {
            "type": "bool",
            "rev_select": "USB_ISP1760_GADGET_ROLE || USB_ISP1760_DUAL_ROLE",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_ISP1760_HOST_ROLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_ISP1760 ) && (USB = y || USB = USB_ISP1760) && ( USB_ISP1760_HOST_ROLE &&  !USB_ISP1760_GADGET_ROLE &&  !USB_ISP1760_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_ISP1760_GADGET_ROLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_ISP1760 ) && (USB_GADGET = y || USB_GADGET = USB_ISP1760) && ( USB_ISP1760_GADGET_ROLE &&  !USB_ISP1760_HOST_ROLE &&  !USB_ISP1760_DUAL_ROLE )",
            "restrict": ""
        }
    ],
    "USB_ISP1760_DUAL_ROLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_ISP1760 ) && (USB = y || USB = USB_ISP1760) && (USB_GADGET = y || USB_GADGET = USB_ISP1760) && ( USB_ISP1760_DUAL_ROLE &&  !USB_ISP1760_HOST_ROLE &&  !USB_ISP1760_GADGET_ROLE )",
            "restrict": ""
        }
    ],
    "USB_USS720": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "USB_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_SERIAL_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL ) && (USB_SERIAL = y)",
            "restrict": ""
        }
    ],
    "USB_SERIAL_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SIMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_AIRCABLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_ARK3116": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_BELKIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_CH341": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_WHITEHEAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_DIGI_ACCELEPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_CP210X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_CYPRESS_M8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_EMPEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_FTDI_SIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_VISOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_IPAQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_IR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_EDGEPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_EDGEPORT_TI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_F81232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_F8153X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_GARMIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_IPW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_IUU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_KEYSPAN_PDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_KEYSPAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_KLSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_KOBIL_SCT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_MCT_U232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_METRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_MOS7720": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_MOS7715_PARPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL ) && (USB_SERIAL_MOS7720) && (PARPORT = y || PARPORT = USB_SERIAL_MOS7720)",
            "restrict": ""
        }
    ],
    "USB_SERIAL_MOS7840": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_MXUPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_NAVMAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_PL2303": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_OTI6858": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_QCAUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_QUALCOMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SPCP8X5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SAFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SAFE_PADDED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL ) && (USB_SERIAL_SAFE)",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SIERRAWIRELESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SYMBOL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_TI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_CYBERJACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_WWAN": [
        {
            "type": "tristate",
            "rev_select": "USB_SERIAL_IPW || USB_SERIAL_QUALCOMM || USB_SERIAL_OPTION",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_OPTION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_OMNINET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_OPTICON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_XSENS_MT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_WISHBONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_SSU100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_QT2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_UPD78F0730": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_XR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_SERIAL_DEBUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_EMI62": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_EMI26": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_ADUTUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_SEVSEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_LEGOTOWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_LCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_CYPRESS_CY7C63": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_CYTHERM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_IDMOUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_FTDI_ELAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_APPLEDISPLAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_QCOM_EUD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "APPLE_MFI_FASTCHARGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_SISUSBVGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (( USB_MUSB_HDRC || USB_EHCI_HCD ))",
            "restrict": ""
        }
    ],
    "USB_SISUSBVGA_CON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (VT && BROKEN)",
            "restrict": ""
        }
    ],
    "USB_LD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_TRANCEVIBRATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_IOWARRIOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_EHSET_TEST_FIXTURE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_ISIGHTFW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_YUREX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_EZUSB_FX2": [
        {
            "type": "tristate",
            "rev_select": "USB_SERIAL_WHITEHEAT || USB_SERIAL_KEYSPAN_PDA || USB_SERIAL_KEYSPAN",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_HUB_USB251XB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (I2C)",
            "restrict": ""
        }
    ],
    "USB_HSIC_USB3503": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (I2C)",
            "restrict": ""
        }
    ],
    "USB_HSIC_USB4604": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (I2C)",
            "restrict": ""
        }
    ],
    "USB_LINK_LAYER_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB )",
            "restrict": ""
        }
    ],
    "USB_CHAOSKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (HW_RANDOM)",
            "restrict": ""
        }
    ],
    "BRCM_USB_PINMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (( ARCH_BRCMSTB && PHY_BRCM_USB ) || COMPILE_TEST)",
            "restrict": "( ARCH_BRCMSTB && PHY_BRCM_USB )[!(y)]"
        }
    ],
    "USB_ONBOARD_HUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_ATM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && (ATM)",
            "restrict": ""
        }
    ],
    "USB_SPEEDTOUCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_ATM )",
            "restrict": ""
        }
    ],
    "USB_CXACRU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_ATM )",
            "restrict": ""
        }
    ],
    "USB_UEAGLEATM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_ATM )",
            "restrict": ""
        }
    ],
    "USB_XUSBATM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB ) && ( USB_ATM )",
            "restrict": ""
        }
    ],
    "USB_PHY": [
        {
            "type": "bool",
            "rev_select": "USB_OTG_FSM || AB8500_USB || FSL_USB2_OTG || ISP1301_OMAP || NOP_USB_XCEIV || AM335X_PHY_USB || USB_GPIO_VBUS || TAHVO_USB || USB_ISP1301 || USB_MV_OTG || USB_MXS_PHY || USB_TEGRA_PHY || JZ4770_PHY || USB_LGM_PHY || PHY_CPCAP_USB || PHY_TEGRA_XUSB || PHY_DM816X_USB || OMAP_USB2 || TWL4030_USB",
            "dep": "( USB_SUPPORT )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "AB8500_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (AB8500_CORE)",
            "restrict": ""
        }
    ],
    "FSL_USB2_OTG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (USB_EHCI_FSL && USB_FSL_USB2 && USB_OTG_FSM = y && PM) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "ISP1301_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (I2C) && (ARCH_OMAP_OTG || ( ARM && COMPILE_TEST )) && (USB) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "KEYSTONE_USB_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (ARCH_KEYSTONE || COMPILE_TEST) && (NOP_USB_XCEIV)",
            "restrict": ""
        }
    ],
    "NOP_USB_XCEIV": [
        {
            "type": "tristate",
            "rev_select": "USB_DWC2_PCI",
            "dep": "( USB_SUPPORT ) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "AM335X_CONTROL_USB": [
        {
            "type": "tristate",
            "rev_select": "AM335X_PHY_USB",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "AM335X_PHY_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (ARM || COMPILE_TEST) && (NOP_USB_XCEIV)",
            "restrict": ""
        }
    ],
    "TWL6030_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (TWL4030_CORE && OMAP_USB2 && USB_MUSB_OMAP2PLUS) && (OF)",
            "restrict": ""
        }
    ],
    "USB_GPIO_VBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (GPIOLIB || COMPILE_TEST) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "OMAP_OTG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (ARCH_OMAP_OTG && EXTCON)",
            "restrict": ""
        }
    ],
    "TAHVO_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (MFD_RETU) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "TAHVO_USB_HOST_BY_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (TAHVO_USB)",
            "restrict": ""
        }
    ],
    "USB_ISP1301": [
        {
            "type": "tristate",
            "rev_select": "USB_LPC32XX",
            "dep": "( USB_SUPPORT ) && (USB || USB_GADGET) && (I2C)",
            "restrict": ""
        }
    ],
    "USB_MV_OTG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (USB_EHCI_MV && USB_MV_UDC && PM && USB_OTG) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "USB_MXS_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (ARCH_MXC || ARCH_MXS)",
            "restrict": ""
        }
    ],
    "USB_TEGRA_PHY": [
        {
            "type": "tristate",
            "rev_select": "USB_CHIPIDEA[ARCH_TEGRA]",
            "dep": "( USB_SUPPORT ) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_ULPI": [
        {
            "type": "bool",
            "rev_select": "USB_TEGRA_PHY",
            "dep": "( USB_SUPPORT ) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_ULPI_VIEWPORT": [
        {
            "type": "bool",
            "rev_select": "USB_ULPI",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "JZ4770_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_GADGET": [
        {
            "type": "tristate",
            "rev_select": "USB_EHCI_TEGRA",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_GADGET_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "USB_GADGET_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_GADGET_DEBUG)",
            "restrict": ""
        }
    ],
    "USB_GADGET_DEBUG_FILES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "USB_GADGET_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "USB_GADGET_VBUS_DRAW": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": "( 2 500 ) || ( 2 )[!(y)]"
        }
    ],
    "USB_GADGET_STORAGE_NUM_BUFFERS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": "( 2 256 ) || ( 2 )[!(y)]"
        }
    ],
    "U_SERIAL_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_U_SERIAL)",
            "restrict": ""
        }
    ],
    "USB_AT91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_AT91) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_LPC32XX || COMPILE_TEST) && (I2C)",
            "restrict": ""
        }
    ],
    "USB_ATMEL_USBA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_AT91)",
            "restrict": ""
        }
    ],
    "USB_BCM63XX_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (BCM63XX)",
            "restrict": ""
        }
    ],
    "USB_FSL_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "USB_FUSB300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (! PHYS_ADDR_T_64BIT && HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_FOTG210_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_GR_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_OMAP1) && (ISP1301_OMAP || ! ( MACH_OMAP_H2 || MACH_OMAP_H3 ))",
            "restrict": ""
        }
    ],
    "USB_PXA25X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (( ARCH_PXA && PXA25x ) || ARCH_IXP4XX) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_PXA25X_SMALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_PXA25X)",
            "restrict": "( n )[!(y) && (USB_ETH_RNDIS)] || ( y )[!(y) && (USB_ZERO)] || ( y )[!(y) && (USB_ETH)] || ( y )[!(y) && (USB_G_SERIAL)]"
        }
    ],
    "USB_R8A66597": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_RENESAS_USBHS_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_RENESAS_USBHS)",
            "restrict": ""
        }
    ],
    "USB_RENESAS_USB3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_RENESAS || COMPILE_TEST) && (EXTCON)",
            "restrict": ""
        }
    ],
    "USB_PXA27X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_S3C2410": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_S3C24XX)",
            "restrict": ""
        }
    ],
    "USB_S3C2410_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_S3C2410)",
            "restrict": ""
        }
    ],
    "USB_S3C_HSUDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_S3C24XX)",
            "restrict": ""
        }
    ],
    "USB_MV_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_MV_U3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_SNP_CORE": [
        {
            "type": "tristate",
            "rev_select": "USB_SNP_UDC_PLAT || USB_AMD5536UDC",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (( USB_AMD5536UDC || USB_SNP_UDC_PLAT )) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_SNP_UDC_PLAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_GADGET && OF && HAS_DMA) && (EXTCON || EXTCON = n)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "USB_M66592": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_BDC_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_GADGET && HAS_DMA)",
            "restrict": "( ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "USB_AMD5536UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_PCI && HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_FSL_QE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (FSL_SOC && ( QUICC_ENGINE || CPM )) && (! 64BIT || BROKEN)",
            "restrict": ""
        }
    ],
    "USB_NET2272": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "USB_NET2272_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_NET2272 && HAS_DMA)",
            "restrict": ""
        }
    ],
    "USB_NET2280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_PCI)",
            "restrict": ""
        }
    ],
    "USB_GOKU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_PCI)",
            "restrict": ""
        }
    ],
    "USB_EG20T": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_PCI)",
            "restrict": ""
        }
    ],
    "USB_GADGET_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (HAS_DMA) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "USB_MAX3420_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (SPI)",
            "restrict": ""
        }
    ],
    "USB_TEGRA_XUDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_TEGRA || COMPILE_TEST) && (PHY_TEGRA_XUSB)",
            "restrict": ""
        }
    ],
    "USB_ASPEED_UDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_ASPEED || COMPILE_TEST) && (USB_LIBCOMPOSITE)",
            "restrict": ""
        }
    ],
    "USB_ASPEED_VHUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (ARCH_ASPEED || COMPILE_TEST) && (USB_LIBCOMPOSITE)",
            "restrict": ""
        }
    ],
    "USB_DUMMY_HCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB = y || ( USB = m && USB_GADGET = m ))",
            "restrict": ""
        }
    ],
    "USB_LIBCOMPOSITE": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS || USB_CONFIGFS_F_UAC1 || USB_CONFIGFS_F_UAC1_LEGACY || USB_CONFIGFS_F_UAC2 || USB_CONFIGFS_F_MIDI || USB_CONFIGFS_F_TCM || USB_ZERO || USB_AUDIO || USB_ETH || USB_ETH_RNDIS || USB_ETH_EEM || USB_G_NCM || USB_FUNCTIONFS || USB_MASS_STORAGE || USB_GADGET_TARGET || USB_G_SERIAL || USB_MIDI_GADGET || USB_G_PRINTER || USB_CDC_COMPOSITE || USB_G_NOKIA || USB_G_ACM_MS || USB_G_MULTI || USB_G_HID || USB_G_DBGP || USB_G_WEBCAM",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_GADGET)",
            "restrict": ""
        }
    ],
    "USB_F_ACM": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_ACM || USB_G_SERIAL || USB_CDC_COMPOSITE || USB_G_NOKIA || USB_G_ACM_MS || USB_G_MULTI",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_SS_LB": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_LB_SS || USB_ZERO",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_U_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_SERIAL || USB_CONFIGFS_ACM || USB_CONFIGFS_OBEX || USB_G_SERIAL || USB_CDC_COMPOSITE || USB_G_NOKIA || USB_G_ACM_MS || USB_G_MULTI || USB_G_DBGP_SERIAL",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_U_ETHER": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_NCM || USB_CONFIGFS_ECM || USB_CONFIGFS_ECM_SUBSET || USB_CONFIGFS_RNDIS || USB_CONFIGFS_EEM || USB_CONFIGFS_PHONET || USB_ETH || USB_G_NCM || USB_FUNCTIONFS_ETH || USB_FUNCTIONFS_RNDIS || USB_CDC_COMPOSITE || USB_G_NOKIA || USB_G_MULTI",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_U_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_UAC1 || USB_CONFIGFS_F_UAC2 || USB_AUDIO[( USB_F_UAC2 || USB_F_UAC1 )]",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_SERIAL || USB_G_SERIAL",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_OBEX": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_OBEX || USB_G_SERIAL || USB_G_NOKIA",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_NCM": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_NCM || USB_G_NCM",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_ECM": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_ECM || USB_ETH || USB_FUNCTIONFS_ETH || USB_CDC_COMPOSITE || USB_G_NOKIA || USB_G_MULTI_CDC",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_PHONET": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_PHONET || USB_G_NOKIA",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_EEM": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_EEM || USB_ETH_EEM",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_SUBSET": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_ECM_SUBSET || USB_ETH || USB_FUNCTIONFS_ETH",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_RNDIS": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_RNDIS || USB_ETH_RNDIS || USB_FUNCTIONFS_RNDIS || USB_G_MULTI_RNDIS",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_MASS_STORAGE": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_MASS_STORAGE || USB_MASS_STORAGE || USB_G_NOKIA || USB_G_ACM_MS || USB_G_MULTI",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_FS": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_FS || USB_FUNCTIONFS",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_UAC1": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_UAC1 || USB_AUDIO[( GADGET_UAC1 && ! GADGET_UAC1_LEGACY )]",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_UAC1_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_UAC1_LEGACY || USB_AUDIO[( GADGET_UAC1 && GADGET_UAC1_LEGACY )]",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_UAC2": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_UAC2 || USB_AUDIO[! GADGET_UAC1]",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_UVC": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_UVC || USB_G_WEBCAM",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_MIDI": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_MIDI || USB_MIDI_GADGET",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_HID": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_HID || USB_G_HID",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_PRINTER": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_PRINTER || USB_G_PRINTER",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_F_TCM": [
        {
            "type": "tristate",
            "rev_select": "USB_CONFIGFS_F_TCM || USB_GADGET_TARGET",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_SERIAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_ACM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_OBEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_NCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (NET)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_ECM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (NET)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_ECM_SUBSET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (NET)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_RNDIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (NET)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_EEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (NET)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_PHONET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (NET) && (PHONET)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_MASS_STORAGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (BLOCK)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_LB_SS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_UAC1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (SND)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_UAC1_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (SND)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_UAC2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (SND)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_MIDI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (SND)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_HID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_UVC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS) && (VIDEO_DEV) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_PRINTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_CONFIGFS)",
            "restrict": ""
        }
    ],
    "USB_CONFIGFS_F_TCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (TARGET_CORE) && (USB_CONFIGFS)",
            "restrict": ""
        }
    ],
    "USB_ZERO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_ZERO_HNPTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_ZERO && USB_OTG)",
            "restrict": ""
        }
    ],
    "USB_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (SND)",
            "restrict": ""
        }
    ],
    "GADGET_UAC1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_AUDIO)",
            "restrict": ""
        }
    ],
    "GADGET_UAC1_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (GADGET_UAC1)",
            "restrict": ""
        }
    ],
    "USB_ETH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (NET)",
            "restrict": ""
        }
    ],
    "USB_ETH_RNDIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_ETH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_ETH_EEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_ETH)",
            "restrict": ""
        }
    ],
    "USB_G_NCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (NET)",
            "restrict": ""
        }
    ],
    "USB_GADGETFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_FUNCTIONFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_FUNCTIONFS_ETH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_FUNCTIONFS && NET)",
            "restrict": ""
        }
    ],
    "USB_FUNCTIONFS_RNDIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_FUNCTIONFS && NET)",
            "restrict": ""
        }
    ],
    "USB_FUNCTIONFS_GENERIC": [
        {
            "type": "bool",
            "rev_select": "USB_FUNCTIONFS[! ( USB_FUNCTIONFS_ETH || USB_FUNCTIONFS_RNDIS )]",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (USB_FUNCTIONFS)",
            "restrict": ""
        }
    ],
    "USB_MASS_STORAGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "USB_GADGET_TARGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (TARGET_CORE)",
            "restrict": ""
        }
    ],
    "USB_G_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_MIDI_GADGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (SND)",
            "restrict": ""
        }
    ],
    "USB_G_PRINTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_CDC_COMPOSITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( TTY ) && (NET)",
            "restrict": ""
        }
    ],
    "USB_G_NOKIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( TTY ) && (PHONET) && (BLOCK)",
            "restrict": ""
        }
    ],
    "USB_G_ACM_MS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( TTY ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "USB_G_MULTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( TTY ) && (BLOCK && NET)",
            "restrict": ""
        }
    ],
    "USB_G_MULTI_RNDIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( TTY ) && (USB_G_MULTI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "USB_G_MULTI_CDC": [
        {
            "type": "bool",
            "rev_select": "USB_G_MULTI[! USB_G_MULTI_RNDIS]",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( TTY ) && (USB_G_MULTI)",
            "restrict": ""
        }
    ],
    "USB_G_HID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "USB_G_DBGP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (TTY)",
            "restrict": ""
        }
    ],
    "USB_G_DBGP_PRINTK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( USB_G_DBGP ) && (USB_G_DBGP) && ( USB_G_DBGP_PRINTK &&  !USB_G_DBGP_SERIAL )",
            "restrict": ""
        }
    ],
    "USB_G_DBGP_SERIAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && ( USB_G_DBGP ) && (USB_G_DBGP) && ( USB_G_DBGP_SERIAL &&  !USB_G_DBGP_PRINTK )",
            "restrict": ""
        }
    ],
    "USB_G_WEBCAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "USB_RAW_GADGET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_GADGET )",
            "restrict": ""
        }
    ],
    "TYPEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "TYPEC_TCPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (USB)",
            "restrict": ""
        }
    ],
    "TYPEC_TCPCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_TCPM ) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_RT1711H": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_TCPM ) && ( TYPEC_TCPCI )",
            "restrict": ""
        }
    ],
    "TYPEC_MT6360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_TCPM ) && ( TYPEC_TCPCI ) && (MFD_MT6360)",
            "restrict": ""
        }
    ],
    "TYPEC_TCPCI_MAXIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_TCPM ) && ( TYPEC_TCPCI )",
            "restrict": ""
        }
    ],
    "TYPEC_FUSB302": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_TCPM ) && (I2C) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "TYPEC_WCOVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_TCPM ) && (ACPI) && (MFD_INTEL_PMC_BXT) && (BXT_WC_PMIC_OPREGION)",
            "restrict": ""
        }
    ],
    "TYPEC_UCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (! CPU_BIG_ENDIAN) && (USB_ROLE_SWITCH || ! USB_ROLE_SWITCH)",
            "restrict": ""
        }
    ],
    "UCSI_CCG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_UCSI ) && (I2C)",
            "restrict": ""
        }
    ],
    "UCSI_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_UCSI ) && (ACPI)",
            "restrict": ""
        }
    ],
    "UCSI_STM32G0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && ( TYPEC_UCSI ) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_TPS6598X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_ANX7411": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (I2C) && (USB_ROLE_SWITCH) && (POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "TYPEC_RT1719": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (USB_ROLE_SWITCH || ! USB_ROLE_SWITCH) && (I2C) && (POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "TYPEC_HD3SS3220": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (I2C) && (USB_ROLE_SWITCH)",
            "restrict": ""
        }
    ],
    "TYPEC_STUSB160X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (USB_ROLE_SWITCH || ! USB_ROLE_SWITCH) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_QCOM_PMIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (ARCH_QCOM || COMPILE_TEST) && (USB_ROLE_SWITCH || ! USB_ROLE_SWITCH)",
            "restrict": ""
        }
    ],
    "TYPEC_WUSB3801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_MUX_FSA4480": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_MUX_PI3USB30532": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (I2C)",
            "restrict": ""
        }
    ],
    "TYPEC_MUX_INTEL_PMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (ACPI) && (INTEL_SCU_IPC)",
            "restrict": ""
        }
    ],
    "TYPEC_DP_ALTMODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (DRM)",
            "restrict": ""
        }
    ],
    "TYPEC_NVIDIA_ALTMODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( TYPEC ) && (TYPEC_DP_ALTMODE)",
            "restrict": ""
        }
    ],
    "USB_ROLE_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "USB_CONN_GPIO || USB_CDNS_SUPPORT || USB_MTU3_DUAL_ROLE || USB_MUSB_JZ4740 || USB_MUSB_MEDIATEK || USB_DWC3[USB_DWC3_DUAL_ROLE] || USB_DWC3_MESON_G12A || USB_DWC2 || USB_CHIPIDEA || USB_QCOM_EUD || USB_RENESAS_USB3 || TYPEC_TCPM || TYPEC_TPS6598X || TYPEC_MUX_INTEL_PMC || EXTCON_AXP288 || EXTCON_INTEL_CHT_WC",
            "dep": "( USB_SUPPORT )",
            "restrict": ""
        }
    ],
    "USB_ROLES_INTEL_XHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB_SUPPORT ) && ( USB_ROLE_SWITCH ) && (ACPI && X86)",
            "restrict": ""
        }
    ],
    "MMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWRSEQ_EMMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PWRSEQ_SD8787": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (OF && ( MWIFIEX || BT_MRVL_SDIO || LIBERTAS_SDIO || WILC1000_SDIO ))",
            "restrict": ""
        }
    ],
    "PWRSEQ_SIMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (BLOCK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_BLOCK_MINORS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_BLOCK)",
            "restrict": "( 4 256 ) || ( 8 )[!(y)]"
        }
    ],
    "SDIO_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (TTY)",
            "restrict": ""
        }
    ],
    "MMC_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC )",
            "restrict": ""
        }
    ],
    "MMC_CRYPTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (BLK_INLINE_ENCRYPTION)",
            "restrict": ""
        }
    ],
    "MMC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC != n)",
            "restrict": ""
        }
    ],
    "MMC_ARMMMCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "MMC_QCOM_DML": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_ARMMMCI && QCOM_BAM_DMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_STM32_SDMMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_ARMMMCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_PXA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_PXA)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_IO_ACCESSORS": [
        {
            "type": "bool",
            "rev_select": "MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER || MMC_SDHCI_PCI || MMC_SDHCI_OF_ASPEED || MMC_SDHCI_OF_ESDHC || MMC_SDHCI_ESDHC_MCF || MMC_SDHCI_ESDHC_IMX || MMC_SDHCI_DOVE || MMC_SDHCI_TEGRA || MMC_SDHCI_IPROC || MMC_SDHCI_ST || MMC_SDHCI_MSM || MMC_SDHCI_SPRD || MMC_SDHCI_AM654",
            "dep": "( MMC ) && (MMC_SDHCI)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER": [
        {
            "type": "bool",
            "rev_select": "MMC_SDHCI_OF_HLWD",
            "dep": "( MMC ) && (MMC_SDHCI)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI && PCI)",
            "restrict": ""
        }
    ],
    "MMC_RICOH_MMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_SDHCI_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI && ACPI && PCI)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_PLTFM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_ARASAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF && OF_ADDRESS)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_ASPEED_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_OF_ASPEED && KUNIT) && (( MMC_SDHCI_OF_ASPEED = m || KUNIT = y ))",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "MMC_SDHCI_OF_AT91": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_ESDHC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (PPC || ARCH_MXC || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_HLWD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (PPC)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_DWCMSHC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OF_SPARX5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (ARCH_SPARX5 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_CNS3XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_CNS3XXX || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_ESDHC_MCF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (M5441x) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_ESDHC_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_MXC || COMPILE_TEST) && (MMC_SDHCI_PLTFM) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_DOVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_DOVE || MACH_DOVE || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_TEGRA || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_S3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI) && (PLAT_SAMSUNG || ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_PXAV3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (HAVE_CLK) && (MMC_SDHCI_PLTFM) && (ARCH_BERLIN || ARCH_MMP || ARCH_MVEBU || COMPILE_TEST)",
            "restrict": "( CPU_MMP2 )[!(y)]"
        }
    ],
    "MMC_SDHCI_PXAV2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (HAVE_CLK) && (MMC_SDHCI_PLTFM) && (ARCH_MMP || COMPILE_TEST)",
            "restrict": "( CPU_PXA910 )[!(y)]"
        }
    ],
    "MMC_SDHCI_SPEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI) && (PLAT_SPEAR || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_S3C_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_S3C)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_BCM_KONA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_BCM_MOBILE || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_F_SDH30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF || ACPI)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_MILBEAUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_BCM2835 || ARCH_BCM_IPROC || ARCH_BRCMSTB || COMPILE_TEST) && (MMC_SDHCI_PLTFM) && (OF || ACPI)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "MMC_MESON_GX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_MESON || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "MMC_MESON_MX_SDHC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (( ARM && ARCH_MESON ) || COMPILE_TEST) && (COMMON_CLK) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_MESON_MX_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_MESON || COMPILE_TEST) && (COMMON_CLK) && (OF_ADDRESS)",
            "restrict": ""
        }
    ],
    "MMC_MOXART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_MOXART || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_ST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_STI || FSP2 || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_OMAP) && (TPS65010 || ! MACH_OMAP_H2)",
            "restrict": ""
        }
    ],
    "MMC_OMAP_HS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_OMAP2PLUS || ARCH_KEYSTONE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_WBSD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ISA_DMA_API)",
            "restrict": ""
        }
    ],
    "MMC_ALCOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MISC_ALCOR_PCI)",
            "restrict": ""
        }
    ],
    "MMC_AU1X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "MMC_ATMELMCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_AT91)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_MSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_QCOM || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_MXC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_MXC || PPC_MPC512x)",
            "restrict": ""
        }
    ],
    "MMC_MXS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_MXS && MXS_DMA)",
            "restrict": ""
        }
    ],
    "MMC_TIFM_SD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PCI)",
            "restrict": ""
        }
    ],
    "MMC_MVSDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PLAT_ORION || ( COMPILE_TEST && ARM )) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_DAVINCI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MMC_S3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_S3C24XX || COMPILE_TEST) && (S3C24XX_DMAC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_S3C_HW_SDIO_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_S3C)",
            "restrict": ""
        }
    ],
    "MMC_S3C_PIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && ( ( MMC_S3C ) ) && ( MMC_S3C_PIO &&  !MMC_S3C_DMA )",
            "restrict": ""
        }
    ],
    "MMC_S3C_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MMC ) && ( ( MMC_S3C ) ) && ( MMC_S3C_DMA &&  !MMC_S3C_PIO )",
            "restrict": ""
        }
    ],
    "MMC_SDRICOH_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PCI && PCMCIA)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_SPRD || COMPILE_TEST) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_TMIO_CORE": [
        {
            "type": "tristate",
            "rev_select": "MMC_TMIO || MMC_SDHI || MMC_UNIPHIER",
            "dep": "( MMC )",
            "restrict": ""
        }
    ],
    "MMC_TMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MFD_TMIO || MFD_ASIC3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (SUPERH || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHI_SYS_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHI)",
            "restrict": "( MMC_SDHI )[!(y) && (( SUPERH || ARM ))]"
        }
    ],
    "MMC_SDHI_INTERNAL_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARM64 || ARCH_R7S9210 || ARCH_R8A77470 || COMPILE_TEST) && (MMC_SDHI)",
            "restrict": "( MMC_SDHI )[!(y) && (( ARM64 || ARCH_R7S9210 || ARCH_R8A77470 ))]"
        }
    ],
    "MMC_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "MMC_CB710": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PCI)",
            "restrict": ""
        }
    ],
    "MMC_VIA_SDMMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PCI)",
            "restrict": ""
        }
    ],
    "MMC_CAVIUM_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "MMC_CAVIUM_THUNDERX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PCI && 64BIT && ( ARM64 || COMPILE_TEST )) && (GPIO_THUNDERX) && (OF_ADDRESS)",
            "restrict": ""
        }
    ],
    "MMC_DW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARC || ARM || ARM64 || MIPS || RISCV || CSKY || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_DW_PLTFM": [
        {
            "type": "tristate",
            "rev_select": "MMC_DW_BLUEFIELD || MMC_DW_EXYNOS || MMC_DW_HI3798CV200 || MMC_DW_K3 || MMC_DW_ROCKCHIP",
            "dep": "( MMC ) && (MMC_DW)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_DW_BLUEFIELD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_DW)",
            "restrict": ""
        }
    ],
    "MMC_DW_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_DW)",
            "restrict": ""
        }
    ],
    "MMC_DW_HI3798CV200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_DW)",
            "restrict": ""
        }
    ],
    "MMC_DW_K3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_DW)",
            "restrict": ""
        }
    ],
    "MMC_DW_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_DW && PCI)",
            "restrict": ""
        }
    ],
    "MMC_DW_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_DW && ARCH_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "MMC_SH_MMCIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (SUPERH || ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_JZ4740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MIPS)",
            "restrict": ""
        }
    ],
    "MMC_VUB300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (USB)",
            "restrict": ""
        }
    ],
    "MMC_USHC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (USB)",
            "restrict": ""
        }
    ],
    "MMC_WMT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_VT8500)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_USDHI6ROL0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "MMC_REALTEK_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MISC_RTSX_PCI)",
            "restrict": ""
        }
    ],
    "MMC_REALTEK_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MISC_RTSX_USB)",
            "restrict": ""
        }
    ],
    "MMC_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_SUNXI || COMPILE_TEST) && (SUNXI_CCU)",
            "restrict": ""
        }
    ],
    "MMC_CQHCI": [
        {
            "type": "tristate",
            "rev_select": "MMC_SDHCI_PCI || MMC_SDHCI_OF_ARASAN || MMC_SDHCI_ESDHC_IMX || MMC_SDHCI_TEGRA || MMC_SDHCI_MSM || MMC_MTK || MMC_SDHCI_BRCMSTB || MMC_SDHCI_AM654",
            "dep": "( MMC ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "MMC_HSQ": [
        {
            "type": "tristate",
            "rev_select": "MMC_SDHCI_SPRD",
            "dep": "( MMC )",
            "restrict": ""
        }
    ],
    "MMC_TOSHIBA_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (PCI)",
            "restrict": ""
        }
    ],
    "MMC_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_BCM2835 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_MTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (HAS_DMA) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_MICROCHIP_PIC32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI && PIC32MZDA && MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (ARCH_BRCMSTB || BMIPS_GENERIC) && (MMC_SDHCI_PLTFM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MMC_SDHCI_XENON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM && OF)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_AM654": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (MMC_SDHCI_PLTFM && OF)",
            "restrict": ""
        }
    ],
    "MMC_OWL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (HAS_DMA) && (ARCH_ACTIONS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMC_SDHCI_EXTERNAL_DMA": [
        {
            "type": "bool",
            "rev_select": "MMC_SDHCI_OMAP[DMA_ENGINE]",
            "dep": "( MMC )",
            "restrict": ""
        }
    ],
    "MMC_LITEX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MMC ) && (( ( PPC_MICROWATT || LITEX ) && OF && HAVE_CLK ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SCSI_UFSHCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SCSI && SCSI_DMA)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_BSG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD )",
            "restrict": ""
        }
    ],
    "SCSI_UFS_CRYPTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (BLK_INLINE_ENCRYPTION)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_HPB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD )",
            "restrict": ""
        }
    ],
    "SCSI_UFS_FAULT_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (FAULT_INJECTION)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD = HWMON || HWMON = y)",
            "restrict": ""
        }
    ],
    "SCSI_UFSHCD_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (PCI)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_DWC_TC_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD_PCI)",
            "restrict": ""
        }
    ],
    "SCSI_UFSHCD_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_CDNS_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD_PLATFORM)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_DWC_TC_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD_PLATFORM)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD_PLATFORM && ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD_PLATFORM && ARCH_MEDIATEK)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_HISI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (( ARCH_HISI || COMPILE_TEST ) && SCSI_UFSHCD_PLATFORM)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_RENESAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (( ARCH_RENESAS || COMPILE_TEST ) && SCSI_UFSHCD_PLATFORM)",
            "restrict": ""
        }
    ],
    "SCSI_UFS_TI_J721E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (OF && HAS_IOMEM && ( ARCH_K3 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "SCSI_UFS_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SCSI_UFSHCD ) && (SCSI_UFSHCD_PLATFORM && ( ARCH_EXYNOS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "MEMSTICK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMSTICK_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMSTICK )",
            "restrict": ""
        }
    ],
    "MEMSTICK_UNSAFE_RESUME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMSTICK )",
            "restrict": ""
        }
    ],
    "MSPRO_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MS_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MEMSTICK_TIFM_MS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (PCI)",
            "restrict": ""
        }
    ],
    "MEMSTICK_JMICRON_38X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (PCI)",
            "restrict": ""
        }
    ],
    "MEMSTICK_R592": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (PCI)",
            "restrict": ""
        }
    ],
    "MEMSTICK_REALTEK_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (MISC_RTSX_PCI)",
            "restrict": ""
        }
    ],
    "MEMSTICK_REALTEK_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMSTICK ) && (MISC_RTSX_USB)",
            "restrict": ""
        }
    ],
    "LEDS_GPIO_REGISTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "NEW_LEDS": [
        {
            "type": "bool",
            "rev_select": "TS5500 || ADB_PMU_LED || INPUT_WISTRON_BTNS || SENSORS_APPLESMC || IR_REDRAT3 || IR_TTUSBIR || IR_WINBOND_CIR || BACKLIGHT_ADP8860 || BACKLIGHT_ADP8870 || BACKLIGHT_LM3639 || SND_CTL_LED[SND_CTL_LED] || SND_USB_TONEPORT || HID_LENOVO || HID_WACOM || HT16K33 || HUAWEI_WMI || YOGABOOK_WMI || ACER_WMI || ASUS_LAPTOP || ASUS_WIRELESS || ASUS_WMI || EEEPC_LAPTOP || DELL_LAPTOP || FUJITSU_LAPTOP || HP_ACCEL || IDEAPAD_LAPTOP || THINKPAD_ACPI || SAMSUNG_LAPTOP || ACPI_TOSHIBA || LG_LAPTOP || SYSTEM76_ACPI || TOPSTAR_LAPTOP",
            "dep": "",
            "restrict": ""
        }
    ],
    "LEDS_CLASS": [
        {
            "type": "tristate",
            "rev_select": "TS5500 || ADB_PMU_LED || INPUT_WISTRON_BTNS || SENSORS_APPLESMC || IR_REDRAT3 || IR_TTUSBIR || IR_WINBOND_CIR || BACKLIGHT_ADP8860 || BACKLIGHT_ADP8870 || BACKLIGHT_LM3639 || SND_HDA_GENERIC[SND_HDA_GENERIC_LEDS] || SND_USB_TONEPORT || HID_LENOVO || HID_WACOM || HT16K33 || HUAWEI_WMI || YOGABOOK_WMI || ACER_WMI || ASUS_LAPTOP || ASUS_WIRELESS || ASUS_WMI || EEEPC_LAPTOP || DELL_LAPTOP || FUJITSU_LAPTOP || HP_ACCEL || IDEAPAD_LAPTOP || THINKPAD_ACPI || SAMSUNG_LAPTOP || ACPI_TOSHIBA || LG_LAPTOP || SYSTEM76_ACPI || TOPSTAR_LAPTOP",
            "dep": "( NEW_LEDS )",
            "restrict": ""
        }
    ],
    "LEDS_CLASS_FLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_CLASS_MULTICOLOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_BRIGHTNESS_HW_CHANGED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "LEDS_AN30259A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C && OF)",
            "restrict": ""
        }
    ],
    "LEDS_APU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (X86 && DMI)",
            "restrict": ""
        }
    ],
    "LEDS_ARIEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (( MACH_MMP3_DT && MFD_ENE_KB3930 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_AW2013": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C && OF)",
            "restrict": ""
        }
    ],
    "LEDS_BCM6328": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_BCM6358": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_CPCAP) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_CR0014114": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SPI) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_EL15203000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SPI) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_TURRIS_OMNIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS_MULTICOLOR) && (I2C) && (MACH_ARMADA_38X || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_LM3530": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_LM3532": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_LM3533": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_LM3533)",
            "restrict": ""
        }
    ],
    "LEDS_LM3642": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C)",
            "restrict": ""
        }
    ],
    "LEDS_LM3692X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C && OF)",
            "restrict": ""
        }
    ],
    "LEDS_LOCOMO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SHARP_LOCOMO)",
            "restrict": ""
        }
    ],
    "LEDS_MIKROTIK_RB532": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MIKROTIK_RB532)",
            "restrict": ""
        }
    ],
    "LEDS_MT6323": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_MT6397)",
            "restrict": ""
        }
    ],
    "LEDS_S3C24XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (ARCH_S3C24XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_NET48XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SCx200_GPIO)",
            "restrict": ""
        }
    ],
    "LEDS_WRAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SCx200_GPIO)",
            "restrict": ""
        }
    ],
    "LEDS_COBALT_QUBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MIPS_COBALT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_COBALT_RAQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS = y && ( MIPS_COBALT || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "LEDS_SUNFIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SPARC64)",
            "restrict": ""
        }
    ],
    "LEDS_IPAQ_MICRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_IPAQ_MICRO)",
            "restrict": ""
        }
    ],
    "LEDS_HP6XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SH_HP6XX)",
            "restrict": ""
        }
    ],
    "LEDS_PCA9532": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C && INPUT)",
            "restrict": ""
        }
    ],
    "LEDS_PCA9532_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_PCA9532) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "LEDS_GPIO": [
        {
            "type": "tristate",
            "rev_select": "MERAKI_MX100 || PCENGINES_APU2",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_LP3944": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_LP3952": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "LEDS_LP50XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && REGMAP_I2C) && (LEDS_CLASS_MULTICOLOR || ! LEDS_CLASS_MULTICOLOR)",
            "restrict": ""
        }
    ],
    "LEDS_LP55XX_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (LEDS_CLASS_MULTICOLOR || ! LEDS_CLASS_MULTICOLOR) && (OF) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_LP5521": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C) && (LEDS_LP55XX_COMMON)",
            "restrict": ""
        }
    ],
    "LEDS_LP5523": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C) && (LEDS_LP55XX_COMMON)",
            "restrict": ""
        }
    ],
    "LEDS_LP5562": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C) && (LEDS_LP55XX_COMMON)",
            "restrict": ""
        }
    ],
    "LEDS_LP8501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C) && (LEDS_LP55XX_COMMON)",
            "restrict": ""
        }
    ],
    "LEDS_LP8788": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_LP8788)",
            "restrict": ""
        }
    ],
    "LEDS_LP8860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C && OF)",
            "restrict": ""
        }
    ],
    "LEDS_CLEVO_MAIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && BROKEN) && (X86 && SERIO_I8042 && DMI)",
            "restrict": ""
        }
    ],
    "LEDS_PCA955X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_PCA955X_GPIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_PCA955X) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "LEDS_PCA963X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_WM831X_STATUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "LEDS_WM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "LEDS_DA903X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (PMIC_DA903X)",
            "restrict": ""
        }
    ],
    "LEDS_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "LEDS_DAC124S085": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SPI)",
            "restrict": ""
        }
    ],
    "LEDS_PWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (PWM)",
            "restrict": ""
        }
    ],
    "LEDS_REGULATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "LEDS_BD2802": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_INTEL_SS4200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (PCI && DMI) && (X86)",
            "restrict": ""
        }
    ],
    "LEDS_LT3593": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_ADP5520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (PMIC_ADP5520)",
            "restrict": ""
        }
    ],
    "LEDS_MC13783": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "LEDS_NS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MACH_KIRKWOOD || MACH_ARMADA_370 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LEDS_NETXBIG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (MACH_KIRKWOOD || COMPILE_TEST) && (OF_GPIO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LEDS_ASIC3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS = y) && (MFD_ASIC3)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LEDS_TCA6507": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C)",
            "restrict": ""
        }
    ],
    "LEDS_TLC591XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C)",
            "restrict": ""
        }
    ],
    "LEDS_MAX77650": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && MFD_MAX77650)",
            "restrict": ""
        }
    ],
    "LEDS_MAX8997": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && MFD_MAX8997)",
            "restrict": ""
        }
    ],
    "LEDS_LM355x": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C)",
            "restrict": ""
        }
    ],
    "LEDS_OT200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && HAS_IOMEM && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "LEDS_MENF21BMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && MFD_MENF21BMC)",
            "restrict": ""
        }
    ],
    "LEDS_IS31FL319X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C)",
            "restrict": ""
        }
    ],
    "LEDS_IS31FL32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && I2C && OF)",
            "restrict": ""
        }
    ],
    "LEDS_SC27XX_BLTC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && MFD_SC27XX_PMIC) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_BLINKM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (I2C)",
            "restrict": ""
        }
    ],
    "LEDS_POWERNV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (PPC_POWERNV) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_SYSCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS = y) && (MFD_SYSCON) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_PM8058": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (MFD_PM8XXX) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_MLXCPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (X86 && DMI) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_MLXREG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_USER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_NIC78BX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (X86 && ACPI)",
            "restrict": ""
        }
    ],
    "LEDS_SPI_BYTE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SPI) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_TI_LMU_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (REGMAP)",
            "restrict": ""
        }
    ],
    "LEDS_LM3697": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_TI_LMU_COMMON) && (I2C && OF)",
            "restrict": ""
        }
    ],
    "LEDS_LM36274": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_TI_LMU_COMMON) && (MFD_TI_LMU)",
            "restrict": ""
        }
    ],
    "LEDS_TPS6105X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (TPS6105X)",
            "restrict": "( y )[!(y) && (TPS6105X)]"
        }
    ],
    "LEDS_IP30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (SGI_MFD_IOC3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_ACER_A500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS && MFD_ACER_A500_EC)",
            "restrict": ""
        }
    ],
    "LEDS_BCM63138": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS) && (ARCH_BCM4908 || ARCH_BCM_5301X || BCM63XX || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": "( ARCH_BCM4908 )[!(y)]"
        }
    ],
    "LEDS_LGM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (X86 || COMPILE_TEST) && (GPIOLIB && LEDS_CLASS && MFD_SYSCON && OF)",
            "restrict": ""
        }
    ],
    "LEDS_AAT1290": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS) && (GPIOLIB || COMPILE_TEST) && (OF) && (PINCTRL)",
            "restrict": ""
        }
    ],
    "LEDS_AS3645A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (I2C) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_KTD2692": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (OF) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_LM3601X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (LEDS_CLASS && I2C)",
            "restrict": ""
        }
    ],
    "LEDS_MAX77693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS) && (MFD_MAX77693) && (OF)",
            "restrict": ""
        }
    ],
    "LEDS_MT6360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (LEDS_CLASS && OF) && (LEDS_CLASS_FLASH || ! LEDS_CLASS_FLASH) && (LEDS_CLASS_MULTICOLOR || ! LEDS_CLASS_MULTICOLOR) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS) && (MFD_MT6360)",
            "restrict": ""
        }
    ],
    "LEDS_RT4505": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (I2C && OF) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_RT8515": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (GPIOLIB) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_SGM3140": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_FLASH ) && (V4L2_FLASH_LED_CLASS || ! V4L2_FLASH_LED_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_PWM_MULTICOLOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_MULTICOLOR ) && (PWM)",
            "restrict": ""
        }
    ],
    "LEDS_QCOM_LPG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_CLASS_MULTICOLOR ) && (OF) && (PWM) && (SPMI)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGERS": [
        {
            "type": "bool",
            "rev_select": "BT_LEDS || MAC80211_LEDS || ADB_PMU_LED_DISK || IWLEGACY || IWLWIFI_LEDS || SND_CTL_LED[SND_CTL_LED] || HID_WACOM || LEDS_COBALT_RAQ || LEDS_SUNFIRE || HUAWEI_WMI || ASUS_WMI || DELL_LAPTOP || THINKPAD_ACPI || SYSTEM76_ACPI",
            "dep": "( NEW_LEDS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_TIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_ONESHOT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_DISK": [
        {
            "type": "bool",
            "rev_select": "ADB_PMU_LED_DISK",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS ) && (ATA)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS ) && (MTD)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_HEARTBEAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_BACKLIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS ) && (! PREEMPT_RT)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_ACTIVITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_DEFAULT_ON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_TRANSIENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_CAMERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_PANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_NETDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS ) && (NET)",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_PATTERN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "SND_CTL_LED[SND_CTL_LED] || HUAWEI_WMI || ASUS_WMI || DELL_LAPTOP || THINKPAD_ACPI",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS )",
            "restrict": ""
        }
    ],
    "LEDS_TRIGGER_TTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && ( LEDS_TRIGGERS ) && (TTY)",
            "restrict": ""
        }
    ],
    "LEDS_SIEMENS_SIMATIC_IPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NEW_LEDS ) && (LEDS_GPIO) && (SIEMENS_SIMATIC_IPC)",
            "restrict": ""
        }
    ],
    "ACCESSIBILITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "A11Y_BRAILLE_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && (VT) && (SERIAL_CORE_CONSOLE)",
            "restrict": ""
        }
    ],
    "SPEAKUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && (VT)",
            "restrict": ""
        }
    ],
    "SPEAKUP_SERIALIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP ) && (ISA || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SPEAKUP_SYNTH_ACNTSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_ACNTPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP ) && (SPEAKUP_SERIALIO)",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_APOLLO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_AUDPTR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_BNS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_DECTLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_DECEXT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_DECPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP ) && (m) && (SPEAKUP_SERIALIO)",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_DTLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP ) && (SPEAKUP_SERIALIO)",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_KEYPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP ) && (SPEAKUP_SERIALIO)",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_LTLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_SOFT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_SPKOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_TXPRT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "SPEAKUP_SYNTH_DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ACCESSIBILITY ) && ( SPEAKUP )",
            "restrict": ""
        }
    ],
    "INFINIBAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && HAS_DMA) && (NET) && (INET) && (m || IPV6 != m) && (! ALPHA)",
            "restrict": ""
        }
    ],
    "INFINIBAND_USER_MAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND)",
            "restrict": ""
        }
    ],
    "INFINIBAND_USER_ACCESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (MMU)",
            "restrict": ""
        }
    ],
    "INFINIBAND_USER_MEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_USER_ACCESS != n) && (MMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INFINIBAND_ON_DEMAND_PAGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_USER_MEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INFINIBAND_ADDR_TRANS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INFINIBAND_ADDR_TRANS_CONFIGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_ADDR_TRANS && CONFIGFS_FS && ! ( INFINIBAND = y && CONFIGFS_FS = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INFINIBAND_VIRT_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND )",
            "restrict": "( ! HIGHMEM )[!(y)]"
        }
    ],
    "INFINIBAND_BNXT_RE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (64BIT) && (INET && DCB && BNXT)",
            "restrict": ""
        }
    ],
    "INFINIBAND_CXGB4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (CHELSIO_T4 && INET) && (INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_EFA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (PCI_MSI && 64BIT && ! CPU_BIG_ENDIAN) && (INFINIBAND_USER_ACCESS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_ERDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (PCI_MSI && 64BIT) && (INFINIBAND_ADDR_TRANS) && (INFINIBAND_USER_ACCESS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_HFI1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (X86_64 && INFINIBAND_RDMAVT && I2C && ! UML)",
            "restrict": ""
        }
    ],
    "HFI1_DEBUG_SDMA_ORDER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INFINIBAND_HFI1)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SDMA_VERBOSITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INFINIBAND_HFI1)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INFINIBAND_HNS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (NET_VENDOR_HISILICON) && (ARM64 || ( COMPILE_TEST && 64BIT )) && (( HNS_DSAF && HNS_ENET ) || HNS3)",
            "restrict": ""
        }
    ],
    "INFINIBAND_HNS_HIP08": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INFINIBAND_HNS && PCI && HNS3) && (INFINIBAND_HNS = m || HNS3 = y)",
            "restrict": ""
        }
    ],
    "INFINIBAND_IRDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INET) && (IPV6 || ! IPV6) && (PCI) && (ICE && I40E)",
            "restrict": ""
        }
    ],
    "MLX4_INFINIBAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (NETDEVICES && ETHERNET && PCI && INET)",
            "restrict": ""
        }
    ],
    "MLX5_INFINIBAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (NETDEVICES && ETHERNET && PCI && MLX5_CORE)",
            "restrict": ""
        }
    ],
    "INFINIBAND_MTHCA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (PCI)",
            "restrict": ""
        }
    ],
    "INFINIBAND_MTHCA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INFINIBAND_MTHCA)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "INFINIBAND_OCRDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (ETHERNET && NETDEVICES && PCI && INET && ( IPV6 || IPV6 = n ))",
            "restrict": ""
        }
    ],
    "INFINIBAND_QEDR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (64BIT && QEDE) && (PCI)",
            "restrict": ""
        }
    ],
    "INFINIBAND_QIB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (64BIT && INFINIBAND_RDMAVT) && (PCI)",
            "restrict": ""
        }
    ],
    "INFINIBAND_QIB_DCA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INFINIBAND_QIB && DCA && SMP && ! ( INFINIBAND_QIB = y && DCA = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INFINIBAND_USNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (NETDEVICES && ETHERNET && INET && PCI && INTEL_IOMMU) && (INFINIBAND_USER_ACCESS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_VMWARE_PVRDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (NETDEVICES && ETHERNET && PCI && INET && VMXNET3)",
            "restrict": ""
        }
    ],
    "INFINIBAND_RDMAVT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INFINIBAND_VIRT_DMA) && (X86_64) && (PCI)",
            "restrict": ""
        }
    ],
    "RDMA_RXE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INET && PCI && INFINIBAND) && (INFINIBAND_VIRT_DMA)",
            "restrict": ""
        }
    ],
    "RDMA_SIW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && ( INFINIBAND_USER_ACCESS || ! INFINIBAND_USER_ACCESS ) && (INET && INFINIBAND && LIBCRC32C) && (INFINIBAND_VIRT_DMA)",
            "restrict": ""
        }
    ],
    "INFINIBAND_IPOIB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (NETDEVICES && INET && ( IPV6 || IPV6 = n ))",
            "restrict": ""
        }
    ],
    "INFINIBAND_IPOIB_CM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_IPOIB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INFINIBAND_IPOIB_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_IPOIB)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "INFINIBAND_IPOIB_DEBUG_DATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_IPOIB_DEBUG)",
            "restrict": ""
        }
    ],
    "INFINIBAND_SRP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (SCSI && INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_SRPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND && INFINIBAND_ADDR_TRANS && TARGET_CORE)",
            "restrict": ""
        }
    ],
    "INFINIBAND_ISER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (SCSI && INET && INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_ISERT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INET && INFINIBAND_ADDR_TRANS && TARGET_CORE && ISCSI_TARGET)",
            "restrict": ""
        }
    ],
    "INFINIBAND_RTRS": [
        {
            "type": "tristate",
            "rev_select": "INFINIBAND_RTRS_CLIENT || INFINIBAND_RTRS_SERVER",
            "dep": "( INFINIBAND ) && (INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_RTRS_CLIENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_RTRS_SERVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (INFINIBAND_ADDR_TRANS)",
            "restrict": ""
        }
    ],
    "INFINIBAND_OPA_VNIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INFINIBAND ) && (X86_64 && INFINIBAND)",
            "restrict": ""
        }
    ],
    "EDAC_ATOMIC_SCRUB": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "EDAC_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "EDAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && EDAC_SUPPORT && RAS)",
            "restrict": ""
        }
    ],
    "EDAC_LEGACY_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EDAC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC )",
            "restrict": ""
        }
    ],
    "EDAC_DECODE_MCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (CPU_SUP_AMD && X86_MCE_AMD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EDAC_GHES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (ACPI_APEI_GHES && ( EDAC = y ))",
            "restrict": ""
        }
    ],
    "EDAC_AMD64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (AMD_NB && EDAC_DECODE_MCE)",
            "restrict": ""
        }
    ],
    "EDAC_AL_MC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (( ARCH_ALPINE || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "EDAC_AMD76X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_32)",
            "restrict": ""
        }
    ],
    "EDAC_E7XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_32)",
            "restrict": ""
        }
    ],
    "EDAC_E752X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_I82443BXGX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_32) && (BROKEN)",
            "restrict": ""
        }
    ],
    "EDAC_I82875P": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_32)",
            "restrict": ""
        }
    ],
    "EDAC_I82975X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_I3000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_I3200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_IE31200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_X38": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_I5400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86)",
            "restrict": ""
        }
    ],
    "EDAC_I7CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86 && X86_MCE_INTEL)",
            "restrict": ""
        }
    ],
    "EDAC_I82860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_32)",
            "restrict": ""
        }
    ],
    "EDAC_R82600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_32)",
            "restrict": ""
        }
    ],
    "EDAC_I5000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "EDAC_I5100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "EDAC_I7300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (X86 && PCI)",
            "restrict": ""
        }
    ],
    "EDAC_SBRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_64 && X86_MCE_INTEL && PCI_MMCONFIG)",
            "restrict": ""
        }
    ],
    "EDAC_SKX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_64 && X86_MCE_INTEL && PCI_MMCONFIG && ACPI) && (ACPI_NFIT || ! ACPI_NFIT)",
            "restrict": ""
        }
    ],
    "EDAC_I10NM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_64 && X86_MCE_INTEL && PCI_MMCONFIG && ACPI) && (ACPI_NFIT || ! ACPI_NFIT)",
            "restrict": ""
        }
    ],
    "EDAC_PND2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && X86_64 && X86_MCE_INTEL)",
            "restrict": ""
        }
    ],
    "EDAC_IGEN6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && PCI_MMCONFIG && ARCH_HAVE_NMI_SAFE_CMPXCHG) && (X86_64 && X86_MCE_INTEL)",
            "restrict": ""
        }
    ],
    "EDAC_MPC85XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (FSL_SOC && EDAC = y)",
            "restrict": ""
        }
    ],
    "EDAC_LAYERSCAPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_LAYERSCAPE || SOC_LS1021A)",
            "restrict": ""
        }
    ],
    "EDAC_PASEMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PPC_PASEMI && PCI)",
            "restrict": ""
        }
    ],
    "EDAC_CELL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PPC_CELL_COMMON)",
            "restrict": ""
        }
    ],
    "EDAC_PPC4XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (4xx)",
            "restrict": ""
        }
    ],
    "EDAC_AMD8131": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && PPC_MAPLE)",
            "restrict": ""
        }
    ],
    "EDAC_AMD8111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && PPC_MAPLE)",
            "restrict": ""
        }
    ],
    "EDAC_CPC925": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PPC64)",
            "restrict": ""
        }
    ],
    "EDAC_HIGHBANK_MC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_HIGHBANK)",
            "restrict": ""
        }
    ],
    "EDAC_HIGHBANK_L2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_HIGHBANK)",
            "restrict": ""
        }
    ],
    "EDAC_OCTEON_PC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (CPU_CAVIUM_OCTEON)",
            "restrict": ""
        }
    ],
    "EDAC_OCTEON_L2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "EDAC_OCTEON_LMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "EDAC_OCTEON_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (PCI && CAVIUM_OCTEON_SOC)",
            "restrict": ""
        }
    ],
    "EDAC_THUNDERX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARM64) && (PCI)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC = y && ARCH_INTEL_SOCFPGA)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_SDRAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_L2C": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && CACHE_L2X0)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_OCRAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && SRAM && GENERIC_ALLOCATOR)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_ETHERNET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_NAND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && MTD_NAND_DENALI)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && PL330_DMA = y)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_USB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && USB_DWC2)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_QSPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && SPI_CADENCE_QUADSPI)",
            "restrict": ""
        }
    ],
    "EDAC_ALTERA_SDMMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC_ALTERA = y && MMC_DW)",
            "restrict": ""
        }
    ],
    "EDAC_SIFIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (EDAC = y && SIFIVE_L2)",
            "restrict": ""
        }
    ],
    "EDAC_ARMADA_XP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( EDAC ) && (MACH_MVEBU_V7)",
            "restrict": ""
        }
    ],
    "EDAC_SYNOPSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_ZYNQ || ARCH_ZYNQMP || ARCH_INTEL_SOCFPGA || ARCH_MXC)",
            "restrict": ""
        }
    ],
    "EDAC_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (( ARM64 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "EDAC_TI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_KEYSTONE || SOC_DRA7XX)",
            "restrict": ""
        }
    ],
    "EDAC_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_QCOM && QCOM_LLCC)",
            "restrict": ""
        }
    ],
    "EDAC_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARCH_ASPEED)",
            "restrict": ""
        }
    ],
    "EDAC_BLUEFIELD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARM64 && ( ( MELLANOX_PLATFORM && ACPI ) || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "EDAC_DMC520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EDAC ) && (ARM64)",
            "restrict": ""
        }
    ],
    "RTC_LIB": [
        {
            "type": "bool",
            "rev_select": "X86 || ADB_CUDA || ADB_PMU || RTC_MC146818_LIB || RTC_CLASS || CROS_USBPD_LOGGER",
            "dep": "",
            "restrict": ""
        }
    ],
    "RTC_MC146818_LIB": [
        {
            "type": "bool",
            "rev_select": "X86 || RTC_DRV_CMOS || RTC_DRV_ALPHA",
            "dep": "",
            "restrict": ""
        }
    ],
    "RTC_CLASS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! S390)",
            "restrict": ""
        }
    ],
    "RTC_HCTOSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_HCTOSYS_DEVICE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_HCTOSYS)",
            "restrict": "( \"rtc0\" )[!(y)]"
        }
    ],
    "RTC_SYSTOHC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_SYSTOHC_DEVICE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_SYSTOHC)",
            "restrict": "( RTC_HCTOSYS_DEVICE )[!(y) && (RTC_HCTOSYS)] || ( \"rtc0\" )[!(y)]"
        }
    ],
    "RTC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": ""
        }
    ],
    "RTC_LIB_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "RTC_NVMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": "( RTC_CLASS )[!(y)]"
        }
    ],
    "RTC_INTF_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SYSFS)",
            "restrict": "( RTC_CLASS )[!(y)]"
        }
    ],
    "RTC_INTF_PROC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PROC_FS)",
            "restrict": "( RTC_CLASS )[!(y)]"
        }
    ],
    "RTC_INTF_DEV": [
        {
            "type": "bool",
            "rev_select": "RTC_DRV_AB8500",
            "dep": "( RTC_CLASS )",
            "restrict": "( RTC_CLASS )[!(y)]"
        }
    ],
    "RTC_INTF_DEV_UIE_EMUL": [
        {
            "type": "bool",
            "rev_select": "RTC_DRV_AB8500",
            "dep": "( RTC_CLASS ) && (RTC_INTF_DEV)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": ""
        }
    ],
    "RTC_DRV_88PM860X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_88PM860X)",
            "restrict": ""
        }
    ],
    "RTC_DRV_88PM80X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_88PM800)",
            "restrict": ""
        }
    ],
    "RTC_DRV_ABB5ZES3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_ABEOZ9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_ABX80X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_AC100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_AC100)",
            "restrict": ""
        }
    ],
    "RTC_DRV_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (ARCH_BRCMSTB || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "RTC_DRV_AS3722": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_AS3722)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1307": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1307_CENTURY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (RTC_DRV_DS1307)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RTC_DRV_DS1374": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1374_WDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (RTC_DRV_DS1374 && WATCHDOG)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1672": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_HYM8563": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_LP8788": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_LP8788)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX6900": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX8907": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_MAX8907 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX8925": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_MAX8925)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_MAX8998)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX8997": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_MAX8997)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX77686": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_MAX77686 || MFD_MAX77620 || MFD_MAX77714 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_NCT3018Y": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RK808": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_RK808)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RS5C372": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_ISL1208": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_ISL12022": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_ISL12026": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_X1205": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCF8523": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCF85063": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCF85363": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCF8563": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCF8583": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_M41T80": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_M41T80_WDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (RTC_DRV_M41T80)",
            "restrict": ""
        }
    ],
    "RTC_DRV_BD70528": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_ROHM_BD71828)",
            "restrict": ""
        }
    ],
    "RTC_DRV_BQ32K": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DM355EVM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_DM355EVM_MSP)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TWL92330": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MENELAUS)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TWL4030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (TWL4030_CORE) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PALMAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TPS6586X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_TPS6586X)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TPS65910": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_TPS65910)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RC5T583": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_RC5T583)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RC5T619": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_RN5T618)",
            "restrict": ""
        }
    ],
    "RTC_DRV_S35390A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_FM3130": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RX8010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RX8581": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RX8025": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_EM3027": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RV3028": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RV3032": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RV8803": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_S5M": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C ) && (MFD_SEC_CORE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SD3078": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( I2C )",
            "restrict": ""
        }
    ],
    "RTC_DRV_M41T93": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_M41T94": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1302": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER ) && (SPI)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1305": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1343": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1347": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX6916": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_R9701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RX4581": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_RS5C348": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_MAX6902": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCF2123": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_DRV_MCP795": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( SPI_MASTER )",
            "restrict": ""
        }
    ],
    "RTC_I2C_AND_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": "( m )[!(y) && (I2C = m)] || ( y )[!(y) && (I2C = y)] || ( y )[!(y) && (SPI_MASTER = y)]"
        }
    ],
    "RTC_DRV_DS3232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS3232_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_DRV_DS3232 && HWMON && ! ( RTC_DRV_DS3232 = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_DRV_PCF2127": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RV3029C2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RV3029_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_DRV_RV3029C2 && HWMON) && (! ( RTC_DRV_RV3029C2 = y && HWMON = m ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_DRV_RX6110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (RTC_I2C_AND_SPI)",
            "restrict": ""
        }
    ],
    "RTC_DRV_CMOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (X86 || ARM || PPC || MIPS || SPARC64)",
            "restrict": "( y )[!(y) && (X86)]"
        }
    ],
    "RTC_DRV_ALPHA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ALPHA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_DRV_DS1216": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SNI_RM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1286": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1511": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1553": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1685_FAMILY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1685": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( ( RTC_DRV_DS1685_FAMILY ) ) && ( RTC_DRV_DS1685 &&  !RTC_DRV_DS1689 &&  !RTC_DRV_DS17285 &&  !RTC_DRV_DS17485 &&  !RTC_DRV_DS17885 )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1689": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( ( RTC_DRV_DS1685_FAMILY ) ) && ( RTC_DRV_DS1689 &&  !RTC_DRV_DS1685 &&  !RTC_DRV_DS17285 &&  !RTC_DRV_DS17485 &&  !RTC_DRV_DS17885 )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS17285": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( ( RTC_DRV_DS1685_FAMILY ) ) && ( RTC_DRV_DS17285 &&  !RTC_DRV_DS1685 &&  !RTC_DRV_DS1689 &&  !RTC_DRV_DS17485 &&  !RTC_DRV_DS17885 )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS17485": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( ( RTC_DRV_DS1685_FAMILY ) ) && ( RTC_DRV_DS17485 &&  !RTC_DRV_DS1685 &&  !RTC_DRV_DS1689 &&  !RTC_DRV_DS17285 &&  !RTC_DRV_DS17885 )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS17885": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && ( ( RTC_DRV_DS1685_FAMILY ) ) && ( RTC_DRV_DS17885 &&  !RTC_DRV_DS1685 &&  !RTC_DRV_DS1689 &&  !RTC_DRV_DS17285 &&  !RTC_DRV_DS17485 )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS1742": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DS2404": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": ""
        }
    ],
    "RTC_DRV_DA9052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PMIC_DA9052)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DA9055": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_DA9055)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DA9063": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_DA9063 || MFD_DA9062)",
            "restrict": ""
        }
    ],
    "RTC_DRV_EFI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (EFI && ! X86)",
            "restrict": ""
        }
    ],
    "RTC_DRV_STK17TA8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_M48T86": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_M48T35": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_M48T59": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MSM6242": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_BQ4802": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RP5C01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_V3020": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS )",
            "restrict": ""
        }
    ],
    "RTC_DRV_GAMECUBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (GAMECUBE || WII || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "RTC_DRV_WM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_WM8350)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SC27XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_SC27XX_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SPEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PLAT_SPEAR || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_DRV_PCF50633": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_PCF50633)",
            "restrict": ""
        }
    ],
    "RTC_DRV_AB8500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (AB8500_CORE)",
            "restrict": ""
        }
    ],
    "RTC_DRV_OPAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PPC_POWERNV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_DRV_OPTEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (OPTEE)",
            "restrict": ""
        }
    ],
    "RTC_DRV_ZYNQMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "RTC_DRV_NTXEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_NTXEC)",
            "restrict": ""
        }
    ],
    "RTC_DRV_ASM9260": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MACH_ASM9260 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DAVINCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_DAVINCI_DM365 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_DIGICOLOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_DIGICOLOR || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_IMXDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MXC) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_FSL_FTM_ALARM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_LAYERSCAPE || SOC_LS1021A || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (( ARM && ARCH_MESON ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MESON_VRTC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": "( m )[!(y) && (ARCH_MESON)]"
        }
    ],
    "RTC_DRV_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_OMAP || ARCH_DAVINCI || COMPILE_TEST) && (OF) && (PINCTRL)",
            "restrict": ""
        }
    ],
    "RTC_DRV_S3C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_EXYNOS || ARCH_S3C64XX || ARCH_S3C24XX || ARCH_S5PV210 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_EP93XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SA1100": [
        {
            "type": "tristate",
            "rev_select": "RTC_DRV_PXA",
            "dep": "( RTC_CLASS ) && (ARCH_SA1100 || ARCH_PXA || ARCH_MMP)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SUPERH || ARCH_RENESAS)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SUNPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SOC_SP7021)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PL030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PL031": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "RTC_DRV_AT91RM9200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_AT91 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_AT91SAM9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_AT91 || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_AU1XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MIPS_ALCHEMY)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RS5C313": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SH_LANDISK)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RZN1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_RZN1 || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PARISC || M68K || PPC || SUPERH || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PXA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_PXA)",
            "restrict": ""
        }
    ],
    "RTC_DRV_VT8500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_VT8500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SUN4V": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SUN6I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (COMMON_CLK) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": "( MACH_SUN6I || MACH_SUN8I )[!(y)]"
        }
    ],
    "RTC_DRV_SUNXI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MACH_SUN4I || MACH_SUN7I || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_STARFIRE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_DOVE || ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_ARMADA38X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MVEBU || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_FTRTC010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": "( ARCH_GEMINI )[!(y)]"
        }
    ],
    "RTC_DRV_PS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PPC_PS3)",
            "restrict": ""
        }
    ],
    "RTC_DRV_STMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MXS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (EZX_PCAP)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MC13XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_MC13XXX)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MPC5121": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (PPC_MPC512x || PPC_MPC52xx)",
            "restrict": ""
        }
    ],
    "RTC_DRV_JZ4740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MIPS || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_LPC24XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_LPC18XX || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_LPC32XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PM8XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_PM8XXX || MFD_SPMI_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_LOONGSON1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MACH_LOONGSON32)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MXC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MXC_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_SNVS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_IMX_SC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (IMX_SCU) && (HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "RTC_DRV_ST_LPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_STI) && (OF)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MOXART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MOXART || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MT2712": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_MT6397": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_MT6397 || ( COMPILE_TEST && IRQ_DOMAIN ))",
            "restrict": ""
        }
    ],
    "RTC_DRV_MT7622": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM) && (ARCH_XGENE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_PIC32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MACH_PIC32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTC_DRV_R7301": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_CPCAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (MFD_CPCAP)",
            "restrict": ""
        }
    ],
    "RTC_DRV_RTD119X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_REALTEK || COMPILE_TEST)",
            "restrict": "( ARCH_REALTEK )[!(y)]"
        }
    ],
    "RTC_DRV_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (OF) && (ARCH_ASPEED || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_TI_K3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_HID_SENSOR_TIME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (USB_HID) && (HID_SENSOR_HUB && IIO)",
            "restrict": ""
        }
    ],
    "RTC_DRV_GOLDFISH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RTC_DRV_WILCO_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (WILCO_EC)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "RTC_DRV_MSC313": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (ARCH_MSTARV7 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RTC_DRV_POLARFIRE_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RTC_CLASS ) && (SOC_MICROCHIP_POLARFIRE)",
            "restrict": ""
        }
    ],
    "DMADEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_DMA)",
            "restrict": ""
        }
    ],
    "DMADEVICES_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMADEVICES != n)",
            "restrict": ""
        }
    ],
    "DMADEVICES_VDEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMADEVICES_DEBUG != n)",
            "restrict": ""
        }
    ],
    "ASYNC_TX_ENABLE_CHANNEL_SWITCH": [
        {
            "type": "bool",
            "rev_select": "AMCC_PPC440SPE_ADMA || FSL_DMA || FSL_QDMA || INTEL_IOP_ADMA || MV_XOR || MV_XOR_V2 || XGENE_DMA || MTK_CQDMA",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "ARCH_HAS_ASYNC_TX_FIND_CHANNEL": [
        {
            "type": "bool",
            "rev_select": "AMCC_PPC440SPE_ADMA",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "DMA_ENGINE": [
        {
            "type": "bool",
            "rev_select": "RAPIDIO_DMA_ENGINE || PATA_ARASAN_CF || DRM_ZYNQMP_DPSUB || SND_SOC_SH4_SIU || DMA_OF || ALTERA_MSGDMA || AMBA_PL08X || AMCC_PPC440SPE_ADMA || APPLE_ADMAC || AT_HDMAC || AT_XDMAC || AXI_DMAC || BCM_SBA_RAID || DMA_BCM2835 || DMA_JZ4780 || DMA_SA11X0 || DMA_SUN4I || DMA_SUN6I || DW_AXI_DMAC || EP93XX_DMA || FSL_DMA || FSL_EDMA || FSL_QDMA || FSL_RAID || HISI_DMA || IMG_MDC_DMA || IMX_DMA || IMX_SDMA || INTEL_IDMA64 || INTEL_IDXD || INTEL_IOATDMA || INTEL_IOP_ADMA || K3_DMA || MCF_EDMA || MILBEAUT_HDMAC || MILBEAUT_XDMAC || MMP_PDMA || MMP_TDMA || MOXART_DMA || MPC512X_DMA || MV_XOR || MV_XOR_V2 || MXS_DMA || MX3_IPU || NBPFAXI_DMA || OWL_DMA || PCH_DMA || PL330_DMA || PXA_DMA || PLX_DMA || STE_DMA40 || ST_FDMA || STM32_DMA || STM32_MDMA || SPRD_DMA || S3C24XX_DMAC || TXX9_DMAC || TEGRA186_GPC_DMA || TEGRA20_APB_DMA || TEGRA210_ADMA || TIMB_DMA || UNIPHIER_MDMAC || UNIPHIER_XDMAC || XGENE_DMA || XILINX_DMA || XILINX_ZYNQMP_DMA || XILINX_ZYNQMP_DPDMA || MTK_HSDMA || MTK_CQDMA || MTK_UART_APDMA || AMD_PTDMA || QCOM_ADM || QCOM_BAM_DMA || QCOM_GPI_DMA || QCOM_HIDMA_MGMT || QCOM_HIDMA || DW_DMAC_CORE || DW_EDMA || HSU_DMA || SF_PDMA || RENESAS_DMA || TI_CPPI41 || TI_EDMA || DMA_OMAP || TI_K3_UDMA || FSL_DPAA2_QDMA || INTEL_LDMA || CRYPTO_DEV_SP_CCP",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "DMA_VIRTUAL_CHANNELS": [
        {
            "type": "tristate",
            "rev_select": "AMBA_PL08X || AXI_DMAC || DMA_BCM2835 || DMA_JZ4780 || DMA_SA11X0 || DMA_SUN4I || DMA_SUN6I || DW_AXI_DMAC || FSL_EDMA || FSL_QDMA || HISI_DMA || IMG_MDC_DMA || IMX_SDMA || INTEL_IDMA64 || K3_DMA || MCF_EDMA || MILBEAUT_HDMAC || MILBEAUT_XDMAC || MOXART_DMA || OWL_DMA || PXA_DMA || ST_FDMA || STM32_DMA || STM32_MDMA || SPRD_DMA || S3C24XX_DMAC || TEGRA210_ADMA || UNIPHIER_MDMAC || UNIPHIER_XDMAC || XILINX_ZYNQMP_DPDMA || MTK_HSDMA || MTK_CQDMA || MTK_UART_APDMA || AMD_PTDMA || QCOM_ADM || QCOM_BAM_DMA || QCOM_GPI_DMA || DW_EDMA || HSU_DMA || SF_PDMA || RENESAS_USB_DMAC || RZ_DMAC || TI_EDMA || DMA_OMAP || TI_K3_UDMA || FSL_DPAA2_QDMA || INTEL_LDMA",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "DMA_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMA_OF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ALTERA_MSGDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "AMBA_PL08X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "AMCC_PPC440SPE_ADMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (440SPe || 440SP)",
            "restrict": ""
        }
    ],
    "APPLE_ADMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "AT_HDMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_AT91)",
            "restrict": ""
        }
    ],
    "AT_XDMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_AT91)",
            "restrict": ""
        }
    ],
    "AXI_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MICROBLAZE || NIOS2 || ARCH_ZYNQ || ARCH_ZYNQMP || ARCH_INTEL_SOCFPGA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM_SBA_RAID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM64 || COMPILE_TEST) && (MAILBOX && RAID6_PQ)",
            "restrict": "( m )[!(y) && (ARCH_BCM_IPROC)]"
        }
    ],
    "DMA_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_BCM2835)",
            "restrict": ""
        }
    ],
    "DMA_JZ4780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DMA_SA11X0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_SA1100 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DMA_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MACH_SUN4I || MACH_SUN5I || MACH_SUN7I)",
            "restrict": "( ( MACH_SUN4I || MACH_SUN5I || MACH_SUN7I ) )[!(y)]"
        }
    ],
    "DMA_SUN6I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_SUNXI || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "DW_AXI_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (OF || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "EP93XX_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_EP93XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FSL_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "FSL_EDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (OF)",
            "restrict": ""
        }
    ],
    "FSL_QDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM || ARM64)",
            "restrict": ""
        }
    ],
    "FSL_RAID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (FSL_SOC && ! ASYNC_TX_ENABLE_CHANNEL_SWITCH)",
            "restrict": ""
        }
    ],
    "HISI_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM64 || COMPILE_TEST) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "IMG_MDC_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MIPS || COMPILE_TEST) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "IMX_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "IMX_SDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MXC)",
            "restrict": ""
        }
    ],
    "INTEL_IDMA64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_IDXD_BUS": [
        {
            "type": "tristate",
            "rev_select": "INTEL_IDXD_COMPAT",
            "dep": "( DMADEVICES )",
            "restrict": "( INTEL_IDXD )[!(y)]"
        }
    ],
    "INTEL_IDXD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PCI && X86_64 && ! UML) && (PCI_MSI) && (PCI_PASID) && (SBITMAP)",
            "restrict": ""
        }
    ],
    "INTEL_IDXD_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PCI && X86_64)",
            "restrict": ""
        }
    ],
    "INTEL_IDXD_SVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (INTEL_IDXD) && (INTEL_IOMMU_SVM) && (PCI_PRI) && (PCI_PASID) && (PCI_IOV)",
            "restrict": ""
        }
    ],
    "INTEL_IDXD_PERFMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (INTEL_IDXD)",
            "restrict": ""
        }
    ],
    "INTEL_IOATDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PCI && X86_64 && ! UML)",
            "restrict": ""
        }
    ],
    "INTEL_IOP_ADMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_IOP32X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "K3_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_HI3xxx || ARCH_HISI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LPC18XX_DMAMUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_LPC18XX || COMPILE_TEST) && (OF && AMBA_PL08X)",
            "restrict": ""
        }
    ],
    "MCF_EDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (M5441x || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MILBEAUT_HDMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MILBEAUT || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "MILBEAUT_XDMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MILBEAUT || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "MMP_PDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MMP || ARCH_PXA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MMP_TDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MOXART_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MOXART)",
            "restrict": ""
        }
    ],
    "MPC512X_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PPC_MPC512x || PPC_MPC831x)",
            "restrict": ""
        }
    ],
    "MV_XOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PLAT_ORION || ARCH_MVEBU || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MV_XOR_V2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM64)",
            "restrict": ""
        }
    ],
    "MXS_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MXS || ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MX3_IPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MXC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MX3_IPU_IRQS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MX3_IPU)",
            "restrict": "( 2 137 ) || ( 4 )[!(y)]"
        }
    ],
    "NBPFAXI_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OWL_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_ACTIONS)",
            "restrict": ""
        }
    ],
    "PCH_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PCI && ( X86_32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PL330_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "PXA_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (( ARCH_MMP || ARCH_PXA ))",
            "restrict": ""
        }
    ],
    "PLX_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PCI)",
            "restrict": ""
        }
    ],
    "STE_DMA40": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_U8500)",
            "restrict": ""
        }
    ],
    "ST_FDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_STI) && (REMOTEPROC)",
            "restrict": ""
        }
    ],
    "STM32_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STM32_DMAMUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (STM32_DMA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STM32_MDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_STM32 || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "SPRD_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "S3C24XX_DMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_S3C24XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TXX9_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MACH_TX49XX)",
            "restrict": ""
        }
    ],
    "TEGRA186_GPC_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (( ARCH_TEGRA || COMPILE_TEST ) && ARCH_DMA_ADDR_T_64BIT) && (IOMMU_API)",
            "restrict": ""
        }
    ],
    "TEGRA20_APB_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TEGRA210_ADMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (( ARCH_TEGRA_210_SOC || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "TIMB_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (MFD_TIMBERDALE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "UNIPHIER_MDMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "UNIPHIER_XDMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "XGENE_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_XGENE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "XILINX_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (( ARCH_ZYNQ || MICROBLAZE || ARM64 ))",
            "restrict": ""
        }
    ],
    "XILINX_ZYNQMP_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_ZYNQ || MICROBLAZE || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "XILINX_ZYNQMP_DPDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PPC_BESTCOMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PPC_MPC52xx)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PPC_BESTCOMM_ATA": [
        {
            "type": "tristate",
            "rev_select": "PATA_MPC52xx",
            "dep": "( DMADEVICES ) && (PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "PPC_BESTCOMM_FEC": [
        {
            "type": "tristate",
            "rev_select": "FEC_MPC52xx",
            "dep": "( DMADEVICES ) && (PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "PPC_BESTCOMM_GEN_BD": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_MPC5200_I2S || SND_SOC_MPC5200_AC97",
            "dep": "( DMADEVICES ) && (PPC_BESTCOMM)",
            "restrict": ""
        }
    ],
    "MTK_HSDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_CQDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_UART_APDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (OF && SERIAL_8250_MT6577)",
            "restrict": ""
        }
    ],
    "AMD_PTDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (X86_64 && PCI)",
            "restrict": ""
        }
    ],
    "QCOM_ADM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (( ARCH_QCOM || COMPILE_TEST ) && ! PHYS_ADDR_T_64BIT)",
            "restrict": ""
        }
    ],
    "QCOM_BAM_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_QCOM || ( COMPILE_TEST && OF && ARM ))",
            "restrict": ""
        }
    ],
    "QCOM_GPI_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "QCOM_HIDMA_MGMT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "QCOM_HIDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "DW_DMAC_CORE": [
        {
            "type": "tristate",
            "rev_select": "SATA_DWC_OLD_DMA || SERIAL_8250_LPSS[SERIAL_8250_DMA] || SND_SOC_INTEL_CATPT || DW_DMAC || DW_DMAC_PCI",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "DW_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RZN1_DMAMUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (DW_DMAC) && (ARCH_RZN1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DW_DMAC_PCI": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_8250_LPSS[( SERIAL_8250_DMA && X86_INTEL_LPSS )]",
            "dep": "( DMADEVICES ) && (PCI) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "DW_EDMA": [
        {
            "type": "tristate",
            "rev_select": "DW_EDMA_PCIE",
            "dep": "( DMADEVICES ) && (PCI && PCI_MSI)",
            "restrict": ""
        }
    ],
    "DW_EDMA_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (PCI && PCI_MSI)",
            "restrict": ""
        }
    ],
    "HSU_DMA": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_8250_MID[SERIAL_8250_DMA]",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "HSU_DMA_PCI": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_8250_MID[( HSU_DMA && X86_INTEL_MID )]",
            "dep": "( DMADEVICES ) && (HSU_DMA && PCI)",
            "restrict": ""
        }
    ],
    "SF_PDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RENESAS_DMA": [
        {
            "type": "bool",
            "rev_select": "SH_DMAE_BASE || RCAR_DMAC || RENESAS_USB_DMAC || RZ_DMAC",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "SH_DMAE_BASE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (SUPERH || COMPILE_TEST) && (! SUPERH || SH_DMA) && (! SH_DMA_API)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SH_DMAE": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SH4_SIU",
            "dep": "( DMADEVICES ) && (SH_DMAE_BASE)",
            "restrict": ""
        }
    ],
    "RCAR_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RENESAS_USB_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RZ_DMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_RZG2L || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TI_CPPI41": [
        {
            "type": "tristate",
            "rev_select": "USB_TI_CPPI41_DMA",
            "dep": "( DMADEVICES ) && (( ARCH_OMAP || ARCH_DAVINCI_DA8XX ))",
            "restrict": ""
        }
    ],
    "TI_EDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_DAVINCI || ARCH_OMAP || ARCH_KEYSTONE || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMA_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_OMAP || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TI_K3_UDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_K3) && (TI_SCI_PROTOCOL) && (TI_SCI_INTA_IRQCHIP)",
            "restrict": ""
        }
    ],
    "TI_K3_UDMA_GLUE_LAYER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARCH_K3) && (TI_K3_UDMA)",
            "restrict": ""
        }
    ],
    "TI_K3_PSIL": [
        {
            "type": "bool",
            "rev_select": "TI_K3_UDMA",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "TI_DMA_CROSSBAR": [
        {
            "type": "bool",
            "rev_select": "TI_EDMA[( ARCH_OMAP || COMPILE_TEST )] || DMA_OMAP[( SOC_DRA7XX || COMPILE_TEST )]",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "FSL_DPAA2_QDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (ARM64) && (FSL_MC_BUS && FSL_MC_DPIO)",
            "restrict": ""
        }
    ],
    "INTEL_LDMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ASYNC_TX_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (DMA_ENGINE)",
            "restrict": ""
        }
    ],
    "DMATEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DMADEVICES ) && (DMA_ENGINE)",
            "restrict": ""
        }
    ],
    "DMA_ENGINE_RAID": [
        {
            "type": "bool",
            "rev_select": "AMCC_PPC440SPE_ADMA || BCM_SBA_RAID || FSL_QDMA || FSL_RAID || INTEL_IOATDMA || MV_XOR || MV_XOR_V2 || XGENE_DMA || DMATEST",
            "dep": "( DMADEVICES )",
            "restrict": ""
        }
    ],
    "SYNC_FILE": [
        {
            "type": "bool",
            "rev_select": "DRM || DRM_I915 || DRM_MSM || DRM_ETNAVIV",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SW_SYNC": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "(SYNC_FILE) && (DEBUG_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "UDMABUF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMA_SHARED_BUFFER) && (MEMFD_CREATE || COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DMABUF_MOVE_NOTIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMA_SHARED_BUFFER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DMABUF_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMA_SHARED_BUFFER)",
            "restrict": "( y )[!(y) && (DMA_API_DEBUG)]"
        }
    ],
    "DMABUF_SELFTESTS": [
        {
            "type": "tristate",
            "rev_select": "DRM_I915_DEBUG",
            "dep": "(DMA_SHARED_BUFFER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DMABUF_HEAPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMABUF_SYSFS_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMA_SHARED_BUFFER)",
            "restrict": ""
        }
    ],
    "DMABUF_HEAPS_SYSTEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMABUF_HEAPS)",
            "restrict": ""
        }
    ],
    "DMABUF_HEAPS_CMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMABUF_HEAPS && DMA_CMA)",
            "restrict": ""
        }
    ],
    "DCA": [
        {
            "type": "tristate",
            "rev_select": "INTEL_IOATDMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "AUXDISPLAY": [
        {
            "type": "bool",
            "rev_select": "PANEL",
            "dep": "",
            "restrict": ""
        }
    ],
    "CHARLCD": [
        {
            "type": "tristate",
            "rev_select": "HD44780_COMMON || LCD2S",
            "dep": "( AUXDISPLAY )",
            "restrict": ""
        }
    ],
    "LINEDISP": [
        {
            "type": "tristate",
            "rev_select": "IMG_ASCII_LCD || HT16K33",
            "dep": "( AUXDISPLAY )",
            "restrict": ""
        }
    ],
    "HD44780_COMMON": [
        {
            "type": "tristate",
            "rev_select": "HD44780 || PARPORT_PANEL",
            "dep": "( AUXDISPLAY )",
            "restrict": ""
        }
    ],
    "HD44780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KS0108": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (PARPORT_PC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KS0108_PORT": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (KS0108)",
            "restrict": "( 0x378 )[!(y)]"
        }
    ],
    "KS0108_DELAY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (KS0108)",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "CFAG12864B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (X86) && (FB) && (KS0108)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CFAG12864B_RATE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (CFAG12864B)",
            "restrict": "( 20 )[!(y)]"
        }
    ],
    "IMG_ASCII_LCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (HAS_IOMEM)",
            "restrict": "( y )[!(y) && (MIPS_MALTA)]"
        }
    ],
    "HT16K33": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (FB && I2C && INPUT)",
            "restrict": ""
        }
    ],
    "LCD2S": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (I2C)",
            "restrict": ""
        }
    ],
    "ARM_CHARLCD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (PLAT_VERSATILE)",
            "restrict": ""
        }
    ],
    "PARPORT_PANEL": [
        {
            "type": "tristate",
            "rev_select": "PANEL",
            "dep": "( AUXDISPLAY ) && (PARPORT)",
            "restrict": ""
        }
    ],
    "PANEL_PARPORT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL )",
            "restrict": "( 0 255 ) || ( 0 )[!(y)]"
        }
    ],
    "PANEL_PROFILE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL )",
            "restrict": "( 0 5 ) || ( 5 )[!(y)]"
        }
    ],
    "PANEL_KEYPAD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0)",
            "restrict": "( 0 3 ) || ( 0 )[!(y)]"
        }
    ],
    "PANEL_LCD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0)",
            "restrict": "( 0 5 ) || ( 0 )[!(y)]"
        }
    ],
    "PANEL_LCD_HEIGHT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 1 2 ) || ( 2 )[!(y)]"
        }
    ],
    "PANEL_LCD_WIDTH": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 1 40 ) || ( 40 )[!(y)]"
        }
    ],
    "PANEL_LCD_BWIDTH": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 1 40 ) || ( 40 )[!(y)]"
        }
    ],
    "PANEL_LCD_HWIDTH": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 1 64 ) || ( 64 )[!(y)]"
        }
    ],
    "PANEL_LCD_CHARSET": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 0 1 ) || ( 0 )[!(y)]"
        }
    ],
    "PANEL_LCD_PROTO": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 0 1 ) || ( 0 )[!(y)]"
        }
    ],
    "PANEL_LCD_PIN_E": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1 && PANEL_LCD_PROTO = 0)",
            "restrict": "( 17 17 ) || ( 14 )[!(y)]"
        }
    ],
    "PANEL_LCD_PIN_RS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1 && PANEL_LCD_PROTO = 0)",
            "restrict": "( 17 17 ) || ( 17 )[!(y)]"
        }
    ],
    "PANEL_LCD_PIN_RW": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1 && PANEL_LCD_PROTO = 0)",
            "restrict": "( 17 17 ) || ( 16 )[!(y)]"
        }
    ],
    "PANEL_LCD_PIN_SCL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1 && PANEL_LCD_PROTO != 0)",
            "restrict": "( 17 17 ) || ( 1 )[!(y)]"
        }
    ],
    "PANEL_LCD_PIN_SDA": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1 && PANEL_LCD_PROTO != 0)",
            "restrict": "( 17 17 ) || ( 2 )[!(y)]"
        }
    ],
    "PANEL_LCD_PIN_BL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( PARPORT_PANEL ) && (PANEL_PROFILE = 0 && PANEL_LCD = 1)",
            "restrict": "( 17 17 ) || ( 0 )[!(y)]"
        }
    ],
    "PANEL_CHANGE_MESSAGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (CHARLCD)",
            "restrict": "( \"n\" )[!(y)]"
        }
    ],
    "PANEL_BOOT_MESSAGE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && (PANEL_CHANGE_MESSAGE = \"y\")",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "CHARLCD_BL_OFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( CHARLCD_BL_OFF &&  !CHARLCD_BL_ON &&  !CHARLCD_BL_FLASH )",
            "restrict": ""
        }
    ],
    "CHARLCD_BL_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( CHARLCD_BL_ON &&  !CHARLCD_BL_OFF &&  !CHARLCD_BL_FLASH )",
            "restrict": ""
        }
    ],
    "CHARLCD_BL_FLASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( AUXDISPLAY ) && ( CHARLCD_BL_FLASH &&  !CHARLCD_BL_OFF &&  !CHARLCD_BL_ON )",
            "restrict": ""
        }
    ],
    "PANEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PARPORT)",
            "restrict": ""
        }
    ],
    "UIO": [
        {
            "type": "tristate",
            "rev_select": "CNIC",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "UIO_CIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "UIO_PDRV_GENIRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO )",
            "restrict": ""
        }
    ],
    "UIO_DMEM_GENIRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "UIO_AEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "UIO_SERCOS3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "UIO_PCI_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "UIO_NETX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "UIO_FSL_ELBC_GPCM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (FSL_LBC)",
            "restrict": ""
        }
    ],
    "UIO_FSL_ELBC_GPCM_NETX5152": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UIO ) && (UIO_FSL_ELBC_GPCM)",
            "restrict": ""
        }
    ],
    "UIO_PRUSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "UIO_MF624": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (PCI)",
            "restrict": ""
        }
    ],
    "UIO_HV_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (HYPERV)",
            "restrict": ""
        }
    ],
    "UIO_DFL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UIO ) && (FPGA_DFL)",
            "restrict": ""
        }
    ],
    "VFIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "VFIO_IOMMU_TYPE1": [
        {
            "type": "tristate",
            "rev_select": "VFIO[MMU && ( X86 || S390 || ARM || ARM64 )]",
            "dep": "( VFIO )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VFIO_IOMMU_SPAPR_TCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && (SPAPR_TCE_IOMMU)",
            "restrict": "( VFIO )[!(y)]"
        }
    ],
    "VFIO_SPAPR_EEH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && (EEH && VFIO_IOMMU_SPAPR_TCE)",
            "restrict": "( VFIO )[!(y)]"
        }
    ],
    "VFIO_VIRQFD": [
        {
            "type": "tristate",
            "rev_select": "VFIO_PCI_CORE || VFIO_PLATFORM",
            "dep": "( VFIO )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VFIO_NOIOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VFIO )",
            "restrict": ""
        }
    ],
    "VFIO_PCI_CORE": [
        {
            "type": "tristate",
            "rev_select": "VFIO_PCI",
            "dep": "( VFIO ) && ( PCI && MMU )",
            "restrict": ""
        }
    ],
    "VFIO_PCI_MMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU )",
            "restrict": "( y )[!(y) && (! S390)]"
        }
    ],
    "VFIO_PCI_INTX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU )",
            "restrict": "( y )[!(y) && (! S390)]"
        }
    ],
    "VFIO_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU )",
            "restrict": ""
        }
    ],
    "VFIO_PCI_VGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU ) && ( VFIO_PCI ) && (X86 && VGA_ARB)",
            "restrict": ""
        }
    ],
    "VFIO_PCI_IGD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU ) && ( VFIO_PCI ) && (X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VFIO_PCI_ZDEV_KVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU ) && (S390 && KVM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MLX5_VFIO_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU ) && (MLX5_CORE) && (VFIO_PCI_CORE)",
            "restrict": ""
        }
    ],
    "HISI_ACC_VFIO_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( PCI && MMU ) && (ARM64 || ( COMPILE_TEST && 64BIT )) && (VFIO_PCI_CORE) && (PCI_MSI) && (CRYPTO_DEV_HISI_QM) && (CRYPTO_DEV_HISI_HPRE) && (CRYPTO_DEV_HISI_SEC2) && (CRYPTO_DEV_HISI_ZIP)",
            "restrict": ""
        }
    ],
    "VFIO_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VFIO_AMBA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( VFIO_PLATFORM ) && (ARM_AMBA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VFIO_PLATFORM_CALXEDAXGMAC_RESET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( VFIO_PLATFORM )",
            "restrict": ""
        }
    ],
    "VFIO_PLATFORM_AMDXGBE_RESET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( VFIO_PLATFORM )",
            "restrict": ""
        }
    ],
    "VFIO_PLATFORM_BCMFLEXRM_RESET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && ( VFIO_PLATFORM ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "VFIO_MDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VFIO_FSL_MC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VFIO ) && (FSL_MC_BUS)",
            "restrict": ""
        }
    ],
    "IRQ_BYPASS_MANAGER": [
        {
            "type": "tristate",
            "rev_select": "KVM || VFIO_PCI_CORE || VHOST_VDPA",
            "dep": "",
            "restrict": ""
        }
    ],
    "VLYNQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( AR7 ) )",
            "restrict": ""
        }
    ],
    "VLYNQ_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( AR7 ) ) && (VLYNQ && DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "VIRT_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "VMGENID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_HV_MANAGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "VBOXGUEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (X86 && PCI && INPUT)",
            "restrict": ""
        }
    ],
    "NITRO_ENCLAVES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (( ARM64 || X86 ) && HOTPLUG_CPU && PCI && SMP)",
            "restrict": ""
        }
    ],
    "NITRO_ENCLAVES_MISC_DEV_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (NITRO_ENCLAVES && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "ACRN_HSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (ACRN_GUEST)",
            "restrict": ""
        }
    ],
    "EFI_SECRET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (EFI && X86_64)",
            "restrict": ""
        }
    ],
    "SEV_GUEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRT_DRIVERS ) && (AMD_MEM_ENCRYPT)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "VIRTIO_ANCHOR": [
        {
            "type": "bool",
            "rev_select": "VIRTIO",
            "dep": "",
            "restrict": ""
        }
    ],
    "VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "CAIF_VIRTIO || VIRTIO_CONSOLE || I2C_VIRTIO || DRM_VIRTIO_GPU || VIRTIO_PCI || VIRTIO_VDPA || VIRTIO_MMIO || REMOTEPROC || RPMSG_VIRTIO || VIRTIO_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "VIRTIO_PCI_LIB": [
        {
            "type": "tristate",
            "rev_select": "VIRTIO_PCI || VP_VDPA",
            "dep": "",
            "restrict": ""
        }
    ],
    "VIRTIO_PCI_LIB_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "VIRTIO_PCI_LEGACY || ALIBABA_ENI_VDPA",
            "dep": "",
            "restrict": ""
        }
    ],
    "VIRTIO_MENU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "VIRTIO_HARDEN_NOTIFICATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (BROKEN)",
            "restrict": ""
        }
    ],
    "VIRTIO_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (PCI)",
            "restrict": ""
        }
    ],
    "VIRTIO_PCI_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (VIRTIO_PCI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIRTIO_VDPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (VDPA)",
            "restrict": ""
        }
    ],
    "VIRTIO_PMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (VIRTIO) && (LIBNVDIMM)",
            "restrict": ""
        }
    ],
    "VIRTIO_BALLOON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "VIRTIO_MEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (X86_64 || ARM64) && (VIRTIO) && (MEMORY_HOTPLUG) && (MEMORY_HOTREMOVE) && (CONTIG_ALLOC) && (EXCLUSIVE_SYSTEM_RAM)",
            "restrict": ""
        }
    ],
    "VIRTIO_INPUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (VIRTIO) && (INPUT)",
            "restrict": ""
        }
    ],
    "VIRTIO_MMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (HAS_IOMEM && HAS_DMA)",
            "restrict": ""
        }
    ],
    "VIRTIO_MMIO_CMDLINE_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VIRTIO_MENU ) && (VIRTIO_MMIO)",
            "restrict": ""
        }
    ],
    "VIRTIO_DMA_SHARED_BUFFER": [
        {
            "type": "tristate",
            "rev_select": "DRM_VIRTIO_GPU",
            "dep": "( VIRTIO_MENU ) && (DMA_SHARED_BUFFER)",
            "restrict": ""
        }
    ],
    "VDPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "VDPA_SIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (RUNTIME_TESTING_MENU && HAS_DMA)",
            "restrict": ""
        }
    ],
    "VDPA_SIM_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (VDPA_SIM)",
            "restrict": ""
        }
    ],
    "VDPA_SIM_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (VDPA_SIM)",
            "restrict": ""
        }
    ],
    "VDPA_USER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (EVENTFD && MMU && HAS_DMA)",
            "restrict": ""
        }
    ],
    "IFCVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "MLX5_VDPA": [
        {
            "type": "bool",
            "rev_select": "MLX5_VDPA_NET",
            "dep": "( VDPA )",
            "restrict": ""
        }
    ],
    "MLX5_VDPA_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (MLX5_CORE)",
            "restrict": ""
        }
    ],
    "VP_VDPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "ALIBABA_ENI_VDPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VDPA ) && (PCI_MSI && X86)",
            "restrict": ""
        }
    ],
    "VHOST_IOTLB": [
        {
            "type": "tristate",
            "rev_select": "VDPA_USER || MLX5_VDPA || VHOST_RING || VHOST",
            "dep": "",
            "restrict": ""
        }
    ],
    "VHOST_RING": [
        {
            "type": "tristate",
            "rev_select": "CAIF_VIRTIO || VDPA_SIM || MLX5_VDPA_NET",
            "dep": "",
            "restrict": ""
        }
    ],
    "VHOST": [
        {
            "type": "tristate",
            "rev_select": "VHOST_NET || VHOST_SCSI || VHOST_VSOCK || VHOST_VDPA",
            "dep": "",
            "restrict": ""
        }
    ],
    "VHOST_MENU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "VHOST_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VHOST_MENU ) && (NET && EVENTFD && ( TUN || ! TUN ) && ( TAP || ! TAP ))",
            "restrict": ""
        }
    ],
    "VHOST_SCSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VHOST_MENU ) && (TARGET_CORE && EVENTFD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VHOST_VSOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VHOST_MENU ) && (VSOCKETS && EVENTFD)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VHOST_VDPA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( VHOST_MENU ) && (EVENTFD) && (VDPA)",
            "restrict": ""
        }
    ],
    "VHOST_CROSS_ENDIAN_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( VHOST_MENU )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HYPERV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ACPI && ( ( X86 && X86_LOCAL_APIC && HYPERVISOR_GUEST ) || ( ARM64 && ! CPU_BIG_ENDIAN ) ))",
            "restrict": ""
        }
    ],
    "HYPERV_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( HYPERV && X86 )[!(y)]"
        }
    ],
    "HYPERV_UTILS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HYPERV && CONNECTOR && NLS) && (PTP_1588_CLOCK_OPTIONAL)",
            "restrict": ""
        }
    ],
    "HYPERV_BALLOON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HYPERV)",
            "restrict": ""
        }
    ],
    "XEN_BALLOON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_BALLOON_MEMORY_HOTPLUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_BALLOON && MEMORY_HOTPLUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_MEMORY_HOTPLUG_LIMIT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_HAVE_PVMMU) && (MEMORY_HOTPLUG)",
            "restrict": "( 512 )[!(y)]"
        }
    ],
    "XEN_SCRUB_PAGES_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_BALLOON)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_DEV_EVTCHN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_BACKEND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) )",
            "restrict": "( XEN_DOM0 )[!(y)]"
        }
    ],
    "XENFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_COMPAT_XENFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XENFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_SYS_HYPERVISOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (SYSFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_XENBUS_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "NET_9P_XEN || XEN_PCIDEV_FRONTEND || XEN_BLKDEV_FRONTEND || XEN_SCSI_FRONTEND || XEN_NETDEV_FRONTEND || INPUT_XEN_KBDDEV_FRONTEND || HVC_XEN_FRONTEND || TCG_XEN || DRM_XEN_FRONTEND || XEN_FBDEV_FRONTEND || SND_XEN_FRONTEND || USB_XEN_HCD || XEN_PVCALLS_FRONTEND",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_GNTDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_GNTDEV_DMABUF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_GNTDEV && XEN_GRANT_DMA_ALLOC)",
            "restrict": ""
        }
    ],
    "XEN_GRANT_DEV_ALLOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_GRANT_DMA_ALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN && HAS_DMA)",
            "restrict": ""
        }
    ],
    "SWIOTLB_XEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_PV || ARM || ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_PCI_STUB": [
        {
            "type": "bool",
            "rev_select": "XEN_PCIDEV_STUB || XEN_PCIDEV_BACKEND",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_PCIDEV_STUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (PCI && ! X86 && XEN) && (XEN_BACKEND)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_PCIDEV_BACKEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (PCI && X86 && XEN) && (XEN_BACKEND)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_PVCALLS_FRONTEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (INET && XEN)",
            "restrict": ""
        }
    ],
    "XEN_PVCALLS_BACKEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (INET && XEN && XEN_BACKEND)",
            "restrict": ""
        }
    ],
    "XEN_SCSI_BACKEND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN && XEN_BACKEND && TARGET_CORE)",
            "restrict": ""
        }
    ],
    "XEN_PRIVCMD": [
        {
            "type": "tristate",
            "rev_select": "XENFS",
            "dep": "( ( XEN ) ) && (XEN)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_ACPI_PROCESSOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN && XEN_PV_DOM0 && X86 && ACPI_PROCESSOR && CPU_FREQ)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XEN_MCE_LOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_PV_DOM0 && X86_MCE)",
            "restrict": ""
        }
    ],
    "XEN_HAVE_PVMMU": [
        {
            "type": "bool",
            "rev_select": "XEN_PV",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_EFI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (( ARM || ARM64 || X86_64 ) && EFI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_AUTO_XLATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (ARM || ARM64 || XEN_PVHVM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (X86 && ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XEN_SYMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (X86 && XEN_DOM0 && XENFS)",
            "restrict": "( y )[!(y) && (KALLSYMS)]"
        }
    ],
    "XEN_HAVE_VPMU": [
        {
            "type": "bool",
            "rev_select": "XEN_PV",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_FRONT_PGDIR_SHBUF": [
        {
            "type": "tristate",
            "rev_select": "DRM_XEN_FRONTEND || SND_XEN_FRONTEND",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_UNPOPULATED_ALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (ZONE_DEVICE)",
            "restrict": "( XEN_BACKEND || XEN_GNTDEV || XEN_DOM0 )[!(y)]"
        }
    ],
    "XEN_GRANT_DMA_IOMMU": [
        {
            "type": "bool",
            "rev_select": "XEN_VIRTIO[OF]",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_GRANT_DMA_OPS": [
        {
            "type": "bool",
            "rev_select": "XEN_VIRTIO",
            "dep": "( ( XEN ) )",
            "restrict": ""
        }
    ],
    "XEN_VIRTIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "XEN_VIRTIO_FORCE_GRANT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( XEN ) ) && (XEN_VIRTIO)",
            "restrict": ""
        }
    ],
    "GREYBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SYSFS)",
            "restrict": ""
        }
    ],
    "GREYBUS_ES2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GREYBUS ) && (USB)",
            "restrict": ""
        }
    ],
    "COMEDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "COMEDI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_DEFAULT_BUF_SIZE_KB": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": "( 2048 )[!(y)]"
        }
    ],
    "COMEDI_DEFAULT_BUF_MAXSIZE_KB": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": "( 20480 )[!(y)]"
        }
    ],
    "COMEDI_MISC_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_BOND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_MISC_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_MISC_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PARPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_MISC_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_SSV_DNP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_MISC_DRIVERS ) && (X86_32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMEDI_ISA_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL711": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL724": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL726": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL730": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL812": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL816": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCL818": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCM3724": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_DIO200_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PC236_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PC263_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_RTI800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_RTI802": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAC02": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS16M1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS08_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS1800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS6402": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT2801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT2811": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT2814": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT2815": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT2817": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT282X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DMM32AT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_FL512": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AIO_AIO12_8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AIO_IIRO_16": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_II_PCI20KC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "COMEDI_C6XDIGIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_MPC624": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADQ12B": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_AT_A2150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_AT_AO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_ATMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_ATMIO16D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_LABPC_ISA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCMAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCMDA12": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCMMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCMUIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_MULTIQ3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_S526": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_ISA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_PCI_DRIVERS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && (PCI)",
            "restrict": ""
        }
    ],
    "COMEDI_8255_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_ADDI_APCI_1516 || COMEDI_ADDI_APCI_1564 || COMEDI_ADDI_APCI_2032 || COMEDI_ADDI_APCI_2200",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_1032": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_1500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_1516": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_1564": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_16XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_2032": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_2200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_3120": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_3501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADDI_APCI_3XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADL_PCI6208": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADL_PCI7X3X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADL_PCI8164": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADL_PCI9111": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADL_PCI9118": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_ADV_PCI1710": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADV_PCI1720": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADV_PCI1723": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADV_PCI1724": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADV_PCI1760": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ADV_PCI_DIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_DIO200_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PC236_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PC263_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PCI224": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PCI230": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_CONTEC_PCI_DIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS08_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DT3000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DYNA_PCI10XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_GSC_HPDI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_MF6X4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ICP_MULTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAQBOARD2000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_JR3_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_KE_COUNTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_CB_PCIDAS64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_CB_PCIDAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_CB_PCIDDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_CB_PCIMDAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_CB_PCIMDDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ME4000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_ME_DAQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_6527": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_65XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_660X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_NI_670X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_LABPC_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_PCIDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_NI_PCIMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_RTD520": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_S626": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_MITE": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_NI_PCIDIO || COMEDI_NI_TIOCMD",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_NI_TIOCMD": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_NI_660X || COMEDI_NI_PCIMIO",
            "dep": "( COMEDI ) && ( COMEDI_PCI_DRIVERS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "COMEDI_PCMCIA_DRIVERS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && (PCMCIA)",
            "restrict": ""
        }
    ],
    "COMEDI_CB_DAS16_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS08_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_DAQ_700_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_DAQ_DIO24_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_LABPC_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_MIO_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_QUATECH_DAQP_CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_PCMCIA_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_USB_DRIVERS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && (USB)",
            "restrict": ""
        }
    ],
    "COMEDI_DT9812": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_USB_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_USB6501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_USB_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_USBDUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_USB_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_USBDUXFAST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_USB_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_USBDUXSIGMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_USB_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_VMK80XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_USB_DRIVERS )",
            "restrict": ""
        }
    ],
    "COMEDI_8254": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_PCL711 || COMEDI_PCL812 || COMEDI_PCL816 || COMEDI_PCL818 || COMEDI_DAS16M1 || COMEDI_DAS16 || COMEDI_DAS800 || COMEDI_DAS1800 || COMEDI_DAS6402 || COMEDI_AIO_AIO12_8 || COMEDI_NI_AT_A2150 || COMEDI_NI_AT_AO || COMEDI_ADL_PCI9111 || COMEDI_ADL_PCI9118 || COMEDI_ADV_PCI1710 || COMEDI_ADV_PCI_DIO || COMEDI_AMPLC_PCI224 || COMEDI_AMPLC_PCI230 || COMEDI_CB_PCIDAS || COMEDI_CB_PCIMDAS || COMEDI_ME4000 || COMEDI_RTD520 || COMEDI_CB_DAS16_CS || COMEDI_AMPLC_DIO200 || COMEDI_DAS08 || COMEDI_NI_LABPC",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_8255": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_PCL724 || COMEDI_PCM3724 || COMEDI_DAS16M1 || COMEDI_DAS16 || COMEDI_DMM32AT || COMEDI_AIO_AIO12_8 || COMEDI_NI_ATMIO || COMEDI_NI_ATMIO16D || COMEDI_8255_PCI || COMEDI_ADV_PCI_DIO || COMEDI_AMPLC_PCI230 || COMEDI_DAQBOARD2000 || COMEDI_CB_PCIDAS64 || COMEDI_CB_PCIDAS || COMEDI_CB_PCIDDA || COMEDI_CB_PCIMDAS || COMEDI_CB_PCIMDDA || COMEDI_NI_PCIDIO || COMEDI_NI_PCIMIO || COMEDI_NI_DAQ_DIO24_CS || COMEDI_NI_MIO_CS || COMEDI_8255_SA || COMEDI_AMPLC_PC236 || COMEDI_DAS08 || COMEDI_NI_LABPC",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_8255_SA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_KCOMEDILIB": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_BOND",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_DIO200": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_AMPLC_DIO200_ISA || COMEDI_AMPLC_DIO200_PCI",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_AMPLC_PC236": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_AMPLC_PC236_ISA || COMEDI_AMPLC_PC236_PCI",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_DAS08": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_DAS08_ISA || COMEDI_DAS08_PCI || COMEDI_DAS08_CS",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_ISADMA": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_PCL812[ISA_DMA_API] || COMEDI_PCL816[ISA_DMA_API] || COMEDI_PCL818[ISA_DMA_API] || COMEDI_DAS16[ISA_DMA_API] || COMEDI_DAS1800[ISA_DMA_API] || COMEDI_DT282X[ISA_DMA_API] || COMEDI_NI_AT_A2150[ISA_DMA_API] || COMEDI_NI_LABPC_ISADMA",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_LABPC": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_NI_LABPC_ISA || COMEDI_NI_LABPC_PCI || COMEDI_NI_LABPC_CS",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_LABPC_ISADMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && (COMEDI_NI_LABPC_ISA != n) && (ISA_DMA_API)",
            "restrict": "( COMEDI_NI_LABPC )[!(y)]"
        }
    ],
    "COMEDI_NI_TIO": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_NI_ATMIO || COMEDI_NI_TIOCMD || COMEDI_NI_MIO_CS",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_NI_ROUTING": [
        {
            "type": "tristate",
            "rev_select": "COMEDI_NI_TIO || COMEDI_TESTS_NI_ROUTES",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_TESTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI )",
            "restrict": ""
        }
    ],
    "COMEDI_TESTS_EXAMPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_TESTS )",
            "restrict": ""
        }
    ],
    "COMEDI_TESTS_NI_ROUTES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMEDI ) && ( COMEDI_TESTS )",
            "restrict": ""
        }
    ],
    "STAGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PRISM2_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (WLAN && USB && CFG80211)",
            "restrict": ""
        }
    ],
    "FB_OLPC_DCON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (OLPC && FB && BROKEN) && (I2C) && (GPIO_CS5535 && ACPI)",
            "restrict": ""
        }
    ],
    "RTL8192U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (PCI && WLAN && USB) && (m)",
            "restrict": ""
        }
    ],
    "RTLLIB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (WLAN && m)",
            "restrict": ""
        }
    ],
    "RTLLIB_CRYPTO_CCMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( RTLLIB ) && (RTLLIB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTLLIB_CRYPTO_TKIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( RTLLIB ) && (RTLLIB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTLLIB_CRYPTO_WEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( RTLLIB ) && (RTLLIB)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RTL8192E": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( RTLLIB ) && (PCI && WLAN && RTLLIB) && (m)",
            "restrict": ""
        }
    ],
    "RTL8723BS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (WLAN && MMC && CFG80211) && (m)",
            "restrict": ""
        }
    ],
    "R8712U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (WLAN && USB && CFG80211)",
            "restrict": ""
        }
    ],
    "R8712_TX_AGGR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && (R8712U && BROKEN)",
            "restrict": ""
        }
    ],
    "R8188EU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (WLAN && USB && CFG80211) && (m)",
            "restrict": ""
        }
    ],
    "RTS5208": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (PCI && SCSI)",
            "restrict": ""
        }
    ],
    "OCTEON_ETHERNET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (CAVIUM_OCTEON_SOC || COMPILE_TEST) && (NETDEVICES)",
            "restrict": ""
        }
    ],
    "VT6655": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (PCI && MAC80211 && m)",
            "restrict": ""
        }
    ],
    "VT6656": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (MAC80211 && USB && WLAN && m)",
            "restrict": ""
        }
    ],
    "ADIS16203": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16240": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7816": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ADT7316": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ADT7316_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI && ADT7316)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ADT7316_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (I2C && ADT7316)",
            "restrict": ""
        }
    ],
    "AD7746": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD9832": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD9834": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD5933": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (I2C)",
            "restrict": ""
        }
    ],
    "ADE7854": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI || I2C)",
            "restrict": ""
        }
    ],
    "ADE7854_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (ADE7854 && I2C)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ADE7854_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (ADE7854 && SPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AD2S1210": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( ( IIO ) ) && (SPI) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_SM750": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB && PCI)",
            "restrict": ""
        }
    ],
    "USB_EMXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (USB_GADGET && ( ARCH_RENESAS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "MFD_NVEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (I2C && GPIOLIB && ARCH_TEGRA)",
            "restrict": ""
        }
    ],
    "KEYBOARD_NVEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (MFD_NVEC && INPUT)",
            "restrict": ""
        }
    ],
    "SERIO_NVEC_PS2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (MFD_NVEC && SERIO)",
            "restrict": ""
        }
    ],
    "NVEC_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (MFD_NVEC && POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "NVEC_PAZ00": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (MFD_NVEC && LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "STAGING_MEDIA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING )",
            "restrict": ""
        }
    ],
    "INTEL_ATOMISP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (X86 && EFI && PCI && ACPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_DEV && INTEL_ATOMISP) && (PMIC_OPREGION)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_ISP2401": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ATOMISP)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_OV2722": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_GC2235": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_MSRLIST_HELPER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (I2C)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_MT9M114": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_GC0310": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_OV2680": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_OV5693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (I2C && VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_ATOMISP_LM3554": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_ATOMISP ) && (ACPI) && (VIDEO_DEV && I2C)",
            "restrict": ""
        }
    ],
    "DVB_AV7110_IR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (RC_CORE = y || RC_CORE = DVB_AV7110)",
            "restrict": "( DVB_AV7110 )[!(y)]"
        }
    ],
    "DVB_AV7110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (DVB_CORE && PCI && I2C) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "DVB_AV7110_OSD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (DVB_AV7110)",
            "restrict": "( y )[!(y) && (DVB_AV7110 = y || DVB_AV7110 = m)]"
        }
    ],
    "DVB_BUDGET_PATCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (DVB_BUDGET_CORE && I2C) && (DVB_AV7110)",
            "restrict": ""
        }
    ],
    "DVB_SP8870": [
        {
            "type": "tristate",
            "rev_select": "DVB_AV7110[MEDIA_SUBDRV_AUTOSELECT]",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( DVB_AV7110 ) && (DVB_CORE && I2C)",
            "restrict": "( m )[!(y) && (! MEDIA_SUBDRV_AUTOSELECT)]"
        }
    ],
    "VIDEO_HANTRO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (ARCH_MXC || ARCH_ROCKCHIP || ARCH_AT91 || ARCH_SUNXI || COMPILE_TEST) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_HANTRO_IMX8M": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_HANTRO) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_HANTRO_SAMA5D4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_HANTRO) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_HANTRO_ROCKCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_HANTRO) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_HANTRO_SUNXI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_HANTRO) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_IMX_MEDIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (ARCH_MXC || COMPILE_TEST) && (HAS_DMA) && (VIDEO_DEV) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_IMX_CSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_IMX_MEDIA ) && (IMX_IPUV3_CORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_IMX7_CSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_IMX_MEDIA )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VIDEO_IPU3_IMGU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (PCI && VIDEO_DEV) && (X86)",
            "restrict": ""
        }
    ],
    "VIDEO_MAX96712": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (I2C) && (OF_GPIO) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_MESON_VDEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_DEV && HAS_DMA) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_OMAP4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_DEV && I2C) && (ARCH_OMAP4 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_ROCKCHIP_VDEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_STKWEBCAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_DEV) && (USB)",
            "restrict": ""
        }
    ],
    "VIDEO_SUNXI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VIDEO_SUNXI_CEDRUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && ( VIDEO_SUNXI ) && (VIDEO_DEV) && (RESET_CONTROLLER) && (HAS_DMA) && (OF)",
            "restrict": ""
        }
    ],
    "VIDEO_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (TEGRA_HOST1X) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "VIDEO_TEGRA_TPG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_TEGRA)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (PCI && I2C_ALGOBIT && VIDEO_DEV) && (! ALPHA) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_DC30": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_ZR36060": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_BUZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN_ZR36060)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_DC10": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN_ZR36060)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_LML33": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN_ZR36060)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_LML33R10": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN_ZR36060)",
            "restrict": ""
        }
    ],
    "VIDEO_ZORAN_AVS6EYES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( STAGING_MEDIA && MEDIA_SUPPORT ) && (VIDEO_ZORAN_ZR36060)",
            "restrict": ""
        }
    ],
    "STAGING_BOARD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && (OF_ADDRESS && OF_IRQ && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "LTE_GDM724X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (NET && USB && TTY && m)",
            "restrict": ""
        }
    ],
    "FIREWIRE_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FIREWIRE && TTY)",
            "restrict": ""
        }
    ],
    "FWTTY_MAX_TOTAL_PORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( STAGING ) && ( FIREWIRE_SERIAL )",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "FWTTY_MAX_CARD_PORTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( STAGING ) && ( FIREWIRE_SERIAL )",
            "restrict": "( 0 FWTTY_MAX_TOTAL_PORTS ) || ( 32 )[!(y)]"
        }
    ],
    "COMMON_CLK_XLNX_CLKWZRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (COMMON_CLK && OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FB_TFT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB && SPI) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FB_TFT_AGM1264K_FL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_BD663474": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_HX8340BN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_HX8347D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_HX8353D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_HX8357D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9163": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9320": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9325": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9340": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9341": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9481": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ILI9486": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_PCD8544": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_RA8875": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_S6D02A1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_S6D1121": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SEPS525": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SH1106": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SSD1289": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SSD1305": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SSD1306": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SSD1331": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_SSD1351": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ST7735R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_ST7789V": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_TINYLCD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_TLS8204": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_UC1611": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_UC1701": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "FB_TFT_UPD161704": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (FB_TFT)",
            "restrict": ""
        }
    ],
    "MOST_COMPONENTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (HAS_DMA && CONFIGFS_FS && MOST)",
            "restrict": ""
        }
    ],
    "MOST_NET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( MOST_COMPONENTS ) && (NET)",
            "restrict": ""
        }
    ],
    "MOST_VIDEO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( MOST_COMPONENTS ) && (VIDEO_DEV)",
            "restrict": ""
        }
    ],
    "MOST_DIM2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( MOST_COMPONENTS ) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "MOST_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( MOST_COMPONENTS ) && (I2C)",
            "restrict": ""
        }
    ],
    "KS7010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (MMC && WIRELESS)",
            "restrict": ""
        }
    ],
    "GREYBUS_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (SOUND && SND_SOC)",
            "restrict": ""
        }
    ],
    "GREYBUS_AUDIO_APB_CODEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (SND_SOC && GREYBUS_AUDIO)",
            "restrict": ""
        }
    ],
    "GREYBUS_BOOTROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS )",
            "restrict": ""
        }
    ],
    "GREYBUS_CAMERA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (MEDIA_SUPPORT && LEDS_CLASS_FLASH && BROKEN)",
            "restrict": ""
        }
    ],
    "GREYBUS_FIRMWARE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (SPI)",
            "restrict": ""
        }
    ],
    "GREYBUS_HID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (HID && INPUT)",
            "restrict": ""
        }
    ],
    "GREYBUS_LIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "GREYBUS_LOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS )",
            "restrict": ""
        }
    ],
    "GREYBUS_LOOPBACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS )",
            "restrict": ""
        }
    ],
    "GREYBUS_POWER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "GREYBUS_RAW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS )",
            "restrict": ""
        }
    ],
    "GREYBUS_VIBRATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS )",
            "restrict": ""
        }
    ],
    "GREYBUS_BRIDGED_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS )",
            "restrict": ""
        }
    ],
    "GREYBUS_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "GREYBUS_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (I2C)",
            "restrict": ""
        }
    ],
    "GREYBUS_PWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (PWM)",
            "restrict": ""
        }
    ],
    "GREYBUS_SDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (MMC)",
            "restrict": ""
        }
    ],
    "GREYBUS_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (SPI)",
            "restrict": ""
        }
    ],
    "GREYBUS_UART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (TTY)",
            "restrict": ""
        }
    ],
    "GREYBUS_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && ( GREYBUS_BRIDGED_PHY ) && (USB)",
            "restrict": ""
        }
    ],
    "GREYBUS_ARCHE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( GREYBUS ) && (USB_HSIC_USB3613 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM_VIDEOCORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (OF) && (RASPBERRYPI_FIRMWARE || ( COMPILE_TEST && ! RASPBERRYPI_FIRMWARE ))",
            "restrict": ""
        }
    ],
    "BCM2835_VCHIQ": [
        {
            "type": "tristate",
            "rev_select": "SND_BCM2835[HAS_DMA] || VIDEO_BCM2835[HAS_DMA]",
            "dep": "( STAGING ) && ( BCM_VIDEOCORE ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VCHIQ_CDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && ( BCM_VIDEOCORE ) && ( BCM2835_VCHIQ )",
            "restrict": ""
        }
    ],
    "SND_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( BCM_VIDEOCORE ) && (( ARCH_BCM2835 || COMPILE_TEST ) && SND)",
            "restrict": ""
        }
    ],
    "VIDEO_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( BCM_VIDEOCORE ) && (MEDIA_SUPPORT) && (VIDEO_DEV && ( ARCH_BCM2835 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "BCM2835_VCHIQ_MMAL": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_BCM2835[HAS_DMA]",
            "dep": "( STAGING ) && ( BCM_VIDEOCORE ) && (BCM2835_VCHIQ)",
            "restrict": ""
        }
    ],
    "PI433": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (SPI)",
            "restrict": ""
        }
    ],
    "XIL_AXIS_FIFO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FIELDBUS_DEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING )",
            "restrict": ""
        }
    ],
    "HMS_ANYBUSS_BUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (OF && FIELDBUS_DEV)",
            "restrict": ""
        }
    ],
    "ARCX_ANYBUS_CONTROLLER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( HMS_ANYBUSS_BUS ) && (OF && GPIOLIB && HAS_IOMEM && REGULATOR)",
            "restrict": ""
        }
    ],
    "HMS_PROFINET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( HMS_ANYBUSS_BUS ) && (FIELDBUS_DEV && HMS_ANYBUSS_BUS)",
            "restrict": ""
        }
    ],
    "QLGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && (ETHERNET && PCI)",
            "restrict": ""
        }
    ],
    "VME_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( STAGING ) && (STAGING && PCI)",
            "restrict": ""
        }
    ],
    "VME_TSI148": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( VME_BUS ) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "VME_FAKE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( VME_BUS )",
            "restrict": ""
        }
    ],
    "VME_USER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STAGING ) && ( VME_BUS ) && (STAGING && VME_BUS)",
            "restrict": ""
        }
    ],
    "MIPS_PLATFORM_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MIPS )",
            "restrict": ""
        }
    ],
    "CPU_HWMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MIPS ) && ( MIPS_PLATFORM_DEVICES ) && (MACH_LOONGSON64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RS780E_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MIPS ) && ( MIPS_PLATFORM_DEVICES ) && (MACH_LOONGSON64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LS2K_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MIPS ) && ( MIPS_PLATFORM_DEVICES ) && (MACH_LOONGSON64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GOLDFISH_PIPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( GOLDFISH )",
            "restrict": ""
        }
    ],
    "CHROME_PLATFORMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 || ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CHROMEOS_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (ACPI)",
            "restrict": ""
        }
    ],
    "CHROMEOS_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (I2C && DMI && X86)",
            "restrict": ""
        }
    ],
    "CHROMEOS_PSTORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (X86)",
            "restrict": ""
        }
    ],
    "CHROMEOS_TBMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (X86 || ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CROS_EC_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (CROS_EC && I2C)",
            "restrict": ""
        }
    ],
    "CROS_EC_RPMSG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (CROS_EC && RPMSG && OF)",
            "restrict": ""
        }
    ],
    "CROS_EC_ISHTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (CROS_EC) && (INTEL_ISH_HID)",
            "restrict": ""
        }
    ],
    "CROS_EC_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (CROS_EC && SPI)",
            "restrict": ""
        }
    ],
    "CROS_EC_LPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (CROS_EC && ACPI && ( X86 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CROS_EC_PROTO": [
        {
            "type": "bool",
            "rev_select": "CEC_CROS_EC || CROS_EC || CROS_KUNIT",
            "dep": "( CHROME_PLATFORMS )",
            "restrict": ""
        }
    ],
    "CROS_KBD_LED_BACKLIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (LEDS_CLASS && ( ACPI || CROS_EC ))",
            "restrict": ""
        }
    ],
    "CROS_EC_CHARDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_EC_LIGHTBAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_EC_VBC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV && OF)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_EC_DEBUGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV && DEBUG_FS)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_EC_SENSORHUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_EC_SYSFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV && SYSFS)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_EC_TYPEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV && TYPEC) && (CROS_USBPD_NOTIFY) && (USB_ROLE_SWITCH)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CROS_USBPD_LOGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (CHARGER_CROS_USBPD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CROS_USBPD_NOTIFY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (MFD_CROS_EC_DEV)",
            "restrict": "( MFD_CROS_EC_DEV )[!(y)]"
        }
    ],
    "CHROMEOS_PRIVACY_SCREEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (ACPI) && (DRM)",
            "restrict": ""
        }
    ],
    "WILCO_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (X86 || COMPILE_TEST) && (ACPI && CROS_EC_LPC && LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "WILCO_EC_DEBUGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (WILCO_EC)",
            "restrict": ""
        }
    ],
    "WILCO_EC_EVENTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (WILCO_EC)",
            "restrict": ""
        }
    ],
    "WILCO_EC_TELEMETRY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (WILCO_EC)",
            "restrict": ""
        }
    ],
    "CROS_KUNIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CHROME_PLATFORMS ) && (KUNIT && CROS_EC)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "MELLANOX_PLATFORM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 || ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MLXREG_HOTPLUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (REGMAP) && (HWMON) && (I2C)",
            "restrict": ""
        }
    ],
    "MLXREG_IO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (REGMAP) && (HWMON)",
            "restrict": ""
        }
    ],
    "MLXREG_LC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (REGMAP) && (HWMON) && (I2C)",
            "restrict": ""
        }
    ],
    "MLXBF_TMFIFO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (ARM64) && (ACPI) && (VIRTIO_CONSOLE && VIRTIO_NET)",
            "restrict": ""
        }
    ],
    "MLXBF_BOOTCTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (ARM64) && (ACPI)",
            "restrict": ""
        }
    ],
    "MLXBF_PMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (ARM64) && (HWMON) && (ACPI)",
            "restrict": ""
        }
    ],
    "NVSW_SN2201": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MELLANOX_PLATFORM ) && (REGMAP) && (HWMON) && (I2C) && (REGMAP_I2C)",
            "restrict": ""
        }
    ],
    "OLPC_EC": [
        {
            "type": "bool",
            "rev_select": "OLPC || OLPC_XO175_EC",
            "dep": "",
            "restrict": ""
        }
    ],
    "OLPC_XO175": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OLPC_XO175_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( OLPC_XO175 ) && (SPI_SLAVE) && (INPUT) && (POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "SURFACE_PLATFORMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM64 || X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SURFACE3_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (ACPI_WMI) && (DMI) && (INPUT) && (SPI)",
            "restrict": ""
        }
    ],
    "SURFACE_3_POWER_OPREGION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (ACPI) && (I2C)",
            "restrict": ""
        }
    ],
    "SURFACE_ACPI_NOTIFY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR)",
            "restrict": ""
        }
    ],
    "SURFACE_AGGREGATOR_CDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR)",
            "restrict": ""
        }
    ],
    "SURFACE_AGGREGATOR_HUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR) && (SURFACE_AGGREGATOR_BUS)",
            "restrict": ""
        }
    ],
    "SURFACE_AGGREGATOR_REGISTRY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR) && (SURFACE_AGGREGATOR_BUS)",
            "restrict": ""
        }
    ],
    "SURFACE_AGGREGATOR_TABLET_SWITCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR) && (SURFACE_AGGREGATOR_BUS) && (INPUT)",
            "restrict": ""
        }
    ],
    "SURFACE_DTX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR) && (INPUT)",
            "restrict": ""
        }
    ],
    "SURFACE_GPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (ACPI) && (DMI)",
            "restrict": ""
        }
    ],
    "SURFACE_HOTPLUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (ACPI) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SURFACE_PLATFORM_PROFILE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (ACPI) && (SURFACE_AGGREGATOR_REGISTRY)",
            "restrict": ""
        }
    ],
    "SURFACE_PRO3_BUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "SURFACE_AGGREGATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SERIAL_DEV_BUS) && (ACPI)",
            "restrict": ""
        }
    ],
    "SURFACE_AGGREGATOR_BUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SURFACE_AGGREGATOR_ERROR_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SURFACE_PLATFORMS ) && (SURFACE_AGGREGATOR) && (FUNCTION_ERROR_INJECTION)",
            "restrict": ""
        }
    ],
    "X86_PLATFORM_DEVICES": [
        {
            "type": "bool",
            "rev_select": "DRM_NOUVEAU[ACPI && X86]",
            "dep": "(X86)",
            "restrict": ""
        }
    ],
    "ACPI_WMI": [
        {
            "type": "tristate",
            "rev_select": "DRM_NOUVEAU[ACPI && X86]",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "WMI_BMOF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI)",
            "restrict": "( ACPI_WMI )[!(y)]"
        }
    ],
    "HUAWEI_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_BATTERY) && (ACPI_WMI) && (INPUT)",
            "restrict": ""
        }
    ],
    "UV_SYSFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (X86_UV) && (SYSFS)",
            "restrict": ""
        }
    ],
    "MXM_WMI": [
        {
            "type": "tristate",
            "rev_select": "DRM_NOUVEAU[ACPI && X86]",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "PEAQ_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (INPUT)",
            "restrict": ""
        }
    ],
    "NVIDIA_WMI_EC_BACKLIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "XIAOMI_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (INPUT)",
            "restrict": ""
        }
    ],
    "GIGABYTE_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (HWMON)",
            "restrict": ""
        }
    ],
    "YOGABOOK_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (INPUT)",
            "restrict": ""
        }
    ],
    "ACERHDF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && THERMAL)",
            "restrict": ""
        }
    ],
    "ACER_WIRELESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "ACER_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (BACKLIGHT_CLASS_DEVICE) && (SERIO_I8042) && (INPUT) && (RFKILL || RFKILL = n) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "AMD_PMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && PCI && RTC_CLASS)",
            "restrict": ""
        }
    ],
    "AMD_HSMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (AMD_NB && X86_64)",
            "restrict": ""
        }
    ],
    "ADV_SWBUTTON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && INPUT)",
            "restrict": ""
        }
    ],
    "APPLE_GMUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && PCI) && (PNP) && (BACKLIGHT_CLASS_DEVICE) && (BACKLIGHT_APPLE = n || BACKLIGHT_APPLE) && (ACPI_VIDEO = n || ACPI_VIDEO)",
            "restrict": ""
        }
    ],
    "ASUS_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (BACKLIGHT_CLASS_DEVICE) && (INPUT) && (RFKILL || RFKILL = n) && (ACPI_VIDEO || ACPI_VIDEO = n)",
            "restrict": ""
        }
    ],
    "ASUS_WIRELESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "ASUS_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (ACPI_BATTERY) && (INPUT) && (HWMON) && (BACKLIGHT_CLASS_DEVICE) && (RFKILL || RFKILL = n) && (HOTPLUG_PCI) && (ACPI_VIDEO || ACPI_VIDEO = n)",
            "restrict": ""
        }
    ],
    "ASUS_NB_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ASUS_WMI) && (SERIO_I8042 || SERIO_I8042 = n)",
            "restrict": ""
        }
    ],
    "ASUS_TF103C_DOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (I2C) && (INPUT) && (HID) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "MERAKI_MX100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (GPIOLIB) && (GPIO_ICH) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "EEEPC_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT) && (RFKILL || RFKILL = n) && (ACPI_VIDEO || ACPI_VIDEO = n) && (HOTPLUG_PCI) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "EEEPC_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ASUS_WMI)",
            "restrict": ""
        }
    ],
    "X86_PLATFORM_DRIVERS_DELL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "ALIENWARE_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI) && (LEDS_CLASS) && (NEW_LEDS) && (ACPI_WMI)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DCDBAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (X86)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (DMI) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO || ACPI_VIDEO = n) && (RFKILL || RFKILL = n) && (DELL_WMI || DELL_WMI = n) && (SERIO_I8042) && (DELL_SMBIOS)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_RBU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (X86)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_RBTN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI) && (INPUT) && (RFKILL)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_SMBIOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (DCDBAS || DCDBAS = n) && (ACPI_WMI || ACPI_WMI = n)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_SMBIOS_WMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI_WMI) && (DELL_SMBIOS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DELL_SMBIOS_SMM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (DCDBAS) && (DELL_SMBIOS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DELL_SMO8800": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI || COMPILE_TEST)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI_WMI) && (DMI) && (INPUT) && (ACPI_VIDEO || ACPI_VIDEO = n) && (DELL_SMBIOS)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_WMI_PRIVACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (LEDS_TRIGGER_AUDIO = y || DELL_WMI = LEDS_TRIGGER_AUDIO) && (DELL_WMI)",
            "restrict": ""
        }
    ],
    "DELL_WMI_AIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI_WMI) && (INPUT)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_WMI_DESCRIPTOR": [
        {
            "type": "tristate",
            "rev_select": "DELL_SMBIOS_WMI || DELL_WMI",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI_WMI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DELL_WMI_LED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (LEDS_CLASS) && (ACPI_WMI)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "DELL_WMI_SYSMAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( X86_PLATFORM_DRIVERS_DELL ) && (ACPI_WMI) && (DMI)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "AMILO_RFKILL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (RFKILL) && (SERIO_I8042)",
            "restrict": ""
        }
    ],
    "FUJITSU_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO || ACPI_VIDEO = n)",
            "restrict": ""
        }
    ],
    "FUJITSU_TABLET": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "GPD_POCKET_FAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (THERMAL)",
            "restrict": ""
        }
    ],
    "HP_ACCEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INPUT && ACPI) && (SERIO_I8042)",
            "restrict": ""
        }
    ],
    "WIRELESS_HOTKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "HP_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (INPUT) && (RFKILL || RFKILL = n)",
            "restrict": ""
        }
    ],
    "TC1100_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (! X86_64) && (ACPI) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "IBM_RTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (PCI)",
            "restrict": ""
        }
    ],
    "IDEAPAD_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (RFKILL && INPUT) && (SERIO_I8042) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO || ACPI_VIDEO = n) && (ACPI_WMI || ACPI_WMI = n)",
            "restrict": ""
        }
    ],
    "SENSORS_HDAPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INPUT)",
            "restrict": ""
        }
    ],
    "THINKPAD_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (ACPI_BATTERY) && (INPUT) && (RFKILL || RFKILL = n) && (ACPI_VIDEO || ACPI_VIDEO = n) && (BACKLIGHT_CLASS_DEVICE) && (I2C) && (DRM)",
            "restrict": ""
        }
    ],
    "THINKPAD_ACPI_ALSA_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (THINKPAD_ACPI) && (SND) && (SND = y || THINKPAD_ACPI = SND)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "THINKPAD_ACPI_DEBUGFACILITIES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (THINKPAD_ACPI)",
            "restrict": ""
        }
    ],
    "THINKPAD_ACPI_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (THINKPAD_ACPI)",
            "restrict": ""
        }
    ],
    "THINKPAD_ACPI_UNSAFE_LEDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (THINKPAD_ACPI)",
            "restrict": ""
        }
    ],
    "THINKPAD_ACPI_VIDEO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (THINKPAD_ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "THINKPAD_ACPI_HOTKEY_POLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (THINKPAD_ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "THINKPAD_LMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "INTEL_ATOMISP2_PDX86": [
        {
            "type": "bool",
            "rev_select": "INTEL_ATOMISP2_LED || INTEL_ATOMISP2_PM",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_ATOMISP2_LED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (GPIOLIB && LEDS_GPIO)",
            "restrict": ""
        }
    ],
    "INTEL_ATOMISP2_PM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (PCI && IOSF_MBI && PM) && (! INTEL_ATOMISP)",
            "restrict": ""
        }
    ],
    "INTEL_IFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (X86 && CPU_SUP_INTEL && 64BIT && SMP) && (BROKEN)",
            "restrict": ""
        }
    ],
    "INTEL_SAR_INT1092": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_SKL_INT3472": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (COMMON_CLK) && (I2C) && (GPIOLIB) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "INTEL_PMC_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (PCI) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_PMT_CLASS": [
        {
            "type": "tristate",
            "rev_select": "INTEL_PMT_TELEMETRY || INTEL_PMT_CRASHLOG",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_PMT_TELEMETRY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_VSEC)",
            "restrict": ""
        }
    ],
    "INTEL_PMT_CRASHLOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_VSEC)",
            "restrict": ""
        }
    ],
    "INTEL_SPEED_SELECT_INTERFACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( ( PCI ) && ( X86_64 || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "INTEL_TELEMETRY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (X86_64) && (MFD_INTEL_PMC_BXT) && (INTEL_PUNIT_IPC)",
            "restrict": ""
        }
    ],
    "INTEL_WMI": [
        {
            "type": "bool",
            "rev_select": "INTEL_WMI_SBL_FW_UPDATE || INTEL_WMI_THUNDERBOLT",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_WMI_SBL_FW_UPDATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "INTEL_WMI_THUNDERBOLT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI)",
            "restrict": ""
        }
    ],
    "INTEL_UNCORE_FREQ_CONTROL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && ( ( X86_64 || COMPILE_TEST ) ) && (X86_64)",
            "restrict": ""
        }
    ],
    "INTEL_HID_EVENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT) && (I2C)",
            "restrict": ""
        }
    ],
    "INTEL_VBTN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT) && (I2C)",
            "restrict": ""
        }
    ],
    "INTEL_INT0002_VGPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (GPIOLIB && ACPI && PM_SLEEP)",
            "restrict": ""
        }
    ],
    "INTEL_OAKTRAIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (ACPI_VIDEO || ACPI_VIDEO = n) && (RFKILL && BACKLIGHT_CLASS_DEVICE && ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_BXTWC_PMIC_TMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_SOC_PMIC_BXTWC) && (MFD_INTEL_PMC_BXT)",
            "restrict": ""
        }
    ],
    "INTEL_CHTDC_TI_PWRBTN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_SOC_PMIC_CHTDC_TI) && (INPUT)",
            "restrict": ""
        }
    ],
    "INTEL_CHTWC_INT33FE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (X86 && ACPI && I2C && REGULATOR) && (CHARGER_BQ24190 = y || ( CHARGER_BQ24190 = m && m )) && (USB_ROLES_INTEL_XHCI = y || ( USB_ROLES_INTEL_XHCI = m && m )) && (TYPEC_MUX_PI3USB30532 = y || ( TYPEC_MUX_PI3USB30532 = m && m ))",
            "restrict": ""
        }
    ],
    "INTEL_ISHTP_ECLITE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_ISH_HID) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_MRFLD_PWRBTN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_SOC_PMIC_MRFLD) && (INPUT)",
            "restrict": ""
        }
    ],
    "INTEL_PUNIT_IPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_RST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_SDSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_VSEC) && (X86_64)",
            "restrict": ""
        }
    ],
    "INTEL_SMARTCONNECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_TURBO_MAX_3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (X86_64 && SCHED_MC_PRIO)",
            "restrict": ""
        }
    ],
    "INTEL_VSEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (PCI)",
            "restrict": ""
        }
    ],
    "MSI_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO || ACPI_VIDEO = n) && (RFKILL) && (INPUT && SERIO_I8042)",
            "restrict": ""
        }
    ],
    "MSI_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (INPUT) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO || ACPI_VIDEO = n)",
            "restrict": ""
        }
    ],
    "XO15_EBOOK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (OLPC || COMPILE_TEST) && (ACPI && INPUT)",
            "restrict": ""
        }
    ],
    "XO1_RFKILL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (OLPC || COMPILE_TEST) && (RFKILL)",
            "restrict": ""
        }
    ],
    "PCENGINES_APU2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INPUT && INPUT_KEYBOARD && GPIOLIB) && (LEDS_CLASS)",
            "restrict": ""
        }
    ],
    "BARCO_P50_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SAMSUNG_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (RFKILL || RFKILL = n) && (ACPI_VIDEO || ACPI_VIDEO = n) && (BACKLIGHT_CLASS_DEVICE)",
            "restrict": ""
        }
    ],
    "SAMSUNG_Q10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "ACPI_TOSHIBA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (ACPI_WMI) && (BACKLIGHT_CLASS_DEVICE) && (INPUT) && (SERIO_I8042 || SERIO_I8042 = n) && (ACPI_VIDEO || ACPI_VIDEO = n) && (RFKILL || RFKILL = n) && (IIO)",
            "restrict": ""
        }
    ],
    "TOSHIBA_BT_RFKILL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (RFKILL || RFKILL = n)",
            "restrict": ""
        }
    ],
    "TOSHIBA_HAPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "TOSHIBA_WMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI_WMI) && (INPUT)",
            "restrict": ""
        }
    ],
    "ACPI_CMPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && INPUT) && (RFKILL || RFKILL = n)",
            "restrict": ""
        }
    ],
    "COMPAL_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO || ACPI_VIDEO = n) && (RFKILL) && (HWMON) && (POWER_SUPPLY)",
            "restrict": ""
        }
    ],
    "LG_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (ACPI_BATTERY) && (ACPI_WMI) && (INPUT)",
            "restrict": ""
        }
    ],
    "PANASONIC_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INPUT && ACPI) && (BACKLIGHT_CLASS_DEVICE) && (ACPI_VIDEO = n || ACPI_VIDEO) && (SERIO_I8042 || SERIO_I8042 = n)",
            "restrict": ""
        }
    ],
    "SONY_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (ACPI_VIDEO || ACPI_VIDEO = n) && (BACKLIGHT_CLASS_DEVICE) && (INPUT) && (RFKILL)",
            "restrict": ""
        }
    ],
    "SONYPI_COMPAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (SONY_LAPTOP)",
            "restrict": ""
        }
    ],
    "SYSTEM76_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (ACPI_BATTERY) && (HWMON) && (INPUT)",
            "restrict": ""
        }
    ],
    "TOPSTAR_LAPTOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI) && (INPUT)",
            "restrict": ""
        }
    ],
    "SERIAL_MULTI_INSTANTIATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (I2C && SPI && ACPI)",
            "restrict": ""
        }
    ],
    "MLX_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (I2C && REGMAP)",
            "restrict": ""
        }
    ],
    "TOUCHSCREEN_DMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && DMI && I2C = y && TOUCHSCREEN_SILEAD)",
            "restrict": ""
        }
    ],
    "X86_ANDROID_TABLETS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (I2C && SPI && SERIAL_DEV_BUS && ACPI && EFI && GPIOLIB)",
            "restrict": ""
        }
    ],
    "FW_ATTR_CLASS": [
        {
            "type": "tristate",
            "rev_select": "DELL_WMI_SYSMAN || THINKPAD_LMI",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_IMR": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_QUARK",
            "dep": "( X86_PLATFORM_DEVICES ) && (X86_INTEL_QUARK && IOSF_MBI)",
            "restrict": ""
        }
    ],
    "INTEL_IPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI && PCI)",
            "restrict": ""
        }
    ],
    "INTEL_SCU_IPC": [
        {
            "type": "bool",
            "rev_select": "MFD_INTEL_PMC_BXT || INTEL_SCU",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_SCU": [
        {
            "type": "bool",
            "rev_select": "INTEL_SCU_PCI || INTEL_SCU_PLATFORM",
            "dep": "( X86_PLATFORM_DEVICES )",
            "restrict": ""
        }
    ],
    "INTEL_SCU_PCI": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_MID",
            "dep": "( X86_PLATFORM_DEVICES ) && (PCI)",
            "restrict": ""
        }
    ],
    "INTEL_SCU_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_SCU_WDT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_MID_WATCHDOG)",
            "restrict": "( INTEL_SCU_PCI )[!(y)]"
        }
    ],
    "INTEL_SCU_IPC_UTIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INTEL_SCU)",
            "restrict": ""
        }
    ],
    "SIEMENS_SIMATIC_IPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (PCI)",
            "restrict": ""
        }
    ],
    "WINMATE_FM07_KEYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( X86_PLATFORM_DEVICES ) && (INPUT)",
            "restrict": ""
        }
    ],
    "P2SB": [
        {
            "type": "bool",
            "rev_select": "I2C_I801[X86] || SIEMENS_SIMATIC_IPC_WDT || LPC_ICH[X86] || EDAC_PND2[X86]",
            "dep": "(PCI && X86)",
            "restrict": ""
        }
    ],
    "HAVE_CLK": [
        {
            "type": "bool",
            "rev_select": "HAVE_LEGACY_CLK || COMMON_CLK",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_CLK_PREPARE": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_LEGACY_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_QUARK || X86_INTEL_LPSS || X86_AMD_PLATFORM_DEVICE || MFD_INTEL_LPSS",
            "dep": "(! HAVE_LEGACY_CLK)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_WM831X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_WM831X)",
            "restrict": ""
        }
    ],
    "CLK_ICST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( HAS_IOMEM ) && ( ARM || ARM64 || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "CLK_SP810": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( HAS_IOMEM ) && ( ARM || ARM64 || COMPILE_TEST ) )",
            "restrict": "( y )[!(y) && (( ARCH_VEXPRESS && ARM ))]"
        }
    ],
    "CLK_VEXPRESS_OSC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( HAS_IOMEM ) && ( ARM || ARM64 || COMPILE_TEST ) ) && (VEXPRESS_CONFIG)",
            "restrict": "( y )[!(y) && (ARCH_VEXPRESS)]"
        }
    ],
    "CLK_HSDK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARC_SOC_HSDK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "LMK04832": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (SPI)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_APPLE_NCO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "COMMON_CLK_MAX77686": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_MAX77686 || MFD_MAX77620 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MAX9485": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_RK808": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_RK808)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_HI655X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( MFD_HI655X_PMIC || COMPILE_TEST )) && (REGMAP)",
            "restrict": "( MFD_HI655X_PMIC )[!(EXPERT)]"
        }
    ],
    "COMMON_CLK_SCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARM_SCMI_PROTOCOL || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_SCPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARM_SCPI_PROTOCOL || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_SI5341": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_SI5351": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_SI514": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_SI544": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_SI570": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_BM1880": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BITMAIN || COMPILE_TEST)",
            "restrict": "( ARCH_BITMAIN )[!(y)]"
        }
    ],
    "COMMON_CLK_CDCE706": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_TPS68470": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C) && (INTEL_SKL_INT3472 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_CDCE925": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_CS2000_CP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_EN7523": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (OF) && (ARCH_AIROHA || COMPILE_TEST)",
            "restrict": "( ARCH_AIROHA )[!(y)]"
        }
    ],
    "COMMON_CLK_FSL_FLEXSPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": "( ARCH_LAYERSCAPE && SPI_NXP_FLEXSPI )[!(y)]"
        }
    ],
    "COMMON_CLK_FSL_SAI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_GEMINI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_GEMINI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_LAN966X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (HAS_IOMEM) && (OF) && (SOC_LAN966 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_ASPEED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_ASPEED || COMPILE_TEST)",
            "restrict": "( ARCH_ASPEED )[!(y)]"
        }
    ],
    "COMMON_CLK_S2MPS11": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_SEC_CORE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_TWL6040": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (TWL6040_CORE)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_AXI_CLKGEN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (HAS_IOMEM || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "CLK_QORIQ": [
        {
            "type": "bool",
            "rev_select": "QORIQ_CPUFREQ",
            "dep": "( COMMON_CLK ) && (OF) && (PPC_E500MC || SOC_LS1021A || ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_LS1028A_PLLDIG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": "( ARCH_LAYERSCAPE )[!(y)]"
        }
    ],
    "COMMON_CLK_XGENE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARCH_XGENE )[!(y)]"
        }
    ],
    "COMMON_CLK_LOCHNAGAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_LOCHNAGAR)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_NXP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && ( ARCH_LPC18XX || ARCH_LPC32XX ) )[!(y)]"
        }
    ],
    "COMMON_CLK_PALMAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_PWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (PWM)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_PXA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && ARCH_PXA )[!(y)]"
        }
    ],
    "COMMON_CLK_OXNAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_OXNAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_RS9_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_VC5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (I2C) && (OF)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_STM32MP135": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && MACH_STM32MP13 )[!(y)]"
        }
    ],
    "COMMON_CLK_STM32MP157": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && MACH_STM32MP157 )[!(y)]"
        }
    ],
    "COMMON_CLK_STM32F": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && ( MACH_STM32F429 || MACH_STM32F469 || MACH_STM32F746 ) )[!(y)]"
        }
    ],
    "COMMON_CLK_STM32H7": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && MACH_STM32H743 )[!(y)]"
        }
    ],
    "COMMON_CLK_MMP2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && ( MACH_MMP2_DT || MACH_MMP3_DT ) )[!(y)]"
        }
    ],
    "COMMON_CLK_MMP2_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_MMP2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_BD718XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MFD_ROHM_BD718XX || MFD_ROHM_BD71828)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_FIXED_MMIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (COMMON_CLK && OF)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_K210": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (OF && RISCV && SOC_CANAAN)",
            "restrict": "( SOC_CANAAN )[!(y)]"
        }
    ],
    "CLK_ACTIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_ACTIONS || COMPILE_TEST)",
            "restrict": "( ARCH_ACTIONS )[!(y)]"
        }
    ],
    "CLK_OWL_S500": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_ACTIONS ) && (ARCH_ACTIONS || COMPILE_TEST)",
            "restrict": "( ARCH_ACTIONS )[!(y)]"
        }
    ],
    "CLK_OWL_S700": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_ACTIONS ) && (( ARM64 && ARCH_ACTIONS ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_ACTIONS )[!(y)]"
        }
    ],
    "CLK_OWL_S900": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_ACTIONS ) && (( ARM64 && ARCH_ACTIONS ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_ACTIONS )[!(y)]"
        }
    ],
    "CLK_ANALOGBITS_WRPLL_CLN28HPC": [
        {
            "type": "bool",
            "rev_select": "CLK_SIFIVE_PRCI",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "CLK_BAIKAL_T1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( MIPS_BAIKAL_T1 && OF ) || COMPILE_TEST)",
            "restrict": "( MIPS_BAIKAL_T1 )[!(y)]"
        }
    ],
    "CLK_BT1_CCU_PLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_BAIKAL_T1 )",
            "restrict": "( MIPS_BAIKAL_T1 )[!(y)]"
        }
    ],
    "CLK_BT1_CCU_DIV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_BAIKAL_T1 )",
            "restrict": "( MIPS_BAIKAL_T1 )[!(y)]"
        }
    ],
    "CLK_BCM2711_DVP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM2835 || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": "( ARCH_BCM2835 )[!(y)]"
        }
    ],
    "CLK_BCM2835": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM2835 || ARCH_BRCMSTB || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": "( ARCH_BCM2835 || ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "CLK_BCM_63XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCMBCA || COMPILE_TEST)",
            "restrict": "( ARCH_BCMBCA )[!(y)]"
        }
    ],
    "CLK_BCM_63XX_GATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "CLK_BCM_KONA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM_MOBILE || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_MOBILE )[!(y)]"
        }
    ],
    "COMMON_CLK_IPROC": [
        {
            "type": "bool",
            "rev_select": "CLK_BCM_63XX || CLK_BCM_CYGNUS || CLK_BCM_HR2 || CLK_BCM_NSP || CLK_BCM_NS2 || CLK_BCM_SR",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "CLK_BCM_CYGNUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM_CYGNUS || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_CYGNUS )[!(y)]"
        }
    ],
    "CLK_BCM_HR2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM_HR2 || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_HR2 )[!(y)]"
        }
    ],
    "CLK_BCM_NSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM_5301X || ARCH_BCM_NSP || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_5301X || ARCH_BCM_NSP )[!(y)]"
        }
    ],
    "CLK_BCM_NS2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "CLK_BCM_SR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "CLK_RASPBERRYPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (RASPBERRYPI_FIRMWARE || ( COMPILE_TEST && ! RASPBERRYPI_FIRMWARE ))",
            "restrict": ""
        }
    ],
    "COMMON_CLK_HI3516CV300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_CLK_HI3519": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_CLK_HI3559A": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_CLK_HI3660": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_CLK_HI3670": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_CLK_HI3798CV200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_CLK_HI6220": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "RESET_HISI": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_HI3516CV300 || COMMON_CLK_HI3519 || COMMON_CLK_HI3559A || COMMON_CLK_HI3798CV200",
            "dep": "( COMMON_CLK ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STUB_CLK_HI6220": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( COMMON_CLK_HI6220 || COMPILE_TEST )) && (MAILBOX)",
            "restrict": "( COMMON_CLK_HI6220 )[!(EXPERT)]"
        }
    ],
    "STUB_CLK_HI3660": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( COMMON_CLK_HI3660 || COMPILE_TEST )) && (MAILBOX)",
            "restrict": "( COMMON_CLK_HI3660 )[!(EXPERT)]"
        }
    ],
    "COMMON_CLK_BOSTON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MXC_CLK": [
        {
            "type": "tristate",
            "rev_select": "CLK_IMX1 || CLK_IMX25 || CLK_IMX27 || CLK_IMX31 || CLK_IMX35 || CLK_IMX5 || CLK_IMX6Q || CLK_IMX6SL || CLK_IMX6SLL || CLK_IMX6SX || CLK_IMX6UL || CLK_IMX7D || CLK_IMX7ULP || CLK_VF610 || CLK_IMX8MM || CLK_IMX8MN || CLK_IMX8MP || CLK_IMX8MQ || CLK_IMX8ULP || CLK_IMX93 || CLK_IMXRT1050",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MXC_CLK_SCU": [
        {
            "type": "tristate",
            "rev_select": "CLK_IMX8QXP",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "CLK_IMX1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX1 )[!(y)]"
        }
    ],
    "CLK_IMX25": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX25 )[!(y)]"
        }
    ],
    "CLK_IMX27": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX27 )[!(y)]"
        }
    ],
    "CLK_IMX31": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX31 )[!(y)]"
        }
    ],
    "CLK_IMX35": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX35 )[!(y)]"
        }
    ],
    "CLK_IMX5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX5 )[!(y)]"
        }
    ],
    "CLK_IMX6Q": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX6Q )[!(y)]"
        }
    ],
    "CLK_IMX6SL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX6SL )[!(y)]"
        }
    ],
    "CLK_IMX6SLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX6SLL )[!(y)]"
        }
    ],
    "CLK_IMX6SX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX6SX )[!(y)]"
        }
    ],
    "CLK_IMX6UL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX6UL )[!(y)]"
        }
    ],
    "CLK_IMX7D": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX7D )[!(y)]"
        }
    ],
    "CLK_IMX7ULP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_IMX7ULP )[!(y)]"
        }
    ],
    "CLK_VF610": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( SOC_VF610 )[!(y)]"
        }
    ],
    "CLK_IMX8MM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_IMX8MN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_IMX8MP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_IMX8MQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_IMX8QXP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( ARCH_MXC && ARM64 ) || COMPILE_TEST) && (IMX_SCU && HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "CLK_IMX8ULP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_IMX93": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_IMXRT1050": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (SOC_IMXRT)",
            "restrict": ""
        }
    ],
    "INGENIC_CGU_COMMON": [
        {
            "type": "bool",
            "rev_select": "INGENIC_CGU_JZ4740 || INGENIC_CGU_JZ4725B || INGENIC_CGU_JZ4760 || INGENIC_CGU_JZ4770 || INGENIC_CGU_JZ4780 || INGENIC_CGU_X1000 || INGENIC_CGU_X1830",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "INGENIC_CGU_JZ4740": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_JZ4740 )[!(y)]"
        }
    ],
    "INGENIC_CGU_JZ4725B": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_JZ4725B )[!(y)]"
        }
    ],
    "INGENIC_CGU_JZ4760": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_JZ4760 )[!(y)]"
        }
    ],
    "INGENIC_CGU_JZ4770": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_JZ4770 )[!(y)]"
        }
    ],
    "INGENIC_CGU_JZ4780": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_JZ4780 )[!(y)]"
        }
    ],
    "INGENIC_CGU_X1000": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_X1000 )[!(y)]"
        }
    ],
    "INGENIC_CGU_X1830": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_X1830 )[!(y)]"
        }
    ],
    "INGENIC_TCU_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( MIPS || COMPILE_TEST ) )",
            "restrict": "( MACH_INGENIC )[!(y)]"
        }
    ],
    "COMMON_CLK_KEYSTONE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( ARCH_KEYSTONE || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "TI_SCI_CLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST ) && OF) && (TI_SCI_PROTOCOL)",
            "restrict": "( ARCH_KEYSTONE )[!(y)]"
        }
    ],
    "TI_SCI_CLK_PROBE_FROM_FW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (TI_SCI_CLK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TI_SYSCON_CLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST)",
            "restrict": "( ARCH_KEYSTONE || ARCH_K3 )[!(y)]"
        }
    ],
    "COMMON_CLK_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_MT2701 || COMMON_CLK_MT2712 || COMMON_CLK_MT6765 || COMMON_CLK_MT6779 || COMMON_CLK_MT6797 || COMMON_CLK_MT7622 || COMMON_CLK_MT7629 || COMMON_CLK_MT7986 || COMMON_CLK_MT8135 || COMMON_CLK_MT8167 || COMMON_CLK_MT8173 || COMMON_CLK_MT8183 || COMMON_CLK_MT8186 || COMMON_CLK_MT8192 || COMMON_CLK_MT8195 || COMMON_CLK_MT8516",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM )[!(y)]"
        }
    ],
    "COMMON_CLK_MT2701_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_VDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_HIFSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_ETHSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_BDPSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_AUDSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2701_G3DSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2701)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM64 ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM64 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT2712_BDPSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712_JPGDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712_MFGCFG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712_VDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT2712_VENCSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT2712)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM64 ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM64 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT6765_AUDIOSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_CAMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_GCESYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_VCODECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MFGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MIPI0ASYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MIPI0BSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MIPI1ASYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MIPI1BSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MIPI2ASYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6765_MIPI2BSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6765)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM64 ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM64 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT6779_MMSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_IMGSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_IPESYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_CAMSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_VDECSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_VENCSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_MFGCFG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6779_AUDSYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6779)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6797": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM64 ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM64 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT6797_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6797)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6797_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6797)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6797_VDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6797)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT6797_VENCSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT6797)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT7622": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT7622_ETHSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT7622)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT7622_HIFSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT7622)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT7622_AUDSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT7622)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT7629": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM )[!(y)]"
        }
    ],
    "COMMON_CLK_MT7629_ETHSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT7629)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT7629_HIFSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT7629)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT7986": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT7986_ETHSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT7986)",
            "restrict": "( COMMON_CLK_MT7986 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8135": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8167": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM64 ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8167_AUDSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8167)",
            "restrict": "( COMMON_CLK_MT8167 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8167_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8167)",
            "restrict": "( COMMON_CLK_MT8167 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8167_MFGCFG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8167)",
            "restrict": "( COMMON_CLK_MT8167 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8167_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8167)",
            "restrict": "( COMMON_CLK_MT8167 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8167_VDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8167)",
            "restrict": "( COMMON_CLK_MT8167 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8173": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8173_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8173)",
            "restrict": "( COMMON_CLK_MT8173 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (( ARCH_MEDIATEK && ARM64 ) || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK && ARM64 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_AUDIOSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_CAMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_IPU_CORE0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_IPU_CORE1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_IPU_ADL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_IPU_CONN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_MFGCFG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_VDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8183_VENCSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8183)",
            "restrict": "( COMMON_CLK_MT8183 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8186": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8192": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARM64 )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8192_AUDSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_CAMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_IMGSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_IMP_IIC_WRAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_IPESYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_MDPSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_MFGCFG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_MSDC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_SCP_ADSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_VDECSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8192_VENCSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8192)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MT8195": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8516": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "COMMON_CLK_MT8516_AUDSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (COMMON_CLK_MT8516)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_REGMAP": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_MESON_DUALDIV || COMMON_CLK_MESON_MPLL || COMMON_CLK_MESON_PHASE || COMMON_CLK_MESON_PLL || COMMON_CLK_MESON_SCLK_DIV || COMMON_CLK_MESON_VID_PLL_DIV || COMMON_CLK_MESON_AO_CLKC || COMMON_CLK_MESON_EE_CLKC || COMMON_CLK_MESON_CPU_DYNDIV || COMMON_CLK_MESON8B || COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_AXG_AUDIO || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_DUALDIV": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_MPLL": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_MESON8B || COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_PHASE": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_AXG_AUDIO",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_PLL": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_MESON8B || COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_SCLK_DIV": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_AXG_AUDIO",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_VID_PLL_DIV": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_GXBB || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_AO_CLKC": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_EE_CLKC": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_GXBB || COMMON_CLK_AXG || COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON_CPU_DYNDIV": [
        {
            "type": "tristate",
            "rev_select": "COMMON_CLK_G12A",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_MESON8B": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) ) && (ARM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMMON_CLK_GXBB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMMON_CLK_AXG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMMON_CLK_AXG_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) ) && (ARM64)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_G12A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( ( ARCH_MESON || COMPILE_TEST ) ) && (ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MSTAR_MSC313_MPLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_MSTARV7 || COMPILE_TEST)",
            "restrict": "( ARCH_MSTARV7 )[!(y)]"
        }
    ],
    "COMMON_CLK_PIC32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( COMMON_CLK && MACH_PIC32 )[!(y)]"
        }
    ],
    "MCHP_CLK_MPFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( RISCV && SOC_MICROCHIP_POLARFIRE ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MVEBU_CLK_COMMON": [
        {
            "type": "bool",
            "rev_select": "ARMADA_370_CLK || ARMADA_375_CLK || ARMADA_38X_CLK || ARMADA_39X_CLK || ARMADA_XP_CLK || DOVE_CLK || KIRKWOOD_CLK || ORION_CLK",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "MVEBU_CLK_CPU": [
        {
            "type": "bool",
            "rev_select": "ARMADA_370_CLK || ARMADA_XP_CLK",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "MVEBU_CLK_COREDIV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_AP_CP_HELPER": [
        {
            "type": "bool",
            "rev_select": "ARMADA_AP806_SYSCON || ARMADA_AP_CPU_CLK || ARMADA_CP110_SYSCON",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_370_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_375_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_38X_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_39X_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_37XX_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_XP_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_AP806_SYSCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_AP_CPU_CLK": [
        {
            "type": "bool",
            "rev_select": "ARM_ARMADA_8K_CPUFREQ",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ARMADA_CP110_SYSCON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "DOVE_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "KIRKWOOD_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "ORION_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_PISTACHIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "KRAIT_CLOCKS": [
        {
            "type": "bool",
            "rev_select": "KRAITCC",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "QCOM_GDSC": [
        {
            "type": "bool",
            "rev_select": "APQ_GCC_8084 || APQ_MMCC_8084 || IPQ_GCC_8074 || MSM_GCC_8916 || MSM_GCC_8939 || MSM_GCC_8953 || MSM_GCC_8974 || MSM_MMCC_8974 || MSM_GCC_8976 || MSM_MMCC_8994 || MSM_GCC_8996 || MSM_MMCC_8996 || MSM_GCC_8998 || MSM_GPUCC_8998 || MSM_MMCC_8998 || QCM_GCC_2290 || SC_GCC_7180 || SC_GCC_7280 || SC_GCC_8180X || SC_GCC_8280XP || SC_LPASS_CORECC_7280 || SDM_GCC_660 || SDM_MMCC_660 || SDM_GPUCC_660 || SDM_GCC_845 || SDM_VIDEOCC_845 || SDX_GCC_55 || SDX_GCC_65 || SM_GCC_6115 || SM_GCC_6350 || SM_GCC_8250 || SM_GCC_8350 || SM_GCC_8450 || SM_VIDEOCC_8150 || SM_VIDEOCC_8250",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "QCOM_RPMCC": [
        {
            "type": "bool",
            "rev_select": "QCOM_CLK_RPM || QCOM_CLK_SMD_RPM",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (OF) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_A53PLL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCOM_A7PLL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCOM_CLK_APCS_MSM8916": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (QCOM_APCS_IPC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_CLK_APCC_MSM8996": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (ARM64)",
            "restrict": ""
        }
    ],
    "QCOM_CLK_APCS_SDX55": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (QCOM_APCS_IPC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_CLK_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (MFD_QCOM_RPM)",
            "restrict": ""
        }
    ],
    "QCOM_CLK_SMD_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "QCOM_CLK_RPMH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (QCOM_RPMH)",
            "restrict": ""
        }
    ],
    "APQ_GCC_8084": [
        {
            "type": "tristate",
            "rev_select": "APQ_MMCC_8084",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "APQ_MMCC_8084": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "IPQ_APSS_PLL": [
        {
            "type": "tristate",
            "rev_select": "IPQ_APSS_6018",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "IPQ_APSS_6018": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (QCOM_APCS_IPC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IPQ_GCC_4019": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "IPQ_GCC_6018": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "IPQ_GCC_806X": [
        {
            "type": "tristate",
            "rev_select": "IPQ_LCC_806X",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "IPQ_LCC_806X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "IPQ_GCC_8074": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8916": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8939": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8960": [
        {
            "type": "tristate",
            "rev_select": "MSM_LCC_8960 || MSM_MMCC_8960",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_LCC_8960": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MDM_GCC_9607": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MDM_GCC_9615": [
        {
            "type": "tristate",
            "rev_select": "MDM_LCC_9615",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MDM_LCC_9615": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_MMCC_8960": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8953": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8974": [
        {
            "type": "tristate",
            "rev_select": "MSM_MMCC_8974",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_MMCC_8974": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8976": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_MMCC_8994": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8994": [
        {
            "type": "tristate",
            "rev_select": "MSM_MMCC_8994",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8996": [
        {
            "type": "tristate",
            "rev_select": "MSM_MMCC_8996",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_MMCC_8996": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GCC_8998": [
        {
            "type": "tristate",
            "rev_select": "MSM_GPUCC_8998 || MSM_MMCC_8998",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_GPUCC_8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "MSM_MMCC_8998": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCM_GCC_2290": [
        {
            "type": "tristate",
            "rev_select": "QCM_DISPCC_2290",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCM_DISPCC_2290": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCS_GCC_404": [
        {
            "type": "tristate",
            "rev_select": "QCS_Q6SSTOP_404",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_CAMCC_7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_CAMCC_7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_DISPCC_7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_DISPCC_7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_GCC_7180": [
        {
            "type": "tristate",
            "rev_select": "SC_CAMCC_7180 || SC_DISPCC_7180 || SC_GPUCC_7180 || SC_LPASS_CORECC_7180 || SC_MSS_7180 || SC_VIDEOCC_7180",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (COMMON_CLK_QCOM)",
            "restrict": ""
        }
    ],
    "SC_GCC_7280": [
        {
            "type": "tristate",
            "rev_select": "SC_CAMCC_7280 || SC_DISPCC_7280 || SC_GPUCC_7280 || SC_LPASSCC_7280 || SC_LPASS_CORECC_7280 || SC_VIDEOCC_7280",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (COMMON_CLK_QCOM)",
            "restrict": ""
        }
    ],
    "SC_GCC_8180X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (COMMON_CLK_QCOM)",
            "restrict": ""
        }
    ],
    "SC_GCC_8280XP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (COMMON_CLK_QCOM)",
            "restrict": ""
        }
    ],
    "SC_GPUCC_7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_GPUCC_7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_LPASSCC_7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_LPASS_CORECC_7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_LPASS_CORECC_7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_MSS_7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_VIDEOCC_7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SC_VIDEOCC_7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_CAMCC_845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_GCC_660": [
        {
            "type": "tristate",
            "rev_select": "SDM_MMCC_660 || SDM_GPUCC_660",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_MMCC_660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_GPUCC_660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCS_TURING_404": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "QCS_Q6SSTOP_404": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_GCC_845": [
        {
            "type": "tristate",
            "rev_select": "SDM_CAMCC_845 || SDM_GPUCC_845 || SDM_VIDEOCC_845 || SDM_DISPCC_845 || SDM_LPASSCC_845",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_GPUCC_845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_VIDEOCC_845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_DISPCC_845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDM_LPASSCC_845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDX_GCC_55": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SDX_GCC_65": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_CAMCC_8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_CAMCC_8450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_DISPCC_6125": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (SM_GCC_6125)",
            "restrict": ""
        }
    ],
    "SM_DISPCC_8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (SM_GCC_8150 || SM_GCC_8250 || SM_GCC_8350)",
            "restrict": ""
        }
    ],
    "SM_DISPCC_6350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (SM_GCC_6350)",
            "restrict": ""
        }
    ],
    "SM_GCC_6115": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GCC_6125": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GCC_6350": [
        {
            "type": "tristate",
            "rev_select": "SM_GPUCC_6350",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GCC_8150": [
        {
            "type": "tristate",
            "rev_select": "SM_GPUCC_8150 || SM_VIDEOCC_8150",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GCC_8250": [
        {
            "type": "tristate",
            "rev_select": "SM_CAMCC_8250 || SM_GPUCC_8250 || SM_VIDEOCC_8250",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GCC_8350": [
        {
            "type": "tristate",
            "rev_select": "SM_GPUCC_8350",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GCC_8450": [
        {
            "type": "tristate",
            "rev_select": "SM_CAMCC_8450",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GPUCC_6350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GPUCC_8150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GPUCC_8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_GPUCC_8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_VIDEOCC_8150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SM_VIDEOCC_8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "SPMI_PMIC_CLKDIV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (SPMI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_HFPLL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "KPSS_XCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "KRAITCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM ) && (ARM)",
            "restrict": ""
        }
    ],
    "CLK_GFM_LPASS_SM8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_QCOM )",
            "restrict": ""
        }
    ],
    "CLK_MT7621": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (SOC_MT7621 || COMPILE_TEST)",
            "restrict": "( SOC_MT7621 )[!(y)]"
        }
    ],
    "CLK_RENESAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( y )[!(COMPILE_TEST && ! ARCH_RENESAS) && (ARCH_RENESAS)]"
        }
    ],
    "CLK_EMEV2": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_EMEV2]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RZA1": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R7S72100]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R7S9210": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R7S9210]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A73A4": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A73A4]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7740": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7740]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7742": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7742]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7743": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7743 || ARCH_R8A7744]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7745": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7745]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77470": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77470]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A774A1": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A774A1]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A774B1": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A774B1]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A774C0": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A774C0]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A774E1": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A774E1]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7778": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7778]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7779": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7779]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7790": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7790]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7791": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7791 || ARCH_R8A7793]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7792": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7792]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7794": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A7794]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A7795": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77950 || ARCH_R8A77951]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77960": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77960]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77961": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77961]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77965": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77965]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77970": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77970]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77980": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77980]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77990": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77990]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A77995": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A77995]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A779A0": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A779A0]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A779F0": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A779F0]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R8A779G0": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R8A779G0]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R9A06G032": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R9A06G032]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R9A07G043": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R9A07G043]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R9A07G044": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R9A07G044]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R9A07G054": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R9A07G054]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_R9A09G011": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_R9A09G011]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_SH73A0": [
        {
            "type": "bool",
            "rev_select": "CLK_RENESAS[ARCH_SH73A0]",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RCAR_CPG_LIB": [
        {
            "type": "bool",
            "rev_select": "CLK_RCAR_GEN3_CPG || CLK_RCAR_GEN4_CPG",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RCAR_GEN2_CPG": [
        {
            "type": "bool",
            "rev_select": "CLK_R8A7742 || CLK_R8A7743 || CLK_R8A7745 || CLK_R8A77470 || CLK_R8A7790 || CLK_R8A7791 || CLK_R8A7792 || CLK_R8A7794",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RCAR_GEN3_CPG": [
        {
            "type": "bool",
            "rev_select": "CLK_R8A774A1 || CLK_R8A774B1 || CLK_R8A774C0 || CLK_R8A774E1 || CLK_R8A7795 || CLK_R8A77960 || CLK_R8A77961 || CLK_R8A77965 || CLK_R8A77970 || CLK_R8A77980 || CLK_R8A77990 || CLK_R8A77995",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RCAR_GEN4_CPG": [
        {
            "type": "bool",
            "rev_select": "CLK_R8A779A0 || CLK_R8A779F0 || CLK_R8A779G0",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RCAR_USB2_CLOCK_SEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_RZG2L": [
        {
            "type": "bool",
            "rev_select": "CLK_R9A07G043 || CLK_R9A07G044 || CLK_R9A07G054 || CLK_R9A09G011",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RENESAS_CPG_MSSR": [
        {
            "type": "bool",
            "rev_select": "CLK_R7S9210 || CLK_RCAR_GEN2_CPG || CLK_RCAR_GEN3_CPG || CLK_RCAR_GEN4_CPG",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RENESAS_CPG_MSTP": [
        {
            "type": "bool",
            "rev_select": "CLK_RZA1 || CLK_R8A73A4 || CLK_R8A7740 || CLK_R8A7778 || CLK_R8A7779 || CLK_SH73A0",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "CLK_RENESAS_DIV6": [
        {
            "type": "bool",
            "rev_select": "CLK_R8A73A4 || CLK_R8A7740 || CLK_SH73A0 || CLK_RENESAS_CPG_MSSR",
            "dep": "( COMMON_CLK ) && ( CLK_RENESAS )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_ROCKCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_ROCKCHIP)",
            "restrict": "( ARCH_ROCKCHIP )[!(y)]"
        }
    ],
    "CLK_PX30": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RV110X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3036": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK312X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3188": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK322X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3288": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3308": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3328": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3368": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3399": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_RK3568": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( COMMON_CLK_ROCKCHIP ) && (ARM64 || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "COMMON_CLK_SAMSUNG": [
        {
            "type": "bool",
            "rev_select": "S3C2410_COMMON_CLK || S3C2410_COMMON_DCLK || S3C2412_COMMON_CLK || S3C2443_COMMON_CLK",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "S3C64XX_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && ARCH_S3C64XX]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "S5PV210_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && ARCH_S5PV210]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_3250_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && SOC_EXYNOS3250]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_4_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && ARCH_EXYNOS4]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_5250_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && SOC_EXYNOS5250]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_5260_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && SOC_EXYNOS5260]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_5410_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && SOC_EXYNOS5410]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_5420_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM && SOC_EXYNOS5420]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_ARM64_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM64 && ARCH_EXYNOS]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": ""
        }
    ],
    "EXYNOS_AUDSS_CLK_CON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": "( y )[!(y) && (ARCH_EXYNOS)]"
        }
    ],
    "EXYNOS_CLKOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG)",
            "restrict": "( y )[!(y) && (ARCH_EXYNOS)]"
        }
    ],
    "S3C2410_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "S3C2410_COMMON_DCLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "S3C2412_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "S3C2443_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "TESLA_FSD_COMMON_CLK": [
        {
            "type": "bool",
            "rev_select": "COMMON_CLK_SAMSUNG[ARM64 && ARCH_TESLA_FSD]",
            "dep": "( COMMON_CLK ) && (COMMON_CLK_SAMSUNG) && (EXYNOS_ARM64_COMMON_CLK)",
            "restrict": ""
        }
    ],
    "CLK_SIFIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (RISCV || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_SIFIVE_PRCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_SIFIVE )",
            "restrict": ""
        }
    ],
    "CLK_INTEL_SOCFPGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK )",
            "restrict": "( ARCH_INTEL_SOCFPGA )[!(COMPILE_TEST && ! ARCH_INTEL_SOCFPGA)]"
        }
    ],
    "CLK_INTEL_SOCFPGA32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_INTEL_SOCFPGA )",
            "restrict": "( ARM && ARCH_INTEL_SOCFPGA )[!(COMPILE_TEST && ( ! ARM || ! ARCH_INTEL_SOCFPGA ))]"
        }
    ],
    "CLK_INTEL_SOCFPGA64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_INTEL_SOCFPGA )",
            "restrict": "( ARM64 && ARCH_INTEL_SOCFPGA )[!(COMPILE_TEST && ( ! ARM64 || ! ARCH_INTEL_SOCFPGA ))]"
        }
    ],
    "SPRD_COMMON_CLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": "( ARCH_SPRD )[!(y)]"
        }
    ],
    "SPRD_SC9860_CLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SPRD_COMMON_CLK ) && (( ARM64 && ARCH_SPRD ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SPRD )[!(y)]"
        }
    ],
    "SPRD_SC9863A_CLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SPRD_COMMON_CLK ) && (( ARM64 && ARCH_SPRD ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SPRD )[!(y)]"
        }
    ],
    "CLK_STARFIVE_JH7100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (SOC_STARFIVE || COMPILE_TEST)",
            "restrict": "( SOC_STARFIVE )[!(y)]"
        }
    ],
    "CLK_STARFIVE_JH7100_AUDIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (CLK_STARFIVE_JH7100)",
            "restrict": "( m )[!(y) && (SOC_STARFIVE)]"
        }
    ],
    "CLK_SUNXI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (( ARM && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLK_SUNXI_CLOCKS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_SUNXI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_SUNXI_PRCM_SUN6I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_SUNXI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_SUNXI_PRCM_SUN8I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_SUNXI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CLK_SUNXI_PRCM_SUN9I": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( CLK_SUNXI )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SUNXI_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUNIV_F1C100S_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUNIV || COMPILE_TEST)",
            "restrict": "( MACH_SUNIV )[!(y)]"
        }
    ],
    "SUN20I_D1_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( RISCV && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( RISCV && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN20I_D1_R_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( RISCV && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( RISCV && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN50I_A64_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN50I_A100_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN50I_A100_R_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN50I_H6_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN50I_H616_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN50I_H6_R_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( ARM64 && ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN4I_A10_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN4I || MACH_SUN7I || COMPILE_TEST)",
            "restrict": "( MACH_SUN4I )[!(y)] || ( MACH_SUN7I )[!(y)]"
        }
    ],
    "SUN5I_CCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN5I || COMPILE_TEST) && (SUNXI_CCU = y)",
            "restrict": "( MACH_SUN5I )[!(y)]"
        }
    ],
    "SUN6I_A31_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN6I || COMPILE_TEST)",
            "restrict": "( MACH_SUN6I )[!(y)]"
        }
    ],
    "SUN6I_RTC_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUN8I_A23_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN8I || COMPILE_TEST)",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "SUN8I_A33_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN8I || COMPILE_TEST)",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "SUN8I_A83T_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN8I || COMPILE_TEST)",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "SUN8I_H3_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN8I || ( ARM64 && ARCH_SUNXI ) || COMPILE_TEST)",
            "restrict": "( MACH_SUN8I || ( ARM64 && ARCH_SUNXI ) )[!(y)]"
        }
    ],
    "SUN8I_V3S_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN8I || COMPILE_TEST)",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "SUN8I_DE2_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU )",
            "restrict": "( MACH_SUN8I || ( ARM64 && ARCH_SUNXI ) )[!(y)]"
        }
    ],
    "SUN8I_R40_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN8I || COMPILE_TEST)",
            "restrict": "( MACH_SUN8I )[!(y)]"
        }
    ],
    "SUN9I_A80_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU ) && (MACH_SUN9I || COMPILE_TEST)",
            "restrict": "( MACH_SUN9I )[!(y)]"
        }
    ],
    "SUN8I_R_CCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && ( SUNXI_CCU )",
            "restrict": "( MACH_SUN8I || ( ARCH_SUNXI && ARM64 ) )[!(y)]"
        }
    ],
    "CLK_TEGRA_BPMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (TEGRA_BPMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA_CLK_DFLL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_TEGRA_124_SOC || ARCH_TEGRA_210_SOC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA124_CLK_EMC": [
        {
            "type": "bool",
            "rev_select": "TEGRA124_EMC[ARCH_TEGRA]",
            "dep": "( COMMON_CLK )",
            "restrict": ""
        }
    ],
    "COMMON_CLK_TI_ADPLL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (SOC_TI81XX)]"
        }
    ],
    "CLK_UNIPHIER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF && MFD_SYSCON)",
            "restrict": "( ARCH_UNIPHIER )[!(y)]"
        }
    ],
    "COMMON_CLK_VISCONTI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ARCH_VISCONTI || COMPILE_TEST)",
            "restrict": "( ARCH_VISCONTI )[!(y)]"
        }
    ],
    "CLK_LGM_CGU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (OF && HAS_IOMEM && ( X86 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "XILINX_VCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (HAS_IOMEM && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "COMMON_CLK_ZYNQMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (ZYNQMP_FIRMWARE || COMPILE_TEST)",
            "restrict": "( ZYNQMP_FIRMWARE )[!(y)]"
        }
    ],
    "CLK_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "CLK_GATE_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COMMON_CLK ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "HWSPINLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HWSPINLOCK_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWSPINLOCK ) && (ARCH_OMAP4 || SOC_OMAP5 || SOC_DRA7XX || SOC_AM33XX || SOC_AM43XX || ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HWSPINLOCK_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWSPINLOCK ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HWSPINLOCK_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWSPINLOCK ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HWSPINLOCK_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWSPINLOCK ) && (MACH_STM32MP157 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HWSPINLOCK_SUN6I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWSPINLOCK ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HSEM_U8500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HWSPINLOCK ) && (ARCH_U8500 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TIMER_OF": [
        {
            "type": "bool",
            "rev_select": "OMAP_DM_SYSTIMER || OMAP_DM_TIMER || DW_APB_TIMER_OF || FTTMR010_TIMER || IXP4XX_TIMER || ROCKCHIP_TIMER || ARMADA_370_XP_TIMER || ORION_TIMER || RDA_TIMER || SUN4I_TIMER || TEGRA_TIMER || NPCM7XX_TIMER || ASM9260_TIMER || CLKSRC_LPC32XX || CLKSRC_PISTACHIO || CLKSRC_TI_32K[OF] || CLKSRC_STM32 || CLKSRC_MPS2 || ARC_TIMERS || ARC_TIMERS_64BIT || ARM_ARCH_TIMER[OF] || ARM_GLOBAL_TIMER[OF] || ARM_TIMER_SP804[OF] || ARMV7M_SYSTICK[OF] || ATMEL_PIT[OF] || ATMEL_ST || ATMEL_TCB_CLKSRC[OF] || OXNAS_RPS_TIMER || MTK_TIMER || SPRD_TIMER || RENESAS_OSTM || CLKSRC_QCOM || CLKSRC_VERSATILE || CLKSRC_MIPS_GIC || CLKSRC_IMX_TPM || TIMER_IMX_SYS_CTR || CLKSRC_ST_LPC[OF] || GXP_TIMER[OF] || RISCV_TIMER || CLINT_TIMER || CSKY_MP_TIMER || GX6605S_TIMER || MILBEAUT_TIMER || MSC313E_TIMER || INGENIC_TIMER || INGENIC_SYSOST || MICROCHIP_PIT64B",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "TIMER_ACPI": [
        {
            "type": "bool",
            "rev_select": "ARM_ARCH_TIMER[ACPI]",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "TIMER_PROBE": [
        {
            "type": "bool",
            "rev_select": "TIMER_OF || TIMER_ACPI || RISCV_TIMER || CLINT_TIMER",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKSRC_I8253": [
        {
            "type": "bool",
            "rev_select": "X86_32",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKEVT_I8253": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "I8253_LOCK": [
        {
            "type": "bool",
            "rev_select": "PCSPKR_PLATFORM",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "OMAP_DM_SYSTIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKBLD_I8253": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": "( y )[!(y) && (CLKSRC_I8253 || CLKEVT_I8253 || I8253_LOCK)]"
        }
    ],
    "CLKSRC_MMIO": [
        {
            "type": "bool",
            "rev_select": "BCM2835_TIMER || BCM_KONA_TIMER || DIGICOLOR_TIMER || FTTMR010_TIMER || IXP4XX_TIMER || ROCKCHIP_TIMER || ARMADA_370_XP_TIMER || MESON6_TIMER || ORION_TIMER || OWL_TIMER || RDA_TIMER || SUN4I_TIMER || SUN5I_HSTIMER || TEGRA_TIMER || NPCM7XX_TIMER || ASM9260_TIMER || CLKSRC_NOMADIK_MTU || CLPS711X_TIMER || MXS_TIMER || NSPIRE_TIMER || KEYSTONE_TIMER || INTEGRATOR_AP_TIMER || CLKSRC_LPC32XX || CLKSRC_STM32 || CLKSRC_MPS2 || ARM_TIMER_SP804 || ARMV7M_SYSTICK || FSL_FTM_TIMER || VF_PIT_TIMER || OXNAS_RPS_TIMER || MTK_TIMER || CLKSRC_JCORE_PIT || RENESAS_OSTM || CLKSRC_PXA || CLKSRC_IMX_GPT || CLKSRC_IMX_TPM || CLKSRC_ST_LPC || GX6605S_TIMER || MILBEAUT_TIMER || MSC313E_TIMER",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "BCM2835_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "BCM_KONA_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "DAVINCI_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "DIGICOLOR_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "OMAP_DM_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": "( y )[!(ARCH_K3 || COMPILE_TEST) && (ARCH_K3)]"
        }
    ],
    "DW_APB_TIMER": [
        {
            "type": "bool",
            "rev_select": "X86_INTEL_MID || DW_APB_TIMER_OF",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "DW_APB_TIMER_OF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "FTTMR010_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "IXP4XX_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM || ARM64)",
            "restrict": ""
        }
    ],
    "ARMADA_370_XP_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM)",
            "restrict": ""
        }
    ],
    "MESON6_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "ORION_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM)",
            "restrict": ""
        }
    ],
    "OWL_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "RDA_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "SUN4I_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SUN5I_HSTIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "TEGRA_TIMER": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_2x_SOC || ARCH_TEGRA_3x_SOC || ARCH_TEGRA_114_SOC || ARCH_TEGRA_124_SOC || ARCH_TEGRA_210_SOC",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARCH_TEGRA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TEGRA186_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARCH_TEGRA || COMPILE_TEST) && (WATCHDOG && WATCHDOG_CORE)",
            "restrict": ""
        }
    ],
    "VT8500_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NPCM7XX_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CADENCE_TTC_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "ASM9260_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKSRC_NOMADIK_MTU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM)",
            "restrict": ""
        }
    ],
    "CLKSRC_DBX500_PRCMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CLPS711X_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "MXS_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "NSPIRE_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "KEYSTONE_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM || ARM64)",
            "restrict": ""
        }
    ],
    "INTEGRATOR_AP_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKSRC_LPC32XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM) && (ARM)",
            "restrict": ""
        }
    ],
    "CLKSRC_PISTACHIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLKSRC_TI_32K": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK)",
            "restrict": ""
        }
    ],
    "CLKSRC_STM32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (OF && ARM && ( ARCH_STM32 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CLKSRC_STM32_LP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (MFD_STM32_LPTIMER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLKSRC_MPS2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK)",
            "restrict": ""
        }
    ],
    "ARC_TIMERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK)",
            "restrict": ""
        }
    ],
    "ARC_TIMERS_64BIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARC_TIMERS)",
            "restrict": ""
        }
    ],
    "ARM_ARCH_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "ARM_ARCH_TIMER_EVTSTREAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_ARCH_TIMER)",
            "restrict": "( y )[!(y) && (ARM_ARCH_TIMER)]"
        }
    ],
    "ARM_ARCH_TIMER_OOL_WORKAROUND": [
        {
            "type": "bool",
            "rev_select": "FSL_ERRATUM_A008585 || HISILICON_ERRATUM_161010101 || ARM64_ERRATUM_858921 || SUN50I_ERRATUM_UNKNOWN1",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "FSL_ERRATUM_A008585": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_ARCH_TIMER && ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HISILICON_ERRATUM_161010101": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_ARCH_TIMER && ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM64_ERRATUM_858921": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_ARCH_TIMER && ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SUN50I_ERRATUM_UNKNOWN1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_ARCH_TIMER && ARM64 && ARCH_SUNXI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_GLOBAL_TIMER": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7779 || ARCH_SH73A0",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM)",
            "restrict": ""
        }
    ],
    "ARM_GT_INITIAL_PRESCALER_VAL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_GLOBAL_TIMER)",
            "restrict": "( 2 )[!(y) && (ARCH_ZYNQ)] || ( 1 )[!(y)]"
        }
    ],
    "ARM_TIMER_SP804": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM_GLOBAL_TIMER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARMV7M_SYSTICK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "ATMEL_PIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ATMEL_ST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ATMEL_TCB_CLKSRC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CLKSRC_EXYNOS_MCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM || ARM64) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CLKSRC_SAMSUNG_PWM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM) && (ARCH_EXYNOS || ARCH_S3C24XX || ARCH_S3C64XX || ARCH_S5PV210 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FSL_FTM_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "VF_PIT_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "OXNAS_RPS_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "SYS_SUPPORTS_SH_CMT": [
        {
            "type": "bool",
            "rev_select": "ARCH_RCAR_GEN2 || ARCH_RCAR_GEN3 || ARCH_RMOBILE",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "MTK_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SPRD_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM) && (( ARCH_SPRD || COMPILE_TEST ))",
            "restrict": "( ARCH_SPRD )[!(EXPERT)]"
        }
    ],
    "SYS_SUPPORTS_SH_MTU2": [
        {
            "type": "bool",
            "rev_select": "ARCH_R7S72100",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "SYS_SUPPORTS_SH_TMU": [
        {
            "type": "bool",
            "rev_select": "ARCH_RCAR_GEN1 || ARCH_RCAR_GEN3 || ARCH_RMOBILE",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "SYS_SUPPORTS_EM_STI": [
        {
            "type": "bool",
            "rev_select": "ARCH_EMEV2",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKSRC_JCORE_PIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SH_TIMER_CMT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": "( SYS_SUPPORTS_SH_CMT )[!(COMPILE_TEST)]"
        }
    ],
    "SH_TIMER_MTU2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": "( SYS_SUPPORTS_SH_MTU2 )[!(COMPILE_TEST)]"
        }
    ],
    "RENESAS_OSTM": [
        {
            "type": "bool",
            "rev_select": "ARCH_R7S72100 || ARCH_R7S9210",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SH_TIMER_TMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": "( SYS_SUPPORTS_SH_TMU )[!(COMPILE_TEST)]"
        }
    ],
    "EM_TIMER_STI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": "( SYS_SUPPORTS_EM_STI )[!(COMPILE_TEST)]"
        }
    ],
    "CLKSRC_QCOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (ARM)",
            "restrict": ""
        }
    ],
    "CLKSRC_VERSATILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK)",
            "restrict": "( y )[!(COMPILE_TEST) && (( ARCH_VEXPRESS || ARCH_VERSATILE ) && ARM)]"
        }
    ],
    "CLKSRC_MIPS_GIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (MIPS_GIC)",
            "restrict": ""
        }
    ],
    "CLKSRC_PXA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CLKSRC_IMX_GPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (( ARM || ARM64 ) && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "CLKSRC_IMX_TPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (( ARM || ARM64 ) && HAVE_CLK)",
            "restrict": ""
        }
    ],
    "TIMER_IMX_SYS_CTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "CLKSRC_ST_LPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "GXP_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": "( ARCH_HPE )[!(COMPILE_TEST && ! ARCH_HPE)]"
        }
    ],
    "RISCV_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK && RISCV && RISCV_SBI)",
            "restrict": ""
        }
    ],
    "CLINT_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (GENERIC_SCHED_CLOCK && RISCV)",
            "restrict": ""
        }
    ],
    "CSKY_MP_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (CSKY)",
            "restrict": ""
        }
    ],
    "GX6605S_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (CSKY)",
            "restrict": ""
        }
    ],
    "MILBEAUT_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (OF) && (ARM)",
            "restrict": ""
        }
    ],
    "MSC313E_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) )",
            "restrict": ""
        }
    ],
    "INGENIC_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (MIPS || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": "( MACH_INGENIC )[!(y)]"
        }
    ],
    "INGENIC_SYSOST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (MIPS || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "INGENIC_OST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (MIPS || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "MICROCHIP_PIT64B": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GOLDFISH_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( GENERIC_CLOCKEVENTS ) ) && (M68K || COMPILE_TEST) && (RTC_DRV_GOLDFISH)",
            "restrict": ""
        }
    ],
    "MAILBOX": [
        {
            "type": "bool",
            "rev_select": "ACPI_CPPC_LIB || IMX_REMOTEPROC || IMX_DSP_REMOTEPROC || OMAP_REMOTEPROC || ST_REMOTEPROC || STM32_RPROC || TI_K3_DSP_REMOTEPROC || TI_K3_R5_REMOTEPROC || MTK_CMDQ || ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC || ARCH_TEGRA_234_SOC || ZYNQMP_POWER",
            "dep": "",
            "restrict": ""
        }
    ],
    "APPLE_MAILBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_APPLE || ( ARM64 && COMPILE_TEST ))",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "ARM_MHU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "ARM_MHU_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "IMX_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PLATFORM_MHU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PL320_MBOX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARM_AMBA)",
            "restrict": ""
        }
    ],
    "ARMADA_37XX_RWTM_MBOX": [
        {
            "type": "tristate",
            "rev_select": "TURRIS_MOX_RWTM",
            "dep": "( MAILBOX ) && (ARCH_MVEBU || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "OMAP2PLUS_MBOX": [
        {
            "type": "tristate",
            "rev_select": "OMAP_REMOTEPROC || TI_K3_DSP_REMOTEPROC || TI_K3_R5_REMOTEPROC",
            "dep": "( MAILBOX ) && (ARCH_OMAP2PLUS || ARCH_K3)",
            "restrict": ""
        }
    ],
    "OMAP_MBOX_KFIFO_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MAILBOX ) && (OMAP2PLUS_MBOX)",
            "restrict": "( 256 )[!(y)]"
        }
    ],
    "ROCKCHIP_MBOX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PCC": [
        {
            "type": "bool",
            "rev_select": "ACPI_CPPC_LIB",
            "dep": "( MAILBOX ) && (ACPI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ALTERA_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BCM2835_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_BCM2835)",
            "restrict": ""
        }
    ],
    "STI_MBOX": [
        {
            "type": "tristate",
            "rev_select": "ST_REMOTEPROC",
            "dep": "( MAILBOX ) && (ARCH_STI && OF)",
            "restrict": ""
        }
    ],
    "TI_MESSAGE_MANAGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_KEYSTONE || ARCH_K3)",
            "restrict": ""
        }
    ],
    "HI3660_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (( ARCH_HISI || COMPILE_TEST )) && (OF)",
            "restrict": "( ARCH_HISI )[!(EXPERT)]"
        }
    ],
    "HI6220_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (( ARCH_HISI || COMPILE_TEST )) && (OF)",
            "restrict": "( ARCH_HISI )[!(EXPERT)]"
        }
    ],
    "MAILBOX_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "POLARFIRE_SOC_MAILBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (HAS_IOMEM) && (SOC_MICROCHIP_POLARFIRE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_APCS_IPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TEGRA_HSP_MBOX": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC || ARCH_TEGRA_234_SOC",
            "dep": "( MAILBOX ) && (ARCH_TEGRA)",
            "restrict": ""
        }
    ],
    "XGENE_SLIMPRO_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_XGENE)",
            "restrict": ""
        }
    ],
    "BCM_PDC_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM_FLEXRM_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARM64) && (ARCH_BCM_IPROC || COMPILE_TEST)",
            "restrict": "( m )[!(y) && (ARCH_BCM_IPROC)]"
        }
    ],
    "STM32_IPCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (MACH_STM32MP157 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_ADSP_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_CMDQ_MBOX": [
        {
            "type": "tristate",
            "rev_select": "MTK_CMDQ",
            "dep": "( MAILBOX ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ZYNQMP_IPI_MBOX": [
        {
            "type": "bool",
            "rev_select": "ZYNQMP_POWER",
            "dep": "( MAILBOX ) && (ARCH_ZYNQMP && OF)",
            "restrict": ""
        }
    ],
    "SUN6I_MSGBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "SPRD_MBOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_IPCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MAILBOX ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IOMMU_IOVA": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_TEGRA_VDE || TEGRA_HOST1X || DRM_TEGRA || VDPA_SIM || VDPA_USER || VIDEO_IPU3_IMGU || IOMMU_DMA || AMD_IOMMU || INTEL_IOMMU",
            "dep": "",
            "restrict": ""
        }
    ],
    "IOASID": [
        {
            "type": "tristate",
            "rev_select": "IOMMU_SVA || INTEL_IOMMU || INTEL_IOMMU_SVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "IOMMU_API": [
        {
            "type": "bool",
            "rev_select": "DRM_NOUVEAU || VFIO || XEN_GRANT_DMA_IOMMU || IOMMU_DMA || FSL_PAMU || MSM_IOMMU || AMD_IOMMU || INTEL_IOMMU || OMAP_IOMMU || ROCKCHIP_IOMMU || SUN50I_IOMMU || TEGRA_IOMMU_GART || TEGRA_IOMMU_SMMU || EXYNOS_IOMMU || IPMMU_VMSA || SPAPR_TCE_IOMMU || APPLE_DART || ARM_SMMU || ARM_SMMU_V3 || S390_IOMMU || S390_CCW_IOMMU || S390_AP_IOMMU || MTK_IOMMU || MTK_IOMMU_V1 || QCOM_IOMMU || HYPERV_IOMMU || VIRTIO_IOMMU || SPRD_IOMMU",
            "dep": "",
            "restrict": ""
        }
    ],
    "IOMMU_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "DRM_PANFROST",
            "dep": "(MMU)",
            "restrict": ""
        }
    ],
    "IOMMU_IO_PGTABLE": [
        {
            "type": "bool",
            "rev_select": "DRM_MSM || IOMMU_IO_PGTABLE_LPAE || IOMMU_IO_PGTABLE_ARMV7S || AMD_IOMMU",
            "dep": "( IOMMU_SUPPORT )",
            "restrict": ""
        }
    ],
    "IOMMU_IO_PGTABLE_LPAE": [
        {
            "type": "bool",
            "rev_select": "DRM_PANFROST || IPMMU_VMSA || APPLE_DART || ARM_SMMU || ARM_SMMU_V3 || QCOM_IOMMU",
            "dep": "( IOMMU_SUPPORT ) && (ARM || ARM64 || ( COMPILE_TEST && ! GENERIC_ATOMIC64 ))",
            "restrict": ""
        }
    ],
    "IOMMU_IO_PGTABLE_LPAE_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (IOMMU_IO_PGTABLE_LPAE)",
            "restrict": ""
        }
    ],
    "IOMMU_IO_PGTABLE_ARMV7S": [
        {
            "type": "bool",
            "rev_select": "MSM_IOMMU || MTK_IOMMU",
            "dep": "( IOMMU_SUPPORT ) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IOMMU_IO_PGTABLE_ARMV7S_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (IOMMU_IO_PGTABLE_ARMV7S)",
            "restrict": ""
        }
    ],
    "IOMMU_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "IOMMU_DEFAULT_DMA_STRICT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( ( IOMMU_API ) ) && ( IOMMU_DEFAULT_DMA_STRICT &&  !IOMMU_DEFAULT_DMA_LAZY &&  !IOMMU_DEFAULT_PASSTHROUGH )",
            "restrict": ""
        }
    ],
    "IOMMU_DEFAULT_DMA_LAZY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( ( IOMMU_API ) ) && ( IOMMU_DEFAULT_DMA_LAZY &&  !IOMMU_DEFAULT_DMA_STRICT &&  !IOMMU_DEFAULT_PASSTHROUGH )",
            "restrict": ""
        }
    ],
    "IOMMU_DEFAULT_PASSTHROUGH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( ( IOMMU_API ) ) && ( IOMMU_DEFAULT_PASSTHROUGH &&  !IOMMU_DEFAULT_DMA_STRICT &&  !IOMMU_DEFAULT_DMA_LAZY )",
            "restrict": ""
        }
    ],
    "OF_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (OF && IOMMU_API)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IOMMU_DMA": [
        {
            "type": "bool",
            "rev_select": "AMD_IOMMU || INTEL_IOMMU || VIRTIO_IOMMU",
            "dep": "( IOMMU_SUPPORT )",
            "restrict": ""
        }
    ],
    "IOMMU_SVA": [
        {
            "type": "bool",
            "rev_select": "INTEL_IOMMU_SVM || ARM_SMMU_V3_SVA",
            "dep": "( IOMMU_SUPPORT )",
            "restrict": ""
        }
    ],
    "FSL_PAMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (PCI) && (PHYS_64BIT) && (PPC_E500MC || ( COMPILE_TEST && PPC ))",
            "restrict": ""
        }
    ],
    "MSM_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM) && (ARCH_MSM8X60 || ARCH_MSM8960 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AMD_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (X86_64 && PCI && ACPI && HAVE_CMPXCHG_DOUBLE)",
            "restrict": ""
        }
    ],
    "AMD_IOMMU_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (AMD_IOMMU)",
            "restrict": "( HSA_AMD )[ X86_64 ]"
        }
    ],
    "AMD_IOMMU_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (AMD_IOMMU && IOMMU_DEBUGFS)",
            "restrict": ""
        }
    ],
    "DMAR_TABLE": [
        {
            "type": "bool",
            "rev_select": "INTEL_IOMMU || IRQ_REMAP",
            "dep": "( IOMMU_SUPPORT )",
            "restrict": ""
        }
    ],
    "DMAR_PERF": [
        {
            "type": "bool",
            "rev_select": "INTEL_IOMMU_DEBUGFS",
            "dep": "( IOMMU_SUPPORT )",
            "restrict": ""
        }
    ],
    "DMAR_DEBUG": [
        {
            "type": "bool",
            "rev_select": "INTEL_IOMMU_DEBUGFS",
            "dep": "( IOMMU_SUPPORT )",
            "restrict": ""
        }
    ],
    "INTEL_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (PCI_MSI && ACPI && ( X86 || IA64 ))",
            "restrict": ""
        }
    ],
    "INTEL_IOMMU_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( INTEL_IOMMU ) && (IOMMU_DEBUGFS)",
            "restrict": ""
        }
    ],
    "INTEL_IOMMU_SVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( INTEL_IOMMU ) && (X86_64)",
            "restrict": ""
        }
    ],
    "INTEL_IOMMU_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( INTEL_IOMMU )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INTEL_IOMMU_BROKEN_GFX_WA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( INTEL_IOMMU ) && (BROKEN && X86)",
            "restrict": ""
        }
    ],
    "INTEL_IOMMU_FLOPPY_WA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( INTEL_IOMMU ) && (X86)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INTEL_IOMMU_SCALABLE_MODE_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && ( INTEL_IOMMU )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IRQ_REMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (X86_64 && X86_IO_APIC && PCI_MSI && ACPI)",
            "restrict": ""
        }
    ],
    "OMAP_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP_IOMMU_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (OMAP_IOMMU && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SUN50I_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (HAS_DMA) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TEGRA_IOMMU_GART": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_TEGRA_2x_SOC) && (TEGRA_MC)",
            "restrict": ""
        }
    ],
    "TEGRA_IOMMU_SMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_TEGRA) && (TEGRA_AHB) && (TEGRA_MC)",
            "restrict": ""
        }
    ],
    "EXYNOS_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_EXYNOS || COMPILE_TEST) && (! CPU_BIG_ENDIAN)",
            "restrict": ""
        }
    ],
    "EXYNOS_IOMMU_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (EXYNOS_IOMMU)",
            "restrict": ""
        }
    ],
    "IPMMU_VMSA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_RENESAS || ( COMPILE_TEST && ! GENERIC_ATOMIC64 ))",
            "restrict": ""
        }
    ],
    "SPAPR_TCE_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (PPC_POWERNV || PPC_PSERIES)",
            "restrict": ""
        }
    ],
    "APPLE_DART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_APPLE || ( COMPILE_TEST && ! GENERIC_ATOMIC64 ))",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "ARM_SMMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM64 || ARM || ( COMPILE_TEST && ! GENERIC_ATOMIC64 ))",
            "restrict": ""
        }
    ],
    "ARM_SMMU_LEGACY_DT_BINDINGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM_SMMU = y && OF)",
            "restrict": ""
        }
    ],
    "ARM_SMMU_DISABLE_BYPASS_BY_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM_SMMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SMMU_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM_SMMU && ARCH_QCOM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SMMU_QCOM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM_SMMU_QCOM)",
            "restrict": ""
        }
    ],
    "ARM_SMMU_V3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM64)",
            "restrict": ""
        }
    ],
    "ARM_SMMU_V3_SVA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM_SMMU_V3)",
            "restrict": ""
        }
    ],
    "S390_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (S390 && PCI)",
            "restrict": "( y )[!(y) && (S390 && PCI)]"
        }
    ],
    "S390_CCW_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (S390 && CCW || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "S390_AP_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (S390 && ZCRYPT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_IOMMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_IOMMU_V1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARM) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_QCOM || ( COMPILE_TEST && ! GENERIC_ATOMIC64 ))",
            "restrict": ""
        }
    ],
    "HYPERV_IOMMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (HYPERV && X86)",
            "restrict": "( HYPERV )[!(y)]"
        }
    ],
    "VIRTIO_IOMMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (VIRTIO) && (( ARM64 || X86 ))",
            "restrict": ""
        }
    ],
    "SPRD_IOMMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IOMMU_SUPPORT ) && (ARCH_SPRD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "REMOTEPROC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_DMA)",
            "restrict": ""
        }
    ],
    "REMOTEPROC_CDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REMOTEPROC )",
            "restrict": ""
        }
    ],
    "IMX_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_MXC) && (HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "IMX_DSP_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_MXC) && (HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "INGENIC_VPU_RPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_SCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_OMAP4 || SOC_OMAP5 || SOC_DRA7XX) && (OMAP_IOMMU)",
            "restrict": ""
        }
    ],
    "OMAP_REMOTEPROC_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (OMAP_REMOTEPROC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "WKUP_M3_RPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (SOC_AM33XX || SOC_AM43XX)",
            "restrict": ""
        }
    ],
    "DA8XX_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_DAVINCI_DA8XX) && (DMA_CMA)",
            "restrict": ""
        }
    ],
    "KEYSTONE_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_KEYSTONE)",
            "restrict": ""
        }
    ],
    "MESON_MX_AO_ARC_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (HAS_IOMEM) && (( ARM && ARCH_MESON ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PRU_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (TI_PRUSS)",
            "restrict": "( TI_PRUSS )[!(y)]"
        }
    ],
    "QCOM_PIL_INFO": [
        {
            "type": "tristate",
            "rev_select": "QCOM_Q6V5_ADSP || QCOM_Q6V5_MSS || QCOM_Q6V5_PAS || QCOM_Q6V5_WCSS || QCOM_WCNSS_PIL",
            "dep": "( REMOTEPROC )",
            "restrict": ""
        }
    ],
    "QCOM_RPROC_COMMON": [
        {
            "type": "tristate",
            "rev_select": "QCOM_Q6V5_ADSP || QCOM_Q6V5_MSS || QCOM_Q6V5_PAS || QCOM_Q6V5_WCSS || QCOM_WCNSS_PIL",
            "dep": "( REMOTEPROC )",
            "restrict": ""
        }
    ],
    "QCOM_Q6V5_COMMON": [
        {
            "type": "tristate",
            "rev_select": "QCOM_Q6V5_ADSP || QCOM_Q6V5_MSS || QCOM_Q6V5_PAS || QCOM_Q6V5_WCSS",
            "dep": "( REMOTEPROC ) && (ARCH_QCOM) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "QCOM_Q6V5_ADSP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (OF && ARCH_QCOM) && (QCOM_SMEM) && (RPMSG_QCOM_SMD || RPMSG_QCOM_SMD = n) && (RPMSG_QCOM_GLINK_SMEM || RPMSG_QCOM_GLINK_SMEM = n) && (QCOM_SYSMON || QCOM_SYSMON = n) && (RPMSG_QCOM_GLINK || RPMSG_QCOM_GLINK = n) && (QCOM_AOSS_QMP || QCOM_AOSS_QMP = n)",
            "restrict": ""
        }
    ],
    "QCOM_Q6V5_MSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (OF && ARCH_QCOM) && (QCOM_SMEM) && (RPMSG_QCOM_SMD || RPMSG_QCOM_SMD = n) && (RPMSG_QCOM_GLINK_SMEM || RPMSG_QCOM_GLINK_SMEM = n) && (QCOM_SYSMON || QCOM_SYSMON = n) && (RPMSG_QCOM_GLINK || RPMSG_QCOM_GLINK = n) && (QCOM_AOSS_QMP || QCOM_AOSS_QMP = n)",
            "restrict": ""
        }
    ],
    "QCOM_Q6V5_PAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (OF && ARCH_QCOM) && (QCOM_SMEM) && (RPMSG_QCOM_SMD || RPMSG_QCOM_SMD = n) && (RPMSG_QCOM_GLINK_SMEM || RPMSG_QCOM_GLINK_SMEM = n) && (QCOM_SYSMON || QCOM_SYSMON = n) && (RPMSG_QCOM_GLINK || RPMSG_QCOM_GLINK = n) && (QCOM_AOSS_QMP || QCOM_AOSS_QMP = n)",
            "restrict": ""
        }
    ],
    "QCOM_Q6V5_WCSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (OF && ARCH_QCOM) && (QCOM_SMEM) && (RPMSG_QCOM_SMD || RPMSG_QCOM_SMD = n) && (RPMSG_QCOM_GLINK_SMEM || RPMSG_QCOM_GLINK_SMEM = n) && (QCOM_SYSMON || QCOM_SYSMON = n) && (RPMSG_QCOM_GLINK || RPMSG_QCOM_GLINK = n) && (QCOM_AOSS_QMP || QCOM_AOSS_QMP = n)",
            "restrict": ""
        }
    ],
    "QCOM_SYSMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (RPMSG) && (ARCH_QCOM) && (NET)",
            "restrict": ""
        }
    ],
    "QCOM_WCNSS_PIL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (OF && ARCH_QCOM) && (RPMSG_QCOM_SMD || RPMSG_QCOM_SMD = n) && (RPMSG_QCOM_GLINK_SMEM || RPMSG_QCOM_GLINK_SMEM = n) && (QCOM_SMEM) && (QCOM_SYSMON || QCOM_SYSMON = n) && (RPMSG_QCOM_GLINK || RPMSG_QCOM_GLINK = n)",
            "restrict": ""
        }
    ],
    "RCAR_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ST_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_STI)",
            "restrict": ""
        }
    ],
    "ST_SLIM_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "ST_FDMA",
            "dep": "( REMOTEPROC )",
            "restrict": ""
        }
    ],
    "STM32_RPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_STM32) && (REMOTEPROC)",
            "restrict": ""
        }
    ],
    "TI_K3_DSP_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_K3)",
            "restrict": ""
        }
    ],
    "TI_K3_R5_REMOTEPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( REMOTEPROC ) && (ARCH_K3)",
            "restrict": ""
        }
    ],
    "RPMSG": [
        {
            "type": "tristate",
            "rev_select": "VIDEO_STI_DELTA_DRIVER || RPMSG_MTK_SCP || RPMSG_QCOM_GLINK || RPMSG_QCOM_SMD || RPMSG_VIRTIO",
            "dep": "",
            "restrict": ""
        }
    ],
    "RPMSG_CHAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RPMSG) && (NET)",
            "restrict": ""
        }
    ],
    "RPMSG_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RPMSG && ( RPMSG_CHAR || RPMSG_CHAR = n ))",
            "restrict": ""
        }
    ],
    "RPMSG_NS": [
        {
            "type": "tristate",
            "rev_select": "RPMSG_VIRTIO",
            "dep": "(RPMSG)",
            "restrict": ""
        }
    ],
    "RPMSG_MTK_SCP": [
        {
            "type": "tristate",
            "rev_select": "MTK_SCP",
            "dep": "(MTK_SCP)",
            "restrict": ""
        }
    ],
    "RPMSG_QCOM_GLINK": [
        {
            "type": "tristate",
            "rev_select": "RPMSG_QCOM_GLINK_RPM || RPMSG_QCOM_GLINK_SMEM",
            "dep": "",
            "restrict": ""
        }
    ],
    "RPMSG_QCOM_GLINK_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (MAILBOX)",
            "restrict": ""
        }
    ],
    "RPMSG_QCOM_GLINK_SMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MAILBOX) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "RPMSG_QCOM_SMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MAILBOX) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "RPMSG_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_DMA)",
            "restrict": ""
        }
    ],
    "SOUNDWIRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ACPI || OF)",
            "restrict": ""
        }
    ],
    "SOUNDWIRE_CADENCE": [
        {
            "type": "tristate",
            "rev_select": "SOUNDWIRE_INTEL",
            "dep": "( SOUNDWIRE )",
            "restrict": ""
        }
    ],
    "SOUNDWIRE_INTEL": [
        {
            "type": "tristate",
            "rev_select": "SND_SOC_SOF_INTEL_SOUNDWIRE_LINK_BASELINE[SND_SOC_SOF_INTEL_SOUNDWIRE]",
            "dep": "( SOUNDWIRE ) && (ACPI && SND_SOC)",
            "restrict": ""
        }
    ],
    "SOUNDWIRE_QCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOUNDWIRE ) && (SND_SOC)",
            "restrict": ""
        }
    ],
    "SOUNDWIRE_GENERIC_ALLOCATION": [
        {
            "type": "tristate",
            "rev_select": "SOUNDWIRE_INTEL",
            "dep": "( SOUNDWIRE )",
            "restrict": ""
        }
    ],
    "OWL_PM_DOMAINS_HELPER": [
        {
            "type": "bool",
            "rev_select": "OWL_PM_DOMAINS",
            "dep": "( ARCH_ACTIONS || COMPILE_TEST )",
            "restrict": ""
        }
    ],
    "OWL_PM_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_ACTIONS || COMPILE_TEST ) && (PM)",
            "restrict": ""
        }
    ],
    "MESON_CANVAS": [
        {
            "type": "tristate",
            "rev_select": "DRM_MESON || VIDEO_MESON_VDEC",
            "dep": "(ARCH_MESON || COMPILE_TEST)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MESON_CLK_MEASURE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MESON || COMPILE_TEST)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "MESON_GX_SOCINFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ARM64 && ARCH_MESON ) || COMPILE_TEST)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "MESON_GX_PM_DOMAINS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MESON || COMPILE_TEST) && (PM && OF)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "MESON_EE_PM_DOMAINS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MESON || COMPILE_TEST) && (PM && OF)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "MESON_SECURE_PM_DOMAINS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_MESON || COMPILE_TEST ) && MESON_SM) && (PM && OF) && (HAVE_ARM_SMCCC)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "MESON_MX_SOCINFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ARM && ARCH_MESON ) || COMPILE_TEST)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "APPLE_PMGR_PWRSTATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_APPLE || COMPILE_TEST ) && (PM)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "APPLE_RTKIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_APPLE || COMPILE_TEST ) && (MAILBOX) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "APPLE_SART": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_APPLE || COMPILE_TEST ) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "ASPEED_LPC_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_ASPEED || COMPILE_TEST )",
            "restrict": "( ARCH_ASPEED )[!(y)]"
        }
    ],
    "ASPEED_LPC_SNOOP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_ASPEED || COMPILE_TEST )",
            "restrict": "( ARCH_ASPEED )[!(y)]"
        }
    ],
    "ASPEED_UART_ROUTING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_ASPEED || COMPILE_TEST )",
            "restrict": "( ARCH_ASPEED )[!(y)]"
        }
    ],
    "ASPEED_P2A_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_ASPEED || COMPILE_TEST )",
            "restrict": "( ARCH_ASPEED )[!(y)]"
        }
    ],
    "ASPEED_SOCINFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_ASPEED || COMPILE_TEST )",
            "restrict": "( ARCH_ASPEED )[!(y)] || ( ARCH_ASPEED )[!(y)]"
        }
    ],
    "AT91_SOC_ID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_AT91 || COMPILE_TEST)",
            "restrict": "( ARCH_AT91 )[!(y)]"
        }
    ],
    "AT91_SOC_SFR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM2835_POWER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_BCM2835 || ( COMPILE_TEST && OF ))",
            "restrict": "( y )[!(y) && (ARCH_BCM2835)]"
        }
    ],
    "RASPBERRYPI_POWER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_BCM2835 || ( COMPILE_TEST && OF )) && (RASPBERRYPI_FIRMWARE = y)",
            "restrict": ""
        }
    ],
    "SOC_BCM63XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SOC_BRCMSTB": [
        {
            "type": "bool",
            "rev_select": "PHY_BRCM_USB[ARCH_BRCMSTB]",
            "dep": "(ARM || ARM64 || BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BCM63XX_POWER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_BCM63XX ) && (BMIPS_GENERIC || ( COMPILE_TEST && OF ))",
            "restrict": ""
        }
    ],
    "BCM_PMB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_BCM4908 || ( COMPILE_TEST && OF ))",
            "restrict": "( ARCH_BCM4908 )[!(y)]"
        }
    ],
    "BRCMSTB_PM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_BRCMSTB ) && (PM) && (ARCH_BRCMSTB || BMIPS_GENERIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SOC_K210_SYSCTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RISCV && SOC_CANAAN && OF)",
            "restrict": "( SOC_CANAAN )[!(y)]"
        }
    ],
    "FSL_DPAA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ( FSL_SOC_BOOKE || ARCH_LAYERSCAPE ) && ARCH_DMA_ADDR_T_64BIT ))",
            "restrict": ""
        }
    ],
    "FSL_DPAA_CHECKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FSL_DPAA )",
            "restrict": ""
        }
    ],
    "FSL_BMAN_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSL_DPAA )",
            "restrict": ""
        }
    ],
    "FSL_BMAN_TEST_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FSL_DPAA ) && (FSL_BMAN_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_QMAN_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSL_DPAA )",
            "restrict": ""
        }
    ],
    "FSL_QMAN_TEST_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FSL_DPAA ) && (FSL_QMAN_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_QMAN_TEST_STASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FSL_DPAA ) && (FSL_QMAN_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QUICC_ENGINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF && HAS_IOMEM) && (PPC || ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "UCC_SLOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (SERIAL_QE)]"
        }
    ],
    "UCC_FAST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (UCC_GETH || QE_TDM)]"
        }
    ],
    "UCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (UCC_FAST || UCC_SLOW)]"
        }
    ],
    "QE_TDM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (FSL_UCC_HDLC)]"
        }
    ],
    "QE_USB": [
        {
            "type": "bool",
            "rev_select": "USB_FHCI_HCD",
            "dep": "",
            "restrict": "( y )[!(y) && (USB_FSL_QE)]"
        }
    ],
    "FSL_GUTS": [
        {
            "type": "bool",
            "rev_select": "MMC_SDHCI_OF_ESDHC || FSL_MC_DPIO",
            "dep": "",
            "restrict": ""
        }
    ],
    "FSL_MC_DPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(FSL_MC_BUS)",
            "restrict": ""
        }
    ],
    "DPAA2_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_LAYERSCAPE || COMPILE_TEST ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FSL_RCPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_SLEEP && ( ARM || ARM64 ))",
            "restrict": ""
        }
    ],
    "A64FX_DIAG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM64) && (ACPI)",
            "restrict": ""
        }
    ],
    "IMX_GPCV2_PM_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_MXC || ( COMPILE_TEST && OF )) && (PM)",
            "restrict": "( y )[!(y) && (SOC_IMX7D)]"
        }
    ],
    "SOC_IMX8M": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_MXC || COMPILE_TEST)",
            "restrict": "( ARCH_MXC && ARM64 )[!(y)]"
        }
    ],
    "IXP4XX_QMGR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_IXP4XX || COMPILE_TEST )",
            "restrict": ""
        }
    ],
    "IXP4XX_NPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_IXP4XX || COMPILE_TEST )",
            "restrict": ""
        }
    ],
    "LITEX": [
        {
            "type": "bool",
            "rev_select": "LITEX_SOC_CONTROLLER",
            "dep": "",
            "restrict": ""
        }
    ],
    "LITEX_SOC_CONTROLLER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTK_CMDQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MTK_DEVAPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "MTK_INFRACFG": [
        {
            "type": "bool",
            "rev_select": "MTK_CMDQ_MBOX || MTK_CMDQ || MTK_SCPSYS",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) )",
            "restrict": ""
        }
    ],
    "MTK_PMIC_WRAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "MTK_SCPSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) )",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "MTK_SCPSYS_PM_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (PM)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "MTK_MMSYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (HAS_IOMEM)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "MTK_SVS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MEDIATEK || COMPILE_TEST ) ) && (MTK_EFUSE && NVMEM)",
            "restrict": ""
        }
    ],
    "POLARFIRE_SOC_SYS_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(POLARFIRE_SOC_MAILBOX)",
            "restrict": ""
        }
    ],
    "PLAT_PXA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PXA_SSP": [
        {
            "type": "tristate",
            "rev_select": "SPI_PXA2XX[ARCH_PXA || ARCH_MMP] || SND_PXA_SOC_SSP || SND_SOC_TTC_DKB",
            "dep": "",
            "restrict": ""
        }
    ],
    "QCOM_AOSS_QMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (MAILBOX) && (COMMON_CLK && PM)",
            "restrict": ""
        }
    ],
    "QCOM_COMMAND_DB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (OF_RESERVED_MEM)",
            "restrict": ""
        }
    ],
    "QCOM_CPR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "QCOM_GENI_SE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_GSBI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_LLCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_KRYO_L2_ACCESSORS": [
        {
            "type": "bool",
            "rev_select": "QCOM_CLK_APCC_MSM8996 || QCOM_L2_PMU",
            "dep": "(ARCH_QCOM && ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_MDT_LOADER": [
        {
            "type": "tristate",
            "rev_select": "QCOM_IPA[ARCH_QCOM] || VIDEO_QCOM_VENUS[ARCH_QCOM] || DRM_MSM[ARCH_QCOM] || QCOM_Q6V5_ADSP || QCOM_Q6V5_MSS || QCOM_Q6V5_PAS || QCOM_Q6V5_WCSS || QCOM_WCNSS_PIL",
            "dep": "",
            "restrict": ""
        }
    ],
    "QCOM_OCMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "QCOM_PDR_HELPERS": [
        {
            "type": "tristate",
            "rev_select": "QCOM_APR || SLIM_QCOM_NGD_CTRL",
            "dep": "",
            "restrict": ""
        }
    ],
    "QCOM_QMI_HELPERS": [
        {
            "type": "tristate",
            "rev_select": "QCOM_IPA || ATH10K_SNOC || ATH11K || QCOM_SYSMON || QCOM_PDR_HELPERS || SLIM_QCOM_NGD_CTRL || SAMPLE_QMI_CLIENT",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "QCOM_RMTFS_MEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "QCOM_RPMH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (( QCOM_COMMAND_DB || ! QCOM_COMMAND_DB ))",
            "restrict": ""
        }
    ],
    "QCOM_RPMHPD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(QCOM_RPMH && QCOM_COMMAND_DB)",
            "restrict": ""
        }
    ],
    "QCOM_RPMPD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "QCOM_SMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (HWSPINLOCK)",
            "restrict": ""
        }
    ],
    "QCOM_SMD_RPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (RPMSG)",
            "restrict": ""
        }
    ],
    "QCOM_SMEM_STATE": [
        {
            "type": "bool",
            "rev_select": "QCOM_SMP2P || QCOM_SMSM",
            "dep": "",
            "restrict": ""
        }
    ],
    "QCOM_SMP2P": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MAILBOX) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "QCOM_SMSM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "QCOM_SOCINFO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "QCOM_SPM": [
        {
            "type": "tristate",
            "rev_select": "ARM_QCOM_SPM_CPUIDLE",
            "dep": "(ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_STATS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_QCOM && DEBUG_FS ) || COMPILE_TEST) && (QCOM_SMEM)",
            "restrict": ""
        }
    ],
    "QCOM_WCNSS_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (RPMSG)",
            "restrict": ""
        }
    ],
    "QCOM_APR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (RPMSG) && (NET)",
            "restrict": ""
        }
    ],
    "QCOM_ICC_BWMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SOC_RENESAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_RCAR_GEN1": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7779 || ARCH_R8A7778",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_RCAR_GEN2": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7794 || ARCH_R8A7790 || ARCH_R8A7793 || ARCH_R8A7791 || ARCH_R8A7792 || ARCH_R8A77470 || ARCH_R8A7745 || ARCH_R8A7742 || ARCH_R8A7743 || ARCH_R8A7744",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_RCAR_GEN3": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77995 || ARCH_R8A77990 || ARCH_R8A77950 || ARCH_R8A77951 || ARCH_R8A77965 || ARCH_R8A77960 || ARCH_R8A77961 || ARCH_R8A779F0 || ARCH_R8A77980 || ARCH_R8A77970 || ARCH_R8A779A0 || ARCH_R8A779G0 || ARCH_R8A774C0 || ARCH_R8A774E1 || ARCH_R8A774A1 || ARCH_R8A774B1",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_RMOBILE": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7740 || ARCH_R8A73A4 || ARCH_SH73A0",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_RZG2L": [
        {
            "type": "bool",
            "rev_select": "ARCH_R9A07G043 || ARCH_R9A07G044 || ARCH_R9A07G054",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_RZN1": [
        {
            "type": "bool",
            "rev_select": "ARCH_R9A06G032",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_EMEV2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7794": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7779": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7790": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7778": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7793": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7791": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7792": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7740": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A73A4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R7S72100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R7S9210": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77470": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7745": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7742": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7743": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A7744": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R9A06G032": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_SH73A0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM && ARCH_RENESAS )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77995": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77990": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77950": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77951": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77965": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77960": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77961": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A779F0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77980": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A77970": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A779A0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A779G0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A774C0": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A774E1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A774A1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R8A774B1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R9A07G043": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R9A07G044": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R9A07G054": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_R9A09G011": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_RENESAS ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "RST_RCAR": [
        {
            "type": "bool",
            "rev_select": "ARCH_RCAR_GEN1 || ARCH_RCAR_GEN2 || ARCH_RCAR_GEN3",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_RCAR": [
        {
            "type": "bool",
            "rev_select": "SYSC_R8A77995 || SYSC_R8A7794 || SYSC_R8A77990 || SYSC_R8A7779 || SYSC_R8A7790 || SYSC_R8A7795 || SYSC_R8A7791 || SYSC_R8A77965 || SYSC_R8A77960 || SYSC_R8A77961 || SYSC_R8A7792 || SYSC_R8A77980 || SYSC_R8A77970 || SYSC_R8A77470 || SYSC_R8A7745 || SYSC_R8A7742 || SYSC_R8A7743 || SYSC_R8A774C0 || SYSC_R8A774E1 || SYSC_R8A774A1 || SYSC_R8A774B1",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_RCAR_GEN4": [
        {
            "type": "bool",
            "rev_select": "SYSC_R8A779F0 || SYSC_R8A779A0 || SYSC_R8A779G0",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77995": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77995",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7794": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7794",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77990": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77990",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7779": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7779",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7790": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7790",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7795": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77950 || ARCH_R8A77951",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7791": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7793 || ARCH_R8A7791",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77965": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77965",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77960": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77960",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77961": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77961",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A779F0": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A779F0",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7792": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7792",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77980": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77980",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77970": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77970",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A779A0": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A779A0",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A779G0": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A779G0",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_RMOBILE": [
        {
            "type": "bool",
            "rev_select": "ARCH_RMOBILE",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A77470": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A77470",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7745": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7745",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7742": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7742",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A7743": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A7743 || ARCH_R8A7744",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A774C0": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A774C0",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A774E1": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A774E1",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A774A1": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A774A1",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "SYSC_R8A774B1": [
        {
            "type": "bool",
            "rev_select": "ARCH_R8A774B1",
            "dep": "( SOC_RENESAS )",
            "restrict": ""
        }
    ],
    "ROCKCHIP_GRF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_ROCKCHIP || COMPILE_TEST )",
            "restrict": "( y )[!(COMPILE_TEST) && (ARCH_ROCKCHIP)]"
        }
    ],
    "ROCKCHIP_IODOMAIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_ROCKCHIP || COMPILE_TEST ) && (OF)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_PM_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_ROCKCHIP || COMPILE_TEST ) && (PM)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_DTPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ARCH_ROCKCHIP || COMPILE_TEST ) && (DTPM && m)",
            "restrict": ""
        }
    ],
    "SOC_SAMSUNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "EXYNOS_ASV_ARM": [
        {
            "type": "bool",
            "rev_select": "EXYNOS_CHIPID[ARM && ARCH_EXYNOS]",
            "dep": "( SOC_SAMSUNG ) && (EXYNOS_CHIPID)",
            "restrict": ""
        }
    ],
    "EXYNOS_CHIPID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": "( ARCH_EXYNOS )[!(y)]"
        }
    ],
    "EXYNOS_USI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": "( ARCH_EXYNOS && ARM64 )[!(y)]"
        }
    ],
    "EXYNOS_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (ARCH_EXYNOS || ( ( ARM || ARM64 ) && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "EXYNOS_PMU_ARM_DRIVERS": [
        {
            "type": "bool",
            "rev_select": "EXYNOS_PMU[ARM && ARCH_EXYNOS]",
            "dep": "( SOC_SAMSUNG ) && (EXYNOS_PMU)",
            "restrict": ""
        }
    ],
    "EXYNOS_PM_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (( ARCH_EXYNOS && PM_GENERIC_DOMAINS ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SAMSUNG_PM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (PM && DEBUG_KERNEL) && (PLAT_S3C24XX || ARCH_S3C64XX || ARCH_S5PV210) && (DEBUG_S3C24XX_UART || DEBUG_S3C2410_UART) && (DEBUG_LL && MMU)",
            "restrict": ""
        }
    ],
    "S3C_PM_DEBUG_LED_SMDK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (PM && ( MACH_SMDK6410 ))",
            "restrict": ""
        }
    ],
    "SAMSUNG_PM_CHECK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (PM && ( PLAT_S3C24XX || ARCH_S3C64XX || ARCH_S5PV210 ))",
            "restrict": ""
        }
    ],
    "SAMSUNG_PM_CHECK_CHUNKSIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (PM && SAMSUNG_PM_CHECK)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "EXYNOS_REGULATOR_COUPLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SAMSUNG ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SIFIVE_L2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_SIFIVE )",
            "restrict": ""
        }
    ],
    "SUNXI_MBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM || ARM64)",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "SUNXI_SRAM": [
        {
            "type": "bool",
            "rev_select": "SUN50I_DE2_BUS || USB_MUSB_SUNXI || VIDEO_SUNXI_CEDRUS",
            "dep": "",
            "restrict": "( ARCH_SUNXI )[!(y)]"
        }
    ],
    "ARCH_TEGRA_2x_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_3x_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_114_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_124_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_132_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_210_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_186_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_194_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "ARCH_TEGRA_234_SOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ARCH_TEGRA ) && ( ARM64 )",
            "restrict": ""
        }
    ],
    "SOC_TEGRA_FUSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_TEGRA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SOC_TEGRA_FLOWCTRL": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_2x_SOC || ARCH_TEGRA_3x_SOC || ARCH_TEGRA_114_SOC || ARCH_TEGRA_124_SOC || ARCH_TEGRA_132_SOC || ARCH_TEGRA_210_SOC",
            "dep": "",
            "restrict": ""
        }
    ],
    "SOC_TEGRA_PMC": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_2x_SOC || ARCH_TEGRA_3x_SOC || ARCH_TEGRA_114_SOC || ARCH_TEGRA_124_SOC || ARCH_TEGRA_132_SOC || ARCH_TEGRA_210_SOC || ARCH_TEGRA_186_SOC || ARCH_TEGRA_194_SOC || ARCH_TEGRA_234_SOC",
            "dep": "",
            "restrict": ""
        }
    ],
    "SOC_TEGRA_POWERGATE_BPMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM_GENERIC_DOMAINS) && (TEGRA_BPMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SOC_TEGRA20_VOLTAGE_COUPLER": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_2x_SOC[REGULATOR]",
            "dep": "(ARCH_TEGRA_2x_SOC || COMPILE_TEST) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "SOC_TEGRA30_VOLTAGE_COUPLER": [
        {
            "type": "bool",
            "rev_select": "ARCH_TEGRA_3x_SOC[REGULATOR]",
            "dep": "(ARCH_TEGRA_3x_SOC || COMPILE_TEST) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "SOC_TI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEYSTONE_NAVIGATOR_QMSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_TI ) && (ARCH_KEYSTONE)",
            "restrict": ""
        }
    ],
    "KEYSTONE_NAVIGATOR_DMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_TI ) && (ARCH_KEYSTONE)",
            "restrict": ""
        }
    ],
    "AMX3_PM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_TI ) && (SOC_AM33XX || SOC_AM43XX) && (WKUP_M3_IPC && TI_EMIF_SRAM && SRAM && RTC_DRV_OMAP)",
            "restrict": ""
        }
    ],
    "WKUP_M3_IPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_TI ) && (WKUP_M3_RPROC) && (OMAP2PLUS_MBOX)",
            "restrict": ""
        }
    ],
    "TI_SCI_PM_DOMAINS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_TI ) && (TI_SCI_PROTOCOL) && (PM_GENERIC_DOMAINS)",
            "restrict": ""
        }
    ],
    "TI_K3_RINGACC": [
        {
            "type": "bool",
            "rev_select": "TI_K3_UDMA",
            "dep": "( SOC_TI ) && (ARCH_K3 || COMPILE_TEST) && (TI_SCI_INTA_IRQCHIP)",
            "restrict": ""
        }
    ],
    "TI_K3_SOCINFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SOC_TI ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TI_PRUSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SOC_TI ) && (SOC_AM33XX || SOC_AM43XX || SOC_DRA7XX || ARCH_KEYSTONE || ARCH_K3)",
            "restrict": ""
        }
    ],
    "TI_SCI_INTA_MSI_DOMAIN": [
        {
            "type": "bool",
            "rev_select": "TI_SCI_INTA_IRQCHIP",
            "dep": "",
            "restrict": ""
        }
    ],
    "UX500_SOC_ID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_U8500 || COMPILE_TEST)",
            "restrict": "( ARCH_U8500 )[!(y)]"
        }
    ],
    "SOC_INTEGRATOR_CM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_INTEGRATOR)",
            "restrict": ""
        }
    ],
    "SOC_REALVIEW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_REALVIEW)",
            "restrict": ""
        }
    ],
    "ZYNQMP_POWER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM && ZYNQMP_FIRMWARE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ZYNQMP_PM_DOMAINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM && ZYNQMP_FIRMWARE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XLNX_EVENT_MANAGER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ZYNQMP_FIRMWARE)",
            "restrict": "( ZYNQMP_FIRMWARE )[!(y)]"
        }
    ],
    "PM_DEVFREQ": [
        {
            "type": "bool",
            "rev_select": "DRM_LIMA || DRM_PANFROST || SCSI_UFSHCD || TEGRA20_EMC",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEVFREQ_GOV_SIMPLE_ONDEMAND": [
        {
            "type": "tristate",
            "rev_select": "DRM_LIMA || DRM_PANFROST || SCSI_UFSHCD || ARM_EXYNOS_BUS_DEVFREQ || ARM_RK3399_DMC_DEVFREQ || ARM_SUN8I_A33_MBUS_DEVFREQ || TEGRA20_EMC",
            "dep": "( PM_DEVFREQ )",
            "restrict": ""
        }
    ],
    "DEVFREQ_GOV_PERFORMANCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ )",
            "restrict": ""
        }
    ],
    "DEVFREQ_GOV_POWERSAVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ )",
            "restrict": ""
        }
    ],
    "DEVFREQ_GOV_USERSPACE": [
        {
            "type": "tristate",
            "rev_select": "ARM_IMX_BUS_DEVFREQ || ARM_IMX8M_DDRC_DEVFREQ",
            "dep": "( PM_DEVFREQ )",
            "restrict": ""
        }
    ],
    "DEVFREQ_GOV_PASSIVE": [
        {
            "type": "tristate",
            "rev_select": "ARM_EXYNOS_BUS_DEVFREQ || ARM_MEDIATEK_CCI_DEVFREQ",
            "dep": "( PM_DEVFREQ )",
            "restrict": ""
        }
    ],
    "ARM_EXYNOS_BUS_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_IMX_BUS_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_IMX8M_DDRC_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (( ARCH_MXC && HAVE_ARM_SMCCC ) || ( COMPILE_TEST && HAVE_ARM_SMCCC ))",
            "restrict": ""
        }
    ],
    "ARM_TEGRA_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (ARCH_TEGRA_3x_SOC || ARCH_TEGRA_114_SOC || ARCH_TEGRA_132_SOC || ARCH_TEGRA_124_SOC || ARCH_TEGRA_210_SOC || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "ARM_MEDIATEK_CCI_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (ARM_MEDIATEK_CPUFREQ || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_RK3399_DMC_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (( ARCH_ROCKCHIP && HAVE_ARM_SMCCC ) || ( COMPILE_TEST && HAVE_ARM_SMCCC ))",
            "restrict": ""
        }
    ],
    "ARM_SUN8I_A33_MBUS_DEVFREQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && (ARCH_SUNXI || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PM_DEVFREQ_EVENT": [
        {
            "type": "bool",
            "rev_select": "ARM_EXYNOS_BUS_DEVFREQ || ARM_RK3399_DMC_DEVFREQ",
            "dep": "( PM_DEVFREQ )",
            "restrict": ""
        }
    ],
    "DEVFREQ_EVENT_EXYNOS_NOCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PM_DEVFREQ ) && ( PM_DEVFREQ_EVENT ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DEVFREQ_EVENT_EXYNOS_PPMU": [
        {
            "type": "tristate",
            "rev_select": "ARM_EXYNOS_BUS_DEVFREQ",
            "dep": "( PM_DEVFREQ ) && ( PM_DEVFREQ_EVENT ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DEVFREQ_EVENT_ROCKCHIP_DFI": [
        {
            "type": "tristate",
            "rev_select": "ARM_RK3399_DMC_DEVFREQ",
            "dep": "( PM_DEVFREQ ) && ( PM_DEVFREQ_EVENT ) && (ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EXTCON": [
        {
            "type": "tristate",
            "rev_select": "CHARGER_MANAGER || DRM_ITE_IT6505 || DRM_SIL_SII8620 || USB_CHIPIDEA || USB_PHY || PHY_NS2_USB_DRD || PHY_ROCKCHIP_TYPEC",
            "dep": "",
            "restrict": ""
        }
    ],
    "EXTCON_ADC_JACK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (IIO)",
            "restrict": ""
        }
    ],
    "EXTCON_AXP288": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (MFD_AXP20X && USB_SUPPORT && X86 && ACPI && IOSF_MBI)",
            "restrict": ""
        }
    ],
    "EXTCON_FSA9480": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (INPUT && I2C)",
            "restrict": ""
        }
    ],
    "EXTCON_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EXTCON_INTEL_INT3496": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (GPIOLIB && ACPI && ( X86 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "EXTCON_INTEL_CHT_WC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (INTEL_SOC_PMIC_CHTWC) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "EXTCON_INTEL_MRFLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (INTEL_SOC_PMIC_MRFLD)",
            "restrict": ""
        }
    ],
    "EXTCON_MAX14577": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (MFD_MAX14577)",
            "restrict": ""
        }
    ],
    "EXTCON_MAX3355": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EXTCON_MAX77693": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (MFD_MAX77693 && INPUT)",
            "restrict": ""
        }
    ],
    "EXTCON_MAX77843": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (MFD_MAX77843)",
            "restrict": ""
        }
    ],
    "EXTCON_MAX8997": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (MFD_MAX8997 && IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "EXTCON_PALMAS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "EXTCON_PTN5150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (I2C && ( GPIOLIB || COMPILE_TEST )) && (USB_ROLE_SWITCH || ! USB_ROLE_SWITCH)",
            "restrict": ""
        }
    ],
    "EXTCON_QCOM_SPMI_MISC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EXTCON_RT8973A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (I2C)",
            "restrict": ""
        }
    ],
    "EXTCON_SM5502": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (I2C)",
            "restrict": ""
        }
    ],
    "EXTCON_USB_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "EXTCON_USBC_CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "EXTCON_USBC_TUSB320": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( EXTCON ) && (I2C)",
            "restrict": ""
        }
    ],
    "MEMORY": [
        {
            "type": "bool",
            "rev_select": "MTD_NAND_FSL_IFC || DRM_MEDIATEK || MTK_IOMMU || MTK_IOMMU_V1",
            "dep": "",
            "restrict": ""
        }
    ],
    "DDR": [
        {
            "type": "bool",
            "rev_select": "TI_EMIF || EXYNOS5422_DMC || TEGRA20_EMC || TEGRA30_EMC",
            "dep": "( MEMORY )",
            "restrict": ""
        }
    ],
    "ARM_PL172_MPMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARM_AMBA && OF)",
            "restrict": ""
        }
    ],
    "ATMEL_SDRAMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_AT91 || COMPILE_TEST) && (OF)",
            "restrict": "( y )[!(y) && (ARCH_AT91)]"
        }
    ],
    "ATMEL_EBI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_AT91 || COMPILE_TEST) && (OF)",
            "restrict": "( y )[!(y) && (ARCH_AT91)]"
        }
    ],
    "BRCMSTB_DPFE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": "( ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "BT1_L2_CTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (MIPS_BAIKAL_T1 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TI_AEMIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_DAVINCI || ARCH_KEYSTONE || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "TI_EMIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP_GPMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (OF_ADDRESS) && (ARCH_OMAP2PLUS || ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP_GPMC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (OMAP_GPMC)",
            "restrict": ""
        }
    ],
    "TI_EMIF_SRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (SOC_AM33XX || SOC_AM43XX || ( ARM && CPU_V7 && COMPILE_TEST )) && (SRAM)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_EMIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (FPGA_DFL && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MVEBU_DEVBUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (PLAT_ORION || COMPILE_TEST) && (OF)",
            "restrict": "( y )[!(y) && (PLAT_ORION)]"
        }
    ],
    "FSL_CORENET_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (FSL_SOC_BOOKE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FSL_IFC": [
        {
            "type": "bool",
            "rev_select": "MTD_NAND_FSL_IFC",
            "dep": "( MEMORY ) && (FSL_SOC || ARCH_LAYERSCAPE || SOC_LS1021A || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "JZ4780_NEMC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (MIPS || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "MTK_SMI": [
        {
            "type": "tristate",
            "rev_select": "DRM_MEDIATEK || MTK_IOMMU || MTK_IOMMU_V1",
            "dep": "( MEMORY ) && (ARCH_MEDIATEK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "DA8XX_DDRCTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_DAVINCI_DA8XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PL353_SMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARM || COMPILE_TEST) && (ARM_AMBA)",
            "restrict": "( y )[!(y) && (ARM)]"
        }
    ],
    "RENESAS_RPCIF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STM32_FMC2_EBI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && (MACH_STM32MP157 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SAMSUNG_MC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY )",
            "restrict": ""
        }
    ],
    "EXYNOS5422_DMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && ( SAMSUNG_MC ) && (ARCH_EXYNOS || ( COMPILE_TEST && HAS_IOMEM )) && (DEVFREQ_GOV_SIMPLE_ONDEMAND) && (( PM_DEVFREQ && PM_DEVFREQ_EVENT ))",
            "restrict": ""
        }
    ],
    "EXYNOS_SROM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && ( SAMSUNG_MC ) && (( ARM && ARCH_EXYNOS ) || ( COMPILE_TEST && HAS_IOMEM ))",
            "restrict": ""
        }
    ],
    "TEGRA_MC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MEMORY ) && (ARCH_TEGRA || ( COMPILE_TEST && COMMON_CLK ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA20_EMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && ( TEGRA_MC ) && (ARCH_TEGRA_2x_SOC || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA30_EMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && ( TEGRA_MC ) && (ARCH_TEGRA_3x_SOC || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA124_EMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && ( TEGRA_MC ) && (ARCH_TEGRA_124_SOC || COMPILE_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEGRA210_EMC_TABLE": [
        {
            "type": "bool",
            "rev_select": "TEGRA210_EMC",
            "dep": "( MEMORY ) && ( TEGRA_MC ) && (ARCH_TEGRA_210_SOC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TEGRA210_EMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MEMORY ) && ( TEGRA_MC ) && (ARCH_TEGRA_210_SOC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IIO_BUFFER": [
        {
            "type": "bool",
            "rev_select": "TOUCHSCREEN_ADC || AD5933 || ADXL355_I2C || ADXL355_SPI || ADXL367 || ADXL372 || BMA180 || BMA220 || BMA400 || BMC150_ACCEL || BMI088_ACCEL || HID_SENSOR_ACCEL_3D || KXSD9 || KXCJK1013 || MMA7455 || MMA8452 || MXC4005 || SCA3000 || SCA3300 || STK8312 || STK8BA50 || AD_SIGMA_DELTA || AD7266 || AD7298 || AD7476 || AD7606 || AD7766 || AD7768_1 || AD7887 || AD7923 || AD799X || ADI_AXI_ADC || AT91_ADC || AT91_SAMA5D2_ADC || CC10001_ADC || CPCAP_ADC || DLN2_ADC || MXS_LRADC_ADC || HX711 || INA2XX_ADC || INGENIC_ADC || MAX1027 || MAX1118 || MAX1363 || MEDIATEK_MT6360_ADC || ROCKCHIP_SARADC || SD_ADC_MODULATOR || STM32_ADC_CORE || STM32_DFSDM_ADC || TI_ADC081C || TI_ADC0832 || TI_ADC084S021 || TI_ADC12138 || TI_ADC108S102 || TI_ADC161S626 || TI_ADS1015 || TI_ADS7950 || TI_ADS131E08 || TI_AM335X_ADC || TI_TLC4541 || TI_TSC2046 || VF610_ADC || XILINX_XADC || ATLAS_PH_SENSOR || CCS811 || PMS7003 || SCD30_CORE || SCD4X || SPS30 || IIO_CROS_EC_SENSORS_CORE || IIO_SCMI || IIO_SSP_SENSORS_COMMONS || IIO_SIMPLE_DUMMY_BUFFER || ADXRS290 || BMG160 || FXAS21002C || HID_SENSOR_GYRO_3D || MPU3050 || AFE4403 || AFE4404 || MAX30100 || MAX30102 || AM2315 || HDC100X || HID_SENSOR_HUMIDITY || HTS221 || BMI160 || KMX61 || INV_ICM42600 || INV_MPU6050_IIO || IIO_ST_LSM6DSX || ACPI_ALS || ADJD_S311 || APDS9960 || AS73211 || GP2AP020A00F || ISL29125 || HID_SENSOR_ALS || HID_SENSOR_PROX || LTR501 || MAX44000 || SI1145 || ST_UVIS25 || TCS3414 || TCS3472 || VCNL4000 || VCNL4035 || AK8974 || AK8975 || BMC150_MAGN || MAG3110 || HID_SENSOR_MAGNETOMETER_3D || SENSORS_HMC5843 || SENSORS_RM3100 || YAMAHA_YAS530 || HID_SENSOR_INCLINOMETER_3D || HID_SENSOR_DEVICE_ROTATION || HID_SENSOR_CUSTOM_INTEL_HINGE || LMP91000 || DLHL60D || HID_SENSOR_PRESS || MPL3115 || MS5611 || ZPA2326 || AS3935 || ISL29501 || LIDAR_LITE_V2 || SX9310 || SX9324 || SX9360 || SX9500 || SRF08 || MAXIM_THERMOCOUPLE || HID_SENSOR_TEMP",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_BUFFER_CB": [
        {
            "type": "tristate",
            "rev_select": "JOYSTICK_ADC || TOUCHSCREEN_ADC || SND_SOC_STM32_DFSDM || LMP91000",
            "dep": "( IIO ) && ( IIO_BUFFER )",
            "restrict": ""
        }
    ],
    "IIO_BUFFER_DMA": [
        {
            "type": "tristate",
            "rev_select": "IIO_BUFFER_DMAENGINE",
            "dep": "( IIO ) && ( IIO_BUFFER )",
            "restrict": ""
        }
    ],
    "IIO_BUFFER_DMAENGINE": [
        {
            "type": "tristate",
            "rev_select": "ADI_AXI_ADC",
            "dep": "( IIO ) && ( IIO_BUFFER )",
            "restrict": ""
        }
    ],
    "IIO_BUFFER_HW_CONSUMER": [
        {
            "type": "tristate",
            "rev_select": "ADI_AXI_ADC || STM32_DFSDM_ADC",
            "dep": "( IIO ) && ( IIO_BUFFER )",
            "restrict": ""
        }
    ],
    "IIO_KFIFO_BUF": [
        {
            "type": "tristate",
            "rev_select": "AD5933 || IIO_TRIGGERED_BUFFER || SCA3000 || INA2XX_ADC || TI_AM335X_ADC || IIO_SCMI || IIO_SSP_SENSORS_COMMONS || IIO_SIMPLE_DUMMY_BUFFER || MAX30100 || MAX30102 || IIO_ST_LSM6DSX || ACPI_ALS || APDS9960 || ISL29501",
            "dep": "( IIO ) && ( IIO_BUFFER )",
            "restrict": ""
        }
    ],
    "IIO_TRIGGERED_BUFFER": [
        {
            "type": "tristate",
            "rev_select": "ADXL355_I2C || ADXL355_SPI || ADXL367 || ADXL372 || BMA180 || BMA220 || BMA400 || BMC150_ACCEL || BMI088_ACCEL || IIO_ST_ACCEL_3AXIS[( IIO_BUFFER )] || KXSD9 || KXCJK1013 || MMA7455 || MMA8452 || MXC4005 || SCA3300 || STK8312 || STK8BA50 || AD_SIGMA_DELTA || AD7266 || AD7298 || AD7476 || AD7606 || AD7766 || AD7768_1 || AD7887 || AD7923 || AD799X || AT91_ADC || AT91_SAMA5D2_ADC || CC10001_ADC || CPCAP_ADC || DLN2_ADC || MXS_LRADC_ADC || HX711 || MAX1027 || MAX1118 || MAX1363 || MEDIATEK_MT6360_ADC || ROCKCHIP_SARADC || SD_ADC_MODULATOR || STM32_ADC_CORE || STM32_DFSDM_ADC || TI_ADC081C || TI_ADC0832 || TI_ADC084S021 || TI_ADC12138 || TI_ADC108S102 || TI_ADC161S626 || TI_ADS1015 || TI_ADS7950 || TI_ADS131E08 || TI_TLC4541 || TI_TSC2046 || VF610_ADC || XILINX_XADC || ATLAS_PH_SENSOR || CCS811 || PMS7003 || SCD30_CORE || SCD4X || SPS30 || IIO_CROS_EC_SENSORS_CORE || HID_SENSOR_IIO_TRIGGER || IIO_SIMPLE_DUMMY_BUFFER || ADXRS290 || BMG160 || FXAS21002C || MPU3050 || IIO_ST_GYRO_3AXIS[( IIO_BUFFER )] || ITG3200[IIO_BUFFER] || AFE4403 || AFE4404 || AM2315 || HDC100X || HTS221 || BMI160 || KMX61 || INV_MPU6050_IIO || IIO_ADIS_LIB_BUFFER || ACPI_ALS || ADJD_S311 || AS73211 || GP2AP020A00F || ISL29125 || LTR501 || MAX44000 || SI1145 || ST_UVIS25 || TCS3414 || TCS3472 || VCNL4000 || VCNL4035 || AK8974 || AK8975 || BMC150_MAGN || MAG3110 || IIO_ST_MAGN_3AXIS[( IIO_BUFFER )] || SENSORS_HMC5843 || SENSORS_RM3100 || YAMAHA_YAS530 || HID_SENSOR_CUSTOM_INTEL_HINGE || LMP91000 || DLHL60D || MPL3115 || MS5611 || IIO_ST_PRESS[( IIO_BUFFER )] || ZPA2326 || AS3935 || ISL29501 || LIDAR_LITE_V2 || SX9310 || SX9324 || SX9360 || SX9500 || SRF08 || MAXIM_THERMOCOUPLE",
            "dep": "( IIO ) && ( IIO_BUFFER )",
            "restrict": ""
        }
    ],
    "IIO_CONFIGFS": [
        {
            "type": "tristate",
            "rev_select": "IIO_SW_DEVICE || IIO_SW_TRIGGER",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_TRIGGER": [
        {
            "type": "bool",
            "rev_select": "IIO_TRIGGERED_BUFFER || IIO_TRIGGERED_EVENT || AD7266 || AD7768_1 || HID_SENSOR_IIO_TRIGGER || IIO_SIMPLE_DUMMY_BUFFER",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_CONSUMERS_PER_TRIGGER": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_TRIGGER)",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "IIO_SW_DEVICE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_SW_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_TRIGGERED_EVENT": [
        {
            "type": "tristate",
            "rev_select": "HI8435",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ADIS16201": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16209": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXL313": [
        {
            "type": "tristate",
            "rev_select": "ADXL313_I2C || ADXL313_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ADXL313_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ADXL313_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXL345": [
        {
            "type": "tristate",
            "rev_select": "ADXL345_I2C || ADXL345_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ADXL345_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (INPUT_ADXL34X = n) && (I2C)",
            "restrict": ""
        }
    ],
    "ADXL345_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (INPUT_ADXL34X = n) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXL355": [
        {
            "type": "tristate",
            "rev_select": "ADXL355_I2C || ADXL355_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ADXL355_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ADXL355_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXL367": [
        {
            "type": "tristate",
            "rev_select": "ADXL367_SPI || ADXL367_I2C",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ADXL367_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXL367_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ADXL372": [
        {
            "type": "tristate",
            "rev_select": "ADXL372_SPI || ADXL372_I2C",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ADXL372_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXL372_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BMA180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C && INPUT_BMA150 = n)",
            "restrict": ""
        }
    ],
    "BMA220": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "BMA400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMA400_I2C": [
        {
            "type": "tristate",
            "rev_select": "BMA400[I2C]",
            "dep": "( IIO ) && (BMA400)",
            "restrict": ""
        }
    ],
    "BMA400_SPI": [
        {
            "type": "tristate",
            "rev_select": "BMA400[SPI]",
            "dep": "( IIO ) && (BMA400)",
            "restrict": ""
        }
    ],
    "BMC150_ACCEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMC150_ACCEL_I2C": [
        {
            "type": "tristate",
            "rev_select": "BMC150_ACCEL[I2C]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMC150_ACCEL_SPI": [
        {
            "type": "tristate",
            "rev_select": "BMC150_ACCEL[SPI]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMI088_ACCEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "BMI088_ACCEL_SPI": [
        {
            "type": "tristate",
            "rev_select": "BMI088_ACCEL",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "DA280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DA311": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DMARD06": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DMARD09": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DMARD10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "FXLS8962AF": [
        {
            "type": "tristate",
            "rev_select": "FXLS8962AF_I2C || FXLS8962AF_SPI",
            "dep": "( IIO ) && (I2C || ! I2C)",
            "restrict": ""
        }
    ],
    "FXLS8962AF_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "FXLS8962AF_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI) && (I2C || ! I2C)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_ACCEL_3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "IIO_CROS_EC_ACCEL_LEGACY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_CROS_EC_SENSORS_CORE)",
            "restrict": ""
        }
    ],
    "IIO_ST_ACCEL_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM9DS0",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ) && SYSFS) && (! SENSORS_LIS3_I2C) && (! SENSORS_LIS3_SPI)",
            "restrict": ""
        }
    ],
    "IIO_ST_ACCEL_I2C_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM9DS0_I2C",
            "dep": "( IIO ) && (I2C && IIO_ST_ACCEL_3AXIS)",
            "restrict": "( I2C && IIO_ST_ACCEL_3AXIS )[!(y)]"
        }
    ],
    "IIO_ST_ACCEL_SPI_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM9DS0_SPI",
            "dep": "( IIO ) && (SPI_MASTER && IIO_ST_ACCEL_3AXIS)",
            "restrict": "( SPI_MASTER && IIO_ST_ACCEL_3AXIS )[!(y)]"
        }
    ],
    "KXSD9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "KXSD9_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (KXSD9) && (SPI)",
            "restrict": "( KXSD9 )[!(y)]"
        }
    ],
    "KXSD9_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (KXSD9) && (I2C)",
            "restrict": "( KXSD9 )[!(y)]"
        }
    ],
    "KXCJK1013": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MC3230": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MMA7455": [
        {
            "type": "tristate",
            "rev_select": "MMA7455_I2C || MMA7455_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "MMA7455_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MMA7455_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MMA7660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MMA8452": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MMA9551_CORE": [
        {
            "type": "tristate",
            "rev_select": "MMA9551 || MMA9553",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "MMA9551": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MMA9553": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MXC4005": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MXC6255": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SCA3000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "SCA3300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "STK8312": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "STK8BA50": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AB8500_GPADC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IIO ) && (AB8500_CORE && REGULATOR_AB8500)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AD_SIGMA_DELTA": [
        {
            "type": "tristate",
            "rev_select": "AD7124 || AD7192 || AD7780 || AD7791 || AD7793",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AD7091R5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD7124": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD7192": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7266": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7291": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD7292": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7298": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7476": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7606": [
        {
            "type": "tristate",
            "rev_select": "AD7606_IFACE_PARALLEL || AD7606_IFACE_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AD7606_IFACE_PARALLEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "AD7606_IFACE_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7766": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD7768_1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AD7791": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7793": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7887": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7923": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7949": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD799X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD9467": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI) && (ADI_AXI_ADC)",
            "restrict": ""
        }
    ],
    "ADI_AXI_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "ASPEED_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_ASPEED || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "AT91_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_AT91 || COMPILE_TEST) && (INPUT && SYSFS && OF)",
            "restrict": ""
        }
    ],
    "AT91_SAMA5D2_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_AT91 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "AXP20X_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_AXP20X)",
            "restrict": ""
        }
    ],
    "AXP288_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_AXP20X)",
            "restrict": ""
        }
    ],
    "BCM_IPROC_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( ARCH_BCM_IPROC && OF ) || COMPILE_TEST) && (MFD_SYSCON)",
            "restrict": "( ARCH_BCM_CYGNUS )[!(y)]"
        }
    ],
    "BERLIN2_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_BERLIN || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CC10001_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HAS_IOMEM && HAVE_CLK && REGULATOR)",
            "restrict": ""
        }
    ],
    "CPCAP_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_CPCAP)",
            "restrict": ""
        }
    ],
    "DA9150_GPADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_DA9150)",
            "restrict": ""
        }
    ],
    "DLN2_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_DLN2)",
            "restrict": ""
        }
    ],
    "ENVELOPE_DETECTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "EP93XX_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_EP93XX)",
            "restrict": ""
        }
    ],
    "EXYNOS_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_EXYNOS || ARCH_S3C24XX || ARCH_S3C64XX || ARCH_S5PV210 || ( OF && COMPILE_TEST )) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MXS_LRADC_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_MXS_LRADC)",
            "restrict": ""
        }
    ],
    "FSL_MX25_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_MX25_TSADC)",
            "restrict": ""
        }
    ],
    "HI8435": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "HX711": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "INA2XX_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C && ! SENSORS_INA2XX)",
            "restrict": ""
        }
    ],
    "INGENIC_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTEL_MRFLD_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (INTEL_SOC_PMIC_MRFLD)",
            "restrict": ""
        }
    ],
    "IMX7D_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "IMX8QXP_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "LP8788_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_LP8788)",
            "restrict": ""
        }
    ],
    "LPC18XX_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_LPC18XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "LPC32XX_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_LPC32XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "LTC2471": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "LTC2485": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "LTC2496": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "LTC2497": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX1027": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MAX11100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MAX1118": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MAX1241": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MAX1363": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX9611": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MCP320X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MCP3422": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MCP3911": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MEDIATEK_MT6360_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_MT6360)",
            "restrict": ""
        }
    ],
    "MEDIATEK_MT6577_AUXADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_MEDIATEK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MEN_Z188_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MCB)",
            "restrict": ""
        }
    ],
    "MESON_SARADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (OF && COMMON_CLK && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "MP2629_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_MP2629)",
            "restrict": ""
        }
    ],
    "NAU7802": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "NPCM_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_NPCM || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PALMAS_GPADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_PALMAS)",
            "restrict": ""
        }
    ],
    "QCOM_VADC_COMMON": [
        {
            "type": "tristate",
            "rev_select": "QCOM_SPMI_ADC_TM5 || QCOM_PM8XXX_XOADC || QCOM_SPMI_VADC || QCOM_SPMI_ADC5",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "QCOM_PM8XXX_XOADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_PM8XXX)",
            "restrict": ""
        }
    ],
    "QCOM_SPMI_RRADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_SPMI_PMIC)",
            "restrict": ""
        }
    ],
    "QCOM_SPMI_IADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPMI)",
            "restrict": ""
        }
    ],
    "QCOM_SPMI_VADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPMI)",
            "restrict": ""
        }
    ],
    "QCOM_SPMI_ADC5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPMI)",
            "restrict": ""
        }
    ],
    "RCAR_GYRO_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_RCAR_GEN2 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RN5T618_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_RN5T618)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_SARADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "RZG2L_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_RZG2L || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SC27XX_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_SC27XX_PMIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SPEAR_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (PLAT_SPEAR || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SD_ADC_MODULATOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "STM32_ADC_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_STM32 || COMPILE_TEST) && (OF) && (REGULATOR) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "STM32_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (STM32_ADC_CORE)",
            "restrict": ""
        }
    ],
    "STM32_DFSDM_CORE": [
        {
            "type": "tristate",
            "rev_select": "STM32_DFSDM_ADC",
            "dep": "( IIO ) && (( ARCH_STM32 && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STM32_DFSDM_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( ARCH_STM32 && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STMPE_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (OF && MFD_STMPE)",
            "restrict": ""
        }
    ],
    "STX104": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (PC104 && X86)",
            "restrict": ""
        }
    ],
    "SUN4I_GPADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO) && (MFD_SUN4I_GPADC || MACH_SUN8I) && (THERMAL || ! THERMAL_OF)",
            "restrict": ""
        }
    ],
    "TI_ADC081C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TI_ADC0832": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADC084S021": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADC12138": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADC108S102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADC128S052": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADC161S626": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADS1015": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TI_ADS7950": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI && GPIOLIB)",
            "restrict": ""
        }
    ],
    "TI_ADS8344": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADS8688": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADS124S08": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_ADS131E08": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_AM335X_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_TI_AM335X_TSCADC && HAS_DMA)",
            "restrict": ""
        }
    ],
    "TI_TLC4541": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_TSC2046": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TWL4030_MADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "TWL6030_GPADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (TWL4030_CORE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VF610_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "VIPERBOARD_ADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_VIPERBOARD && USB)",
            "restrict": ""
        }
    ],
    "XILINX_XADC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "XILINX_AMS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_ZYNQMP || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "AD74413R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (GPIOLIB && SPI)",
            "restrict": ""
        }
    ],
    "IIO_RESCALE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AD8366": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "ADA4250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "HMC425": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "AD7150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ATLAS_PH_SENSOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ATLAS_EZO_SENSOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BME680": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI ))",
            "restrict": ""
        }
    ],
    "BME680_I2C": [
        {
            "type": "tristate",
            "rev_select": "BME680[I2C]",
            "dep": "( IIO ) && (I2C && BME680)",
            "restrict": ""
        }
    ],
    "BME680_SPI": [
        {
            "type": "tristate",
            "rev_select": "BME680[SPI]",
            "dep": "( IIO ) && (SPI && BME680)",
            "restrict": ""
        }
    ],
    "CCS811": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IAQCORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "PMS7003": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "SCD30_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "SCD30_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SCD30_CORE && I2C)",
            "restrict": ""
        }
    ],
    "SCD30_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SCD30_CORE && SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "SCD4X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSIRION_SGP30": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSIRION_SGP40": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SPS30": [
        {
            "type": "tristate",
            "rev_select": "SPS30_I2C || SPS30_SERIAL",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "SPS30_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SPS30_SERIAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SERIAL_DEV_BUS)",
            "restrict": ""
        }
    ],
    "SENSEAIR_SUNRISE_CO2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VZ89X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IIO_CROS_EC_SENSORS_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SYSFS && CROS_EC_SENSORHUB)",
            "restrict": ""
        }
    ],
    "IIO_CROS_EC_SENSORS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_CROS_EC_SENSORS_CORE)",
            "restrict": ""
        }
    ],
    "IIO_CROS_EC_SENSORS_LID_ANGLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_CROS_EC_SENSORS_CORE)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_IIO_COMMON": [
        {
            "type": "tristate",
            "rev_select": "RTC_DRV_HID_SENSOR_TIME || HID_SENSOR_ACCEL_3D || HID_SENSOR_GYRO_3D || HID_SENSOR_HUMIDITY || HID_SENSOR_ALS || HID_SENSOR_PROX || HID_SENSOR_MAGNETOMETER_3D || HID_SENSOR_INCLINOMETER_3D || HID_SENSOR_DEVICE_ROTATION || HID_SENSOR_CUSTOM_INTEL_HINGE || HID_SENSOR_PRESS || HID_SENSOR_TEMP",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_IIO_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "HID_SENSOR_ACCEL_3D || HID_SENSOR_IIO_COMMON[IIO_BUFFER] || HID_SENSOR_GYRO_3D || HID_SENSOR_HUMIDITY || HID_SENSOR_ALS || HID_SENSOR_PROX || HID_SENSOR_MAGNETOMETER_3D || HID_SENSOR_INCLINOMETER_3D || HID_SENSOR_DEVICE_ROTATION || HID_SENSOR_CUSTOM_INTEL_HINGE || HID_SENSOR_PRESS || HID_SENSOR_TEMP",
            "dep": "( IIO ) && (HID_SENSOR_HUB && HID_SENSOR_IIO_COMMON && IIO_BUFFER)",
            "restrict": ""
        }
    ],
    "IIO_MS_SENSORS_I2C": [
        {
            "type": "tristate",
            "rev_select": "HTU21 || MS5637 || TSYS01 || TSYS02D",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_SCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARM_SCMI_PROTOCOL)",
            "restrict": ""
        }
    ],
    "IIO_SSP_SENSORS_COMMONS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_SSP_SENSORHUB)",
            "restrict": ""
        }
    ],
    "IIO_SSP_SENSORHUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "IIO_ST_SENSORS_I2C": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_ACCEL_I2C_3AXIS || IIO_ST_GYRO_I2C_3AXIS || IIO_ST_MAGN_I2C_3AXIS || IIO_ST_PRESS_I2C",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_ST_SENSORS_SPI": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_ACCEL_SPI_3AXIS || IIO_ST_GYRO_SPI_3AXIS || IIO_ST_MAGN_SPI_3AXIS || IIO_ST_PRESS_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_ST_SENSORS_CORE": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_ACCEL_3AXIS || IIO_ST_GYRO_3AXIS || IIO_ST_MAGN_3AXIS || IIO_ST_PRESS",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AD3552R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5064": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( SPI_MASTER && I2C != m ) || I2C)",
            "restrict": ""
        }
    ],
    "AD5360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD5380": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( SPI_MASTER && I2C != m ) || I2C)",
            "restrict": ""
        }
    ],
    "AD5421": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD5446": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( SPI_MASTER && I2C != m ) || I2C)",
            "restrict": ""
        }
    ],
    "AD5449": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5592R_BASE": [
        {
            "type": "tristate",
            "rev_select": "AD5592R || AD5593R",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AD5592R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5593R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD5504": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD5624R_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "LTC2688": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD5686": [
        {
            "type": "tristate",
            "rev_select": "AD5686_SPI || AD5696_I2C",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AD5686_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD5696_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD5755": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5758": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5761": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5764": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5766": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5770R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AD5791": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7293": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD7303": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD8801": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "CIO_DAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (X86 && ( ISA_BUS || PC104 ))",
            "restrict": ""
        }
    ],
    "DPOT_DAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "DS4424": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "LPC18XX_DAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ARCH_LPC18XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "LTC1660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "LTC2632": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "M62332": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX517": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX5821": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MCP4725": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MCP4922": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "STM32_DAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( ARCH_STM32 && OF ) || COMPILE_TEST) && (REGULATOR)",
            "restrict": ""
        }
    ],
    "STM32_DAC_CORE": [
        {
            "type": "tristate",
            "rev_select": "STM32_DAC",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "TI_DAC082S085": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "TI_DAC5571": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TI_DAC7311": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TI_DAC7612": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER && GPIOLIB)",
            "restrict": ""
        }
    ],
    "VF610_DAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "IIO_DUMMY_EVGEN": [
        {
            "type": "tristate",
            "rev_select": "IIO_SIMPLE_DUMMY_EVENTS",
            "dep": "( IIO ) && ( ( IIO ) )",
            "restrict": ""
        }
    ],
    "IIO_SIMPLE_DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && ( ( IIO ) ) && (IIO_SW_DEVICE)",
            "restrict": ""
        }
    ],
    "IIO_SIMPLE_DUMMY_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IIO ) && ( ( IIO ) ) && ( IIO_SIMPLE_DUMMY )",
            "restrict": ""
        }
    ],
    "IIO_SIMPLE_DUMMY_BUFFER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IIO ) && ( ( IIO ) ) && ( IIO_SIMPLE_DUMMY )",
            "restrict": ""
        }
    ],
    "ADMV8818": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI && COMMON_CLK && 64BIT)",
            "restrict": ""
        }
    ],
    "AD9523": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADF4350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADF4371": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADMV1013": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "ADMV1014": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI && COMMON_CLK && 64BIT)",
            "restrict": ""
        }
    ],
    "ADMV4420": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADRF6780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "ADIS16080": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16130": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16136": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "ADIS16260": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXRS290": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADXRS450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "BMG160": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ))",
            "restrict": ""
        }
    ],
    "BMG160_I2C": [
        {
            "type": "tristate",
            "rev_select": "BMG160[( I2C )]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMG160_SPI": [
        {
            "type": "tristate",
            "rev_select": "BMG160[( SPI )]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "FXAS21002C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ))",
            "restrict": ""
        }
    ],
    "FXAS21002C_I2C": [
        {
            "type": "tristate",
            "rev_select": "FXAS21002C[( I2C )]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "FXAS21002C_SPI": [
        {
            "type": "tristate",
            "rev_select": "FXAS21002C[( SPI )]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "HID_SENSOR_GYRO_3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "MPU3050": [
        {
            "type": "tristate",
            "rev_select": "MPU3050_I2C",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "MPU3050_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IIO_ST_GYRO_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ) && SYSFS)",
            "restrict": ""
        }
    ],
    "IIO_ST_GYRO_I2C_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C && IIO_ST_GYRO_3AXIS)",
            "restrict": "( I2C && IIO_ST_GYRO_3AXIS )[!(y)]"
        }
    ],
    "IIO_ST_GYRO_SPI_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER && IIO_ST_GYRO_3AXIS)",
            "restrict": "( SPI_MASTER && IIO_ST_GYRO_3AXIS )[!(y)]"
        }
    ],
    "ITG3200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AFE4403": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "AFE4404": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX30100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX30102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AM2315": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DHT11": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HDC100X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "HDC2010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_HUMIDITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "HTS221": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI ))",
            "restrict": ""
        }
    ],
    "HTS221_I2C": [
        {
            "type": "tristate",
            "rev_select": "HTS221[( I2C )]",
            "dep": "( IIO ) && (HTS221)",
            "restrict": ""
        }
    ],
    "HTS221_SPI": [
        {
            "type": "tristate",
            "rev_select": "HTS221[( SPI_MASTER )]",
            "dep": "( IIO ) && (HTS221)",
            "restrict": ""
        }
    ],
    "HTU21": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SI7005": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SI7020": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ADIS16400": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16460": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16475": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "ADIS16480": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "BMI160": [
        {
            "type": "tristate",
            "rev_select": "BMI160_I2C || BMI160_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMI160_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BMI160_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "FXOS8700": [
        {
            "type": "tristate",
            "rev_select": "FXOS8700_I2C || FXOS8700_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "FXOS8700_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "FXOS8700_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "KMX61": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "INV_ICM42600": [
        {
            "type": "tristate",
            "rev_select": "INV_ICM42600_I2C || INV_ICM42600_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "INV_ICM42600_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "INV_ICM42600_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "INV_MPU6050_IIO": [
        {
            "type": "tristate",
            "rev_select": "INV_MPU6050_I2C || INV_MPU6050_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "INV_MPU6050_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "INV_MPU6050_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "IIO_ST_LSM6DSX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI || I3C ))",
            "restrict": ""
        }
    ],
    "IIO_ST_LSM6DSX_I2C": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM6DSX[( I2C )]",
            "dep": "( IIO ) && (IIO_ST_LSM6DSX)",
            "restrict": ""
        }
    ],
    "IIO_ST_LSM6DSX_SPI": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM6DSX[( SPI_MASTER )]",
            "dep": "( IIO ) && (IIO_ST_LSM6DSX)",
            "restrict": ""
        }
    ],
    "IIO_ST_LSM6DSX_I3C": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM6DSX[( I3C )]",
            "dep": "( IIO ) && (IIO_ST_LSM6DSX)",
            "restrict": ""
        }
    ],
    "IIO_ST_LSM9DS0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ) && SYSFS) && (! SENSORS_LIS3_I2C) && (! SENSORS_LIS3_SPI)",
            "restrict": ""
        }
    ],
    "IIO_ST_LSM9DS0_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C && IIO_ST_LSM9DS0)",
            "restrict": "( I2C && IIO_ST_LSM9DS0 )[!(y)]"
        }
    ],
    "IIO_ST_LSM9DS0_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER && IIO_ST_LSM9DS0)",
            "restrict": "( SPI_MASTER && IIO_ST_LSM9DS0 )[!(y)]"
        }
    ],
    "IIO_ADIS_LIB": [
        {
            "type": "tristate",
            "rev_select": "ADIS16203 || ADIS16240 || ADIS16201 || ADIS16209 || ADIS16136 || ADIS16260 || ADIS16400 || ADIS16460 || ADIS16475 || ADIS16480",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "IIO_ADIS_LIB_BUFFER": [
        {
            "type": "bool",
            "rev_select": "ADIS16203[IIO_BUFFER] || ADIS16240[IIO_BUFFER] || ADIS16201[IIO_BUFFER] || ADIS16209[IIO_BUFFER] || ADIS16136[IIO_BUFFER] || ADIS16260[IIO_BUFFER] || ADIS16400[IIO_BUFFER] || ADIS16460[IIO_BUFFER] || ADIS16475[IIO_BUFFER] || ADIS16480[IIO_BUFFER]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ACPI_ALS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (ACPI)",
            "restrict": ""
        }
    ],
    "ADJD_S311": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ADUX1020": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AL3010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AL3320A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "APDS9300": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "APDS9960": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AS73211": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BH1750": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BH1780": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "CM32181": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "CM3232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "CM3323": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "CM3605": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "CM36651": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IIO_CROS_EC_LIGHT_PROX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_CROS_EC_SENSORS_CORE)",
            "restrict": ""
        }
    ],
    "GP2AP002": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "GP2AP020A00F": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IQS621_ALS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_IQS62X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SENSORS_ISL29018": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SENSORS_ISL29028": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ISL29125": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_ALS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_PROX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "JSA1212": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "RPR0521": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_LM3533": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_LM3533)",
            "restrict": ""
        }
    ],
    "LTR501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "LV0104CS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX44000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX44009": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "NOA1305": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "OPT3001": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "PA12203001": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SI1133": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SI1145": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "STK3310": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ST_UVIS25": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI ))",
            "restrict": ""
        }
    ],
    "ST_UVIS25_I2C": [
        {
            "type": "tristate",
            "rev_select": "ST_UVIS25[( I2C )]",
            "dep": "( IIO ) && (ST_UVIS25)",
            "restrict": ""
        }
    ],
    "ST_UVIS25_SPI": [
        {
            "type": "tristate",
            "rev_select": "ST_UVIS25[( SPI_MASTER )]",
            "dep": "( IIO ) && (ST_UVIS25)",
            "restrict": ""
        }
    ],
    "TCS3414": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TCS3472": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_TSL2563": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TSL2583": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TSL2591": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TSL2772": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TSL4531": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "US5182D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VCNL4000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VCNL4035": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VEML6030": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VEML6070": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VL6180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ZOPT2201": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AK8974": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AK8975": [
        {
            "type": "tristate",
            "rev_select": "AK09911",
            "dep": "( IIO ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "AK09911": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "BMC150_MAGN": [
        {
            "type": "tristate",
            "rev_select": "BMC150_MAGN_I2C || BMC150_MAGN_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "BMC150_MAGN_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BMC150_MAGN_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MAG3110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_MAGNETOMETER_3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "MMC35240": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IIO_ST_MAGN_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM9DS0",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ) && SYSFS)",
            "restrict": ""
        }
    ],
    "IIO_ST_MAGN_I2C_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM9DS0_I2C",
            "dep": "( IIO ) && (I2C && IIO_ST_MAGN_3AXIS)",
            "restrict": "( I2C && IIO_ST_MAGN_3AXIS )[!(y)]"
        }
    ],
    "IIO_ST_MAGN_SPI_3AXIS": [
        {
            "type": "tristate",
            "rev_select": "IIO_ST_LSM9DS0_SPI",
            "dep": "( IIO ) && (SPI_MASTER && IIO_ST_MAGN_3AXIS)",
            "restrict": "( SPI_MASTER && IIO_ST_MAGN_3AXIS )[!(y)]"
        }
    ],
    "SENSORS_HMC5843": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_HMC5843_I2C || SENSORS_HMC5843_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "SENSORS_HMC5843_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_HMC5843_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "SENSORS_RM3100": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_RM3100_I2C || SENSORS_RM3100_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "SENSORS_RM3100_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SENSORS_RM3100_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "YAMAHA_YAS530": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IIO_MUX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "HID_SENSOR_INCLINOMETER_3D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_DEVICE_ROTATION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "IIO_RESCALE_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (KUNIT && IIO_RESCALE)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "IIO_FORMAT_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "IIO_HRTIMER_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && ( IIO_TRIGGER ) && (IIO_SW_TRIGGER)",
            "restrict": ""
        }
    ],
    "IIO_INTERRUPT_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && ( IIO_TRIGGER )",
            "restrict": ""
        }
    ],
    "IIO_STM32_LPTIMER_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && ( IIO_TRIGGER ) && (MFD_STM32_LPTIMER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IIO_STM32_TIMER_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "STM32_ADC_CORE",
            "dep": "( IIO ) && ( IIO_TRIGGER ) && (( ARCH_STM32 && MFD_STM32_TIMERS ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IIO_TIGHTLOOP_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && ( IIO_TRIGGER ) && (IIO_SW_TRIGGER)",
            "restrict": ""
        }
    ],
    "IIO_SYSFS_TRIGGER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && ( IIO_TRIGGER ) && (SYSFS)",
            "restrict": ""
        }
    ],
    "IQS624_POS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_IQS62X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_CUSTOM_INTEL_HINGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "AD5110": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD5272": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DS1803": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX5432": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX5481": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MAX5487": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MCP4018": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MCP4131": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MCP4531": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MCP41010": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "TPL0102": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "LMP91000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ABP060MG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "BMP280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ))",
            "restrict": ""
        }
    ],
    "BMP280_I2C": [
        {
            "type": "tristate",
            "rev_select": "BMP280[( I2C )]",
            "dep": "( IIO ) && (BMP280) && (I2C)",
            "restrict": ""
        }
    ],
    "BMP280_SPI": [
        {
            "type": "tristate",
            "rev_select": "BMP280[( SPI_MASTER )]",
            "dep": "( IIO ) && (BMP280) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "IIO_CROS_EC_BARO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (IIO_CROS_EC_SENSORS_CORE)",
            "restrict": ""
        }
    ],
    "DLHL60D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "DPS310": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_PRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "HP03": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ICP10100": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MPL115": [
        {
            "type": "tristate",
            "rev_select": "MPL115_I2C || MPL115_SPI",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "MPL115_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MPL115_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER)",
            "restrict": ""
        }
    ],
    "MPL3115": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MS5611": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "MS5611_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C && MS5611)",
            "restrict": ""
        }
    ],
    "MS5611_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER && MS5611)",
            "restrict": ""
        }
    ],
    "MS5637": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "IIO_ST_PRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (( I2C || SPI_MASTER ) && SYSFS)",
            "restrict": ""
        }
    ],
    "IIO_ST_PRESS_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C && IIO_ST_PRESS)",
            "restrict": "( I2C && IIO_ST_PRESS )[!(y)]"
        }
    ],
    "IIO_ST_PRESS_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI_MASTER && IIO_ST_PRESS)",
            "restrict": "( SPI_MASTER && IIO_ST_PRESS )[!(y)]"
        }
    ],
    "T5403": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "HP206C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "ZPA2326": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ZPA2326_I2C": [
        {
            "type": "tristate",
            "rev_select": "ZPA2326[I2C]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "ZPA2326_SPI": [
        {
            "type": "tristate",
            "rev_select": "ZPA2326[SPI_MASTER]",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "AS3935": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "CROS_EC_MKBP_PROXIMITY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "ISL29501": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "LIDAR_LITE_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MB1232": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "PING": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "RFD77402": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SRF04": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "SX_COMMON": [
        {
            "type": "tristate",
            "rev_select": "SX9310 || SX9324 || SX9360",
            "dep": "( IIO )",
            "restrict": ""
        }
    ],
    "SX9310": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SX9324": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SX9360": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SX9500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "SRF08": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VCNL3020": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "VL53L0X_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "AD2S90": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "AD2S1200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IQS620AT_TEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (MFD_IQS62X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "LTC2983": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MAXIM_THERMOCOUPLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "HID_SENSOR_TEMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (HID_SENSOR_HUB)",
            "restrict": ""
        }
    ],
    "MLX90614": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MLX90632": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TMP006": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TMP007": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TMP117": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TSYS01": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "TSYS02D": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (I2C)",
            "restrict": ""
        }
    ],
    "MAX31856": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "MAX31865": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IIO ) && (SPI)",
            "restrict": ""
        }
    ],
    "NTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "NTB_MSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NTB ) && (PCI_MSI)",
            "restrict": ""
        }
    ],
    "NTB_AMD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB ) && (X86_64)",
            "restrict": ""
        }
    ],
    "NTB_IDT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB ) && (PCI)",
            "restrict": ""
        }
    ],
    "NTB_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB ) && (X86_64)",
            "restrict": ""
        }
    ],
    "NTB_EPF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB ) && (m)",
            "restrict": ""
        }
    ],
    "NTB_SWITCHTEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB )",
            "restrict": ""
        }
    ],
    "NTB_PINGPONG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB )",
            "restrict": ""
        }
    ],
    "NTB_TOOL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB )",
            "restrict": ""
        }
    ],
    "NTB_PERF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB )",
            "restrict": ""
        }
    ],
    "NTB_MSI_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB ) && (NTB_MSI)",
            "restrict": ""
        }
    ],
    "NTB_TRANSPORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NTB )",
            "restrict": ""
        }
    ],
    "PWM": [
        {
            "type": "bool",
            "rev_select": "FB_SSD1307",
            "dep": "",
            "restrict": ""
        }
    ],
    "PWM_SYSFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PWM )",
            "restrict": "( y )[!(y) && (SYSFS)]"
        }
    ],
    "PWM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PWM ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PWM_AB8500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (AB8500_CORE && ARCH_U8500)",
            "restrict": ""
        }
    ],
    "PWM_ATMEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_AT91 || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PWM_ATMEL_HLCDC_PWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_ATMEL_HLCDC) && (HAVE_CLK)",
            "restrict": ""
        }
    ],
    "PWM_ATMEL_TCB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (OF)",
            "restrict": ""
        }
    ],
    "PWM_BCM_IPROC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_BCM_IPROC || COMPILE_TEST) && (COMMON_CLK && HAS_IOMEM)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PWM_BCM_KONA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_BCM_MOBILE || ARCH_BCM_CYGNUS || COMPILE_TEST) && (HAVE_CLK && HAS_IOMEM)",
            "restrict": "( ARCH_BCM_MOBILE || ARCH_BCM_CYGNUS )[!(y)]"
        }
    ],
    "PWM_BCM2835": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_BCM2835 || ARCH_BRCMSTB || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_BERLIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_BERLIN || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_BRCMSTB || BMIPS_GENERIC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_CLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (HAVE_CLK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_CLPS711X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_CLPS711X || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_CRC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PWM ) && (X86 && INTEL_SOC_PMIC)",
            "restrict": ""
        }
    ],
    "PWM_CROS_EC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (CROS_EC)",
            "restrict": ""
        }
    ],
    "PWM_DWC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (PCI)",
            "restrict": ""
        }
    ],
    "PWM_EP93XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_EP93XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_FSL_FTM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "PWM_HIBVT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_HISI || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_IMG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (HAS_IOMEM) && (MFD_SYSCON) && (COMMON_CLK) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_IMX1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_IMX27": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_IMX_TPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MXC || COMPILE_TEST) && (HAVE_CLK && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_INTEL_LGM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (HAS_IOMEM) && (( OF && X86 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_IQS620A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_IQS62X || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_JZ4740": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MIPS || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PWM_KEEMBAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_KEEMBAY || COMPILE_TEST) && (COMMON_CLK && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_LP3943": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_LP3943)",
            "restrict": ""
        }
    ],
    "PWM_LPC18XX_SCT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_LPC18XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_LPC32XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_LPC32XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_LPSS": [
        {
            "type": "tristate",
            "rev_select": "PWM_LPSS_PCI || PWM_LPSS_PLATFORM",
            "dep": "( PWM ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_LPSS_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (X86 || COMPILE_TEST) && (HAS_IOMEM && PCI)",
            "restrict": ""
        }
    ],
    "PWM_LPSS_PLATFORM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (( X86 && ACPI ) || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MESON || COMPILE_TEST) && (COMMON_CLK && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_MTK_DISP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MEDIATEK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_MEDIATEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MEDIATEK || RALINK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_MXS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_MXS || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PWM_NTXEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_NTXEC)",
            "restrict": ""
        }
    ],
    "PWM_OMAP_DMTIMER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (OF) && (OMAP_DM_TIMER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_PCA9685": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (I2C)",
            "restrict": ""
        }
    ],
    "PWM_PXA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_PXA || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_RASPBERRYPI_POE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (RASPBERRYPI_FIRMWARE || ( COMPILE_TEST && ! RASPBERRYPI_FIRMWARE ))",
            "restrict": ""
        }
    ],
    "PWM_RCAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_RENESAS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_RENESAS_TPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_RENESAS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_SAMSUNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (PLAT_SAMSUNG || ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_SIFIVE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (OF) && (COMMON_CLK && HAS_IOMEM) && (RISCV || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_SL28CPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_SL28CPLD || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_SPEAR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (PLAT_SPEAR || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PWM_SPRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_SPRD || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_STI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_STI || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PWM_STM32": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_STM32_TIMERS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_STM32_LP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_STM32_LPTIMER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_STMPE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( PWM ) && (MFD_STMPE)",
            "restrict": ""
        }
    ],
    "PWM_SUN4I": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM && COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PWM_SUNPLUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_SUNPLUS || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PWM_TEGRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_TEGRA || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_TIECAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_OMAP2PLUS || ARCH_DAVINCI_DA8XX || ARCH_KEYSTONE || ARCH_K3 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_TIEHRPWM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_OMAP2PLUS || ARCH_DAVINCI_DA8XX || ARCH_K3 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_TWL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "PWM_TWL_LED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (TWL4030_CORE)",
            "restrict": ""
        }
    ],
    "PWM_VISCONTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_VISCONTI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PWM_VT8500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (ARCH_VT8500 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PWM_XILINX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PWM ) && (OF_ADDRESS) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF_IRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_GIC": [
        {
            "type": "bool",
            "rev_select": "ARM_GIC_PM || ARM_GIC_V2M",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_GIC_PM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PM)",
            "restrict": ""
        }
    ],
    "ARM_GIC_MAX_NR": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(ARM_GIC)",
            "restrict": "( 2 )[!(y) && (ARCH_REALVIEW)] || ( 1 )[!(y)]"
        }
    ],
    "ARM_GIC_V2M": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "GIC_NON_BANKED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_GIC_V3": [
        {
            "type": "bool",
            "rev_select": "SOC_IMX8M[ARCH_MXC && ARCH_MULTI_V7] || HISILICON_IRQ_MBIGEN",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_GIC_V3_ITS": [
        {
            "type": "bool",
            "rev_select": "HISILICON_IRQ_MBIGEN",
            "dep": "",
            "restrict": "( ARM_GIC_V3 )[!(y)]"
        }
    ],
    "ARM_GIC_V3_ITS_PCI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM_GIC_V3_ITS) && (PCI) && (PCI_MSI)",
            "restrict": "( ARM_GIC_V3_ITS )[!(y)]"
        }
    ],
    "ARM_GIC_V3_ITS_FSL_MC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM_GIC_V3_ITS) && (FSL_MC_BUS)",
            "restrict": "( ARM_GIC_V3_ITS )[!(y)]"
        }
    ],
    "ARM_NVIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_VIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARM_VIC_NR": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(ARM_VIC)",
            "restrict": "( 4 )[!(y) && (ARCH_S5PV210)] || ( 2 )[!(y)]"
        }
    ],
    "ARMADA_370_XP_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ALPINE_MSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "AL_FIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ATMEL_AIC_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ATMEL_AIC5_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "I8259": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BCM6345_L1_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BCM7038_L1_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BRCMSTB || BMIPS_GENERIC)",
            "restrict": "( ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "BCM7120_L2_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BRCMSTB || BMIPS_GENERIC)",
            "restrict": "( ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "BRCMSTB_L2_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BCM2835 || ARCH_BRCMSTB || BMIPS_GENERIC)",
            "restrict": "( ARCH_BCM2835 || ARCH_BRCMSTB || BMIPS_GENERIC )[!(y)]"
        }
    ],
    "DAVINCI_AINTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DAVINCI_CP_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DW_APB_ICTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FARADAY_FTINTC010": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HISILICON_IRQ_MBIGEN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IMGPDC_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IXP4XX_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MADERA_IRQ": [
        {
            "type": "tristate",
            "rev_select": "MFD_MADERA",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_MIPS_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CLPS711X_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_CLPS711X)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OMPIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "OR1K_PIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "OMAP_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ORION_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PIC32_EVIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "JCORE_AIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF)",
            "restrict": ""
        }
    ],
    "RDA_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "RENESAS_INTC_IRQPIN": [
        {
            "type": "bool",
            "rev_select": "ARCH_RCAR_GEN1 || ARCH_R8A7740 || ARCH_SH73A0",
            "dep": "",
            "restrict": ""
        }
    ],
    "RENESAS_IRQC": [
        {
            "type": "bool",
            "rev_select": "ARCH_RCAR_GEN2 || ARCH_RCAR_GEN3 || ARCH_R8A73A4",
            "dep": "",
            "restrict": ""
        }
    ],
    "RENESAS_RZA1_IRQC": [
        {
            "type": "bool",
            "rev_select": "ARCH_R7S72100 || ARCH_R7S9210",
            "dep": "",
            "restrict": ""
        }
    ],
    "RENESAS_RZG2L_IRQC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SL28CPLD_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MFD_SL28CPLD = y || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ST_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SUN4I_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SUN6I_R_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SUNXI_NMI_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "TB10X_IRQC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "TS4800_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (SOC_IMX51 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "VERSATILE_FPGA_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "VERSATILE_FPGA_IRQ_NR": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(VERSATILE_FPGA_IRQ)",
            "restrict": "( 4 )[!(y)]"
        }
    ],
    "XTENSA_MX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "XILINX_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF_ADDRESS)",
            "restrict": ""
        }
    ],
    "IRQ_CROSSBAR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEYSTONE_IRQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_KEYSTONE)",
            "restrict": ""
        }
    ],
    "MIPS_GIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "INGENIC_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MACH_INGENIC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INGENIC_TCU_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MIPS || COMPILE_TEST)",
            "restrict": "( MACH_INGENIC )[!(y)]"
        }
    ],
    "IMX_GPCV2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_MXS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (MACH_ASM9260 || ARCH_MXS)]"
        }
    ],
    "MSCC_OCELOT_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MVEBU_GICP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MVEBU_ICU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MVEBU_ODMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MVEBU_PIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "MVEBU_SEI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LS_EXTIRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (SOC_LS1021A || ARCH_LAYERSCAPE)]"
        }
    ],
    "LS_SCFG_MSI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI && PCI_MSI)",
            "restrict": "( y )[!(y) && (SOC_LS1021A || ARCH_LAYERSCAPE)]"
        }
    ],
    "PARTITION_PERCPU": [
        {
            "type": "bool",
            "rev_select": "ARM_GIC_V3",
            "dep": "",
            "restrict": ""
        }
    ],
    "STM32_EXTI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "QCOM_IRQ_COMBINER": [
        {
            "type": "bool",
            "rev_select": "QCOM_L3_PMU",
            "dep": "(ARCH_QCOM && ACPI)",
            "restrict": ""
        }
    ],
    "IRQ_UNIPHIER_AIDET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_UNIPHIER || COMPILE_TEST)",
            "restrict": "( ARCH_UNIPHIER )[!(COMPILE_TEST)]"
        }
    ],
    "MESON_IRQ_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MESON || COMPILE_TEST)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "GOLDFISH_PIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MIPS && ( GOLDFISH || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "QCOM_PDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "QCOM_MPM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM) && (MAILBOX)",
            "restrict": ""
        }
    ],
    "CSKY_MPINTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CSKY)",
            "restrict": ""
        }
    ],
    "CSKY_APB_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CSKY)",
            "restrict": ""
        }
    ],
    "IMX_IRQSTEER": [
        {
            "type": "bool",
            "rev_select": "DRM_IMX_DCSS",
            "dep": "(ARCH_MXC || COMPILE_TEST)",
            "restrict": "( ARCH_MXC )[!(y)]"
        }
    ],
    "IMX_INTMUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(COMPILE_TEST) && (ARCH_MXC)]"
        }
    ],
    "LS1X_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MACH_LOONGSON32)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TI_SCI_INTR_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TI_SCI_PROTOCOL)",
            "restrict": ""
        }
    ],
    "TI_SCI_INTA_IRQCHIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TI_SCI_PROTOCOL)",
            "restrict": ""
        }
    ],
    "TI_PRUSS_INTC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(TI_PRUSS)",
            "restrict": "( TI_PRUSS )[!(y)]"
        }
    ],
    "RISCV_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RISCV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SIFIVE_PLIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RISCV)",
            "restrict": ""
        }
    ],
    "EXYNOS_IRQ_COMBINER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ARCH_EXYNOS && ARM ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IRQ_LOONGARCH_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LOONGSON_LIOINTC": [
        {
            "type": "bool",
            "rev_select": "IRQ_LOONGARCH_CPU",
            "dep": "(MACH_LOONGSON64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOONGSON_EIOINTC": [
        {
            "type": "bool",
            "rev_select": "IRQ_LOONGARCH_CPU",
            "dep": "(LOONGARCH) && (MACH_LOONGSON64)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "LOONGSON_HTPIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MACH_LOONGSON64 && MIPS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOONGSON_HTVEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MACH_LOONGSON64)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "LOONGSON_PCH_PIC": [
        {
            "type": "bool",
            "rev_select": "IRQ_LOONGARCH_CPU",
            "dep": "(MACH_LOONGSON64)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "LOONGSON_PCH_MSI": [
        {
            "type": "bool",
            "rev_select": "IRQ_LOONGARCH_CPU",
            "dep": "(MACH_LOONGSON64) && (PCI)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "LOONGSON_PCH_LPC": [
        {
            "type": "bool",
            "rev_select": "IRQ_LOONGARCH_CPU",
            "dep": "(LOONGARCH) && (MACH_LOONGSON64)",
            "restrict": "( MACH_LOONGSON64 )[!(y)]"
        }
    ],
    "MST_IRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_MEDIATEK || ARCH_MSTARV7 || COMPILE_TEST)",
            "restrict": "( ARCH_MEDIATEK )[!(y)]"
        }
    ],
    "WPCM450_AIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_WPCM450)",
            "restrict": ""
        }
    ],
    "IRQ_IDT3243X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "APPLE_AIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARM64) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MCHP_EIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "SUNPLUS_SP7021_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SOC_SP7021 )[!(COMPILE_TEST)]"
        }
    ],
    "IPACK_BUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "BOARD_TPCI200": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPACK_BUS ) && (IPACK_BUS) && (PCI)",
            "restrict": ""
        }
    ],
    "SERIAL_IPOCTAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( IPACK_BUS ) && (IPACK_BUS && TTY)",
            "restrict": ""
        }
    ],
    "ARCH_HAS_RESET_CONTROLLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "RESET_CONTROLLER": [
        {
            "type": "bool",
            "rev_select": "HISI_FEMAC || SPARX5_SWITCH || STMMAC_ETH || I2C_RCAR[ARCH_RCAR_GEN3] || ASM9260_WATCHDOG || MEDIATEK_WATCHDOG || VIDEO_RCAR_ISP || VIDEO_RCAR_CSI2 || DRM_SUN6I_DSI || DRM_STI || USB_CHIPIDEA || MMC_SDHI[ARCH_RENESAS] || SCSI_UFS_QCOM || COMMON_CLK_GEMINI || COMMON_CLK_ASPEED || CLK_ACTIONS || CLK_BT1_CCU_DIV || CLK_BCM2711_DVP || RESET_HISI || COMMON_CLK_MEDIATEK || COMMON_CLK_MESON_AO_CLKC || COMMON_CLK_MESON8B || COMMON_CLK_QCOM || CLK_RCAR_USB2_CLOCK_SEL || CLK_RZG2L || CLK_SIFIVE_PRCI || SUNXI_CCU || APPLE_PMGR_PWRSTATE || BCM2835_POWER || RENESAS_RPCIF || PHY_ATH79_USB || PHY_ROCKCHIP_TYPEC",
            "dep": "",
            "restrict": ""
        }
    ],
    "RESET_A10SR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (MFD_ALTERA_A10SR || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_ATH79": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ATH79 )[!(COMPILE_TEST)]"
        }
    ],
    "RESET_AXS10X": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARC_PLAT_AXS10X )[!(COMPILE_TEST)]"
        }
    ],
    "RESET_BCM6345": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": "( BMIPS_GENERIC )[!(y)]"
        }
    ],
    "RESET_BERLIN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_BERLIN || COMPILE_TEST)",
            "restrict": "( m )[!(y) && (ARCH_BERLIN)]"
        }
    ],
    "RESET_BRCMSTB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": "( ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "RESET_BRCMSTB_RESCAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (HAS_IOMEM) && (ARCH_BRCMSTB || COMPILE_TEST)",
            "restrict": "( ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "RESET_HSDK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (HAS_IOMEM) && (ARC_SOC_HSDK || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_IMX7": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (HAS_IOMEM) && (SOC_IMX7D || ( ARM64 && ARCH_MXC ) || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (SOC_IMX7D)]"
        }
    ],
    "RESET_INTEL_GW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (X86 || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RESET_K210": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (( SOC_CANAAN || COMPILE_TEST ) && OF)",
            "restrict": "( SOC_CANAAN )[!(y)]"
        }
    ],
    "RESET_LANTIQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( SOC_TYPE_XWAY )[!(COMPILE_TEST)]"
        }
    ],
    "RESET_LPC18XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARCH_LPC18XX )[!(COMPILE_TEST)]"
        }
    ],
    "RESET_MCHP_SPARX5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_SPARX5 || SOC_LAN966 || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (SPARX5_SWITCH)]"
        }
    ],
    "RESET_MESON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "RESET_MESON_AUDIO_ARB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_NPCM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARCH_NPCM )[!(COMPILE_TEST)]"
        }
    ],
    "RESET_OXNAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": ""
        }
    ],
    "RESET_PISTACHIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_QCOM_AOSS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_QCOM_PDC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_RASPBERRYPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (RASPBERRYPI_FIRMWARE || ( RASPBERRYPI_FIRMWARE = n && COMPILE_TEST ))",
            "restrict": "( USB_XHCI_PCI )[!(y)]"
        }
    ],
    "RESET_RZG2L_USBPHY_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_RZG2L || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_SCMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARM_SCMI_PROTOCOL || COMPILE_TEST)",
            "restrict": "( ARM_SCMI_PROTOCOL )[!(y)]"
        }
    ],
    "RESET_SIMPLE": [
        {
            "type": "bool",
            "rev_select": "CLK_BCM2711_DVP || CLK_SIFIVE_PRCI || RESET_SOCFPGA || RESET_SUNXI || RESET_UNIPHIER_GLUE",
            "dep": "( RESET_CONTROLLER ) && (HAS_IOMEM)",
            "restrict": "( ARCH_ASPEED || ARCH_BCM4908 || ARCH_BITMAIN || ARCH_REALTEK || ARCH_STM32 || ( ARCH_INTEL_SOCFPGA && ARM64 ) || ARCH_SUNXI || ARC )[!(COMPILE_TEST || EXPERT)]"
        }
    ],
    "RESET_SOCFPGA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARM && ARCH_INTEL_SOCFPGA )[!(COMPILE_TEST && ( ! ARM || ! ARCH_INTEL_SOCFPGA ))]"
        }
    ],
    "RESET_STARFIVE_JH7100": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (SOC_STARFIVE || COMPILE_TEST)",
            "restrict": "( SOC_STARFIVE )[!(y)]"
        }
    ],
    "RESET_SUNPLUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARCH_SUNPLUS )[!(COMPILE_TEST)]"
        }
    ],
    "RESET_SUNXI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARCH_SUNXI )[!(COMPILE_TEST && ! ARCH_SUNXI)]"
        }
    ],
    "RESET_TI_SCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (TI_SCI_PROTOCOL || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RESET_TI_SYSCON": [
        {
            "type": "tristate",
            "rev_select": "SCSI_UFS_MEDIATEK",
            "dep": "( RESET_CONTROLLER ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "RESET_TI_TPS380X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": ""
        }
    ],
    "RESET_TN48M_CPLD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (MFD_TN48M_CPLD || COMPILE_TEST)",
            "restrict": "( MFD_TN48M_CPLD )[!(y)]"
        }
    ],
    "RESET_UNIPHIER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_UNIPHIER || COMPILE_TEST) && (OF && MFD_SYSCON)",
            "restrict": "( ARCH_UNIPHIER )[!(y)]"
        }
    ],
    "RESET_UNIPHIER_GLUE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (( ARCH_UNIPHIER || COMPILE_TEST ) && OF)",
            "restrict": "( ARCH_UNIPHIER )[!(y)]"
        }
    ],
    "RESET_ZYNQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( ARCH_ZYNQ )[!(COMPILE_TEST)]"
        }
    ],
    "STI_RESET_SYSCFG": [
        {
            "type": "bool",
            "rev_select": "STIH407_RESET",
            "dep": "( RESET_CONTROLLER ) && ( ARCH_STI )",
            "restrict": ""
        }
    ],
    "STIH407_RESET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && ( ARCH_STI )",
            "restrict": ""
        }
    ],
    "COMMON_RESET_HI3660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "COMMON_RESET_HI6220": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER ) && (ARCH_HISI || COMPILE_TEST)",
            "restrict": "( ARCH_HISI )[!(y)]"
        }
    ],
    "RESET_TEGRA_BPMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RESET_CONTROLLER )",
            "restrict": "( TEGRA_BPMP )[!(y)]"
        }
    ],
    "GENERIC_PHY": [
        {
            "type": "bool",
            "rev_select": "SATA_DWC || SATA_MV || MSCC_OCELOT_SWITCH || PINCTRL_TEGRA_XUSB || VIDEO_S5P_MIPI_CSIS || DRM_ROCKCHIP[ROCKCHIP_DW_MIPI_DSI] || DRM_ZYNQMP_DPSUB || USB_EHCI_HCD_STI || USB_OHCI_HCD_STI || USB_MUSB_SUNXI || USB_MUSB_OMAP2PLUS || USB_MUSB_MEDIATEK || PHY_LPC18XX_USB_OTG || PHY_PISTACHIO_USB || PHY_XGENE || PHY_CAN_TRANSCEIVER || PHY_SUN4I_USB || PHY_SUN6I_MIPI_DPHY || PHY_SUN9I_USB || PHY_SUN50I_USB3 || PHY_MESON8B_USB2 || PHY_MESON_GXL_USB2 || PHY_MESON_G12A_MIPI_DPHY_ANALOG || PHY_MESON_G12A_USB2 || PHY_MESON_G12A_USB3_PCIE || PHY_MESON_AXG_PCIE || PHY_MESON_AXG_MIPI_PCIE_ANALOG || PHY_MESON_AXG_MIPI_DPHY || PHY_BCM63XX_USBH || PHY_CYGNUS_PCIE || PHY_BCM_SR_USB || BCM_KONA_USB2_PHY || PHY_BCM_NS_USB2 || PHY_BCM_NS_USB3 || PHY_NS2_PCIE || PHY_NS2_USB_DRD || PHY_BRCM_SATA || PHY_BRCM_USB || PHY_BCM_SR_PCIE || PHY_CADENCE_TORRENT || PHY_CADENCE_DPHY || PHY_CADENCE_DPHY_RX || PHY_CADENCE_SIERRA || PHY_CADENCE_SALVO || PHY_FSL_IMX8MQ_USB || PHY_MIXEL_LVDS_PHY || PHY_MIXEL_MIPI_DPHY || PHY_FSL_IMX8M_PCIE || PHY_FSL_LYNX_28G || PHY_HI6220_USB || PHY_HI3660_USB || PHY_HI3670_USB || PHY_HI3670_PCIE || PHY_HISTB_COMBPHY || PHY_HISI_INNO_USB2 || PHY_HIX5HD2_SATA || PHY_INGENIC_USB || PHY_LANTIQ_VRX200_PCIE || PHY_LANTIQ_RCU_USB2 || ARMADA375_USBCLUSTER_PHY || PHY_BERLIN_SATA || PHY_BERLIN_USB || PHY_MVEBU_A3700_COMPHY || PHY_MVEBU_A3700_UTMI || PHY_MVEBU_A38X_COMPHY || PHY_MVEBU_CP110_COMPHY || PHY_MVEBU_CP110_UTMI || PHY_MVEBU_SATA || PHY_PXA_28NM_HSIC || PHY_PXA_28NM_USB2 || PHY_PXA_USB || PHY_MMP3_USB || PHY_MMP3_HSIC || PHY_MTK_PCIE || PHY_MTK_TPHY || PHY_MTK_UFS || PHY_MTK_XSPHY || PHY_MTK_HDMI || PHY_MTK_MIPI_DSI || PHY_MTK_DP || PHY_SPARX5_SERDES || PHY_LAN966X_SERDES || PHY_CPCAP_USB || PHY_MAPPHONE_MDM6600 || PHY_OCELOT_SERDES || PHY_ATH79_USB || PHY_QCOM_APQ8064_SATA || PHY_QCOM_EDP || PHY_QCOM_IPQ4019_USB || PHY_QCOM_IPQ806X_SATA || PHY_QCOM_PCIE2 || PHY_QCOM_QMP || PHY_QCOM_QUSB2 || PHY_QCOM_USB_HS || PHY_QCOM_USB_SNPS_FEMTO_V2 || PHY_QCOM_USB_HSIC || PHY_QCOM_USB_HS_28NM || PHY_QCOM_USB_SS || PHY_QCOM_IPQ806X_USB || PHY_MT7621_PCI || PHY_RALINK_USB || PHY_RCAR_GEN3_PCIE || PHY_RCAR_GEN3_USB2 || PHY_RCAR_GEN3_USB3 || PHY_ROCKCHIP_DP || PHY_ROCKCHIP_DPHY_RX0 || PHY_ROCKCHIP_EMMC || PHY_ROCKCHIP_INNO_HDMI || PHY_ROCKCHIP_INNO_USB2 || PHY_ROCKCHIP_INNO_CSIDPHY || PHY_ROCKCHIP_INNO_DSIDPHY || PHY_ROCKCHIP_NANENG_COMBO_PHY || PHY_ROCKCHIP_PCIE || PHY_ROCKCHIP_TYPEC || PHY_ROCKCHIP_USB || PHY_EXYNOS_DP_VIDEO || PHY_EXYNOS_MIPI_VIDEO || PHY_EXYNOS_PCIE || PHY_SAMSUNG_UFS || PHY_SAMSUNG_USB2 || PHY_EXYNOS5_USBDRD || PHY_EXYNOS5250_SATA || PHY_UNIPHIER_USB2 || PHY_UNIPHIER_USB3 || PHY_UNIPHIER_PCIE || PHY_UNIPHIER_AHCI || PHY_MIPHY28LP || PHY_ST_SPEAR1310_MIPHY || PHY_ST_SPEAR1340_MIPHY || PHY_STIH407_USB || PHY_STM32_USBPHYC || PHY_TEGRA194_P2U || PHY_DA8XX_USB || PHY_DM816X_USB || PHY_AM654_SERDES || PHY_J721E_WIZ || OMAP_USB2 || TI_PIPE3 || PHY_TUSB1210 || TWL4030_USB || PHY_TI_GMII_SEL || PHY_INTEL_KEEMBAY_EMMC || PHY_INTEL_KEEMBAY_USB || PHY_INTEL_LGM_COMBO || PHY_INTEL_LGM_EMMC || PHY_INTEL_THUNDERBAY_EMMC || PHY_XILINX_ZYNQMP",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_PHY_MIPI_DPHY": [
        {
            "type": "bool",
            "rev_select": "VIDEO_ROCKCHIP_ISP1 || VIDEO_SUN6I_MIPI_CSI2 || VIDEO_SUN8I_A83T_MIPI_CSI2 || DRM_ROCKCHIP[ROCKCHIP_DW_MIPI_DSI] || ROCKCHIP_DW_MIPI_DSI || DRM_CDNS_DSI || DRM_NWL_MIPI_DSI || PHY_SUN6I_MIPI_DPHY || PHY_MESON_G12A_MIPI_DPHY_ANALOG || PHY_MESON_AXG_MIPI_PCIE_ANALOG || PHY_MESON_AXG_MIPI_DPHY || PHY_CADENCE_DPHY || PHY_CADENCE_DPHY_RX || PHY_MIXEL_MIPI_DPHY || PHY_ROCKCHIP_DPHY_RX0 || PHY_ROCKCHIP_INNO_CSIDPHY || PHY_ROCKCHIP_INNO_DSIDPHY",
            "dep": "",
            "restrict": ""
        }
    ],
    "PHY_LPC18XX_USB_OTG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_LPC18XX || COMPILE_TEST )) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "PHY_PISTACHIO_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_XGENE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && OF && ( ARM64 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "USB_LGM_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB_SUPPORT) && (X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_CAN_TRANSCEIVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PHY_SUN4I_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM) && (RESET_CONTROLLER) && (EXTCON) && (POWER_SUPPLY) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "PHY_SUN6I_MIPI_DPHY": [
        {
            "type": "tristate",
            "rev_select": "DRM_SUN6I_DSI",
            "dep": "(ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM && COMMON_CLK) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "PHY_SUN9I_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM) && (RESET_CONTROLLER) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "PHY_SUN50I_USB3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_SUNXI || COMPILE_TEST) && (HAS_IOMEM && OF) && (RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "PHY_MESON8_HDMI_TX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_MESON && ARM ) || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MESON8B_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST )) && (USB_SUPPORT)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_GXL_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST )) && (USB_SUPPORT)",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_G12A_MIPI_DPHY_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_G12A_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_G12A_USB3_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_AXG_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_AXG_MIPI_PCIE_ANALOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_MESON_AXG_MIPI_DPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_MESON || COMPILE_TEST ))",
            "restrict": "( ARCH_MESON )[!(y)]"
        }
    ],
    "PHY_BCM63XX_USBH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(BMIPS_GENERIC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_CYGNUS_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_BCM_CYGNUS || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_CYGNUS )[!(y)]"
        }
    ],
    "PHY_BCM_SR_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "BCM_KONA_USB2_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_BCM_NS_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BCM_IPROC || COMPILE_TEST) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PHY_BCM_NS_USB3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BCM_IPROC || COMPILE_TEST) && (HAS_IOMEM && OF) && (MDIO_BUS)",
            "restrict": ""
        }
    ],
    "PHY_NS2_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( OF && MDIO_BUS_MUX_BCM_IPROC ) || ( COMPILE_TEST && MDIO_BUS ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PHY_NS2_USB_DRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PHY_BRCM_SATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BRCMSTB || ARCH_BCM_IPROC || BMIPS_GENERIC || ARCH_BCMBCA || COMPILE_TEST) && (OF)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PHY_BRCM_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BCM4908 || ARCH_BRCMSTB || COMPILE_TEST) && (OF)",
            "restrict": "( ARCH_BCM4908 || ARCH_BRCMSTB )[!(y)]"
        }
    ],
    "PHY_BCM_SR_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_BCM_IPROC || COMPILE_TEST ))",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "PHY_CADENCE_TORRENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (HAS_IOMEM) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PHY_CADENCE_DPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PHY_CADENCE_DPHY_RX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "PHY_CADENCE_SIERRA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && HAS_IOMEM && RESET_CONTROLLER) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PHY_CADENCE_SALVO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_FSL_IMX8MQ_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MXC && ARM64 ) || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": "( ARCH_MXC && ARM64 )[!(y)]"
        }
    ],
    "PHY_MIXEL_LVDS_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MXC && ARM64 ) || COMPILE_TEST ) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MIXEL_MIPI_DPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MXC && ARM64 ) || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_FSL_IMX8M_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( ARCH_MXC && ARM64 ) || COMPILE_TEST ) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_FSL_LYNX_28G": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (ARCH_LAYERSCAPE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_HI6220_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_HISI && ARM64 ) || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_HI3660_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_HISI && ARM64 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_HI3670_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_HISI && ARM64 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_HI3670_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_HISI && ARM64 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_HISTB_COMBPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_HISI && ARM64 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_HISI_INNO_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_HISI && ARM64 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_HIX5HD2_SATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_HIX5HD2 && OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_INGENIC_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MIPS || COMPILE_TEST) && (USB_SUPPORT) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_LANTIQ_VRX200_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SOC_TYPE_XWAY || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_LANTIQ_RCU_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( SOC_TYPE_XWAY || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "ARMADA375_USBCLUSTER_PHY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF && HAS_IOMEM)",
            "restrict": "( y )[!(COMPILE_TEST) && (MACH_ARMADA_375)]"
        }
    ],
    "PHY_BERLIN_SATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BERLIN || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_BERLIN_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_BERLIN || COMPILE_TEST) && (OF && HAS_IOMEM && RESET_CONTROLLER)",
            "restrict": ""
        }
    ],
    "PHY_MVEBU_A3700_COMPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MVEBU || COMPILE_TEST) && (OF) && (HAVE_ARM_SMCCC)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PHY_MVEBU_A3700_UTMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MVEBU || COMPILE_TEST) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PHY_MVEBU_A38X_COMPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MVEBU || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MVEBU_CP110_COMPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MVEBU || COMPILE_TEST) && (OF) && (HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "PHY_MVEBU_CP110_UTMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MVEBU || COMPILE_TEST) && (OF && USB_COMMON)",
            "restrict": ""
        }
    ],
    "PHY_MVEBU_SATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_DOVE || MACH_DOVE || MACH_KIRKWOOD) && (OF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PHY_PXA_28NM_HSIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_PXA_28NM_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_PXA_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_PXA || ARCH_MMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_MMP3_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MACH_MMP3_DT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_MMP3_HSIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MACH_MMP3_DT || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_MTK_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MTK_TPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (OF && OF_ADDRESS) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_MTK_UFS": [
        {
            "type": "tristate",
            "rev_select": "SCSI_UFS_MEDIATEK",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MTK_XSPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (OF && OF_ADDRESS) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_MTK_HDMI": [
        {
            "type": "tristate",
            "rev_select": "DRM_MEDIATEK_HDMI",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (COMMON_CLK) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MTK_MIPI_DSI": [
        {
            "type": "tristate",
            "rev_select": "DRM_MEDIATEK",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (COMMON_CLK) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_MTK_DP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_MEDIATEK || COMPILE_TEST) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_SPARX5_SERDES": [
        {
            "type": "tristate",
            "rev_select": "SPARX5_SWITCH",
            "dep": "(ARCH_SPARX5 || COMPILE_TEST) && (OF) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_LAN966X_SERDES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "PHY_CPCAP_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB_SUPPORT && IIO) && (USB_MUSB_HDRC || USB_MUSB_HDRC = n)",
            "restrict": ""
        }
    ],
    "PHY_MAPPHONE_MDM6600": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && USB_SUPPORT && GPIOLIB)",
            "restrict": ""
        }
    ],
    "PHY_OCELOT_SERDES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (MFD_SYSCON)",
            "restrict": ""
        }
    ],
    "PHY_ATH79_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ATH79 || COMPILE_TEST ))",
            "restrict": "( y )[!(y) && (USB_EHCI_HCD_PLATFORM || USB_OHCI_HCD_PLATFORM)]"
        }
    ],
    "PHY_QCOM_APQ8064_SATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_EDP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM || COMPILE_TEST) && (OF) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_IPQ4019_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_QCOM_IPQ806X_SATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_QCOM) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_PCIE2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && COMMON_CLK && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_QCOM_QMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && COMMON_CLK && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_QCOM_QUSB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_QCOM || COMPILE_TEST )) && (NVMEM || ! NVMEM)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_USB_HS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB_ULPI_BUS) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_USB_SNPS_FEMTO_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_QCOM_USB_HSIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB_ULPI_BUS)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_USB_HS_28NM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_QCOM || COMPILE_TEST )) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_USB_SS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_QCOM || COMPILE_TEST )) && (EXTCON || ! EXTCON)",
            "restrict": ""
        }
    ],
    "PHY_QCOM_IPQ806X_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (OF && ( ARCH_QCOM || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_MT7621_PCI": [
        {
            "type": "tristate",
            "rev_select": "PCIE_MT7621",
            "dep": "(( RALINK && OF ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_RALINK_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RALINK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_RCAR_GEN2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_RENESAS) && (GENERIC_PHY)",
            "restrict": ""
        }
    ],
    "PHY_RCAR_GEN3_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_RENESAS)",
            "restrict": ""
        }
    ],
    "PHY_RCAR_GEN3_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_RENESAS) && (EXTCON || ! EXTCON) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "PHY_RCAR_GEN3_USB3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_RENESAS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_DP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ROCKCHIP && OF)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_DPHY_RX0": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ROCKCHIP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_EMMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ROCKCHIP && OF)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_INNO_HDMI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_ROCKCHIP || COMPILE_TEST ) && OF) && (COMMON_CLK) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_INNO_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_ROCKCHIP || COMPILE_TEST ) && OF) && (COMMON_CLK) && (EXTCON) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_INNO_CSIDPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_ROCKCHIP || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_INNO_DSIDPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_ROCKCHIP || COMPILE_TEST ) && OF)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_NANENG_COMBO_PHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ROCKCHIP && OF)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_ROCKCHIP && OF ) || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_TYPEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_ROCKCHIP || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_ROCKCHIP_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ROCKCHIP && OF)",
            "restrict": ""
        }
    ],
    "PHY_EXYNOS_DP_VIDEO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": "( ARCH_EXYNOS )[!(y)]"
        }
    ],
    "PHY_EXYNOS_MIPI_VIDEO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_S5PV210 || ARCH_EXYNOS)]"
        }
    ],
    "PHY_EXYNOS_PCIE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF && ( ARCH_EXYNOS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_SAMSUNG_UFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_EXYNOS || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_SAMSUNG_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM) && (USB_EHCI_EXYNOS || USB_OHCI_EXYNOS || USB_DWC2 || COMPILE_TEST)",
            "restrict": "( ARCH_EXYNOS )[!(y)]"
        }
    ],
    "PHY_EXYNOS4210_USB2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PHY_SAMSUNG_USB2)",
            "restrict": "( CPU_EXYNOS4210 )[!(y)]"
        }
    ],
    "PHY_EXYNOS4X12_USB2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PHY_SAMSUNG_USB2)",
            "restrict": "( SOC_EXYNOS3250 || SOC_EXYNOS4412 )[!(y)]"
        }
    ],
    "PHY_EXYNOS5250_USB2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PHY_SAMSUNG_USB2)",
            "restrict": "( SOC_EXYNOS5250 || SOC_EXYNOS5420 )[!(y)]"
        }
    ],
    "PHY_S5PV210_USB2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PHY_SAMSUNG_USB2) && (ARCH_S5PV210 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_EXYNOS5_USBDRD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(( ARCH_EXYNOS && OF ) || COMPILE_TEST) && (HAS_IOMEM) && (USB_DWC3_EXYNOS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PHY_EXYNOS5250_SATA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SOC_EXYNOS5250) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "PHY_UNIPHIER_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_UNIPHIER || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_UNIPHIER_USB3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_UNIPHIER || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_UNIPHIER_PCIE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_UNIPHIER || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": "( PCIE_UNIPHIER )[!(y)]"
        }
    ],
    "PHY_UNIPHIER_AHCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_UNIPHIER || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": "( SATA_AHCI_PLATFORM )[!(y)]"
        }
    ],
    "PHY_MIPHY28LP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_STI)",
            "restrict": ""
        }
    ],
    "PHY_ST_SPEAR1310_MIPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MACH_SPEAR1310 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_ST_SPEAR1340_MIPHY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MACH_SPEAR1340 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_STIH407_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(RESET_CONTROLLER) && (ARCH_STI || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_STM32_USBPHYC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_STM32 || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PHY_TEGRA_XUSB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_TEGRA && USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "PHY_TEGRA194_P2U": [
        {
            "type": "tristate",
            "rev_select": "PCIE_TEGRA194_HOST || PCIE_TEGRA194_EP",
            "dep": "(ARCH_TEGRA_194_SOC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_DA8XX_USB": [
        {
            "type": "tristate",
            "rev_select": "USB_OHCI_HCD_DAVINCI || USB_MUSB_DA8XX",
            "dep": "(ARCH_DAVINCI_DA8XX || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_DM816X_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_OMAP2PLUS || COMPILE_TEST) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "PHY_AM654_SERDES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ARCH_K3 || COMPILE_TEST) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "PHY_J721E_WIZ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ARCH_K3 || COMPILE_TEST) && (HAS_IOMEM && OF_ADDRESS) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "OMAP_CONTROL_PHY": [
        {
            "type": "tristate",
            "rev_select": "OMAP_USB2[ARCH_OMAP2PLUS || COMPILE_TEST] || TI_PIPE3",
            "dep": "(ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "OMAP_USB2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_OMAP2PLUS || ARCH_K3) && (USB_SUPPORT)",
            "restrict": ""
        }
    ],
    "TI_PIPE3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_OMAP2PLUS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_TUSB1210": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(USB_ULPI_BUS)",
            "restrict": ""
        }
    ],
    "TWL4030_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(TWL4030_CORE && REGULATOR_TWL4030 && USB_MUSB_OMAP2PLUS) && (USB_SUPPORT) && (USB_GADGET || ! USB_GADGET)",
            "restrict": ""
        }
    ],
    "PHY_TI_GMII_SEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PHY_INTEL_KEEMBAY_EMMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_KEEMBAY || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_INTEL_KEEMBAY_USB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_KEEMBAY || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_INTEL_LGM_COMBO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 || COMPILE_TEST) && (OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PHY_INTEL_LGM_EMMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(X86 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PHY_INTEL_THUNDERBAY_EMMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF && ( ARCH_THUNDERBAY || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "PHY_XILINX_ZYNQMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARCH_ZYNQMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "POWERCAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "INTEL_RAPL_CORE": [
        {
            "type": "tristate",
            "rev_select": "PROC_THERMAL_MMIO_RAPL || INTEL_RAPL",
            "dep": "( POWERCAP )",
            "restrict": ""
        }
    ],
    "INTEL_RAPL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( POWERCAP ) && (X86 && IOSF_MBI)",
            "restrict": ""
        }
    ],
    "IDLE_INJECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWERCAP ) && (CPU_IDLE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DTPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWERCAP ) && (OF)",
            "restrict": ""
        }
    ],
    "DTPM_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWERCAP ) && (DTPM && ENERGY_MODEL)",
            "restrict": ""
        }
    ],
    "DTPM_DEVFREQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( POWERCAP ) && (DTPM && ENERGY_MODEL)",
            "restrict": ""
        }
    ],
    "MCB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MCB_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MCB ) && (PCI)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MCB_LPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MCB )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARM_CCI_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (( ARM && CPU_V7 ) || ARM64)",
            "restrict": ""
        }
    ],
    "ARM_CCI400_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM_CCI_PMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_CCI5xx_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM_CCI_PMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_CCN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM || ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_CMN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM64 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ARM_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM || ARM64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RISCV_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (RISCV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RISCV_PMU_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (RISCV_PMU)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RISCV_PMU_SBI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (RISCV_PMU && RISCV_SBI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_PMU_ACPI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM_PMU && ACPI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ARM_SMMU_V3_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (( ARM64 && ACPI ) || ( COMPILE_TEST && 64BIT )) && (GENERIC_MSI_IRQ_DOMAIN)",
            "restrict": ""
        }
    ],
    "ARM_DSU_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM64)",
            "restrict": ""
        }
    ],
    "FSL_IMX8_DDR_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_L2_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_QCOM && ARM64 && ACPI)",
            "restrict": ""
        }
    ],
    "QCOM_L3_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_QCOM && ARM64 && ACPI)",
            "restrict": ""
        }
    ],
    "THUNDERX2_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_THUNDER2 || COMPILE_TEST) && (NUMA && ACPI)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "XGENE_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_XGENE || ( COMPILE_TEST && 64BIT ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARM_SPE_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM64)",
            "restrict": ""
        }
    ],
    "ARM_DMC620_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (( ARM64 && ACPI ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MARVELL_CN10K_TAD_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_THUNDER || ( COMPILE_TEST && 64BIT ))",
            "restrict": ""
        }
    ],
    "APPLE_M1_CPU_PMU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM_PMU && ARCH_APPLE)",
            "restrict": ""
        }
    ],
    "HISI_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM64 && ACPI)",
            "restrict": ""
        }
    ],
    "HISI_PCIE_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (PCI && ARM64)",
            "restrict": ""
        }
    ],
    "HNS3_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARM64 || COMPILE_TEST) && (PCI)",
            "restrict": ""
        }
    ],
    "MARVELL_CN10K_DDR_PMU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( PERF_EVENTS ) ) && (ARCH_THUNDER || ( COMPILE_TEST && 64BIT ))",
            "restrict": ""
        }
    ],
    "RAS": [
        {
            "type": "bool",
            "rev_select": "MEMORY_FAILURE || PCIEAER",
            "dep": "",
            "restrict": ""
        }
    ],
    "RAS_CEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RAS ) && (X86_MCE && MEMORY_FAILURE && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "RAS_CEC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RAS ) && (RAS_CEC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "USB4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "USB4_DEBUGFS_WRITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB4 )",
            "restrict": ""
        }
    ],
    "USB4_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( USB4 ) && (USB4 && KUNIT = y)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "USB4_DMA_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( USB4 ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ANDROID_BINDER_IPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ANDROID_BINDERFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ANDROID_BINDER_IPC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ANDROID_BINDER_DEVICES": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(ANDROID_BINDER_IPC)",
            "restrict": "( \"binder,hwbinder,vndbinder\" )[!(y)]"
        }
    ],
    "ANDROID_BINDER_IPC_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ANDROID_BINDER_IPC)",
            "restrict": ""
        }
    ],
    "TRACE_GPU_MEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LIBNVDIMM": [
        {
            "type": "tristate",
            "rev_select": "X86_PMEM_LEGACY || ACPI_NFIT",
            "dep": "(PHYS_ADDR_T_64BIT) && (HAS_IOMEM) && (BLK_DEV)",
            "restrict": ""
        }
    ],
    "BLK_DEV_PMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( LIBNVDIMM )",
            "restrict": "( LIBNVDIMM )[!(y)]"
        }
    ],
    "ND_CLAIM": [
        {
            "type": "bool",
            "rev_select": "BTT || NVDIMM_PFN",
            "dep": "( LIBNVDIMM )",
            "restrict": ""
        }
    ],
    "ND_BTT": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_PMEM[BTT]",
            "dep": "( LIBNVDIMM )",
            "restrict": ""
        }
    ],
    "BTT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( LIBNVDIMM )",
            "restrict": "( y )[!(y) && (LIBNVDIMM)]"
        }
    ],
    "ND_PFN": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_PMEM[NVDIMM_PFN]",
            "dep": "( LIBNVDIMM )",
            "restrict": ""
        }
    ],
    "NVDIMM_PFN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( LIBNVDIMM ) && (ZONE_DEVICE)",
            "restrict": "( LIBNVDIMM )[!(y)]"
        }
    ],
    "NVDIMM_DAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( LIBNVDIMM ) && (NVDIMM_PFN)",
            "restrict": "( LIBNVDIMM )[!(y)]"
        }
    ],
    "OF_PMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( LIBNVDIMM ) && (OF)",
            "restrict": "( LIBNVDIMM )[!(y)]"
        }
    ],
    "NVDIMM_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( LIBNVDIMM ) && (ENCRYPTED_KEYS) && (( LIBNVDIMM = ENCRYPTED_KEYS ) || LIBNVDIMM = m)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NVDIMM_TEST_BUILD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( LIBNVDIMM ) && (m) && (COMPILE_TEST && X86_64)",
            "restrict": "( m )[!(y) && (COMPILE_TEST)]"
        }
    ],
    "DAX": [
        {
            "type": "tristate",
            "rev_select": "DCSSBLK || BLK_DEV_PMEM || FS_DAX",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEV_DAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DAX ) && (TRANSPARENT_HUGEPAGE)",
            "restrict": ""
        }
    ],
    "DEV_DAX_PMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DAX ) && (LIBNVDIMM && NVDIMM_DAX && DEV_DAX)",
            "restrict": "( DEV_DAX )[!(y)]"
        }
    ],
    "DEV_DAX_HMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DAX ) && (EFI_SOFT_RESERVE)",
            "restrict": "( DEV_DAX )[!(y)]"
        }
    ],
    "DEV_DAX_HMEM_DEVICES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DAX ) && (DEV_DAX_HMEM && DAX = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DEV_DAX_KMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( DAX ) && (DEV_DAX) && (MEMORY_HOTPLUG)",
            "restrict": "( DEV_DAX )[!(y)]"
        }
    ],
    "NVMEM": [
        {
            "type": "bool",
            "rev_select": "EEPROM_AT24 || EEPROM_AT25 || EEPROM_93XX46 || DRM_MSM || RTC_NVMEM || USB4",
            "dep": "",
            "restrict": ""
        }
    ],
    "NVMEM_SYSFS": [
        {
            "type": "bool",
            "rev_select": "EEPROM_AT24 || EEPROM_AT25 || EEPROM_93XX46",
            "dep": "( NVMEM ) && (SYSFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NVMEM_IMX_IIM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NVMEM_IMX_OCOTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_MXC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_IMX_OCOTP_SCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (IMX_SCU) && (HAVE_ARM_SMCCC)",
            "restrict": ""
        }
    ],
    "JZ4780_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (MACH_INGENIC || COMPILE_TEST) && (HAS_IOMEM) && (OF)",
            "restrict": ""
        }
    ],
    "NVMEM_LPC18XX_EEPROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_LPC18XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_LPC18XX_OTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_LPC18XX || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_MXS_OCOTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_MXS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MTK_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_MEDIATEK || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MICROCHIP_OTPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NVMEM_NINTENDO_OTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (WII || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "QCOM_QFPROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_QCOM || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_SPMI_SDAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (SPMI)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "ROCKCHIP_OTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_ROCKCHIP || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_BCM_OCOTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_BCM_IPROC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": "( ARCH_BCM_IPROC )[!(y)]"
        }
    ],
    "NVMEM_STM32_ROMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_STM32 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NVMEM_SUNXI_SID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_SUNXI)",
            "restrict": ""
        }
    ],
    "UNIPHIER_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_UNIPHIER || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_VF610_OCOTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (SOC_VF610 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "MESON_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (( ARCH_MESON || COMPILE_TEST ) && MESON_SM)",
            "restrict": ""
        }
    ],
    "MESON_MX_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_MESON || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "NVMEM_SNVS_LPGPR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "RAVE_SP_EEPROM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (RAVE_SP_CORE)",
            "restrict": ""
        }
    ],
    "SC27XX_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (MFD_SC27XX_PMIC || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_ZYNQMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_ZYNQMP)",
            "restrict": ""
        }
    ],
    "SPRD_EFUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_SPRD || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_RMEM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_BRCM_NVRAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_BCM_5301X || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_LAYERSCAPE_SFP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_LAYERSCAPE || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_SUNPLUS_OCOTP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (SOC_SP7021 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "NVMEM_APPLE_EFUSES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NVMEM ) && (ARCH_APPLE || COMPILE_TEST)",
            "restrict": "( ARCH_APPLE )[!(y)]"
        }
    ],
    "STM": [
        {
            "type": "tristate",
            "rev_select": "CORESIGHT_STM",
            "dep": "",
            "restrict": ""
        }
    ],
    "STM_PROTO_BASIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STM )",
            "restrict": "( CONFIG_STM )[!(y)]"
        }
    ],
    "STM_PROTO_SYS_T": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STM )",
            "restrict": "( CONFIG_STM )[!(y)]"
        }
    ],
    "STM_DUMMY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STM )",
            "restrict": ""
        }
    ],
    "STM_SOURCE_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STM )",
            "restrict": ""
        }
    ],
    "STM_SOURCE_HEARTBEAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STM )",
            "restrict": ""
        }
    ],
    "STM_SOURCE_FTRACE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( STM ) && (TRACING)",
            "restrict": ""
        }
    ],
    "INTEL_TH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_DMA && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "INTEL_TH_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTEL_TH ) && (PCI)",
            "restrict": ""
        }
    ],
    "INTEL_TH_ACPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTEL_TH ) && (ACPI)",
            "restrict": ""
        }
    ],
    "INTEL_TH_GTH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTEL_TH )",
            "restrict": ""
        }
    ],
    "INTEL_TH_STH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTEL_TH ) && (STM)",
            "restrict": ""
        }
    ],
    "INTEL_TH_MSU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTEL_TH )",
            "restrict": ""
        }
    ],
    "INTEL_TH_PTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTEL_TH )",
            "restrict": ""
        }
    ],
    "INTEL_TH_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEL_TH ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "FPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FPGA_MGR_SOCFPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ARCH_INTEL_SOCFPGA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_SOCFPGA_A10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ARCH_INTEL_SOCFPGA || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "ALTERA_PR_IP_CORE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA )",
            "restrict": ""
        }
    ],
    "ALTERA_PR_IP_CORE_PLAT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ALTERA_PR_IP_CORE && OF && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_ALTERA_PS_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (SPI)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_ALTERA_CVP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (PCI)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_ZYNQ_FPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ARCH_ZYNQ || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_STRATIX10_SOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (( ARCH_INTEL_SOCFPGA && INTEL_STRATIX10_SERVICE ))",
            "restrict": ""
        }
    ],
    "FPGA_MGR_XILINX_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (SPI)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_ICE40_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (OF && SPI)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_MACHXO2_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (SPI)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_TS73XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ARCH_EP93XX && MACH_TS72XX)",
            "restrict": ""
        }
    ],
    "FPGA_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "FPGA_DFL",
            "dep": "( FPGA )",
            "restrict": ""
        }
    ],
    "SOCFPGA_FPGA_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ARCH_INTEL_SOCFPGA && FPGA_BRIDGE)",
            "restrict": ""
        }
    ],
    "ALTERA_FREEZE_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_BRIDGE && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "XILINX_PR_DECOUPLER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_BRIDGE) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FPGA_REGION": [
        {
            "type": "tristate",
            "rev_select": "FPGA_DFL",
            "dep": "( FPGA ) && (FPGA_BRIDGE)",
            "restrict": ""
        }
    ],
    "OF_FPGA_REGION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (OF && FPGA_REGION)",
            "restrict": ""
        }
    ],
    "FPGA_DFL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_FME": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_DFL && HWMON && PERF_EVENTS)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_FME_MGR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_DFL_FME && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_FME_BRIDGE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_DFL_FME && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_FME_REGION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_DFL_FME && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_AFU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_DFL)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_NIOS_INTEL_PAC_N3000": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (FPGA_DFL)",
            "restrict": ""
        }
    ],
    "FPGA_DFL_PCI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (PCI && FPGA_DFL)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_ZYNQMP_FPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ZYNQMP_FIRMWARE || ( ! ZYNQMP_FIRMWARE && COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FPGA_MGR_VERSAL_FPGA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (ARCH_ZYNQMP || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "FPGA_M10_BMC_SEC_UPDATE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (MFD_INTEL_M10_BMC && FW_UPLOAD)",
            "restrict": ""
        }
    ],
    "FPGA_MGR_MICROCHIP_SPI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FPGA ) && (SPI)",
            "restrict": ""
        }
    ],
    "FSI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF)",
            "restrict": ""
        }
    ],
    "FSI_NEW_DEV_NODE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FSI )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FSI_MASTER_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "FSI_MASTER_HUB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI )",
            "restrict": ""
        }
    ],
    "FSI_MASTER_AST_CF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI ) && (GPIOLIB) && (GPIO_ASPEED)",
            "restrict": ""
        }
    ],
    "FSI_MASTER_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "FSI_SCOM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI )",
            "restrict": ""
        }
    ],
    "FSI_SBEFIFO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI ) && (OF_ADDRESS)",
            "restrict": ""
        }
    ],
    "FSI_OCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FSI ) && (FSI_SBEFIFO)",
            "restrict": ""
        }
    ],
    "TEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAVE_ARM_SMCCC || COMPILE_TEST || CPU_SUP_AMD)",
            "restrict": ""
        }
    ],
    "OPTEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TEE ) && (HAVE_ARM_SMCCC) && (MMU)",
            "restrict": ""
        }
    ],
    "AMDTEE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( TEE ) && (CRYPTO_DEV_SP_PSP && CRYPTO_DEV_CCP_DD)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MULTIPLEXER": [
        {
            "type": "tristate",
            "rev_select": "MTD_PHYSMAP_BT1_ROM || HBMC_AM654 || MDIO_BUS_MUX_MULTIPLEXER || I2C_MUX_GPMUX || SPI_DW_BT1 || SPI_MUX || VIDEO_MUX || DRM_NWL_MIPI_DSI || IIO_MUX || PHY_CAN_TRANSCEIVER || PHY_AM654_SERDES || PHY_J721E_WIZ",
            "dep": "",
            "restrict": ""
        }
    ],
    "MUX_ADG792A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( MULTIPLEXER ) ) && (I2C)",
            "restrict": ""
        }
    ],
    "MUX_ADGS1408": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( MULTIPLEXER ) ) && (SPI)",
            "restrict": ""
        }
    ],
    "MUX_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( ( MULTIPLEXER ) ) && (GPIOLIB || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "MUX_MMIO": [
        {
            "type": "tristate",
            "rev_select": "MTD_PHYSMAP_BT1_ROM || SPI_DW_BT1 || PHY_AM654_SERDES || PHY_J721E_WIZ",
            "dep": "( ( MULTIPLEXER ) ) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "PM_OPP": [
        {
            "type": "bool",
            "rev_select": "CPUFREQ_DT || ARM_ALLWINNER_SUN50I_CPUFREQ_NVMEM || ARM_VEXPRESS_SPC_CPUFREQ || ARM_IMX6Q_CPUFREQ || ARM_MEDIATEK_CPUFREQ || ARM_QCOM_CPUFREQ_NVMEM || ARM_SCMI_CPUFREQ || DRM_MSM || TEGRA_CLK_DFLL || QCOM_CPR || QCOM_ICC_BWMON || SOC_TEGRA_PMC || PM_DEVFREQ || DEVFREQ_EVENT_EXYNOS_NOCP || DEVFREQ_EVENT_EXYNOS_PPMU || TEGRA30_EMC || TEGRA124_EMC",
            "dep": "",
            "restrict": ""
        }
    ],
    "SIOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SIOX_BUS_GPIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SIOX )",
            "restrict": ""
        }
    ],
    "SLIMBUS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SLIM_QCOM_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SLIMBUS ) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "SLIM_QCOM_NGD_CTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SLIMBUS ) && (HAS_IOMEM && DMA_ENGINE && NET && QCOM_RPROC_COMMON) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTERCONNECT": [
        {
            "type": "bool",
            "rev_select": "DRM_TEGRA || TEGRA_MC",
            "dep": "",
            "restrict": ""
        }
    ],
    "INTERCONNECT_IMX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (ARCH_MXC || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_IMX8MM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_IMX)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_IMX8MN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_IMX)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_IMX8MQ": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_IMX)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_IMX8MP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_IMX)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (ARCH_QCOM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_BCM_VOTER": [
        {
            "type": "tristate",
            "rev_select": "INTERCONNECT_QCOM_SC7180 || INTERCONNECT_QCOM_SC7280 || INTERCONNECT_QCOM_SC8180X || INTERCONNECT_QCOM_SC8280XP || INTERCONNECT_QCOM_SDM845 || INTERCONNECT_QCOM_SDX55 || INTERCONNECT_QCOM_SDX65 || INTERCONNECT_QCOM_SM6350 || INTERCONNECT_QCOM_SM8150 || INTERCONNECT_QCOM_SM8250 || INTERCONNECT_QCOM_SM8350 || INTERCONNECT_QCOM_SM8450",
            "dep": "( INTERCONNECT )",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_MSM8916": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_MSM8939": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_MSM8974": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_MSM8996": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_OSM_L3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_QCM2290": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_QCS404": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_RPMH_POSSIBLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (QCOM_RPMH || ( COMPILE_TEST && ! QCOM_RPMH )) && (QCOM_COMMAND_DB || ( COMPILE_TEST && ! QCOM_COMMAND_DB )) && (OF || COMPILE_TEST)",
            "restrict": "( INTERCONNECT_QCOM )[!(y)]"
        }
    ],
    "INTERCONNECT_QCOM_RPMH": [
        {
            "type": "tristate",
            "rev_select": "INTERCONNECT_QCOM_SC7180 || INTERCONNECT_QCOM_SC7280 || INTERCONNECT_QCOM_SC8180X || INTERCONNECT_QCOM_SC8280XP || INTERCONNECT_QCOM_SDM845 || INTERCONNECT_QCOM_SDX55 || INTERCONNECT_QCOM_SDX65 || INTERCONNECT_QCOM_SM6350 || INTERCONNECT_QCOM_SM8150 || INTERCONNECT_QCOM_SM8250 || INTERCONNECT_QCOM_SM8350 || INTERCONNECT_QCOM_SM8450",
            "dep": "( INTERCONNECT )",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SC7180": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SC7280": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SC8180X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SC8280XP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SDM660": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM) && (QCOM_SMD_RPM)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SDM845": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SDX55": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SDX65": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SM6350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SM8150": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SM8250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SM8350": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SM8450": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_QCOM_RPMH_POSSIBLE)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_QCOM_SMD_RPM": [
        {
            "type": "tristate",
            "rev_select": "INTERCONNECT_QCOM_MSM8916 || INTERCONNECT_QCOM_MSM8939 || INTERCONNECT_QCOM_MSM8974 || INTERCONNECT_QCOM_MSM8996 || INTERCONNECT_QCOM_QCM2290 || INTERCONNECT_QCOM_QCS404 || INTERCONNECT_QCOM_SDM660",
            "dep": "( INTERCONNECT )",
            "restrict": ""
        }
    ],
    "INTERCONNECT_SAMSUNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (ARCH_EXYNOS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTERCONNECT_EXYNOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( INTERCONNECT ) && (INTERCONNECT_SAMSUNG)",
            "restrict": "( y )[!(y) && (ARCH_EXYNOS)]"
        }
    ],
    "COUNTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "104_QUAD_8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (( PC104 && X86 ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTERRUPT_CNT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (GPIOLIB)",
            "restrict": ""
        }
    ],
    "STM32_TIMER_CNT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (MFD_STM32_TIMERS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STM32_LPTIMER_CNT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (MFD_STM32_LPTIMER || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "TI_EQEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (( SOC_AM33XX || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "FTM_QUADDEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "MICROCHIP_TCB_CAPTURE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (HAS_IOMEM && OF)",
            "restrict": ""
        }
    ],
    "INTEL_QEP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( COUNTER ) && (PCI)",
            "restrict": ""
        }
    ],
    "MOST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(HAS_DMA && CONFIGFS_FS)",
            "restrict": ""
        }
    ],
    "MOST_USB_HDM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MOST ) && (USB)",
            "restrict": ""
        }
    ],
    "MOST_CDEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MOST )",
            "restrict": ""
        }
    ],
    "MOST_SND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MOST ) && (SND)",
            "restrict": ""
        }
    ],
    "PECI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PECI_CPU": [
        {
            "type": "tristate",
            "rev_select": "SENSORS_PECI_CPUTEMP || SENSORS_PECI_DIMMTEMP",
            "dep": "( PECI )",
            "restrict": ""
        }
    ],
    "PECI_ASPEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( PECI ) && (ARCH_ASPEED || COMPILE_TEST) && (OF) && (HAS_IOMEM) && (COMMON_CLK)",
            "restrict": ""
        }
    ],
    "HTE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HTE_TEGRA194": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HTE ) && (ARCH_TEGRA_194_SOC)",
            "restrict": ""
        }
    ],
    "HTE_TEGRA194_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( HTE ) && (HTE_TEGRA194)",
            "restrict": ""
        }
    ],
    "DCACHE_WORD_ACCESS": [
        {
            "type": "bool",
            "rev_select": "X86 || UML_X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "VALIDATE_FS_PARSER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FS_IOMAP": [
        {
            "type": "bool",
            "rev_select": "EXT2_FS || EXT4_FS || XFS_FS || GFS2_FS || BTRFS_FS || F2FS_FS || ZONEFS_FS || FS_DAX || HPFS_FS || EROFS_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "EXT2_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "EXT2_FS_XATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT2_FS)",
            "restrict": ""
        }
    ],
    "EXT2_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT2_FS_XATTR)",
            "restrict": ""
        }
    ],
    "EXT2_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT2_FS_XATTR)",
            "restrict": ""
        }
    ],
    "EXT3_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "EXT3_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT3_FS)",
            "restrict": ""
        }
    ],
    "EXT3_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT3_FS)",
            "restrict": ""
        }
    ],
    "EXT4_FS": [
        {
            "type": "tristate",
            "rev_select": "EXT3_FS",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "EXT4_USE_FOR_EXT2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT4_FS) && (EXT2_FS = n)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EXT4_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "EXT3_FS_POSIX_ACL",
            "dep": "( BLOCK ) && (EXT4_FS)",
            "restrict": ""
        }
    ],
    "EXT4_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "EXT3_FS_SECURITY",
            "dep": "( BLOCK ) && (EXT4_FS)",
            "restrict": ""
        }
    ],
    "EXT4_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT4_FS)",
            "restrict": ""
        }
    ],
    "EXT4_KUNIT_TESTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXT4_FS && KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "JBD2": [
        {
            "type": "tristate",
            "rev_select": "EXT4_FS || OCFS2_FS",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "JBD2_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (JBD2)",
            "restrict": ""
        }
    ],
    "FS_MBCACHE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": "( y )[!(y) && (EXT2_FS = y && EXT2_FS_XATTR)] || ( y )[!(y) && (EXT4_FS = y)] || ( m )[!(y) && (EXT2_FS_XATTR || EXT4_FS)]"
        }
    ],
    "REISERFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "REISERFS_CHECK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (REISERFS_FS)",
            "restrict": ""
        }
    ],
    "REISERFS_PROC_INFO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (REISERFS_FS && PROC_FS)",
            "restrict": ""
        }
    ],
    "REISERFS_FS_XATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (REISERFS_FS)",
            "restrict": ""
        }
    ],
    "REISERFS_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (REISERFS_FS_XATTR)",
            "restrict": ""
        }
    ],
    "REISERFS_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (REISERFS_FS_XATTR)",
            "restrict": ""
        }
    ],
    "JFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "JFS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (JFS_FS)",
            "restrict": ""
        }
    ],
    "JFS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (JFS_FS)",
            "restrict": ""
        }
    ],
    "JFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (JFS_FS)",
            "restrict": ""
        }
    ],
    "JFS_STATISTICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (JFS_FS)",
            "restrict": ""
        }
    ],
    "XFS_FS": [
        {
            "type": "tristate",
            "rev_select": "TEST_KMOD",
            "dep": "( BLOCK ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "XFS_SUPPORT_V4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "XFS_QUOTA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS)",
            "restrict": ""
        }
    ],
    "XFS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS)",
            "restrict": ""
        }
    ],
    "XFS_RT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS)",
            "restrict": ""
        }
    ],
    "XFS_ONLINE_SCRUB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XFS_ONLINE_REPAIR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS && XFS_ONLINE_SCRUB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XFS_WARN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS && ! XFS_DEBUG)",
            "restrict": ""
        }
    ],
    "XFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS)",
            "restrict": ""
        }
    ],
    "XFS_ASSERT_FATAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (XFS_FS && XFS_DEBUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GFS2_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "GFS2_FS_LOCKING_DLM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (( GFS2_FS != n ) && NET && INET && ( IPV6 || IPV6 = n ) && CONFIGFS_FS && SYSFS && ( DLM = y || DLM = GFS2_FS ))",
            "restrict": ""
        }
    ],
    "OCFS2_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (INET && SYSFS && CONFIGFS_FS)",
            "restrict": ""
        }
    ],
    "OCFS2_FS_O2CB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (OCFS2_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OCFS2_FS_USERSPACE_CLUSTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (OCFS2_FS && DLM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OCFS2_FS_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (OCFS2_FS && DEBUG_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OCFS2_DEBUG_MASKLOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (OCFS2_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OCFS2_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (OCFS2_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BTRFS_FS": [
        {
            "type": "tristate",
            "rev_select": "TEST_KMOD",
            "dep": "( BLOCK ) && (PAGE_SIZE_LESS_THAN_256KB)",
            "restrict": ""
        }
    ],
    "BTRFS_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BTRFS_FS)",
            "restrict": ""
        }
    ],
    "BTRFS_FS_CHECK_INTEGRITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BTRFS_FS)",
            "restrict": ""
        }
    ],
    "BTRFS_FS_RUN_SANITY_TESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BTRFS_FS)",
            "restrict": ""
        }
    ],
    "BTRFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BTRFS_FS)",
            "restrict": ""
        }
    ],
    "BTRFS_ASSERT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BTRFS_FS)",
            "restrict": ""
        }
    ],
    "BTRFS_FS_REF_VERIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (BTRFS_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NILFS2_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "F2FS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "F2FS_STAT_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_XATTR": [
        {
            "type": "bool",
            "rev_select": "F2FS_FS[FS_ENCRYPTION]",
            "dep": "( BLOCK ) && (F2FS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_XATTR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_XATTR)",
            "restrict": ""
        }
    ],
    "F2FS_CHECK_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS)",
            "restrict": ""
        }
    ],
    "F2FS_FAULT_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS)",
            "restrict": ""
        }
    ],
    "F2FS_FS_COMPRESSION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS)",
            "restrict": ""
        }
    ],
    "F2FS_FS_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_COMPRESSION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_LZORLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_LZO)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_COMPRESSION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_LZ4HC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_LZ4)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_FS_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS_COMPRESSION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_IOSTAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "F2FS_UNFAIR_RWSEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (F2FS_FS && BLK_CGROUP)",
            "restrict": ""
        }
    ],
    "ZONEFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (BLOCK) && (BLK_DEV_ZONED)",
            "restrict": ""
        }
    ],
    "FS_DAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU) && (! ( ARM || MIPS || SPARC )) && (ZONE_DEVICE || FS_DAX_LIMITED)",
            "restrict": ""
        }
    ],
    "FS_DAX_PMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FS_DAX) && (ZONE_DEVICE) && (TRANSPARENT_HUGEPAGE)",
            "restrict": "( FS_DAX )[!(y)]"
        }
    ],
    "FS_DAX_LIMITED": [
        {
            "type": "bool",
            "rev_select": "DCSSBLK",
            "dep": "",
            "restrict": ""
        }
    ],
    "FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "EXT2_FS_POSIX_ACL || EXT3_FS_POSIX_ACL || EXT4_FS_POSIX_ACL || REISERFS_FS_POSIX_ACL || JFS_POSIX_ACL || XFS_POSIX_ACL || GFS2_FS || OCFS2_FS || BTRFS_FS_POSIX_ACL || F2FS_FS_POSIX_ACL || FUSE_FS || NTFS3_FS_POSIX_ACL || TMPFS_POSIX_ACL || ORANGEFS_FS || JFFS2_FS_POSIX_ACL || EROFS_FS_POSIX_ACL || NFSD_V4 || NFS_ACL_SUPPORT || CEPH_FS_POSIX_ACL || 9P_FS_POSIX_ACL",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EXPORTFS": [
        {
            "type": "tristate",
            "rev_select": "FHANDLE || XFS_FS || FANOTIFY || OVERLAY_FS || NFSD",
            "dep": "",
            "restrict": ""
        }
    ],
    "EXPORTFS_BLOCK_OPS": [
        {
            "type": "bool",
            "rev_select": "NFSD_BLOCKLAYOUT || NFSD_SCSILAYOUT",
            "dep": "",
            "restrict": ""
        }
    ],
    "FILE_LOCKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "FS_ENCRYPTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FS_ENCRYPTION_ALGS": [
        {
            "type": "tristate",
            "rev_select": "EXT4_FS[FS_ENCRYPTION] || F2FS_FS[FS_ENCRYPTION] || UBIFS_FS[FS_ENCRYPTION]",
            "dep": "",
            "restrict": ""
        }
    ],
    "FS_ENCRYPTION_INLINE_CRYPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FS_ENCRYPTION && BLK_INLINE_ENCRYPTION)",
            "restrict": ""
        }
    ],
    "FS_VERITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FS_VERITY_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FS_VERITY)",
            "restrict": ""
        }
    ],
    "FS_VERITY_BUILTIN_SIGNATURES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FS_VERITY)",
            "restrict": ""
        }
    ],
    "FSNOTIFY": [
        {
            "type": "bool",
            "rev_select": "AUDITSYSCALL || DNOTIFY || INOTIFY_USER || FANOTIFY",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DNOTIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INOTIFY_USER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FANOTIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FANOTIFY_ACCESS_PERMISSIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FANOTIFY) && (SECURITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "QUOTA": [
        {
            "type": "bool",
            "rev_select": "OCFS2_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "QUOTA_NETLINK_INTERFACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(QUOTACTL && NET)",
            "restrict": ""
        }
    ],
    "PRINT_QUOTA_WARNING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(QUOTA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "QUOTA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(QUOTA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "QUOTA_TREE": [
        {
            "type": "tristate",
            "rev_select": "OCFS2_FS || QFMT_V2",
            "dep": "",
            "restrict": ""
        }
    ],
    "QFMT_V1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(QUOTA)",
            "restrict": ""
        }
    ],
    "QFMT_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(QUOTA)",
            "restrict": ""
        }
    ],
    "QUOTACTL": [
        {
            "type": "bool",
            "rev_select": "XFS_QUOTA || GFS2_FS || QUOTA",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "AUTOFS4_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "AUTOFS_FS": [
        {
            "type": "tristate",
            "rev_select": "AUTOFS4_FS",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FUSE_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CUSE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(FUSE_FS)",
            "restrict": ""
        }
    ],
    "VIRTIO_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(FUSE_FS)",
            "restrict": ""
        }
    ],
    "FUSE_DAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(VIRTIO_FS) && (FS_DAX) && (DAX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OVERLAY_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "OVERLAY_FS_REDIRECT_DIR": [
        {
            "type": "bool",
            "rev_select": "OVERLAY_FS_METACOPY",
            "dep": "(OVERLAY_FS)",
            "restrict": ""
        }
    ],
    "OVERLAY_FS_REDIRECT_ALWAYS_FOLLOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OVERLAY_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "OVERLAY_FS_INDEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OVERLAY_FS)",
            "restrict": ""
        }
    ],
    "OVERLAY_FS_NFS_EXPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OVERLAY_FS) && (OVERLAY_FS_INDEX) && (! OVERLAY_FS_METACOPY)",
            "restrict": ""
        }
    ],
    "OVERLAY_FS_XINO_AUTO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OVERLAY_FS) && (64BIT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "OVERLAY_FS_METACOPY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OVERLAY_FS)",
            "restrict": ""
        }
    ],
    "NETFS_SUPPORT": [
        {
            "type": "tristate",
            "rev_select": "FSCACHE || CEPH_FS || AFS_FS || 9P_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "NETFS_STATS": [
        {
            "type": "bool",
            "rev_select": "FSCACHE_STATS",
            "dep": "(NETFS_SUPPORT && PROC_FS)",
            "restrict": ""
        }
    ],
    "FSCACHE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FSCACHE_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FSCACHE && PROC_FS)",
            "restrict": ""
        }
    ],
    "FSCACHE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FSCACHE)",
            "restrict": ""
        }
    ],
    "CACHEFILES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(FSCACHE && BLOCK)",
            "restrict": ""
        }
    ],
    "CACHEFILES_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CACHEFILES)",
            "restrict": ""
        }
    ],
    "CACHEFILES_ERROR_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CACHEFILES && SYSCTL)",
            "restrict": ""
        }
    ],
    "CACHEFILES_ONDEMAND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CACHEFILES)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ISO9660_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "JOLIET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ISO9660_FS)",
            "restrict": ""
        }
    ],
    "ZISOFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (ISO9660_FS)",
            "restrict": ""
        }
    ],
    "UDF_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "FAT_FS": [
        {
            "type": "tristate",
            "rev_select": "MSDOS_FS || VFAT_FS",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "MSDOS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "VFAT_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "FAT_DEFAULT_CODEPAGE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( BLOCK ) && (FAT_FS)",
            "restrict": "( 437 )[!(y)]"
        }
    ],
    "FAT_DEFAULT_IOCHARSET": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( BLOCK ) && (VFAT_FS)",
            "restrict": "( \"iso8859-1\" )[!(y)]"
        }
    ],
    "FAT_DEFAULT_UTF8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (VFAT_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FAT_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK ) && (KUNIT && FAT_FS)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "EXFAT_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "EXFAT_DEFAULT_IOCHARSET": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( BLOCK ) && (EXFAT_FS)",
            "restrict": "( \"utf8\" )[!(y)]"
        }
    ],
    "NTFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "NTFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (NTFS_FS)",
            "restrict": ""
        }
    ],
    "NTFS_RW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (NTFS_FS) && (PAGE_SIZE_LESS_THAN_64KB)",
            "restrict": ""
        }
    ],
    "NTFS3_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( BLOCK )",
            "restrict": ""
        }
    ],
    "NTFS3_64BIT_CLUSTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (NTFS3_FS && 64BIT)",
            "restrict": ""
        }
    ],
    "NTFS3_LZX_XPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (NTFS3_FS)",
            "restrict": ""
        }
    ],
    "NTFS3_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( BLOCK ) && (NTFS3_FS)",
            "restrict": ""
        }
    ],
    "PROC_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PROC_KCORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROC_FS && MMU)",
            "restrict": ""
        }
    ],
    "PROC_VMCORE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROC_FS && CRASH_DUMP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PROC_VMCORE_DEVICE_DUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROC_VMCORE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PROC_SYSCTL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROC_FS)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PROC_PAGE_MONITOR": [
        {
            "type": "bool",
            "rev_select": "HWPOISON_INJECT || MEM_SOFT_DIRTY",
            "dep": "(PROC_FS && MMU)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "PROC_CHILDREN": [
        {
            "type": "bool",
            "rev_select": "CHECKPOINT_RESTORE",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PROC_PID_ARCH_STATUS": [
        {
            "type": "bool",
            "rev_select": "X86[PROC_FS]",
            "dep": "(PROC_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PROC_CPU_RESCTRL": [
        {
            "type": "bool",
            "rev_select": "X86_CPU_RESCTRL[PROC_FS]",
            "dep": "(PROC_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KERNFS": [
        {
            "type": "bool",
            "rev_select": "CGROUPS || X86_CPU_RESCTRL || SYSFS",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SYSFS": [
        {
            "type": "bool",
            "rev_select": "CONFIGFS_FS",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "TMPFS": [
        {
            "type": "bool",
            "rev_select": "DRM_I915 || DRM_MSM || DRM_ETNAVIV",
            "dep": "(SHMEM)",
            "restrict": ""
        }
    ],
    "TMPFS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TMPFS)",
            "restrict": ""
        }
    ],
    "TMPFS_XATTR": [
        {
            "type": "bool",
            "rev_select": "TMPFS_POSIX_ACL",
            "dep": "(TMPFS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TMPFS_INODE64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TMPFS && 64BIT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_SUPPORTS_HUGETLBFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "HUGETLBFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86 || IA64 || SPARC64 || ARCH_SUPPORTS_HUGETLBFS || BROKEN)",
            "restrict": ""
        }
    ],
    "HUGETLB_PAGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( HUGETLBFS )[!(y)]"
        }
    ],
    "ARCH_WANT_HUGETLB_PAGE_OPTIMIZE_VMEMMAP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HUGETLB_PAGE_OPTIMIZE_VMEMMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_WANT_HUGETLB_PAGE_OPTIMIZE_VMEMMAP) && (SPARSEMEM_VMEMMAP)",
            "restrict": "( HUGETLB_PAGE )[!(y)]"
        }
    ],
    "HUGETLB_PAGE_OPTIMIZE_VMEMMAP_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HUGETLB_PAGE_OPTIMIZE_VMEMMAP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "MEMFD_CREATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( TMPFS || HUGETLBFS )[!(y)]"
        }
    ],
    "ARCH_HAS_GIGANTIC_PAGE": [
        {
            "type": "bool",
            "rev_select": "X86_64",
            "dep": "",
            "restrict": ""
        }
    ],
    "CONFIGFS_FS": [
        {
            "type": "tristate",
            "rev_select": "ACPI_CONFIGFS || PCI_ENDPOINT_CONFIGFS || PCI_EPF_NTB || PCI_EPF_VNTB || BLK_DEV_NULL_BLK || TARGET_CORE || GPIO_SIM || USB_LIBCOMPOSITE || IIO_CONFIGFS || STM || CORESIGHT",
            "dep": "",
            "restrict": ""
        }
    ],
    "EFIVAR_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(EFI)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "MISC_FILESYSTEMS": [
        {
            "type": "bool",
            "rev_select": "ACPI_APEI",
            "dep": "",
            "restrict": ""
        }
    ],
    "ORANGEFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS )",
            "restrict": ""
        }
    ],
    "ADFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "ADFS_FS_RW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (ADFS_FS)",
            "restrict": ""
        }
    ],
    "AFFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "ECRYPT_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (KEYS && CRYPTO && ( ENCRYPTED_KEYS || ENCRYPTED_KEYS = n ))",
            "restrict": ""
        }
    ],
    "ECRYPT_FS_MESSAGING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (ECRYPT_FS)",
            "restrict": ""
        }
    ],
    "HFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "HFSPLUS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "BEFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "BEFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BEFS_FS)",
            "restrict": ""
        }
    ],
    "BFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "EFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "JFFS2_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (MTD)",
            "restrict": ""
        }
    ],
    "JFFS2_FS_DEBUG": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "JFFS2_FS_WRITEBUFFER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "JFFS2_FS_WBUF_VERIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS_WRITEBUFFER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "JFFS2_SUMMARY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "JFFS2_FS_XATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "JFFS2_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS_XATTR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "JFFS2_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS_XATTR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "JFFS2_COMPRESSION_OPTIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "JFFS2_ZLIB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( y )[!(JFFS2_COMPRESSION_OPTIONS)]"
        }
    ],
    "JFFS2_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( n )[!(JFFS2_COMPRESSION_OPTIONS)]"
        }
    ],
    "JFFS2_RTIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( y )[!(JFFS2_COMPRESSION_OPTIONS)]"
        }
    ],
    "JFFS2_RUBIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (JFFS2_FS)",
            "restrict": "( n )[!(JFFS2_COMPRESSION_OPTIONS)]"
        }
    ],
    "JFFS2_CMODE_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( JFFS2_FS ) ) && ( JFFS2_CMODE_NONE &&  !JFFS2_CMODE_PRIORITY &&  !JFFS2_CMODE_SIZE &&  !JFFS2_CMODE_FAVOURLZO )",
            "restrict": ""
        }
    ],
    "JFFS2_CMODE_PRIORITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( JFFS2_FS ) ) && ( JFFS2_CMODE_PRIORITY &&  !JFFS2_CMODE_NONE &&  !JFFS2_CMODE_SIZE &&  !JFFS2_CMODE_FAVOURLZO )",
            "restrict": ""
        }
    ],
    "JFFS2_CMODE_SIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( JFFS2_FS ) ) && ( JFFS2_CMODE_SIZE &&  !JFFS2_CMODE_NONE &&  !JFFS2_CMODE_PRIORITY &&  !JFFS2_CMODE_FAVOURLZO )",
            "restrict": ""
        }
    ],
    "JFFS2_CMODE_FAVOURLZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( JFFS2_FS ) ) && ( JFFS2_CMODE_FAVOURLZO &&  !JFFS2_CMODE_NONE &&  !JFFS2_CMODE_PRIORITY &&  !JFFS2_CMODE_SIZE )",
            "restrict": ""
        }
    ],
    "UBIFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (MTD_UBI)",
            "restrict": ""
        }
    ],
    "UBIFS_FS_ADVANCED_COMPR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS )",
            "restrict": ""
        }
    ],
    "UBIFS_FS_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS )",
            "restrict": "( y )[!(UBIFS_FS_ADVANCED_COMPR)]"
        }
    ],
    "UBIFS_FS_ZLIB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS )",
            "restrict": "( y )[!(UBIFS_FS_ADVANCED_COMPR)]"
        }
    ],
    "UBIFS_FS_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS ) && (UBIFS_FS)",
            "restrict": "( y )[!(UBIFS_FS_ADVANCED_COMPR)]"
        }
    ],
    "UBIFS_ATIME_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "UBIFS_FS_XATTR": [
        {
            "type": "bool",
            "rev_select": "UBIFS_FS[FS_ENCRYPTION]",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "UBIFS_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS ) && (UBIFS_FS_XATTR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "UBIFS_FS_AUTHENTICATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( UBIFS_FS )",
            "restrict": ""
        }
    ],
    "CRAMFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS )",
            "restrict": ""
        }
    ],
    "CRAMFS_BLOCKDEV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (CRAMFS && BLOCK)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "CRAMFS_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (CRAMFS && CRAMFS <= MTD)",
            "restrict": "( y )[!(y) && (! CRAMFS_BLOCKDEV)]"
        }
    ],
    "SQUASHFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "SQUASHFS_FILE_CACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( SQUASHFS ) ) && ( SQUASHFS_FILE_CACHE &&  !SQUASHFS_FILE_DIRECT )",
            "restrict": ""
        }
    ],
    "SQUASHFS_FILE_DIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( SQUASHFS ) ) && ( SQUASHFS_FILE_DIRECT &&  !SQUASHFS_FILE_CACHE )",
            "restrict": ""
        }
    ],
    "SQUASHFS_DECOMP_SINGLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( SQUASHFS ) ) && ( SQUASHFS_DECOMP_SINGLE &&  !SQUASHFS_DECOMP_MULTI &&  !SQUASHFS_DECOMP_MULTI_PERCPU )",
            "restrict": ""
        }
    ],
    "SQUASHFS_DECOMP_MULTI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( SQUASHFS ) ) && ( SQUASHFS_DECOMP_MULTI &&  !SQUASHFS_DECOMP_SINGLE &&  !SQUASHFS_DECOMP_MULTI_PERCPU )",
            "restrict": ""
        }
    ],
    "SQUASHFS_DECOMP_MULTI_PERCPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( SQUASHFS ) ) && ( SQUASHFS_DECOMP_MULTI_PERCPU &&  !SQUASHFS_DECOMP_SINGLE &&  !SQUASHFS_DECOMP_MULTI )",
            "restrict": ""
        }
    ],
    "SQUASHFS_XATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_ZLIB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SQUASHFS_LZ4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_LZO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_XZ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_ZSTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_4K_DEVBLK_SIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_EMBEDDED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": ""
        }
    ],
    "SQUASHFS_FRAGMENT_CACHE_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (SQUASHFS)",
            "restrict": "( 3 )[!(SQUASHFS_EMBEDDED)]"
        }
    ],
    "VXFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MINIX_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "MINIX_FS_NATIVE_ENDIAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (MICROBLAZE || MIPS || S390 || SUPERH || SPARC || XTENSA || ( M68K && ! MMU ))",
            "restrict": "( MINIX_FS )[!(y)]"
        }
    ],
    "MINIX_FS_BIG_ENDIAN_16BIT_INDEXED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (M68K && MMU)",
            "restrict": "( MINIX_FS )[!(y)]"
        }
    ],
    "OMFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "HPFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "QNX4FS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "QNX6FS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK && CRC32)",
            "restrict": ""
        }
    ],
    "QNX6FS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (QNX6FS_FS)",
            "restrict": ""
        }
    ],
    "ROMFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK || MTD)",
            "restrict": ""
        }
    ],
    "ROMFS_BACKED_BY_BLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( ROMFS_FS ) ) && (BLOCK) && ( ROMFS_BACKED_BY_BLOCK &&  !ROMFS_BACKED_BY_MTD &&  !ROMFS_BACKED_BY_BOTH )",
            "restrict": ""
        }
    ],
    "ROMFS_BACKED_BY_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( ROMFS_FS ) ) && (MTD = y || ( ROMFS_FS = m && MTD )) && ( ROMFS_BACKED_BY_MTD &&  !ROMFS_BACKED_BY_BLOCK &&  !ROMFS_BACKED_BY_BOTH )",
            "restrict": ""
        }
    ],
    "ROMFS_BACKED_BY_BOTH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( ROMFS_FS ) ) && (BLOCK && ( MTD = y || ( ROMFS_FS = m && MTD ) )) && ( ROMFS_BACKED_BY_BOTH &&  !ROMFS_BACKED_BY_BLOCK &&  !ROMFS_BACKED_BY_MTD )",
            "restrict": ""
        }
    ],
    "ROMFS_ON_BLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS )",
            "restrict": "( y )[!(y) && (ROMFS_BACKED_BY_BLOCK || ROMFS_BACKED_BY_BOTH)]"
        }
    ],
    "ROMFS_ON_MTD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS )",
            "restrict": "( y )[!(y) && (ROMFS_BACKED_BY_MTD || ROMFS_BACKED_BY_BOTH)]"
        }
    ],
    "PSTORE": [
        {
            "type": "tristate",
            "rev_select": "ACPI_APEI",
            "dep": "( MISC_FILESYSTEMS )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PSTORE_DEFAULT_KMSG_BYTES": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": "( 10240 )[!(EXPERT)]"
        }
    ],
    "PSTORE_DEFLATE_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PSTORE_LZO_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_LZ4_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_LZ4HC_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_842_COMPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_ZSTD_COMPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_COMPRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE) && (PSTORE_DEFLATE_COMPRESS || PSTORE_LZO_COMPRESS || PSTORE_LZ4_COMPRESS || PSTORE_LZ4HC_COMPRESS || PSTORE_842_COMPRESS || PSTORE_ZSTD_COMPRESS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PSTORE_DEFLATE_COMPRESS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( PSTORE_COMPRESS ) ) && ( PSTORE_DEFLATE_COMPRESS_DEFAULT &&  !PSTORE_LZO_COMPRESS_DEFAULT &&  !PSTORE_LZ4_COMPRESS_DEFAULT &&  !PSTORE_LZ4HC_COMPRESS_DEFAULT &&  !PSTORE_842_COMPRESS_DEFAULT &&  !PSTORE_ZSTD_COMPRESS_DEFAULT )",
            "restrict": ""
        }
    ],
    "PSTORE_LZO_COMPRESS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( PSTORE_COMPRESS ) ) && ( PSTORE_LZO_COMPRESS_DEFAULT &&  !PSTORE_DEFLATE_COMPRESS_DEFAULT &&  !PSTORE_LZ4_COMPRESS_DEFAULT &&  !PSTORE_LZ4HC_COMPRESS_DEFAULT &&  !PSTORE_842_COMPRESS_DEFAULT &&  !PSTORE_ZSTD_COMPRESS_DEFAULT )",
            "restrict": ""
        }
    ],
    "PSTORE_LZ4_COMPRESS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( PSTORE_COMPRESS ) ) && ( PSTORE_LZ4_COMPRESS_DEFAULT &&  !PSTORE_DEFLATE_COMPRESS_DEFAULT &&  !PSTORE_LZO_COMPRESS_DEFAULT &&  !PSTORE_LZ4HC_COMPRESS_DEFAULT &&  !PSTORE_842_COMPRESS_DEFAULT &&  !PSTORE_ZSTD_COMPRESS_DEFAULT )",
            "restrict": ""
        }
    ],
    "PSTORE_LZ4HC_COMPRESS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( PSTORE_COMPRESS ) ) && ( PSTORE_LZ4HC_COMPRESS_DEFAULT &&  !PSTORE_DEFLATE_COMPRESS_DEFAULT &&  !PSTORE_LZO_COMPRESS_DEFAULT &&  !PSTORE_LZ4_COMPRESS_DEFAULT &&  !PSTORE_842_COMPRESS_DEFAULT &&  !PSTORE_ZSTD_COMPRESS_DEFAULT )",
            "restrict": ""
        }
    ],
    "PSTORE_842_COMPRESS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( PSTORE_COMPRESS ) ) && ( PSTORE_842_COMPRESS_DEFAULT &&  !PSTORE_DEFLATE_COMPRESS_DEFAULT &&  !PSTORE_LZO_COMPRESS_DEFAULT &&  !PSTORE_LZ4_COMPRESS_DEFAULT &&  !PSTORE_LZ4HC_COMPRESS_DEFAULT &&  !PSTORE_ZSTD_COMPRESS_DEFAULT )",
            "restrict": ""
        }
    ],
    "PSTORE_ZSTD_COMPRESS_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && ( ( PSTORE_COMPRESS ) ) && ( PSTORE_ZSTD_COMPRESS_DEFAULT &&  !PSTORE_DEFLATE_COMPRESS_DEFAULT &&  !PSTORE_LZO_COMPRESS_DEFAULT &&  !PSTORE_LZ4_COMPRESS_DEFAULT &&  !PSTORE_LZ4HC_COMPRESS_DEFAULT &&  !PSTORE_842_COMPRESS_DEFAULT )",
            "restrict": ""
        }
    ],
    "PSTORE_COMPRESS_DEFAULT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_COMPRESS)",
            "restrict": "( \"deflate\" )[!(y) && (PSTORE_DEFLATE_COMPRESS_DEFAULT)] || ( \"lzo\" )[!(y) && (PSTORE_LZO_COMPRESS_DEFAULT)] || ( \"lz4\" )[!(y) && (PSTORE_LZ4_COMPRESS_DEFAULT)] || ( \"lz4hc\" )[!(y) && (PSTORE_LZ4HC_COMPRESS_DEFAULT)] || ( 842 )[!(y) && (PSTORE_842_COMPRESS_DEFAULT)] || ( \"zstd\" )[!(y) && (PSTORE_ZSTD_COMPRESS_DEFAULT)]"
        }
    ],
    "PSTORE_CONSOLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_PMSG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_FTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE) && (FUNCTION_TRACER) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "PSTORE_RAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "PSTORE_ZONE": [
        {
            "type": "tristate",
            "rev_select": "PSTORE_BLK",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE)",
            "restrict": ""
        }
    ],
    "PSTORE_BLK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE) && (BLOCK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PSTORE_BLK_BLKDEV": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_BLK)",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "PSTORE_BLK_KMSG_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_BLK)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "PSTORE_BLK_MAX_REASON": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_BLK)",
            "restrict": "( 2 )[!(y)]"
        }
    ],
    "PSTORE_BLK_PMSG_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_BLK) && (PSTORE_PMSG)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "PSTORE_BLK_CONSOLE_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_BLK) && (PSTORE_CONSOLE)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "PSTORE_BLK_FTRACE_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (PSTORE_BLK) && (PSTORE_FTRACE)",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "SYSV_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "UFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "UFS_FS_WRITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (UFS_FS)",
            "restrict": ""
        }
    ],
    "UFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (UFS_FS)",
            "restrict": ""
        }
    ],
    "EROFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (BLOCK)",
            "restrict": ""
        }
    ],
    "EROFS_FS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (EROFS_FS)",
            "restrict": ""
        }
    ],
    "EROFS_FS_XATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (EROFS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EROFS_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (EROFS_FS_XATTR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EROFS_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (EROFS_FS_XATTR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EROFS_FS_ZIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (EROFS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EROFS_FS_ZIP_LZMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (EROFS_FS_ZIP)",
            "restrict": ""
        }
    ],
    "EROFS_FS_ONDEMAND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (CACHEFILES_ONDEMAND && ( EROFS_FS = m && FSCACHE || EROFS_FS = y && FSCACHE = y ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "VBOXSF_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( MISC_FILESYSTEMS ) && (X86 && VBOXGUEST)",
            "restrict": ""
        }
    ],
    "NETWORK_FILESYSTEMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NET)",
            "restrict": ""
        }
    ],
    "NFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET && FILE_LOCKING && MULTIUSER)",
            "restrict": ""
        }
    ],
    "NFS_V2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_V3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_V3_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V3)",
            "restrict": ""
        }
    ],
    "NFS_V4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS)",
            "restrict": ""
        }
    ],
    "NFS_SWAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS && SWAP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFS_V4_1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4)",
            "restrict": ""
        }
    ],
    "NFS_V4_2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_1)",
            "restrict": ""
        }
    ],
    "PNFS_FILE_LAYOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_1)",
            "restrict": "( NFS_V4 )[!(y)]"
        }
    ],
    "PNFS_BLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_1 && BLK_DEV_DM)",
            "restrict": "( NFS_V4 )[!(y)]"
        }
    ],
    "PNFS_FLEXFILE_LAYOUT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_1 && NFS_V3)",
            "restrict": "( NFS_V4 )[!(y)]"
        }
    ],
    "NFS_V4_1_IMPLEMENTATION_ID_DOMAIN": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_1)",
            "restrict": "( \"kernel.org\" )[!(y)]"
        }
    ],
    "NFS_V4_1_MIGRATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_1)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFS_V4_SECURITY_LABEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_2 && SECURITY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ROOT_NFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS = y && IP_PNP)",
            "restrict": ""
        }
    ],
    "NFS_FSCACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS = m && FSCACHE || NFS_FS = y && FSCACHE = y)",
            "restrict": ""
        }
    ],
    "NFS_USE_LEGACY_DNS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4)",
            "restrict": ""
        }
    ],
    "NFS_USE_KERNEL_DNS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4 && ! NFS_USE_LEGACY_DNS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS && SUNRPC_DEBUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_DISABLE_UDP_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_V4_2_READ_PLUS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFS_V4_2)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NFSD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET) && (FILE_LOCKING) && (FSNOTIFY) && (MULTIUSER)",
            "restrict": ""
        }
    ],
    "NFSD_V2_ACL": [
        {
            "type": "bool",
            "rev_select": "NFSD_V3_ACL",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD)",
            "restrict": ""
        }
    ],
    "NFSD_V3_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD)",
            "restrict": ""
        }
    ],
    "NFSD_V4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD && PROC_FS)",
            "restrict": ""
        }
    ],
    "NFSD_PNFS": [
        {
            "type": "bool",
            "rev_select": "NFSD_BLOCKLAYOUT || NFSD_SCSILAYOUT || NFSD_FLEXFILELAYOUT",
            "dep": "( NETWORK_FILESYSTEMS )",
            "restrict": ""
        }
    ],
    "NFSD_BLOCKLAYOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD_V4 && BLOCK)",
            "restrict": ""
        }
    ],
    "NFSD_SCSILAYOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD_V4 && BLOCK)",
            "restrict": ""
        }
    ],
    "NFSD_FLEXFILELAYOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD_V4)",
            "restrict": ""
        }
    ],
    "NFSD_V4_2_INTER_SSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD_V4 && NFS_V4_2)",
            "restrict": ""
        }
    ],
    "NFSD_V4_SECURITY_LABEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD_V4 && SECURITY)",
            "restrict": ""
        }
    ],
    "GRACE_PERIOD": [
        {
            "type": "tristate",
            "rev_select": "NFSD_V4 || LOCKD",
            "dep": "( NETWORK_FILESYSTEMS )",
            "restrict": ""
        }
    ],
    "LOCKD": [
        {
            "type": "tristate",
            "rev_select": "NFS_FS || NFSD",
            "dep": "( NETWORK_FILESYSTEMS ) && (FILE_LOCKING)",
            "restrict": ""
        }
    ],
    "LOCKD_V4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD || NFS_V3) && (FILE_LOCKING)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_ACL_SUPPORT": [
        {
            "type": "tristate",
            "rev_select": "NFS_FS[NFS_V3_ACL] || NFSD[NFSD_V2_ACL]",
            "dep": "( NETWORK_FILESYSTEMS )",
            "restrict": ""
        }
    ],
    "NFS_COMMON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (NFSD || NFS_FS || LOCKD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NFS_V4_2_SSC_HELPER": [
        {
            "type": "bool",
            "rev_select": "NFSD_V4[NFS_V4_2]",
            "dep": "( NETWORK_FILESYSTEMS )",
            "restrict": "( y )[!(y) && (NFS_V4_2)]"
        }
    ],
    "SUNRPC": [
        {
            "type": "tristate",
            "rev_select": "NFS_FS || NFSD",
            "dep": "( NETWORK_FILESYSTEMS ) && (MULTIUSER)",
            "restrict": ""
        }
    ],
    "SUNRPC_GSS": [
        {
            "type": "tristate",
            "rev_select": "NFS_V4 || NFSD_V4 || RPCSEC_GSS_KRB5",
            "dep": "( NETWORK_FILESYSTEMS ) && (MULTIUSER)",
            "restrict": ""
        }
    ],
    "SUNRPC_BACKCHANNEL": [
        {
            "type": "bool",
            "rev_select": "NFS_V4_1",
            "dep": "( NETWORK_FILESYSTEMS ) && (SUNRPC)",
            "restrict": ""
        }
    ],
    "SUNRPC_SWAP": [
        {
            "type": "bool",
            "rev_select": "NFS_SWAP",
            "dep": "( NETWORK_FILESYSTEMS ) && (SUNRPC)",
            "restrict": ""
        }
    ],
    "RPCSEC_GSS_KRB5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (SUNRPC && CRYPTO) && (CRYPTO_MD5 && CRYPTO_DES && CRYPTO_CBC && CRYPTO_CTS) && (CRYPTO_ECB && CRYPTO_HMAC && CRYPTO_SHA1 && CRYPTO_AES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SUNRPC_DISABLE_INSECURE_ENCTYPES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (RPCSEC_GSS_KRB5)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SUNRPC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (SUNRPC && SYSCTL)",
            "restrict": ""
        }
    ],
    "SUNRPC_XPRT_RDMA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (SUNRPC && INFINIBAND && INFINIBAND_ADDR_TRANS)",
            "restrict": "( SUNRPC && INFINIBAND )[!(y)]"
        }
    ],
    "CEPH_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CEPH_FSCACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && ( CEPH_FS ) && (CEPH_FS = m && FSCACHE || CEPH_FS = y && FSCACHE = y)",
            "restrict": ""
        }
    ],
    "CEPH_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CEPH_FS)",
            "restrict": ""
        }
    ],
    "CEPH_FS_SECURITY_LABEL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CEPH_FS && SECURITY)",
            "restrict": ""
        }
    ],
    "CIFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET)",
            "restrict": ""
        }
    ],
    "CIFS_STATS2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CIFS_ALLOW_INSECURE_LEGACY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CIFS_UPCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": ""
        }
    ],
    "CIFS_XATTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": ""
        }
    ],
    "CIFS_POSIX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS && CIFS_ALLOW_INSECURE_LEGACY && CIFS_XATTR)",
            "restrict": ""
        }
    ],
    "CIFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CIFS_DEBUG2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS_DEBUG)",
            "restrict": ""
        }
    ],
    "CIFS_DEBUG_DUMP_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS_DEBUG)",
            "restrict": ""
        }
    ],
    "CIFS_DFS_UPCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": ""
        }
    ],
    "CIFS_SWN_UPCALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS)",
            "restrict": ""
        }
    ],
    "CIFS_NFSD_EXPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS && BROKEN)",
            "restrict": ""
        }
    ],
    "CIFS_SMB_DIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS = m && INFINIBAND && INFINIBAND_ADDR_TRANS || CIFS = y && INFINIBAND = y && INFINIBAND_ADDR_TRANS = y)",
            "restrict": ""
        }
    ],
    "CIFS_FSCACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS = m && FSCACHE || CIFS = y && FSCACHE = y)",
            "restrict": ""
        }
    ],
    "CIFS_ROOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (CIFS = y && IP_PNP)",
            "restrict": ""
        }
    ],
    "SMB_SERVER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET) && (MULTIUSER) && (FILE_LOCKING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SMB_SERVER_SMBDIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (SMB_SERVER = m && INFINIBAND && INFINIBAND_ADDR_TRANS || SMB_SERVER = y && INFINIBAND = y && INFINIBAND_ADDR_TRANS = y)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SMB_SERVER_CHECK_CAP_NET_ADMIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (SMB_SERVER)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SMB_SERVER_KERBEROS5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (SMB_SERVER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SMBFS_COMMON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS )",
            "restrict": "( y )[!(y) && (CIFS = y || SMB_SERVER = y)] || ( m )[!(y) && (CIFS = m || SMB_SERVER = m)]"
        }
    ],
    "CODA_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET)",
            "restrict": ""
        }
    ],
    "AFS_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET)",
            "restrict": ""
        }
    ],
    "AFS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (AFS_FS)",
            "restrict": ""
        }
    ],
    "AFS_FSCACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (AFS_FS = m && FSCACHE || AFS_FS = y && FSCACHE = y)",
            "restrict": ""
        }
    ],
    "AFS_DEBUG_CURSOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (AFS_FS)",
            "restrict": ""
        }
    ],
    "9P_FS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (INET && NET_9P)",
            "restrict": ""
        }
    ],
    "9P_FSCACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && ( 9P_FS ) && (9P_FS = m && FSCACHE || 9P_FS = y && FSCACHE = y)",
            "restrict": ""
        }
    ],
    "9P_FS_POSIX_ACL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && ( 9P_FS )",
            "restrict": ""
        }
    ],
    "9P_FS_SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( NETWORK_FILESYSTEMS ) && (9P_FS)",
            "restrict": ""
        }
    ],
    "NLS": [
        {
            "type": "tristate",
            "rev_select": "ACPI || PCI_LABEL || USB || USB_GADGET || SCSI_UFSHCD || DELL_WMI_SYSMAN || JFS_FS || F2FS_FS || JOLIET || UDF_FS || FAT_FS || EXFAT_FS || NTFS_FS || NTFS3_FS || HFS_FS || HFSPLUS_FS || BEFS_FS || VBOXSF_FS || CIFS || SMB_SERVER",
            "dep": "",
            "restrict": ""
        }
    ],
    "NLS_DEFAULT": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": "( \"iso8859-1\" )[!(y)]"
        }
    ],
    "NLS_CODEPAGE_437": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_737": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_775": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_850": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_852": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_855": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_857": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_860": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_861": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_862": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_863": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_864": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_865": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_866": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_869": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_936": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_950": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_932": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_949": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_874": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_8": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_1250": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_CODEPAGE_1251": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ASCII": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_1": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_5": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_7": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_9": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_13": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_14": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_ISO8859_15": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_KOI8_R": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_KOI8_U": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_ROMAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_CELTIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_CENTEURO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_CROATIAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_CYRILLIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_GAELIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_GREEK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_ICELAND": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_INUIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_ROMANIAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_MAC_TURKISH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "NLS_UTF8": [
        {
            "type": "tristate",
            "rev_select": "HFSPLUS_FS || SMB_SERVER",
            "dep": "( NLS )",
            "restrict": ""
        }
    ],
    "DLM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(INET) && (SYSFS && CONFIGFS_FS && ( IPV6 || IPV6 = n ))",
            "restrict": ""
        }
    ],
    "DLM_DEPRECATED_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DLM)",
            "restrict": ""
        }
    ],
    "DLM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DLM)",
            "restrict": ""
        }
    ],
    "UNICODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "UNICODE_NORMALIZATION_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(UNICODE)",
            "restrict": ""
        }
    ],
    "IO_WQ": [
        {
            "type": "bool",
            "rev_select": "IO_URING",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEYS": [
        {
            "type": "bool",
            "rev_select": "SYSTEM_DATA_VERIFICATION || AF_RXRPC || CEPH_LIB || FS_ENCRYPTION || UBIFS_FS_AUTHENTICATION || NFS_V4 || CIFS || INTEGRITY_SIGNATURE || EVM",
            "dep": "",
            "restrict": ""
        }
    ],
    "KEYS_REQUEST_CACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEYS)",
            "restrict": ""
        }
    ],
    "PERSISTENT_KEYRINGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEYS)",
            "restrict": ""
        }
    ],
    "BIG_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEYS) && (TMPFS) && (CRYPTO_LIB_CHACHA20POLY1305 = y)",
            "restrict": ""
        }
    ],
    "TRUSTED_KEYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(KEYS)",
            "restrict": ""
        }
    ],
    "TRUSTED_KEYS_TPM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRUSTED_KEYS ) && (TCG_TPM >= TRUSTED_KEYS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TRUSTED_KEYS_TEE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRUSTED_KEYS ) && (TEE >= TRUSTED_KEYS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TRUSTED_KEYS_CAAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( TRUSTED_KEYS ) && (CRYPTO_DEV_FSL_CAAM_JR >= TRUSTED_KEYS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "ENCRYPTED_KEYS": [
        {
            "type": "tristate",
            "rev_select": "EVM",
            "dep": "(KEYS)",
            "restrict": ""
        }
    ],
    "USER_DECRYPTED_DATA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ENCRYPTED_KEYS)",
            "restrict": ""
        }
    ],
    "KEY_DH_OPERATIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEYS)",
            "restrict": ""
        }
    ],
    "KEY_NOTIFICATIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KEYS && WATCH_QUEUE)",
            "restrict": ""
        }
    ],
    "SECURITY_DMESG_RESTRICT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SYSFS) && (MULTIUSER)",
            "restrict": ""
        }
    ],
    "SECURITY_WRITABLE_HOOKS": [
        {
            "type": "bool",
            "rev_select": "SECURITY_SELINUX_DISABLE",
            "dep": "(SECURITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITYFS": [
        {
            "type": "bool",
            "rev_select": "EFI_SECRET || SECURITY_TOMOYO || SECURITY_APPARMOR || SECURITY_SAFESETID || IMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "SECURITY_NETWORK": [
        {
            "type": "bool",
            "rev_select": "SECURITY_SMACK || SECURITY_TOMOYO || SECURITY_APPARMOR",
            "dep": "(SECURITY)",
            "restrict": ""
        }
    ],
    "SECURITY_INFINIBAND": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY && INFINIBAND)",
            "restrict": ""
        }
    ],
    "SECURITY_NETWORK_XFRM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(XFRM && SECURITY_NETWORK)",
            "restrict": ""
        }
    ],
    "SECURITY_PATH": [
        {
            "type": "bool",
            "rev_select": "SECURITY_TOMOYO || SECURITY_APPARMOR || SECURITY_LANDLOCK",
            "dep": "(SECURITY)",
            "restrict": ""
        }
    ],
    "INTEL_TXT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_INTEL_TXT)",
            "restrict": ""
        }
    ],
    "LSM_MMAP_MIN_ADDR": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SECURITY && SECURITY_SELINUX)",
            "restrict": "( 32768 )[!(y) && (ARM || ( ARM64 && COMPAT ))] || ( 65536 )[!(y)]"
        }
    ],
    "HAVE_HARDENED_USERCOPY_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "SLAB || SLUB",
            "dep": "",
            "restrict": ""
        }
    ],
    "HARDENED_USERCOPY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_HARDENED_USERCOPY_ALLOCATOR)",
            "restrict": ""
        }
    ],
    "FORTIFY_SOURCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_FORTIFY_SOURCE) && (! CC_IS_CLANG || CLANG_VERSION >= 120001) && (! CC_IS_CLANG || ! X86_32)",
            "restrict": ""
        }
    ],
    "STATIC_USERMODEHELPER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "STATIC_USERMODEHELPER_PATH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(STATIC_USERMODEHELPER)",
            "restrict": "( \"/sbin/usermode-helper\" )[!(y)]"
        }
    ],
    "SECURITY_SELINUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_NETWORK && AUDIT && NET && INET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_BOOTPARAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_DISABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_DEVELOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_AVC_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_CHECKREQPROT_VALUE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( 0 1 ) || ( 0 )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_SIDTAB_HASH_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( 8 13 ) || ( 9 )[!(y)]"
        }
    ],
    "SECURITY_SELINUX_SID2STR_CACHE_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SECURITY_SELINUX)",
            "restrict": "( 256 )[!(y)]"
        }
    ],
    "SECURITY_SMACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(NET) && (INET) && (SECURITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SMACK_BRINGUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SMACK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SMACK_NETFILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SMACK) && (NETWORK_SECMARK) && (NETFILTER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SMACK_APPEND_SIGNALS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_SMACK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY) && (NET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO_MAX_ACCEPT_ENTRY": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SECURITY_TOMOYO)",
            "restrict": "( 0 2147483647 ) || ( 2048 )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO_MAX_AUDIT_LOG": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(SECURITY_TOMOYO)",
            "restrict": "( 0 2147483647 ) || ( 1024 )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO_OMIT_USERSPACE_LOADER": [
        {
            "type": "bool",
            "rev_select": "SECURITY_TOMOYO_INSECURE_BUILTIN_SETTING",
            "dep": "(SECURITY_TOMOYO)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO_POLICY_LOADER": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(SECURITY_TOMOYO) && (! SECURITY_TOMOYO_OMIT_USERSPACE_LOADER)",
            "restrict": "( \"/sbin/tomoyo-init\" )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO_ACTIVATION_TRIGGER": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(SECURITY_TOMOYO) && (! SECURITY_TOMOYO_OMIT_USERSPACE_LOADER)",
            "restrict": "( \"/sbin/init\" )[!(y)]"
        }
    ],
    "SECURITY_TOMOYO_INSECURE_BUILTIN_SETTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_TOMOYO)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY && NET)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_DEBUG_ASSERTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR_DEBUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_DEBUG_MESSAGES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR_DEBUG)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_INTROSPECT_POLICY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_HASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR_INTROSPECT_POLICY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_HASH_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR_HASH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_EXPORT_BINARY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR_INTROSPECT_POLICY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_PARANOID_LOAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_APPARMOR)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SECURITY_APPARMOR_KUNIT_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KUNIT = y && SECURITY_APPARMOR)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "SECURITY_LOADPIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY && BLOCK)",
            "restrict": ""
        }
    ],
    "SECURITY_LOADPIN_ENFORCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_LOADPIN)",
            "restrict": ""
        }
    ],
    "SECURITY_LOADPIN_VERITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_LOADPIN && DM_VERITY = y && SECURITYFS)",
            "restrict": ""
        }
    ],
    "SECURITY_YAMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_SAFESETID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SECURITY_LOCKDOWN_LSM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY)",
            "restrict": ""
        }
    ],
    "SECURITY_LOCKDOWN_LSM_EARLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY_LOCKDOWN_LSM)",
            "restrict": ""
        }
    ],
    "LOCK_DOWN_KERNEL_FORCE_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SECURITY_LOCKDOWN_LSM ) ) && ( LOCK_DOWN_KERNEL_FORCE_NONE &&  !LOCK_DOWN_KERNEL_FORCE_INTEGRITY &&  !LOCK_DOWN_KERNEL_FORCE_CONFIDENTIALITY )",
            "restrict": ""
        }
    ],
    "LOCK_DOWN_KERNEL_FORCE_INTEGRITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SECURITY_LOCKDOWN_LSM ) ) && ( LOCK_DOWN_KERNEL_FORCE_INTEGRITY &&  !LOCK_DOWN_KERNEL_FORCE_NONE &&  !LOCK_DOWN_KERNEL_FORCE_CONFIDENTIALITY )",
            "restrict": ""
        }
    ],
    "LOCK_DOWN_KERNEL_FORCE_CONFIDENTIALITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( SECURITY_LOCKDOWN_LSM ) ) && ( LOCK_DOWN_KERNEL_FORCE_CONFIDENTIALITY &&  !LOCK_DOWN_KERNEL_FORCE_NONE &&  !LOCK_DOWN_KERNEL_FORCE_INTEGRITY )",
            "restrict": ""
        }
    ],
    "SECURITY_LANDLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY && ! ARCH_EPHEMERAL_INODES)",
            "restrict": ""
        }
    ],
    "INTEGRITY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SECURITY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INTEGRITY_SIGNATURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INTEGRITY_ASYMMETRIC_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (INTEGRITY_SIGNATURE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "INTEGRITY_TRUSTED_KEYRING": [
        {
            "type": "bool",
            "rev_select": "IMA_TRUSTED_KEYRING || IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY",
            "dep": "( INTEGRITY ) && (SYSTEM_TRUSTED_KEYRING) && (INTEGRITY_ASYMMETRIC_KEYS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INTEGRITY_PLATFORM_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (INTEGRITY_ASYMMETRIC_KEYS) && (SYSTEM_BLACKLIST_KEYRING)",
            "restrict": ""
        }
    ],
    "INTEGRITY_MACHINE_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (SECONDARY_TRUSTED_KEYRING) && (INTEGRITY_ASYMMETRIC_KEYS) && (SYSTEM_BLACKLIST_KEYRING) && (LOAD_UEFI_KEYS) && (! IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY)",
            "restrict": ""
        }
    ],
    "LOAD_UEFI_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (INTEGRITY_PLATFORM_KEYRING) && (EFI)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOAD_IPL_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (INTEGRITY_PLATFORM_KEYRING) && (S390)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOAD_PPC_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (INTEGRITY_PLATFORM_KEYRING) && (PPC_SECURE_BOOT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "INTEGRITY_AUDIT": [
        {
            "type": "bool",
            "rev_select": "IMA[AUDIT]",
            "dep": "( INTEGRITY ) && (AUDIT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY )",
            "restrict": ""
        }
    ],
    "IMA_KEXEC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA && TCG_TPM && HAVE_IMA_KEXEC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_MEASURE_PCR_IDX": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( 8 14 ) || ( 10 )[!(y)]"
        }
    ],
    "IMA_LSM_RULES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA && AUDIT && ( SECURITY_SELINUX || SECURITY_SMACK || SECURITY_APPARMOR ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMA_NG_TEMPLATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && ( IMA_NG_TEMPLATE &&  !IMA_SIG_TEMPLATE )",
            "restrict": ""
        }
    ],
    "IMA_SIG_TEMPLATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && ( IMA_SIG_TEMPLATE &&  !IMA_NG_TEMPLATE )",
            "restrict": ""
        }
    ],
    "IMA_DEFAULT_TEMPLATE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( \"ima-ng\" )[!(y) && (IMA_NG_TEMPLATE)] || ( \"ima-sig\" )[!(y) && (IMA_SIG_TEMPLATE)]"
        }
    ],
    "IMA_DEFAULT_HASH_SHA1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && (CRYPTO_SHA1 = y) && ( IMA_DEFAULT_HASH_SHA1 &&  !IMA_DEFAULT_HASH_SHA256 &&  !IMA_DEFAULT_HASH_SHA512 &&  !IMA_DEFAULT_HASH_WP512 &&  !IMA_DEFAULT_HASH_SM3 )",
            "restrict": ""
        }
    ],
    "IMA_DEFAULT_HASH_SHA256": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && (CRYPTO_SHA256 = y) && ( IMA_DEFAULT_HASH_SHA256 &&  !IMA_DEFAULT_HASH_SHA1 &&  !IMA_DEFAULT_HASH_SHA512 &&  !IMA_DEFAULT_HASH_WP512 &&  !IMA_DEFAULT_HASH_SM3 )",
            "restrict": ""
        }
    ],
    "IMA_DEFAULT_HASH_SHA512": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && (CRYPTO_SHA512 = y) && ( IMA_DEFAULT_HASH_SHA512 &&  !IMA_DEFAULT_HASH_SHA1 &&  !IMA_DEFAULT_HASH_SHA256 &&  !IMA_DEFAULT_HASH_WP512 &&  !IMA_DEFAULT_HASH_SM3 )",
            "restrict": ""
        }
    ],
    "IMA_DEFAULT_HASH_WP512": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && (CRYPTO_WP512 = y) && ( IMA_DEFAULT_HASH_WP512 &&  !IMA_DEFAULT_HASH_SHA1 &&  !IMA_DEFAULT_HASH_SHA256 &&  !IMA_DEFAULT_HASH_SHA512 &&  !IMA_DEFAULT_HASH_SM3 )",
            "restrict": ""
        }
    ],
    "IMA_DEFAULT_HASH_SM3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && ( ( IMA ) ) && (CRYPTO_SM3 = y) && ( IMA_DEFAULT_HASH_SM3 &&  !IMA_DEFAULT_HASH_SHA1 &&  !IMA_DEFAULT_HASH_SHA256 &&  !IMA_DEFAULT_HASH_SHA512 &&  !IMA_DEFAULT_HASH_WP512 )",
            "restrict": ""
        }
    ],
    "IMA_DEFAULT_HASH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( \"sha1\" )[!(y) && (IMA_DEFAULT_HASH_SHA1)] || ( \"sha256\" )[!(y) && (IMA_DEFAULT_HASH_SHA256)] || ( \"sha512\" )[!(y) && (IMA_DEFAULT_HASH_SHA512)] || ( \"wp512\" )[!(y) && (IMA_DEFAULT_HASH_WP512)] || ( \"sm3\" )[!(y) && (IMA_DEFAULT_HASH_SM3)]"
        }
    ],
    "IMA_WRITE_POLICY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_READ_POLICY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( y )[!(y) && (IMA_WRITE_POLICY)] || ( n )[!(y) && (! IMA_WRITE_POLICY)]"
        }
    ],
    "IMA_APPRAISE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_ARCH_POLICY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (( KEXEC_SIG && IMA ) || IMA_APPRAISE && INTEGRITY_ASYMMETRIC_KEYS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_APPRAISE_BUILD_POLICY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE && INTEGRITY_ASYMMETRIC_KEYS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_APPRAISE_REQUIRE_FIRMWARE_SIGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE_BUILD_POLICY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_APPRAISE_REQUIRE_KEXEC_SIGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE_BUILD_POLICY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_APPRAISE_REQUIRE_MODULE_SIGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE_BUILD_POLICY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_APPRAISE_REQUIRE_POLICY_SIGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE_BUILD_POLICY)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_APPRAISE_BOOTPARAM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMA_APPRAISE_MODSIG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE) && (INTEGRITY_ASYMMETRIC_KEYS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_TRUSTED_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_APPRAISE && SYSTEM_TRUSTED_KEYRING) && (INTEGRITY_ASYMMETRIC_KEYS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (SYSTEM_TRUSTED_KEYRING) && (SECONDARY_TRUSTED_KEYRING) && (INTEGRITY_ASYMMETRIC_KEYS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_BLACKLIST_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (SYSTEM_TRUSTED_KEYRING) && (IMA_TRUSTED_KEYRING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_LOAD_X509": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_TRUSTED_KEYRING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_X509_PATH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_LOAD_X509)",
            "restrict": "( \"/etc/keys/x509_ima.der\" )[!(y)]"
        }
    ],
    "IMA_APPRAISE_SIGNED_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_LOAD_X509)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IMA_MEASURE_ASYMMETRIC_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA) && (ASYMMETRIC_PUBLIC_KEY_SUBTYPE = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMA_QUEUE_EARLY_BOOT_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_MEASURE_ASYMMETRIC_KEYS) && (SYSTEM_TRUSTED_KEYRING)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "IMA_SECURE_AND_OR_TRUSTED_BOOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA_ARCH_POLICY)",
            "restrict": "( X86 )[ EFI ]"
        }
    ],
    "IMA_DISABLE_HTABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (IMA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EVM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EVM_ATTR_FSUUID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (EVM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EVM_EXTRA_SMACK_XATTRS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (EVM && SECURITY_SMACK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EVM_ADD_XATTRS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (EVM)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EVM_LOAD_X509": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (EVM && INTEGRITY_TRUSTED_KEYRING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "EVM_X509_PATH": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( INTEGRITY ) && (EVM_LOAD_X509)",
            "restrict": "( \"/etc/keys/x509_evm.der\" )[!(y)]"
        }
    ],
    "DEFAULT_SECURITY_SELINUX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEFAULT_SECURITY_SELINUX &&  !DEFAULT_SECURITY_SMACK &&  !DEFAULT_SECURITY_TOMOYO &&  !DEFAULT_SECURITY_APPARMOR &&  !DEFAULT_SECURITY_DAC )",
            "restrict": ""
        }
    ],
    "DEFAULT_SECURITY_SMACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEFAULT_SECURITY_SMACK &&  !DEFAULT_SECURITY_SELINUX &&  !DEFAULT_SECURITY_TOMOYO &&  !DEFAULT_SECURITY_APPARMOR &&  !DEFAULT_SECURITY_DAC )",
            "restrict": ""
        }
    ],
    "DEFAULT_SECURITY_TOMOYO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEFAULT_SECURITY_TOMOYO &&  !DEFAULT_SECURITY_SELINUX &&  !DEFAULT_SECURITY_SMACK &&  !DEFAULT_SECURITY_APPARMOR &&  !DEFAULT_SECURITY_DAC )",
            "restrict": ""
        }
    ],
    "DEFAULT_SECURITY_APPARMOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEFAULT_SECURITY_APPARMOR &&  !DEFAULT_SECURITY_SELINUX &&  !DEFAULT_SECURITY_SMACK &&  !DEFAULT_SECURITY_TOMOYO &&  !DEFAULT_SECURITY_DAC )",
            "restrict": ""
        }
    ],
    "DEFAULT_SECURITY_DAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEFAULT_SECURITY_DAC &&  !DEFAULT_SECURITY_SELINUX &&  !DEFAULT_SECURITY_SMACK &&  !DEFAULT_SECURITY_TOMOYO &&  !DEFAULT_SECURITY_APPARMOR )",
            "restrict": ""
        }
    ],
    "LSM": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "",
            "restrict": "( \"landlock,lockdown,yama,loadpin,safesetid,integrity,smack,selinux,tomoyo,apparmor,bpf\" )[!(y) && (DEFAULT_SECURITY_SMACK)] || ( \"landlock,lockdown,yama,loadpin,safesetid,integrity,apparmor,selinux,smack,tomoyo,bpf\" )[!(y) && (DEFAULT_SECURITY_APPARMOR)] || ( \"landlock,lockdown,yama,loadpin,safesetid,integrity,tomoyo,bpf\" )[!(y) && (DEFAULT_SECURITY_TOMOYO)] || ( \"landlock,lockdown,yama,loadpin,safesetid,integrity,bpf\" )[!(y) && (DEFAULT_SECURITY_DAC)] || ( \"landlock,lockdown,yama,loadpin,safesetid,integrity,selinux,smack,tomoyo,apparmor,bpf\" )[!(y)]"
        }
    ],
    "GCC_PLUGIN_STRUCTLEAK": [
        {
            "type": "bool",
            "rev_select": "GCC_PLUGIN_STRUCTLEAK_USER || GCC_PLUGIN_STRUCTLEAK_BYREF || GCC_PLUGIN_STRUCTLEAK_BYREF_ALL",
            "dep": "",
            "restrict": ""
        }
    ],
    "CC_HAS_AUTO_VAR_INIT_PATTERN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_AUTO_VAR_INIT_ZERO_BARE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_AUTO_VAR_INIT_ZERO_ENABLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! CC_HAS_AUTO_VAR_INIT_ZERO_BARE)",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_AUTO_VAR_INIT_ZERO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( CC_HAS_AUTO_VAR_INIT_ZERO_BARE || CC_HAS_AUTO_VAR_INIT_ZERO_ENABLER )[!(y)]"
        }
    ],
    "INIT_STACK_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( INIT_STACK_NONE &&  !GCC_PLUGIN_STRUCTLEAK_USER &&  !GCC_PLUGIN_STRUCTLEAK_BYREF &&  !GCC_PLUGIN_STRUCTLEAK_BYREF_ALL &&  !INIT_STACK_ALL_PATTERN &&  !INIT_STACK_ALL_ZERO )",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_STRUCTLEAK_USER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGINS && ! CC_HAS_AUTO_VAR_INIT_ZERO) && ( GCC_PLUGIN_STRUCTLEAK_USER &&  !INIT_STACK_NONE &&  !GCC_PLUGIN_STRUCTLEAK_BYREF &&  !GCC_PLUGIN_STRUCTLEAK_BYREF_ALL &&  !INIT_STACK_ALL_PATTERN &&  !INIT_STACK_ALL_ZERO )",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_STRUCTLEAK_BYREF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGINS && ! CC_HAS_AUTO_VAR_INIT_ZERO) && (! ( KASAN && KASAN_STACK )) && ( GCC_PLUGIN_STRUCTLEAK_BYREF &&  !INIT_STACK_NONE &&  !GCC_PLUGIN_STRUCTLEAK_USER &&  !GCC_PLUGIN_STRUCTLEAK_BYREF_ALL &&  !INIT_STACK_ALL_PATTERN &&  !INIT_STACK_ALL_ZERO )",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_STRUCTLEAK_BYREF_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGINS && ! CC_HAS_AUTO_VAR_INIT_ZERO) && (! ( KASAN && KASAN_STACK )) && ( GCC_PLUGIN_STRUCTLEAK_BYREF_ALL &&  !INIT_STACK_NONE &&  !GCC_PLUGIN_STRUCTLEAK_USER &&  !GCC_PLUGIN_STRUCTLEAK_BYREF &&  !INIT_STACK_ALL_PATTERN &&  !INIT_STACK_ALL_ZERO )",
            "restrict": ""
        }
    ],
    "INIT_STACK_ALL_PATTERN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_HAS_AUTO_VAR_INIT_PATTERN) && ( INIT_STACK_ALL_PATTERN &&  !INIT_STACK_NONE &&  !GCC_PLUGIN_STRUCTLEAK_USER &&  !GCC_PLUGIN_STRUCTLEAK_BYREF &&  !GCC_PLUGIN_STRUCTLEAK_BYREF_ALL &&  !INIT_STACK_ALL_ZERO )",
            "restrict": ""
        }
    ],
    "INIT_STACK_ALL_ZERO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_HAS_AUTO_VAR_INIT_ZERO) && ( INIT_STACK_ALL_ZERO &&  !INIT_STACK_NONE &&  !GCC_PLUGIN_STRUCTLEAK_USER &&  !GCC_PLUGIN_STRUCTLEAK_BYREF &&  !GCC_PLUGIN_STRUCTLEAK_BYREF_ALL &&  !INIT_STACK_ALL_PATTERN )",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_STRUCTLEAK_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGIN_STRUCTLEAK) && (! COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_STACKLEAK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGINS) && (HAVE_ARCH_STACKLEAK)",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_STACKLEAK_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGIN_STACKLEAK) && (! COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "STACKLEAK_TRACK_MIN_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(GCC_PLUGIN_STACKLEAK)",
            "restrict": "( 0 4096 ) || ( 100 )[!(y)]"
        }
    ],
    "STACKLEAK_METRICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGIN_STACKLEAK) && (PROC_FS)",
            "restrict": ""
        }
    ],
    "STACKLEAK_RUNTIME_DISABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGIN_STACKLEAK)",
            "restrict": ""
        }
    ],
    "INIT_ON_ALLOC_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "INIT_ON_FREE_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CC_HAS_ZERO_CALL_USED_REGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "ZERO_CALL_USED_REGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_HAS_ZERO_CALL_USED_REGS)",
            "restrict": ""
        }
    ],
    "CC_HAS_RANDSTRUCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "RANDSTRUCT_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RANDSTRUCT_NONE &&  !RANDSTRUCT_FULL &&  !RANDSTRUCT_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "RANDSTRUCT_FULL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_HAS_RANDSTRUCT || GCC_PLUGINS) && ( RANDSTRUCT_FULL &&  !RANDSTRUCT_NONE &&  !RANDSTRUCT_PERFORMANCE )",
            "restrict": ""
        }
    ],
    "RANDSTRUCT_PERFORMANCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GCC_PLUGINS) && ( RANDSTRUCT_PERFORMANCE &&  !RANDSTRUCT_NONE &&  !RANDSTRUCT_FULL )",
            "restrict": ""
        }
    ],
    "RANDSTRUCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! RANDSTRUCT_NONE )[!(y)]"
        }
    ],
    "GCC_PLUGIN_RANDSTRUCT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( GCC_PLUGINS && RANDSTRUCT )[!(y)]"
        }
    ],
    "XOR_BLOCKS": [
        {
            "type": "tristate",
            "rev_select": "BTRFS_FS || ASYNC_XOR",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_CORE": [
        {
            "type": "tristate",
            "rev_select": "ASYNC_MEMCPY || ASYNC_XOR || ASYNC_PQ || ASYNC_RAID6_RECOV",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_MEMCPY": [
        {
            "type": "tristate",
            "rev_select": "MD_RAID456 || ASYNC_RAID6_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_XOR": [
        {
            "type": "tristate",
            "rev_select": "MD_RAID456 || DM_INTEGRITY || ASYNC_RAID6_RECOV",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_PQ": [
        {
            "type": "tristate",
            "rev_select": "MD_RAID456 || ASYNC_RAID6_RECOV",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_RAID6_RECOV": [
        {
            "type": "tristate",
            "rev_select": "MD_RAID456",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_TX_DISABLE_PQ_VAL_DMA": [
        {
            "type": "bool",
            "rev_select": "BCM_SBA_RAID",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASYNC_TX_DISABLE_XOR_VAL_DMA": [
        {
            "type": "bool",
            "rev_select": "BCM_SBA_RAID",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || BLK_INLINE_ENCRYPTION_FALLBACK || ZSWAP || TLS || XFRM_ALGO || XFRM_AH || XFRM_ESP || XFRM_IPCOMP || TCP_MD5SIG || IPV6_SEG6_HMAC || MPTCP || IP_SCTP || TIPC_CRYPTO || MAC802154 || BT || AF_RXRPC || RXKAD || LIB80211_CRYPT_CCMP || MAC80211 || CEPH_LIB || NFC_S3FWRN5 || BLK_DEV_RBD || NVME_TCP || NVME_AUTH || NVME_TARGET_AUTH || ISCSI_TCP || DM_CRYPT || DM_VERITY || DM_INTEGRITY || ISCSI_TARGET || WIREGUARD || MACSEC || PPP_MPPE || USB_RTL8152 || AIRO || AIRO_CS || LIBIPW || HOSTAP || HERMES || TCG_TPM || DRM_ITE_IT6505 || SND_SOC_CROS_EC_CODEC || RDMA_RXE || RTL8192U || RTLLIB_CRYPTO_CCMP || RTLLIB_CRYPTO_TKIP || RTL8192E || RTL8723BS || KS7010 || USB4 || TEE || EXT4_FS || JBD2 || BTRFS_FS || F2FS_FS || FS_ENCRYPTION || FS_VERITY || UBIFS_FS[UBIFS_FS_ADVANCED_COMPR] || UBIFS_FS[UBIFS_FS_LZO] || UBIFS_FS[UBIFS_FS_ZLIB] || UBIFS_FS[UBIFS_FS_ZSTD] || PSTORE[PSTORE_COMPRESS] || NFSD_V4 || CEPH_FS || CIFS || SMB_SERVER || TRUSTED_KEYS_TPM || ENCRYPTED_KEYS || KEY_DH_OPERATIONS || SECURITY_APPARMOR_HASH || IMA || CRC_T10DIF || CRC64_ROCKSOFT || LIBCRC32C || SIGNATURE",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_FIPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (( CRYPTO_ANSI_CPRNG || CRYPTO_DRBG ) && ! CRYPTO_MANAGER_DISABLE_TESTS) && (( MODULE_SIG || ! MODULES ))",
            "restrict": ""
        }
    ],
    "CRYPTO_FIPS_NAME": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_FIPS)",
            "restrict": "( \"Linux Kernel Cryptographic API\" )[!(y)]"
        }
    ],
    "CRYPTO_FIPS_CUSTOM_VERSION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_FIPS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CRYPTO_FIPS_VERSION": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_FIPS_CUSTOM_VERSION)",
            "restrict": "( \"(none)\" )[!(y)]"
        }
    ],
    "CRYPTO_ALGAPI": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_AEAD || CRYPTO_SKCIPHER || CRYPTO_HASH || CRYPTO_RNG || CRYPTO_AKCIPHER || CRYPTO_KPP || CRYPTO_ACOMP || CRYPTO_AES || CRYPTO_AES_TI || CRYPTO_AES_NI_INTEL || CRYPTO_AES_S390 || CRYPTO_ANUBIS || CRYPTO_BLOWFISH || CRYPTO_CAMELLIA || CRYPTO_CAMELLIA_SPARC64 || CRYPTO_CAST5 || CRYPTO_CAST6 || CRYPTO_DES || CRYPTO_DES_SPARC64 || CRYPTO_DES_S390 || CRYPTO_FCRYPT || CRYPTO_KHAZAD || CRYPTO_SEED || CRYPTO_ARIA || CRYPTO_SERPENT || CRYPTO_SM4_GENERIC || CRYPTO_SM4_AESNI_AVX_X86_64 || CRYPTO_SM4_AESNI_AVX2_X86_64 || CRYPTO_TEA || CRYPTO_TWOFISH || CRYPTO_TWOFISH_586 || CRYPTO_TWOFISH_X86_64 || CRYPTO_DEFLATE || CRYPTO_LZO || CRYPTO_842 || CRYPTO_LZ4 || CRYPTO_LZ4HC || CRYPTO_ZSTD || CRYPTO_DEV_GEODE || CRYPTO_PAES_S390 || CRYPTO_DEV_NX_COMPRESS || CRYPTO_DEV_UX500_CRYP || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_HISI_SEC || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_SA2UL || CRYPTO_LIB_CHACHA20POLY1305",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ALGAPI2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_ALGAPI || CRYPTO_AEAD2 || CRYPTO_SKCIPHER2 || CRYPTO_HASH2 || CRYPTO_RNG2 || CRYPTO_AKCIPHER2 || CRYPTO_KPP2 || CRYPTO_ACOMP2 || CRYPTO_NULL2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AEAD": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_PCRYPT || CRYPTO_AUTHENC || CRYPTO_CCM || CRYPTO_GCM || CRYPTO_CHACHA20POLY1305 || CRYPTO_AEGIS128 || CRYPTO_AEGIS128_AESNI_SSE2 || CRYPTO_SEQIV || CRYPTO_ECHAINIV || CRYPTO_AES_NI_INTEL || CRYPTO_USER_API_AEAD || CRYPTO_DEV_FSL_CAAM_CRYPTO_API || CRYPTO_DEV_FSL_DPAA2_CAAM || CRYPTO_DEV_TALITOS || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_ATMEL_AES || CRYPTO_DEV_QAT || CRYPTO_DEV_OCTEONTX_CPT || CRYPTO_DEV_OCTEONTX2_CPT || CRYPTO_DEV_ZYNQMP_AES || CRYPTO_DEV_VIRTIO || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_KEEMBAY_OCS_AES_SM4",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AEAD2": [
        {
            "type": "tristate",
            "rev_select": "SEV_GUEST || CIFS || SMB_SERVER || CRYPTO_AEAD || CRYPTO_MANAGER2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SKCIPHER": [
        {
            "type": "tristate",
            "rev_select": "BLK_INLINE_ENCRYPTION_FALLBACK || XFRM_ALGO || BT || RXKAD || DM_INTEGRITY || AIRO || FS_ENCRYPTION || CRYPTO_CRYPTD || CRYPTO_AUTHENC || CRYPTO_SEQIV || CRYPTO_CBC || CRYPTO_CFB || CRYPTO_CTR || CRYPTO_CTS || CRYPTO_ECB || CRYPTO_LRW || CRYPTO_OFB || CRYPTO_PCBC || CRYPTO_XCTR || CRYPTO_XTS || CRYPTO_KEYWRAP || CRYPTO_AES_NI_INTEL || CRYPTO_AES_SPARC64 || CRYPTO_AES_PPC_SPE || CRYPTO_AES_S390 || CRYPTO_ARC4 || CRYPTO_BLOWFISH_X86_64 || CRYPTO_CAMELLIA_X86_64 || CRYPTO_CAMELLIA_AESNI_AVX_X86_64 || CRYPTO_CAMELLIA_SPARC64 || CRYPTO_CAST5_AVX_X86_64 || CRYPTO_CAST6_AVX_X86_64 || CRYPTO_DES_SPARC64 || CRYPTO_DES3_EDE_X86_64 || CRYPTO_DES_S390 || CRYPTO_FCRYPT || CRYPTO_CHACHA20 || CRYPTO_CHACHA20_X86_64 || CRYPTO_CHACHA_MIPS || CRYPTO_CHACHA_S390 || CRYPTO_SERPENT_SSE2_X86_64 || CRYPTO_SERPENT_SSE2_586 || CRYPTO_SERPENT_AVX_X86_64 || CRYPTO_SM4_AESNI_AVX_X86_64 || CRYPTO_SM4_AESNI_AVX2_X86_64 || CRYPTO_TWOFISH_X86_64_3WAY || CRYPTO_TWOFISH_AVX_X86_64 || CRYPTO_USER_API_SKCIPHER || CRYPTO_USER_API_AEAD || CRYPTO_DEV_SUN4I_SS || CRYPTO_DEV_SUN8I_CE || CRYPTO_DEV_SUN8I_SS || CRYPTO_DEV_PADLOCK_AES || CRYPTO_DEV_GEODE || CRYPTO_PAES_S390 || CRYPTO_DEV_NIAGARA2 || CRYPTO_DEV_SL3516 || CRYPTO_DEV_HIFN_795X || CRYPTO_DEV_FSL_CAAM_CRYPTO_API || CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI || CRYPTO_DEV_FSL_DPAA2_CAAM || CRYPTO_DEV_TALITOS || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_OMAP_DES || CRYPTO_DEV_SAHARA || CRYPTO_DEV_S5P || CRYPTO_DEV_UX500_CRYP || CRYPTO_DEV_ATMEL_AES || CRYPTO_DEV_ATMEL_TDES || CRYPTO_DEV_CCP_CRYPTO || CRYPTO_DEV_MXS_DCP || CRYPTO_DEV_QAT || CRYPTO_DEV_NITROX || CRYPTO_DEV_MARVELL_CESA || CRYPTO_DEV_OCTEONTX_CPT || CRYPTO_DEV_OCTEONTX2_CPT || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_VIRTIO || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_AMLOGIC_GXL || CRYPTO_DEV_KEEMBAY_OCS_AES_SM4",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SKCIPHER2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SKCIPHER || CRYPTO_MANAGER2 || CRYPTO_NULL2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_HASH": [
        {
            "type": "tristate",
            "rev_select": "XFRM_ALGO || NFC_S3FWRN5 || DM_VERITY || USB_RTL8152 || DRM_ITE_IT6505 || KS7010 || USB4 || FS_ENCRYPTION || CRYPTO_CRYPTD || CRYPTO_AUTHENC || CRYPTO_CCM || CRYPTO_NHPOLY1305 || CRYPTO_CMAC || CRYPTO_HMAC || CRYPTO_XCBC || CRYPTO_VMAC || CRYPTO_CRC32C || CRYPTO_CRC32C_INTEL || CRYPTO_CRC32C_VPMSUM || CRYPTO_CRC32C_SPARC64 || CRYPTO_CRC32 || CRYPTO_CRC32_PCLMUL || CRYPTO_CRC32_MIPS || CRYPTO_CRC32_S390 || CRYPTO_XXHASH || CRYPTO_BLAKE2B || CRYPTO_CRCT10DIF || CRYPTO_CRCT10DIF_PCLMUL || CRYPTO_CRCT10DIF_VPMSUM || CRYPTO_CRC64_ROCKSOFT || CRYPTO_GHASH || CRYPTO_POLYVAL || CRYPTO_POLY1305 || CRYPTO_MD4 || CRYPTO_MD5 || CRYPTO_MD5_OCTEON || CRYPTO_MD5_PPC || CRYPTO_MD5_SPARC64 || CRYPTO_MICHAEL_MIC || CRYPTO_RMD160 || CRYPTO_SHA1 || CRYPTO_SHA1_SSSE3 || CRYPTO_SHA256_SSSE3 || CRYPTO_SHA512_SSSE3 || CRYPTO_SHA512_S390 || CRYPTO_SHA1_OCTEON || CRYPTO_SHA1_SPARC64 || CRYPTO_SHA1_S390 || CRYPTO_SHA256 || CRYPTO_SHA256_PPC_SPE || CRYPTO_SHA256_OCTEON || CRYPTO_SHA256_SPARC64 || CRYPTO_SHA256_S390 || CRYPTO_SHA512 || CRYPTO_SHA512_OCTEON || CRYPTO_SHA512_SPARC64 || CRYPTO_SHA3 || CRYPTO_SHA3_256_S390 || CRYPTO_SHA3_512_S390 || CRYPTO_SM3_GENERIC || CRYPTO_SM3_AVX_X86_64 || CRYPTO_STREEBOG || CRYPTO_WP512 || CRYPTO_GHASH_S390 || CRYPTO_USER_API_HASH || CRYPTO_DEV_PADLOCK_SHA || CRYPTO_DEV_NIAGARA2 || CRYPTO_DEV_FSL_CAAM_AHASH_API || CRYPTO_DEV_FSL_DPAA2_CAAM || CRYPTO_DEV_TALITOS || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_UX500_HASH || CRYPTO_DEV_ATMEL_SHA || CRYPTO_DEV_CCP_CRYPTO || CRYPTO_DEV_MXS_DCP || CRYPTO_DEV_MARVELL_CESA || CRYPTO_DEV_OCTEONTX_CPT || CRYPTO_DEV_OCTEONTX2_CPT || CRYPTO_DEV_IMGTEC_HASH || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_STM32_CRC || CRYPTO_DEV_STM32_HASH || CRYPTO_DEV_STM32_CRYP || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_KEEMBAY_OCS_HCU || ASYMMETRIC_PUBLIC_KEY_SUBTYPE || PKCS7_MESSAGE_PARSER || SIGNED_PE_FILE_VERIFICATION",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_HASH2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_HASH || CRYPTO_MANAGER2 || CRYPTO_NULL2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_RNG": [
        {
            "type": "tristate",
            "rev_select": "ENCRYPTED_KEYS || CRYPTO_ANSI_CPRNG || CRYPTO_DRBG || CRYPTO_JITTERENTROPY || CRYPTO_USER_API_RNG || CRYPTO_DEV_SUN4I_SS_PRNG || CRYPTO_DEV_SUN8I_CE_PRNG || CRYPTO_DEV_SUN8I_SS_PRNG || CRYPTO_DEV_FSL_CAAM_RNG_API || CRYPTO_DEV_FSL_CAAM_PRNG_API || CRYPTO_DEV_EXYNOS_RNG || CRYPTO_DEV_QCOM_RNG || CRYPTO_DEV_HISI_TRNG",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_RNG2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_AEAD2 || CRYPTO_SKCIPHER2 || CRYPTO_RNG",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_RNG_DEFAULT": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DH_RFC7919_GROUPS || CRYPTO_ECC || CRYPTO_SEQIV || CRYPTO_ECHAINIV",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AKCIPHER2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_AKCIPHER || CRYPTO_MANAGER2 || CRYPTO_DEV_VIRTIO",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AKCIPHER": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_RSA || CRYPTO_ECDSA || CRYPTO_ECRDSA || CRYPTO_SM2 || CRYPTO_DEV_QAT || ASYMMETRIC_PUBLIC_KEY_SUBTYPE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_KPP2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_KPP || CRYPTO_MANAGER2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_KPP": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DH || CRYPTO_ECDH || CRYPTO_CURVE25519",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ACOMP2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_ACOMP || CRYPTO_MANAGER2 || CRYPTO_DEFLATE || CRYPTO_LZO || CRYPTO_842 || CRYPTO_LZ4 || CRYPTO_LZ4HC || CRYPTO_ZSTD",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ACOMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_MANAGER": [
        {
            "type": "tristate",
            "rev_select": "RXKAD || CRYPTO_USER || CRYPTO_PCRYPT || CRYPTO_CRYPTD || CRYPTO_AUTHENC || CRYPTO_TEST || CRYPTO_RSA || CRYPTO_SM2 || CRYPTO_CCM || CRYPTO_GCM || CRYPTO_CHACHA20POLY1305 || CRYPTO_SEQIV || CRYPTO_ECHAINIV || CRYPTO_CBC || CRYPTO_CFB || CRYPTO_CTR || CRYPTO_CTS || CRYPTO_ECB || CRYPTO_LRW || CRYPTO_OFB || CRYPTO_PCBC || CRYPTO_XCTR || CRYPTO_XTS || CRYPTO_KEYWRAP || CRYPTO_ADIANTUM || CRYPTO_HCTR2 || CRYPTO_CMAC || CRYPTO_HMAC || CRYPTO_XCBC || CRYPTO_VMAC",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_MANAGER2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_MANAGER",
            "dep": "( CRYPTO )",
            "restrict": "( CRYPTO_MANAGER || ( CRYPTO_MANAGER != n && CRYPTO_ALGAPI = y ) )[!(y)]"
        }
    ],
    "CRYPTO_USER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (NET)",
            "restrict": ""
        }
    ],
    "CRYPTO_MANAGER_DISABLE_TESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_MANAGER_EXTRA_TESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (DEBUG_KERNEL && ! CRYPTO_MANAGER_DISABLE_TESTS && CRYPTO_MANAGER)",
            "restrict": ""
        }
    ],
    "CRYPTO_GF128MUL": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_LRW || CRYPTO_GHASH || CRYPTO_POLYVAL || CRYPTO_DEV_CHELSIO",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_NULL": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_AUTHENC || CRYPTO_GCM || CRYPTO_SEQIV || CRYPTO_ECHAINIV || CRYPTO_USER_API_AEAD",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_NULL2": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_AEAD2 || CRYPTO_NULL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_PCRYPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SMP)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRYPTD": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SIMD || CRYPTO_GHASH_CLMUL_NI_INTEL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AUTHENC": [
        {
            "type": "tristate",
            "rev_select": "XFRM_ESP || MAC802154 || CRYPTO_ESSIV || CRYPTO_DEV_FSL_CAAM_CRYPTO_API || CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI || CRYPTO_DEV_FSL_DPAA2_CAAM || CRYPTO_DEV_TALITOS || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_ATMEL_AES[CRYPTO_DEV_ATMEL_AUTHENC] || CRYPTO_DEV_CCP_CRYPTO || CRYPTO_DEV_QAT || CRYPTO_DEV_QCE_AEAD || CRYPTO_DEV_CHELSIO || CRYPTO_DEV_BCM_SPU || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_SA2UL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (m || EXPERT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SIMD": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_AEGIS128_AESNI_SSE2 || CRYPTO_AES_NI_INTEL || CRYPTO_CAMELLIA_AESNI_AVX_X86_64 || CRYPTO_CAST5_AVX_X86_64 || CRYPTO_CAST6_AVX_X86_64 || CRYPTO_SERPENT_SSE2_X86_64 || CRYPTO_SERPENT_SSE2_586 || CRYPTO_SERPENT_AVX_X86_64 || CRYPTO_SM4_AESNI_AVX_X86_64 || CRYPTO_SM4_AESNI_AVX2_X86_64 || CRYPTO_TWOFISH_AVX_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ENGINE": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_SUN8I_CE || CRYPTO_DEV_SUN8I_SS || CRYPTO_DEV_SL3516 || CRYPTO_DEV_FSL_CAAM_JR || CRYPTO_DEV_OMAP_SHAM || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_OMAP_DES || CRYPTO_DEV_ZYNQMP_AES || CRYPTO_DEV_VIRTIO || CRYPTO_DEV_STM32_HASH || CRYPTO_DEV_STM32_CRYP || CRYPTO_DEV_AMLOGIC_GXL || CRYPTO_DEV_KEEMBAY_OCS_AES_SM4 || CRYPTO_DEV_KEEMBAY_OCS_ECC || CRYPTO_DEV_KEEMBAY_OCS_HCU",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_RSA": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || INTEGRITY_ASYMMETRIC_KEYS || CRYPTO_DEV_FSL_CAAM_PKC_API || CRYPTO_DEV_CCP_CRYPTO || CRYPTO_DEV_QAT || CRYPTO_DEV_VIRTIO || CRYPTO_DEV_HISI_HPRE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_DH": [
        {
            "type": "tristate",
            "rev_select": "NVME_AUTH || NVME_TARGET_AUTH || KEY_DH_OPERATIONS || CRYPTO_DEV_QAT || CRYPTO_DEV_HISI_HPRE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_DH_RFC7919_GROUPS": [
        {
            "type": "bool",
            "rev_select": "NVME_AUTH || NVME_TARGET_AUTH",
            "dep": "( CRYPTO ) && (CRYPTO_DH)",
            "restrict": ""
        }
    ],
    "CRYPTO_ECC": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_ECDH || CRYPTO_ECDSA || CRYPTO_ECRDSA",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ECDH": [
        {
            "type": "tristate",
            "rev_select": "BT || CRYPTO_DEV_ATMEL_ECC || CRYPTO_DEV_HISI_HPRE || CRYPTO_DEV_KEEMBAY_OCS_ECC",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ECDSA": [
        {
            "type": "tristate",
            "rev_select": "MODULE_SIG_KEY_TYPE_ECDSA",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ECRDSA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SM2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CURVE25519": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_HISI_HPRE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CURVE25519_X86": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD[X86 && 64BIT]",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CCM": [
        {
            "type": "tristate",
            "rev_select": "MAC802154 || LIB80211_CRYPT_CCMP || MAC80211 || RTL8192U || RTLLIB_CRYPTO_CCMP || CIFS || SMB_SERVER || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_NX_ENCRYPT",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_GCM": [
        {
            "type": "tristate",
            "rev_select": "TLS || XFRM_ESP || TIPC_CRYPTO || MAC80211 || CEPH_LIB || MACSEC || SEV_GUEST || CIFS || SMB_SERVER || CRYPTO_DEV_PPC4XX",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CHACHA20POLY1305": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_SAFEXCEL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AEGIS128": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AEGIS128_SIMD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_AEGIS128 && ( ( ARM || ARM64 ) && KERNEL_MODE_NEON ))",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_AEGIS128_AESNI_SSE2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SEQIV": [
        {
            "type": "tristate",
            "rev_select": "XFRM_ESP",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ECHAINIV": [
        {
            "type": "tristate",
            "rev_select": "XFRM_ESP",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CBC": [
        {
            "type": "tristate",
            "rev_select": "XFRM_ESP || CEPH_LIB || DM_CRYPT || ECRYPT_FS || ENCRYPTED_KEYS || CRYPTO_DEV_SUN8I_CE || CRYPTO_DEV_SUN8I_SS || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_MXS_DCP || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_VMX_ENCRYPT || CRYPTO_DEV_CCREE || CRYPTO_DEV_AMLOGIC_GXL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CFB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CTR": [
        {
            "type": "tristate",
            "rev_select": "MAC802154 || AIRO_CS || CRYPTO_CCM || CRYPTO_GCM || CRYPTO_DRBG_CTR || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_VMX_ENCRYPT || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE",
            "dep": "( CRYPTO )",
            "restrict": "( CRYPTO_BLOWFISH_X86_64 ) || ( CRYPTO_CAMELLIA_X86_64 ) || ( CRYPTO_CAST5_AVX_X86_64 ) || ( CRYPTO_CAST6_AVX_X86_64 ) || ( CRYPTO_DES3_EDE_X86_64 ) || ( CRYPTO_SERPENT_SSE2_X86_64 ) || ( CRYPTO_SERPENT_SSE2_586 ) || ( CRYPTO_SERPENT_AVX_X86_64 ) || ( CRYPTO_TWOFISH_586 ) || ( CRYPTO_TWOFISH_X86_64 )"
        }
    ],
    "CRYPTO_CTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ECB": [
        {
            "type": "tristate",
            "rev_select": "BT || ECRYPT_FS || CIFS || SMB_SERVER || CRYPTO_LRW || CRYPTO_XTS || CRYPTO_DEV_SUN8I_CE || CRYPTO_DEV_SUN8I_SS || CRYPTO_DEV_SL3516 || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_SAHARA || CRYPTO_DEV_MXS_DCP || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_CCREE || CRYPTO_DEV_AMLOGIC_GXL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_LRW": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_OFB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_PCBC": [
        {
            "type": "tristate",
            "rev_select": "RXKAD",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_XCTR": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_HCTR2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_XTS": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_FSL_CAAM_CRYPTO_API || CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI || CRYPTO_DEV_FSL_DPAA2_CAAM || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_VMX_ENCRYPT || CRYPTO_DEV_CCREE",
            "dep": "( CRYPTO )",
            "restrict": "( CRYPTO_CAMELLIA_AESNI_AVX_X86_64 ) || ( CRYPTO_CAST6_AVX_X86_64 ) || ( CRYPTO_SERPENT_AVX_X86_64 ) || ( CRYPTO_TWOFISH_AVX_X86_64 )"
        }
    ],
    "CRYPTO_KEYWRAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_NHPOLY1305": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_NHPOLY1305_SSE2 || CRYPTO_NHPOLY1305_AVX2 || CRYPTO_ADIANTUM",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_NHPOLY1305_SSE2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_NHPOLY1305_AVX2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_ADIANTUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_HCTR2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ESSIV": [
        {
            "type": "tristate",
            "rev_select": "DM_CRYPT",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CMAC": [
        {
            "type": "tristate",
            "rev_select": "BT || MAC80211 || CIFS || SMB_SERVER",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_HMAC": [
        {
            "type": "tristate",
            "rev_select": "XFRM_AH || XFRM_ESP || IPV6_SEG6_HMAC || IP_SCTP || CEPH_LIB || NVME_AUTH || NVME_TARGET_AUTH || UBIFS_FS_AUTHENTICATION || CIFS || SMB_SERVER || TRUSTED_KEYS_TPM || ENCRYPTED_KEYS || IMA || EVM || CRYPTO_DRBG_HMAC || CRYPTO_KDF800108_CTR || CRYPTO_DEV_OMAP_SHAM || CRYPTO_DEV_QAT || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_XCBC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_VMAC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32C": [
        {
            "type": "tristate",
            "rev_select": "NVME_TCP || ISCSI_TCP || ISCSI_TARGET || EXT4_FS || JBD2 || BTRFS_FS || LIBCRC32C",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32C_INTEL": [
        {
            "type": "tristate",
            "rev_select": "ISCSI_TARGET[X86]",
            "dep": "( CRYPTO ) && (X86)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32C_VPMSUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC64 && ALTIVEC)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32C_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32": [
        {
            "type": "tristate",
            "rev_select": "RDMA_RXE || F2FS_FS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32_PCLMUL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32_MIPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (MIPS_CRC_SUPPORT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC32_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_XXHASH": [
        {
            "type": "tristate",
            "rev_select": "BTRFS_FS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_BLAKE2B": [
        {
            "type": "tristate",
            "rev_select": "BTRFS_FS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_BLAKE2S_X86": [
        {
            "type": "bool",
            "rev_select": "WIREGUARD[X86 && 64BIT]",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRCT10DIF": [
        {
            "type": "tristate",
            "rev_select": "CRC_T10DIF",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CRCT10DIF_PCLMUL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT && CRC_T10DIF)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRCT10DIF_VPMSUM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC64 && ALTIVEC && CRC_T10DIF)",
            "restrict": ""
        }
    ],
    "CRYPTO_CRC64_ROCKSOFT": [
        {
            "type": "tristate",
            "rev_select": "CRC64_ROCKSOFT",
            "dep": "( CRYPTO ) && (CRC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_VPMSUM_TESTER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_CRCT10DIF_VPMSUM && CRYPTO_CRC32C_VPMSUM)",
            "restrict": ""
        }
    ],
    "CRYPTO_GHASH": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_GCM || CRYPTO_DEV_VMX_ENCRYPT",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_POLYVAL": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_HCTR2 || CRYPTO_POLYVAL_CLMUL_NI",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_POLYVAL_CLMUL_NI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_POLY1305": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CHACHA20POLY1305",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_POLY1305_X86_64": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD[X86 && 64BIT]",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_POLY1305_MIPS": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD[MIPS]",
            "dep": "( CRYPTO ) && (MIPS)",
            "restrict": ""
        }
    ],
    "CRYPTO_MD4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_MD5": [
        {
            "type": "tristate",
            "rev_select": "TCP_MD5SIG || ISCSI_TCP || ECRYPT_FS || NFSD_V4 || CIFS || SMB_SERVER || CRYPTO_MD5_OCTEON || CRYPTO_MD5_SPARC64 || CRYPTO_DEV_SUN4I_SS || CRYPTO_DEV_SUN8I_CE_HASH || CRYPTO_DEV_SUN8I_SS_HASH || CRYPTO_DEV_NIAGARA2 || CRYPTO_DEV_OMAP_SHAM || CRYPTO_DEV_EXYNOS_HASH || CRYPTO_DEV_IMGTEC_HASH || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_BCM_SPU || CRYPTO_DEV_STM32_HASH || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_CCREE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_MD5_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CPU_CAVIUM_OCTEON)",
            "restrict": ""
        }
    ],
    "CRYPTO_MD5_PPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC)",
            "restrict": ""
        }
    ],
    "CRYPTO_MD5_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_MICHAEL_MIC": [
        {
            "type": "tristate",
            "rev_select": "LIBIPW || HOSTAP || HERMES || RTLLIB_CRYPTO_TKIP || KS7010",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_RMD160": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1": [
        {
            "type": "tristate",
            "rev_select": "MODULE_SIG_SHA1 || IPV6_SEG6_HMAC || IP_SCTP || PPP_MPPE || TEE || TRUSTED_KEYS_TPM || SECURITY_APPARMOR_HASH || IMA || EVM || CRYPTO_SHA1_SSSE3 || CRYPTO_SHA1_OCTEON || CRYPTO_SHA1_SPARC64 || CRYPTO_DEV_SUN4I_SS || CRYPTO_DEV_SUN8I_CE_HASH || CRYPTO_DEV_SUN8I_SS_HASH || CRYPTO_DEV_PADLOCK_SHA || CRYPTO_DEV_NIAGARA2 || CRYPTO_DEV_OMAP_SHAM || CRYPTO_DEV_EXYNOS_HASH || CRYPTO_DEV_UX500_HASH || CRYPTO_DEV_SP_CCP || CRYPTO_DEV_QAT || CRYPTO_DEV_QCE_SHA || CRYPTO_DEV_IMGTEC_HASH || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_CHELSIO || CRYPTO_DEV_BCM_SPU || CRYPTO_DEV_STM32_HASH || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_SA2UL || SIGNATURE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1_SSSE3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA256_SSSE3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA512_SSSE3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA512_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CPU_CAVIUM_OCTEON)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1_PPC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1_PPC_SPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC && SPE)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA1_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA256": [
        {
            "type": "tristate",
            "rev_select": "MODULE_SIG_SHA224 || MODULE_SIG_SHA256 || XFRM_AH || XFRM_ESP || IPV6_SEG6_HMAC || BT || CFG80211[CFG80211_USE_KERNEL_REGDB_KEYS] || CEPH_LIB || NVME_AUTH || NVME_TARGET_AUTH || USB_RTL8152 || BTRFS_FS || NFSD_V4 || CIFS || SMB_SERVER || ENCRYPTED_KEYS || CRYPTO_SHA256_SSSE3 || CRYPTO_SHA256_PPC_SPE || CRYPTO_SHA256_OCTEON || CRYPTO_SHA256_SPARC64 || CRYPTO_DRBG_HASH || CRYPTO_KDF800108_CTR || CRYPTO_DEV_SUN8I_CE_HASH || CRYPTO_DEV_SUN8I_SS_HASH || CRYPTO_DEV_PADLOCK_SHA || CRYPTO_DEV_NIAGARA2 || CRYPTO_DEV_OMAP_SHAM || CRYPTO_DEV_EXYNOS_HASH || CRYPTO_DEV_UX500_HASH || CRYPTO_DEV_SP_CCP || CRYPTO_DEV_QAT || CRYPTO_DEV_QCE_SHA || CRYPTO_DEV_IMGTEC_HASH || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_CHELSIO || CRYPTO_DEV_BCM_SPU || CRYPTO_DEV_STM32_HASH || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_SA2UL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA256_PPC_SPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC && SPE)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA256_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CPU_CAVIUM_OCTEON)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA256_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA256_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA512": [
        {
            "type": "tristate",
            "rev_select": "MODULE_SIG_SHA384 || MODULE_SIG_SHA512 || NVME_AUTH || NVME_TARGET_AUTH || CIFS || SMB_SERVER || CRYPTO_SHA512_SSSE3 || CRYPTO_SHA512_OCTEON || CRYPTO_SHA512_SPARC64 || CRYPTO_DRBG_HMAC || CRYPTO_DEV_SUN8I_CE_HASH || CRYPTO_DEV_OMAP_SHAM || CRYPTO_DEV_QAT || CRYPTO_DEV_CHELSIO || CRYPTO_DEV_BCM_SPU || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_SA2UL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA512_OCTEON": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CPU_CAVIUM_OCTEON)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA512_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA3": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_ZYNQMP_SHA3 || CRYPTO_DEV_SAFEXCEL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA3_256_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_SHA3_512_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_SM3": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SM2 || CRYPTO_SM3_GENERIC || CRYPTO_SM3_AVX_X86_64 || CRYPTO_DEV_CCREE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SM3_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SM3_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_STREEBOG": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_ECRDSA",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_WP512": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_GHASH_CLMUL_NI_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_GHASH_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_AES": [
        {
            "type": "tristate",
            "rev_select": "TLS || XFRM_ESP || TIPC_CRYPTO || MAC802154 || LIB80211_CRYPT_CCMP || MAC80211 || CEPH_LIB || BLK_DEV_RBD || MACSEC || AIRO_CS || RTL8192U || RTLLIB_CRYPTO_CCMP || CEPH_FS || CIFS || ENCRYPTED_KEYS || CRYPTO_AEGIS128 || CRYPTO_ANSI_CPRNG || CRYPTO_DRBG_CTR || CRYPTO_DEV_SUN4I_SS || CRYPTO_DEV_SUN8I_CE || CRYPTO_DEV_SUN8I_SS || CRYPTO_DEV_SL3516 || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_OMAP_AES || CRYPTO_DEV_SAHARA || CRYPTO_DEV_S5P || CRYPTO_DEV_NX_ENCRYPT || CRYPTO_DEV_ATMEL_AES || CRYPTO_DEV_MXS_DCP || CRYPTO_DEV_NITROX || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_VMX_ENCRYPT || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_ZYNQMP_AES || CRYPTO_DEV_ARTPEC6 || CRYPTO_DEV_CCREE || CRYPTO_DEV_AMLOGIC_GXL || CRYPTO_DEV_SA2UL",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AES_TI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_AES_NI_INTEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86)",
            "restrict": ""
        }
    ],
    "CRYPTO_AES_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_AES_PPC_SPE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (PPC && SPE)",
            "restrict": ""
        }
    ],
    "CRYPTO_AES_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_ANUBIS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API_ENABLE_OBSOLETE)",
            "restrict": ""
        }
    ],
    "CRYPTO_ARC4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API_ENABLE_OBSOLETE)",
            "restrict": ""
        }
    ],
    "CRYPTO_BLOWFISH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_BLOWFISH_COMMON": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_BLOWFISH || CRYPTO_BLOWFISH_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_BLOWFISH_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CAMELLIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CAMELLIA_X86_64": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CAMELLIA_AESNI_AVX_X86_64",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CAMELLIA_AESNI_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CAMELLIA_AESNI_AVX2_X86_64",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CAMELLIA_AESNI_AVX2_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CAMELLIA_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_CAST_COMMON": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CAST5 || CRYPTO_CAST5_AVX_X86_64 || CRYPTO_CAST6 || CRYPTO_CAST6_AVX_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CAST5": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CAST5_AVX_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CAST5_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CAST6": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CAST6_AVX_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CAST6_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_DES": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_SUN8I_CE || CRYPTO_DEV_SUN8I_SS || CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI || CRYPTO_DEV_FSL_DPAA2_CAAM || CRYPTO_DEV_IXP4XX",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_DES_SPARC64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_DES3_EDE_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_DES_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_FCRYPT": [
        {
            "type": "tristate",
            "rev_select": "RXKAD",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_KHAZAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API_ENABLE_OBSOLETE)",
            "restrict": ""
        }
    ],
    "CRYPTO_CHACHA20": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CHACHA20POLY1305 || CRYPTO_ADIANTUM",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_CHACHA20_X86_64": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD[X86 && 64BIT]",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_CHACHA_MIPS": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD[CPU_MIPS32_R2]",
            "dep": "( CRYPTO ) && (CPU_MIPS32_R2)",
            "restrict": ""
        }
    ],
    "CRYPTO_CHACHA_S390": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD[S390]",
            "dep": "( CRYPTO ) && (S390)",
            "restrict": ""
        }
    ],
    "CRYPTO_SEED": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API_ENABLE_OBSOLETE)",
            "restrict": ""
        }
    ],
    "CRYPTO_ARIA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SERPENT": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SERPENT_SSE2_X86_64 || CRYPTO_SERPENT_SSE2_586 || CRYPTO_SERPENT_AVX_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SERPENT_SSE2_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SERPENT_SSE2_586": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && ! 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SERPENT_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SERPENT_AVX2_X86_64",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SERPENT_AVX2_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SM4": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SM4_GENERIC || CRYPTO_SM4_AESNI_AVX_X86_64 || CRYPTO_SM4_AESNI_AVX2_X86_64 || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC2",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SM4_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_SM4_AESNI_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_SM4_AESNI_AVX2_X86_64",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_SM4_AESNI_AVX2_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_TEA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API_ENABLE_OBSOLETE)",
            "restrict": ""
        }
    ],
    "CRYPTO_TWOFISH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_TWOFISH_COMMON": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_TWOFISH || CRYPTO_TWOFISH_586 || CRYPTO_TWOFISH_X86_64 || CRYPTO_TWOFISH_X86_64_3WAY || CRYPTO_TWOFISH_AVX_X86_64",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_TWOFISH_586": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (( X86 || UML_X86 ) && ! 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_TWOFISH_X86_64": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_TWOFISH_X86_64_3WAY || CRYPTO_TWOFISH_AVX_X86_64",
            "dep": "( CRYPTO ) && (( X86 || UML_X86 ) && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_TWOFISH_X86_64_3WAY": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_TWOFISH_AVX_X86_64",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_TWOFISH_AVX_X86_64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (X86 && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEFLATE": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_COMPRESSOR_DEFAULT_DEFLATE || XFRM_IPCOMP || UBIFS_FS[UBIFS_FS_ZLIB] || PSTORE_DEFLATE_COMPRESS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_LZO": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_COMPRESSOR_DEFAULT_LZO || UBIFS_FS[UBIFS_FS_LZO] || PSTORE_LZO_COMPRESS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_842": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_COMPRESSOR_DEFAULT_842 || PSTORE_842_COMPRESS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_LZ4": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_COMPRESSOR_DEFAULT_LZ4 || PSTORE_LZ4_COMPRESS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_LZ4HC": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_COMPRESSOR_DEFAULT_LZ4HC || PSTORE_LZ4HC_COMPRESS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ZSTD": [
        {
            "type": "tristate",
            "rev_select": "ZSWAP_COMPRESSOR_DEFAULT_ZSTD || UBIFS_FS[UBIFS_FS_ZSTD] || PSTORE_ZSTD_COMPRESS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_ANSI_CPRNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_DRBG_MENU": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_RNG_DEFAULT",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_DRBG_HMAC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_DRBG_MENU )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DRBG_HASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_DRBG_MENU )",
            "restrict": ""
        }
    ],
    "CRYPTO_DRBG_CTR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_DRBG_MENU )",
            "restrict": ""
        }
    ],
    "CRYPTO_DRBG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_DRBG_MENU )",
            "restrict": "( CRYPTO_DRBG_MENU )[!(y)]"
        }
    ],
    "CRYPTO_JITTERENTROPY": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DRBG",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_KDF800108_CTR": [
        {
            "type": "tristate",
            "rev_select": "KEY_DH_OPERATIONS",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_USER_API_HASH || CRYPTO_USER_API_SKCIPHER || CRYPTO_USER_API_RNG || CRYPTO_USER_API_AEAD",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API_HASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (NET)",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API_SKCIPHER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (NET)",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API_RNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (NET)",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API_RNG_CAVP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API_RNG && CRYPTO_DRBG)",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API_AEAD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && (NET)",
            "restrict": ""
        }
    ],
    "CRYPTO_USER_API_ENABLE_OBSOLETE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER_API)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_STATS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (CRYPTO_USER)",
            "restrict": ""
        }
    ],
    "CRYPTO_HASH_INFO": [
        {
            "type": "bool",
            "rev_select": "TCG_TPM || FS_VERITY || UBIFS_FS || TRUSTED_KEYS_TPM || IMA || EVM || ASYMMETRIC_PUBLIC_KEY_SUBTYPE",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_HW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ALLWINNER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_SUNXI || COMPILE_TEST)",
            "restrict": "( y )[!(y) && (ARCH_SUNXI)]"
        }
    ],
    "CRYPTO_DEV_SUN4I_SS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_SUNXI) && (PM) && (CRYPTO_DEV_ALLWINNER)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN4I_SS_PRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN4I_SS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN4I_SS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN4I_SS) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_CE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_ALLWINNER) && (PM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_CE_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_CE) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_CE_HASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_CE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_CE_PRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_CE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_CE_TRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_CE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_SS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_ALLWINNER) && (PM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_SS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_SS) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_SS_PRNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_SS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SUN8I_SS_HASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SUN8I_SS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_PADLOCK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (X86 && ! UML)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_PADLOCK_AES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_PADLOCK)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_PADLOCK_SHA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_PADLOCK)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_GEODE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (X86_32 && PCI)",
            "restrict": ""
        }
    ],
    "ZCRYPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (S390)",
            "restrict": ""
        }
    ],
    "ZCRYPT_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (DEBUG_KERNEL) && (ZCRYPT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ZCRYPT_MULTIDEVNODES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (S390) && (ZCRYPT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PKEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (S390) && (ZCRYPT)",
            "restrict": ""
        }
    ],
    "CRYPTO_PAES_S390": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (S390) && (ZCRYPT) && (PKEY)",
            "restrict": ""
        }
    ],
    "S390_PRNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (S390)",
            "restrict": "( \"m\" )[!(y)]"
        }
    ],
    "CRYPTO_DEV_NIAGARA2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (SPARC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SL3516": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_GEMINI || COMPILE_TEST) && (HAS_IOMEM && PM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SL3516_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_SL3516) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HIFN_795X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI) && (! ARCH_DMA_ADDR_T_64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HIFN_795X_RNG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_HIFN_795X)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_COMMON": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_FSL_CAAM || CRYPTO_DEV_FSL_DPAA2_CAAM",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_CRYPTO_API_DESC": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_FSL_CAAM_CRYPTO_API || CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI || CRYPTO_DEV_FSL_DPAA2_CAAM",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_AHASH_API_DESC": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_FSL_CAAM_AHASH_API || CRYPTO_DEV_FSL_DPAA2_CAAM",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (FSL_SOC || ARCH_MXC || ARCH_LAYERSCAPE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_JR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_RINGSIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": "( 2 9 ) || ( 9 )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR ) && (CRYPTO_DEV_FSL_CAAM_INTC)",
            "restrict": "( 1 255 ) || ( 255 )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR ) && (CRYPTO_DEV_FSL_CAAM_INTC)",
            "restrict": "( 1 65535 ) || ( 2048 )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_CRYPTO_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_CRYPTO_API_QI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR ) && (FSL_DPAA && NET)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_AHASH_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_PKC_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_RNG_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_PRNG_API": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_FSL_CAAM_BLOB_GEN": [
        {
            "type": "bool",
            "rev_select": "TRUSTED_KEYS_CAAM",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_FSL_CAAM ) && ( CRYPTO_DEV_FSL_CAAM_JR )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_FSL_DPAA2_CAAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (FSL_MC_DPIO) && (NETDEVICES)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_TALITOS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (FSL_SOC)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_TALITOS1": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_TALITOS) && (PPC_8xx || PPC_82xx)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_TALITOS2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_TALITOS)",
            "restrict": "( y )[!(y) && (! PPC_8xx)]"
        }
    ],
    "CRYPTO_DEV_IXP4XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_IXP4XX && IXP4XX_QMGR && IXP4XX_NPE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_PPC4XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PPC && 4xx)",
            "restrict": ""
        }
    ],
    "HW_RANDOM_PPC4XX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_PPC4XX && HW_RANDOM = y)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_OMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_OMAP_SHAM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_OMAP ) && (ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_OMAP_AES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_OMAP ) && (ARCH_OMAP2 || ARCH_OMAP3 || ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_OMAP_DES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_OMAP ) && (ARCH_OMAP2PLUS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SAHARA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_MXC && OF)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_EXYNOS_RNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_EXYNOS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_S5P": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_S5PV210 || ARCH_EXYNOS || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_EXYNOS_HASH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_S5P) && (! CRYPTO_DEV_EXYNOS_RNG && CRYPTO_DEV_EXYNOS_RNG != m)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_NX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PPC64)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_NX_ENCRYPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_NX ) && (PPC_PSERIES && IBMVIO && ! CPU_LITTLE_ENDIAN)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_NX_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_NX )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_NX_COMPRESS_PSERIES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_NX ) && ( CRYPTO_DEV_NX_COMPRESS ) && (PPC_PSERIES && IBMVIO) && (PPC_VAS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_NX_COMPRESS_POWERNV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_NX ) && ( CRYPTO_DEV_NX_COMPRESS ) && (PPC_POWERNV) && (PPC_VAS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_UX500": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_U8500)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_UX500_CRYP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_UX500 ) && (CRYPTO_DEV_UX500)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_UX500_HASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_UX500 ) && (CRYPTO_DEV_UX500)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_UX500_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_UX500 ) && (CRYPTO_DEV_UX500_CRYP || CRYPTO_DEV_UX500_HASH)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_AUTHENC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_AT91 || COMPILE_TEST) && (CRYPTO_DEV_ATMEL_AES)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_AES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_TDES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_SHA": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_ATMEL_AES[CRYPTO_DEV_ATMEL_AUTHENC]",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_AT91 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_I2C": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_ATMEL_ECC || CRYPTO_DEV_ATMEL_SHA204A",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_ECC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (I2C)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ATMEL_SHA204A": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (I2C)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_CCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (( ( X86 && PCI ) || ( ARM64 && ( OF_ADDRESS || ACPI ) ) ) && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_CCP_DD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_CCP ) && (CPU_SUP_AMD || ARM64)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "CRYPTO_DEV_SP_CCP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_CCP ) && (CRYPTO_DEV_CCP_DD && DMADEVICES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_CCP_CRYPTO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_CCP ) && (CRYPTO_DEV_CCP_DD) && (CRYPTO_DEV_SP_CCP)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "CRYPTO_DEV_SP_PSP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_CCP ) && (CRYPTO_DEV_CCP_DD && X86_64)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRYPTO_DEV_CCP_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( CRYPTO_DEV_CCP ) && (CRYPTO_DEV_SP_CCP)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CRYPTO_DEV_MXS_DCP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (( ARCH_MXS || ARCH_MXC ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_QAT_DH895xCC || CRYPTO_DEV_QAT_C3XXX || CRYPTO_DEV_QAT_C62X || CRYPTO_DEV_QAT_4XXX || CRYPTO_DEV_QAT_DH895xCCVF || CRYPTO_DEV_QAT_C3XXXVF || CRYPTO_DEV_QAT_C62XVF",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_DH895xCC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_C3XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_C62X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_4XXX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_DH895xCCVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_C3XXXVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QAT_C62XVF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && ( ! CPU_BIG_ENDIAN || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_CPT": [
        {
            "type": "tristate",
            "rev_select": "CAVIUM_CPT",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CAVIUM_CPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_THUNDER || COMPILE_TEST) && (PCI_MSI && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_NITROX": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_NITROX_CNN55XX",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_NITROX_CNN55XX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI_MSI && 64BIT)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_MARVELL": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_MARVELL_CESA || CRYPTO_DEV_OCTEONTX_CPT || CRYPTO_DEV_OCTEONTX2_CPT",
            "dep": "( CRYPTO ) && ( CRYPTO_HW )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_MARVELL_CESA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PLAT_ORION || ARCH_MVEBU)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_OCTEONTX_CPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_THUNDER || COMPILE_TEST) && (PCI_MSI && 64BIT) && (CRYPTO_LIB_AES)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_OCTEONTX2_CPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_THUNDER2 || COMPILE_TEST) && (PCI_MSI && 64BIT) && (CRYPTO_LIB_AES) && (NET_VENDOR_MARVELL)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_CAVIUM_ZIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && 64BIT && ( ARM64 || COMPILE_TEST ))",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_QCOM || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_SKCIPHER": [
        {
            "type": "bool",
            "rev_select": "CRYPTO_DEV_QCE_ENABLE_ALL || CRYPTO_DEV_QCE_ENABLE_SKCIPHER",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_QCE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_SHA": [
        {
            "type": "bool",
            "rev_select": "CRYPTO_DEV_QCE_ENABLE_ALL || CRYPTO_DEV_QCE_ENABLE_SHA",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_QCE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_AEAD": [
        {
            "type": "bool",
            "rev_select": "CRYPTO_DEV_QCE_ENABLE_ALL || CRYPTO_DEV_QCE_ENABLE_AEAD",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_QCE)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_ENABLE_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( ( CRYPTO_DEV_QCE ) ) && ( CRYPTO_DEV_QCE_ENABLE_ALL &&  !CRYPTO_DEV_QCE_ENABLE_SKCIPHER &&  !CRYPTO_DEV_QCE_ENABLE_SHA &&  !CRYPTO_DEV_QCE_ENABLE_AEAD )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_ENABLE_SKCIPHER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( ( CRYPTO_DEV_QCE ) ) && ( CRYPTO_DEV_QCE_ENABLE_SKCIPHER &&  !CRYPTO_DEV_QCE_ENABLE_ALL &&  !CRYPTO_DEV_QCE_ENABLE_SHA &&  !CRYPTO_DEV_QCE_ENABLE_AEAD )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_ENABLE_SHA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( ( CRYPTO_DEV_QCE ) ) && ( CRYPTO_DEV_QCE_ENABLE_SHA &&  !CRYPTO_DEV_QCE_ENABLE_ALL &&  !CRYPTO_DEV_QCE_ENABLE_SKCIPHER &&  !CRYPTO_DEV_QCE_ENABLE_AEAD )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_ENABLE_AEAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && ( ( CRYPTO_DEV_QCE ) ) && ( CRYPTO_DEV_QCE_ENABLE_AEAD &&  !CRYPTO_DEV_QCE_ENABLE_ALL &&  !CRYPTO_DEV_QCE_ENABLE_SKCIPHER &&  !CRYPTO_DEV_QCE_ENABLE_SHA )",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_QCE_SW_MAX_LEN": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_QCE && CRYPTO_DEV_QCE_SKCIPHER)",
            "restrict": "( 512 )[!(y)]"
        }
    ],
    "CRYPTO_DEV_QCOM_RNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_QCOM || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_VMX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PPC64 && VSX)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_VMX_ENCRYPT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_VMX)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "CRYPTO_DEV_IMGTEC_HASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (MIPS || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ROCKCHIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (OF && ARCH_ROCKCHIP)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ZYNQMP_AES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ZYNQMP_FIRMWARE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ZYNQMP_SHA3": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ZYNQMP_FIRMWARE || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_CHELSIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CHELSIO_T4)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_VIRTIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (VIRTIO)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_BCM_SPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_BCM_IPROC) && (MAILBOX)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "CRYPTO_DEV_STM32_CRC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_STM32)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_STM32_HASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_STM32) && (HAS_DMA)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_STM32_CRYP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_STM32)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SAFEXCEL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (( OF || PCI || COMPILE_TEST ) && HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_ARTPEC6": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARM && ( ARCH_ARTPEC || COMPILE_TEST )) && (OF)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_CCREE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO && CRYPTO_HW && OF && HAS_DMA)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CRYPTO_DEV_HISI_SEC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARM64 || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HISI_SEC2": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && PCI_MSI) && (UACCE || UACCE = n) && (ARM64 || ( COMPILE_TEST && 64BIT )) && (ACPI)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HISI_QM": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_DEV_HISI_SEC2 || CRYPTO_DEV_HISI_ZIP || CRYPTO_DEV_HISI_HPRE",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARM64 || COMPILE_TEST) && (PCI && PCI_MSI) && (UACCE || UACCE = n) && (ACPI)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HISI_ZIP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && PCI_MSI) && (ARM64 || ( COMPILE_TEST && 64BIT )) && (! CPU_BIG_ENDIAN || COMPILE_TEST) && (UACCE || UACCE = n) && (ACPI)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HISI_HPRE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (PCI && PCI_MSI) && (UACCE || UACCE = n) && (ARM64 || ( COMPILE_TEST && 64BIT )) && (ACPI)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_HISI_TRNG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARM64 && ACPI)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_AMLOGIC_GXL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (HAS_IOMEM)",
            "restrict": "( m )[!(y) && (ARCH_MESON)]"
        }
    ],
    "CRYPTO_DEV_AMLOGIC_GXL_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_AMLOGIC_GXL) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_SA2UL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_K3 || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_KEEMBAY_OCS_AES_SM4": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (HAS_IOMEM) && (ARCH_KEEMBAY || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_KEEMBAY_OCS_AES_SM4_ECB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_KEEMBAY_OCS_AES_SM4)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_KEEMBAY_OCS_AES_SM4_CTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_KEEMBAY_OCS_AES_SM4)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_KEEMBAY_OCS_ECC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (ARCH_KEEMBAY || COMPILE_TEST) && (OF || COMPILE_TEST) && (HAS_IOMEM)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_KEEMBAY_OCS_HCU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (HAS_IOMEM) && (ARCH_KEEMBAY || COMPILE_TEST) && (OF || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "CRYPTO_DEV_KEEMBAY_OCS_HCU_HMAC_SHA224": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( CRYPTO_HW ) && (CRYPTO_DEV_KEEMBAY_OCS_HCU)",
            "restrict": ""
        }
    ],
    "ASYMMETRIC_KEY_TYPE": [
        {
            "type": "bool",
            "rev_select": "SYSTEM_DATA_VERIFICATION || INTEGRITY_ASYMMETRIC_KEYS",
            "dep": "( CRYPTO ) && (KEYS)",
            "restrict": ""
        }
    ],
    "ASYMMETRIC_PUBLIC_KEY_SUBTYPE": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || INTEGRITY_ASYMMETRIC_KEYS",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE )",
            "restrict": ""
        }
    ],
    "X509_CERTIFICATE_PARSER": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || INTEGRITY_ASYMMETRIC_KEYS",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE ) && (ASYMMETRIC_PUBLIC_KEY_SUBTYPE)",
            "restrict": ""
        }
    ],
    "PKCS8_PRIVATE_KEY_PARSER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE ) && (ASYMMETRIC_PUBLIC_KEY_SUBTYPE)",
            "restrict": ""
        }
    ],
    "PKCS7_MESSAGE_PARSER": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || IMA_APPRAISE_MODSIG",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE ) && (X509_CERTIFICATE_PARSER)",
            "restrict": ""
        }
    ],
    "PKCS7_TEST_KEY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE ) && (SYSTEM_DATA_VERIFICATION)",
            "restrict": ""
        }
    ],
    "SIGNED_PE_FILE_VERIFICATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE ) && (PKCS7_MESSAGE_PARSER = y) && (SYSTEM_DATA_VERIFICATION)",
            "restrict": ""
        }
    ],
    "FIPS_SIGNATURE_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( ASYMMETRIC_KEY_TYPE )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_KEY": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( CRYPTO ) && (MODULE_SIG || ( IMA_APPRAISE_MODSIG && MODULES ))",
            "restrict": "( \"certs/signing_key.pem\" )[!(y)]"
        }
    ],
    "MODULE_SIG_KEY_TYPE_RSA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( ( MODULE_SIG || ( IMA_APPRAISE_MODSIG && MODULES ) ) ) && ( MODULE_SIG_KEY_TYPE_RSA &&  !MODULE_SIG_KEY_TYPE_ECDSA )",
            "restrict": ""
        }
    ],
    "MODULE_SIG_KEY_TYPE_ECDSA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && ( ( MODULE_SIG || ( IMA_APPRAISE_MODSIG && MODULES ) ) ) && ( MODULE_SIG_KEY_TYPE_ECDSA &&  !MODULE_SIG_KEY_TYPE_RSA )",
            "restrict": ""
        }
    ],
    "SYSTEM_TRUSTED_KEYRING": [
        {
            "type": "bool",
            "rev_select": "SYSTEM_DATA_VERIFICATION || KEXEC_BZIMAGE_VERIFY_SIG",
            "dep": "( CRYPTO ) && (KEYS) && (ASYMMETRIC_KEY_TYPE) && (X509_CERTIFICATE_PARSER = y)",
            "restrict": ""
        }
    ],
    "SYSTEM_TRUSTED_KEYS": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_TRUSTED_KEYRING)",
            "restrict": ""
        }
    ],
    "SYSTEM_EXTRA_CERTIFICATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_TRUSTED_KEYRING)",
            "restrict": ""
        }
    ],
    "SYSTEM_EXTRA_CERTIFICATE_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_EXTRA_CERTIFICATE)",
            "restrict": "( 4096 )[!(y)]"
        }
    ],
    "SECONDARY_TRUSTED_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_TRUSTED_KEYRING)",
            "restrict": ""
        }
    ],
    "SYSTEM_BLACKLIST_KEYRING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (KEYS)",
            "restrict": ""
        }
    ],
    "SYSTEM_BLACKLIST_HASH_LIST": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_BLACKLIST_KEYRING)",
            "restrict": ""
        }
    ],
    "SYSTEM_REVOCATION_LIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_BLACKLIST_KEYRING) && (PKCS7_MESSAGE_PARSER = y)",
            "restrict": ""
        }
    ],
    "SYSTEM_REVOCATION_KEYS": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_REVOCATION_LIST)",
            "restrict": ""
        }
    ],
    "SYSTEM_BLACKLIST_AUTH_UPDATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CRYPTO ) && (SYSTEM_BLACKLIST_KEYRING) && (SYSTEM_DATA_VERIFICATION)",
            "restrict": ""
        }
    ],
    "BINARY_PRINTF": [
        {
            "type": "bool",
            "rev_select": "BPF_SYSCALL || TRACING",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RAID6_PQ": [
        {
            "type": "tristate",
            "rev_select": "MD_RAID456 || BTRFS_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "RAID6_PQ_BENCHMARK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(RAID6_PQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LINEAR_RANGES": [
        {
            "type": "tristate",
            "rev_select": "CHARGER_MT6360 || CHARGER_BD99954 || REGULATOR || LINEAR_RANGES_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "PACKING": [
        {
            "type": "bool",
            "rev_select": "NET_DSA_TAG_OCELOT || NET_DSA_TAG_SJA1105 || NET_DSA_SJA1105 || LAN966X_SWITCH || MSCC_OCELOT_SWITCH_LIB",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BITREVERSE": [
        {
            "type": "tristate",
            "rev_select": "BT_HCIUART_BCSP || MTD_DOCG3 || AMD_XGBE || ETHOC || DWC_XLGMAC || SKFP || USB_NET_SMSC75XX || USB_NET_SMSC95XX || SLIC_DS26522 || MISDN_DSP || MISDN_HDLC || JOYSTICK_ZHENHUA || CARDMAN_4000 || SENSORS_SHT15 || IR_JVC_DECODER || IR_MCE_KBD_DECODER || IR_NEC_DECODER || IR_RC5_DECODER || IR_RC6_DECODER || IR_SANYO_DECODER || IR_SHARP_DECODER || IR_SONY_DECODER || IR_XMP_DECODER || IR_WINBOND_CIR || IR_IMG_NEC || VIDEO_CX231XX_RC || VIDEO_EM28XX_RC || VIDEO_SOLO6X10 || MEDIA_TUNER_R820T || IMX_IPUV3_CORE || FB_TGA || FB_NVIDIA || FB_RIVA || SND_ICE1712 || SND_USB_AUDIO || SND_USB_6FIRE || SND_SOC_FSL_SPDIF || RTC_DRV_S35390A || AD8366 || FPGA_MGR_ALTERA_PS_SPI || CRYPTO_DEV_ATMEL_I2C || CRC32 || ZLIB_DEFLATE",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_BITREVERSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_STRNCPY_FROM_USER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_STRNLEN_USER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_STRNCPY_FROM_USER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! ARCH_HAS_STRNCPY_FROM_USER )[!(y)]"
        }
    ],
    "GENERIC_STRNLEN_USER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! ARCH_HAS_STRNLEN_USER )[!(y)]"
        }
    ],
    "GENERIC_NET_UTILS": [
        {
            "type": "bool",
            "rev_select": "NET || BCM47XX_SPROM || PCH_PHUB || VDPA_SIM_NET",
            "dep": "",
            "restrict": ""
        }
    ],
    "CORDIC": [
        {
            "type": "tristate",
            "rev_select": "B43 || BRCMSMAC",
            "dep": "",
            "restrict": ""
        }
    ],
    "PRIME_NUMBERS": [
        {
            "type": "tristate",
            "rev_select": "DRM_DEBUG_SELFTEST || DRM_I915_SELFTEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "RATIONAL": [
        {
            "type": "tristate",
            "rev_select": "SERIAL_8250_LPSS || SERIAL_8250_MID || SERIAL_IMX || VIDEO_DEV || DRM_MSM_DP || SND_SOC_ROCKCHIP_PDM || COMMON_CLK || COMMON_CLK_QCOM",
            "dep": "",
            "restrict": ""
        }
    ],
    "NO_GENERIC_PCI_IOPORT_MAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_PCI_IOMAP": [
        {
            "type": "bool",
            "rev_select": "GENERIC_IOMAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IOMAP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "STMP_DEVICE": [
        {
            "type": "bool",
            "rev_select": "I2C_MXS || SPI_MXS || MFD_MXS_LRADC || USB_MXS_PHY || RTC_DRV_STMP || MXS_DMA || MXS_TIMER || PWM_MXS || IRQ_MXS || CRYPTO_DEV_MXS_DCP",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USE_CMPXCHG_LOCKREF": [
        {
            "type": "bool",
            "rev_select": "X86_64",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_FAST_MULTIPLIER": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_USE_SYM_ANNOTATIONS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "INDIRECT_PIO": [
        {
            "type": "bool",
            "rev_select": "HISILICON_LPC[ARM64]",
            "dep": "(ARM64)",
            "restrict": ""
        }
    ],
    "INDIRECT_IOMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "INDIRECT_IOMEM_FALLBACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(INDIRECT_IOMEM)",
            "restrict": ""
        }
    ],
    "TRACE_MMIO_ACCESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TRACING && ARCH_HAVE_TRACE_MMIO_ACCESS)",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_AES": [
        {
            "type": "tristate",
            "rev_select": "BT || CHELSIO_TLS_DEVICE || MICROSEMI_PHY[MACSEC] || CRYPTO_AES || CRYPTO_AES_TI || CRYPTO_AES_NI_INTEL || CRYPTO_DEV_PADLOCK_AES || CRYPTO_DEV_PPC4XX || CRYPTO_DEV_CCP_CRYPTO || CRYPTO_DEV_QAT || CRYPTO_DEV_MARVELL_CESA || CRYPTO_DEV_CHELSIO || CRYPTO_DEV_SAFEXCEL",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_ARC4": [
        {
            "type": "tristate",
            "rev_select": "LIB80211_CRYPT_WEP || LIB80211_CRYPT_TKIP || MAC80211 || PPP_MPPE || RTL8192U || RTLLIB_CRYPTO_TKIP || RTLLIB_CRYPTO_WEP || RTL8723BS || CRYPTO_ARC4",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_ARCH_HAVE_LIB_BLAKE2S": [
        {
            "type": "bool",
            "rev_select": "CRYPTO_BLAKE2S_X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_BLAKE2S_GENERIC": [
        {
            "type": "bool",
            "rev_select": "CRYPTO_BLAKE2S_X86",
            "dep": "",
            "restrict": "( ! CRYPTO_ARCH_HAVE_LIB_BLAKE2S )[!(y)]"
        }
    ],
    "CRYPTO_ARCH_HAVE_LIB_CHACHA": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CHACHA20_X86_64 || CRYPTO_CHACHA_MIPS || CRYPTO_CHACHA_S390",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_CHACHA_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CHACHA20 || CRYPTO_CHACHA20_X86_64 || CRYPTO_CHACHA_S390 || CRYPTO_LIB_CHACHA[CRYPTO_ARCH_HAVE_LIB_CHACHA = n]",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_CHACHA": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_LIB_CHACHA20POLY1305",
            "dep": "(CRYPTO) && (CRYPTO_ARCH_HAVE_LIB_CHACHA || ! CRYPTO_ARCH_HAVE_LIB_CHACHA)",
            "restrict": ""
        }
    ],
    "CRYPTO_ARCH_HAVE_LIB_CURVE25519": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CURVE25519_X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_CURVE25519_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_CURVE25519 || CRYPTO_CURVE25519_X86 || CRYPTO_LIB_CURVE25519[CRYPTO_ARCH_HAVE_LIB_CURVE25519 = n]",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_CURVE25519": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD",
            "dep": "(CRYPTO_ARCH_HAVE_LIB_CURVE25519 || ! CRYPTO_ARCH_HAVE_LIB_CURVE25519)",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_DES": [
        {
            "type": "tristate",
            "rev_select": "SMB_SERVER || CRYPTO_DES || CRYPTO_DES_SPARC64 || CRYPTO_DES3_EDE_X86_64 || CRYPTO_DES_S390 || CRYPTO_DEV_SUN4I_SS || CRYPTO_DEV_NIAGARA2 || CRYPTO_DEV_HIFN_795X || CRYPTO_DEV_FSL_CAAM_CRYPTO_API || CRYPTO_DEV_TALITOS || CRYPTO_DEV_IXP4XX || CRYPTO_DEV_OMAP_DES || CRYPTO_DEV_UX500_CRYP || CRYPTO_DEV_ATMEL_TDES || CRYPTO_DEV_NITROX || CRYPTO_DEV_MARVELL_CESA || CRYPTO_DEV_QCE_SKCIPHER || CRYPTO_DEV_QCE_AEAD || CRYPTO_DEV_ROCKCHIP || CRYPTO_DEV_BCM_SPU || CRYPTO_DEV_STM32_CRYP || CRYPTO_DEV_SAFEXCEL || CRYPTO_DEV_CCREE || CRYPTO_DEV_HISI_SEC || CRYPTO_DEV_HISI_SEC2",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_POLY1305_RSIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 2 )[!(y) && (MIPS)] || ( 11 )[!(y) && (X86_64)] || ( 9 )[!(y) && (ARM || ARM64)] || ( 1 )[!(y)]"
        }
    ],
    "CRYPTO_ARCH_HAVE_LIB_POLY1305": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_POLY1305_X86_64 || CRYPTO_POLY1305_MIPS",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_POLY1305_GENERIC": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_NHPOLY1305 || CRYPTO_ADIANTUM || CRYPTO_POLY1305 || CRYPTO_POLY1305_X86_64 || CRYPTO_LIB_POLY1305[CRYPTO_ARCH_HAVE_LIB_POLY1305 = n]",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_POLY1305": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_LIB_CHACHA20POLY1305",
            "dep": "(CRYPTO_ARCH_HAVE_LIB_POLY1305 || ! CRYPTO_ARCH_HAVE_LIB_POLY1305)",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_CHACHA20POLY1305": [
        {
            "type": "tristate",
            "rev_select": "WIREGUARD",
            "dep": "(CRYPTO_ARCH_HAVE_LIB_CHACHA || ! CRYPTO_ARCH_HAVE_LIB_CHACHA) && (CRYPTO_ARCH_HAVE_LIB_POLY1305 || ! CRYPTO_ARCH_HAVE_LIB_POLY1305) && (CRYPTO)",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_SHA1": [
        {
            "type": "tristate",
            "rev_select": "BPF || IPV6 || CRYPTO_SHA1",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRYPTO_LIB_SHA256": [
        {
            "type": "tristate",
            "rev_select": "MPTCP || EFI_EMBEDDED_FIRMWARE || SND_SOC_CROS_EC_CODEC || FS_ENCRYPTION || CRYPTO_SHA256",
            "dep": "",
            "restrict": ""
        }
    ],
    "LIB_MEMNEQ": [
        {
            "type": "bool",
            "rev_select": "CRYPTO || CRYPTO_LIB_CURVE25519",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC_CCITT": [
        {
            "type": "tristate",
            "rev_select": "NETLABEL[IPV6] || MAC802154 || BAYCOM_SER_FDX || BAYCOM_SER_HDX || BAYCOM_PAR || BAYCOM_EPP || CAIF || NFC_DIGITAL || NFC_NCI_SPI || NFC_SHDLC || NFC_FDP || NFC_PN544 || NFC_MICROREAD || NFC_ST21NFCA || VIA_VELOCITY || MCTP_SERIAL || PPP_ASYNC || P54_COMMON || RT2800PCI || RT2800USB || MISDN_HDLC || TOUCHSCREEN_ILI210X || TCG_TIS_I2C || RAVE_SP_CORE || DRM_SUN6I_DSI || SURFACE_AGGREGATOR",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC16": [
        {
            "type": "tristate",
            "rev_select": "BATMAN_ADV_BLA || MKISS || BT || LAN743X || SGI_IOC3_ETH || CAN_ETAS_ES58X || USB_NET_SMSC75XX || USB_NET_SMSC95XX || KEYBOARD_APPLESPI || HMC_DRV || PTP_1588_CLOCK_OCP || W1_SLAVE_DS2406 || W1_SLAVE_DS2423 || W1_SLAVE_DS2433_CRC || W1_SLAVE_DS250X || W1_SLAVE_DS28E04 || W1_SLAVE_DS28E17 || SENSORS_AQUACOMPUTER_D5NEXT || SCD30_SERIAL || EXT4_FS || UBIFS_FS || CRYPTO_DEV_ATMEL_ECC || CRYPTO_DEV_ATMEL_SHA204A",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC_T10DIF": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_INTEGRITY_T10 || SCSI_LPFC || SCSI_EFCT || SCSI_DEBUG || TARGET_CORE",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC64_ROCKSOFT": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_INTEGRITY_T10",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC_ITU_T": [
        {
            "type": "tristate",
            "rev_select": "NFC_DIGITAL || GENWQE || FIREWIRE || WILC1000_SPI || RT61PCI || RT73USB || MOUSE_CYAPA || TOUCHSCREEN_SIS_I2C || MMC_SPI || UDF_FS || OMFS_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC32": [
        {
            "type": "tristate",
            "rev_select": "HIBERNATION || ACPI || EFI_PARTITION || BT_BNEP || CFG80211 || MAC80211 || PCI_EPF_TEST || PCMCIA || MTD_BCM63XX_PARTS || MTD_PARSER_IMAGETAG || MTD_UBI || OF_FLATTREE || PCI_ENDPOINT_TEST || HABANA_AI || LIBFC || DM_ZONED || TUN || NET_DSA_SJA1105 || TYPHOON || ADAPTEC_STARFIRE || GRETH || ET131X || SLICOSS || SUN4I_EMAC || A2065 || AMD8111_ETH || PCNET32 || DECLANCE || HPLANCE || MIPS_AU1X00_ENET || MVME147_NET || SUNLANCE || AMD_XGBE || MACE || BMAC || MACMACE || ARC_EMAC_CORE || ATL2 || ATL1 || ATL1E || ATL1C || ALX || BNX2 || MACB || NET_CALXEDA_XGMAC || CHELSIO_T1 || GEMINI_ETHERNET || DM9000 || DM9051 || DE2104X || TULIP || WINBOND_840 || DM9102 || ULI526X || DL2K || SUNDANCE || FTGMAC100 || FEC || FEC_MPC52xx || FSL_FMAN || GIANFAR || PCMCIA_FMVJ18X || IBM_EMAC || E1000E || JME || KORINA || SKGE || SKY2 || MLX5_SW_STEERING || KS8851 || KS8851_MLL || KSZ884X_PCI || ENC28J60 || LAN743X || MYRI10GE || FEALNX || NATSEMI || NFP || AX88796 || HYDRA || ARM_ETHERH || MAC8390 || MCF8390 || NE2000 || NE2K_PCI || APNE || PCMCIA_PCNET || STNIC || ULTRA || WD80x3 || ZORRO8390 || LPC_ENET || ETHOC || YELLOWFIN || QED || QCOM_EMAC || R6040 || ATP || 8139CP || 8139TOO || R8169 || SH_ETH || RAVB || ROCKER || SXGBE_ETH || SGI_IOC3_ETH || SC92031 || SIS900 || SIS190 || SFC || SFC_FALCON || SFC_SIENA || SMC9194 || SMC91X || PCMCIA_SMC91C92 || EPIC100 || SMC911X || SMSC911X || SMSC9420 || STMMAC_ETH || DWMAC_DWC_QOS_ETH || HAPPYMEAL || SUNBMAC || SUNQE || SUNGEM || CASSINI || NIU || DWC_XLGMAC || VIA_RHINE || VIA_VELOCITY || CAN_KVASER_PCIEFD || USB_CATC || USB_RTL8152 || USB_LAN78XX || USB_NET_AX8817X || USB_NET_AX88179_178A || USB_NET_DM9601 || USB_NET_SR9700 || USB_NET_SR9800 || USB_NET_SMSC75XX || USB_NET_SMSC95XX || USB_NET_ZAURUS || USB_NET_AQC111 || ADM8211 || CARL9170 || WIL6210 || ATH10K || ATMEL || PCMCIA_ATMEL || LIBIPW || HOSTAP || P54_USB || QTNFMAC_PCIE || XILLYBUS || XILLYUSB || DP83640_PHY || DVB_CORE || DVB_TTUSB_DEC || VIDEO_SAA7134 || VIDEO_S5K4ECGX || VIDEO_SAA6752HS || DRM_I915 || DRM_I915_SELFTEST || DRM_VKMS || DRM_QXL || DRM_PANEL_OLIMEX_LCD_OLINUXINO || FRAMEBUFFER_CONSOLE || STI_CONSOLE || SND_SOC_SIGMADSP || HID_PLAYSTATION || HID_SONY || USB_ATM || USB_CONFIGFS_NCM || USB_CONFIGFS_EEM || USB_ETH || USB_G_NCM || INFINIBAND_HFI1 || PRISM2_USB || RTL8192U || RTLLIB || REMOTEPROC || QUICC_ENGINE || SAMSUNG_PM_CHECK || USB4 || JBD2 || REISERFS_FS || JFS_FS || GFS2_FS || OCFS2_FS || NILFS2_FS || ZONEFS_FS || JFFS2_FS || UBIFS_FS || NFS_DEBUG || SMB_SERVER || CRYPTO_CRC32C || CRYPTO_CRC32C_VPMSUM || CRYPTO_CRC32C_SPARC64 || CRYPTO_CRC32 || CRYPTO_CRC32_PCLMUL || CRYPTO_CRC32_S390 || CRYPTO_DEV_STM32_CRC || 842_COMPRESS || 842_DECOMPRESS || XZ_DEC || DEBUG_KMEMLEAK",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CRC32_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(CRC32)",
            "restrict": ""
        }
    ],
    "CRC32_SLICEBY8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CRC32 ) ) && ( CRC32_SLICEBY8 &&  !CRC32_SLICEBY4 &&  !CRC32_SARWATE &&  !CRC32_BIT )",
            "restrict": ""
        }
    ],
    "CRC32_SLICEBY4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CRC32 ) ) && ( CRC32_SLICEBY4 &&  !CRC32_SLICEBY8 &&  !CRC32_SARWATE &&  !CRC32_BIT )",
            "restrict": ""
        }
    ],
    "CRC32_SARWATE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CRC32 ) ) && ( CRC32_SARWATE &&  !CRC32_SLICEBY8 &&  !CRC32_SLICEBY4 &&  !CRC32_BIT )",
            "restrict": ""
        }
    ],
    "CRC32_BIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( CRC32 ) ) && ( CRC32_BIT &&  !CRC32_SLICEBY8 &&  !CRC32_SLICEBY4 &&  !CRC32_SARWATE )",
            "restrict": ""
        }
    ],
    "CRC64": [
        {
            "type": "tristate",
            "rev_select": "BCACHE || CRC64_ROCKSOFT",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC4": [
        {
            "type": "tristate",
            "rev_select": "FSI || FSI_MASTER_GPIO",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC7": [
        {
            "type": "tristate",
            "rev_select": "WILC1000_SPI || WL1251 || WLCORE_SPI || MMC_SPI",
            "dep": "",
            "restrict": ""
        }
    ],
    "LIBCRC32C": [
        {
            "type": "tristate",
            "rev_select": "NF_CT_PROTO_SCTP || NF_TABLES || IP_VS_PROTO_SCTP || IP_SCTP || NET_ACT_CSUM || BATMAN_ADV || OPENVSWITCH || CEPH_LIB || BLK_DEV_DRBD || BLK_DEV_RBD || MD_RAID456 || DM_PERSISTENT_DATA || BNX2X || BNXT || LIQUIDIO || XFS_FS || GFS2_FS || BTRFS_FS || EROFS_FS || CEPH_FS",
            "dep": "",
            "restrict": ""
        }
    ],
    "CRC8": [
        {
            "type": "tristate",
            "rev_select": "PCIE_QCOM || QED || GPIO_MAX3191X || SENSORS_ADM1266 || SENSORS_SHT3x || SENSORS_SHT4x || MFD_MT6360 || SCA3300 || AD7280 || AD74413R || SCD30_I2C || SCD4X || SENSIRION_SGP30 || SENSIRION_SGP40 || SPS30_I2C || ICP10100 || CRYPTO_DEV_QAT",
            "dep": "",
            "restrict": ""
        }
    ],
    "XXHASH": [
        {
            "type": "tristate",
            "rev_select": "KSM || CRYPTO_XXHASH || ZSTD_COMPRESS || ZSTD_DECOMPRESS",
            "dep": "",
            "restrict": ""
        }
    ],
    "AUDIT_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(AUDIT && ! AUDIT_ARCH)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "AUDIT_ARCH_COMPAT_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "AUDIT_COMPAT_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(AUDIT_GENERIC && AUDIT_ARCH_COMPAT_GENERIC && COMPAT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RANDOM32_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "842_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_842",
            "dep": "",
            "restrict": ""
        }
    ],
    "842_DECOMPRESS": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_842 || CRYPTO_DEV_NX_COMPRESS",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZLIB_INFLATE": [
        {
            "type": "tristate",
            "rev_select": "MODULE_DECOMPRESS[MODULE_COMPRESS_GZIP] || BINFMT_ZFLAT || BNX2X || QED || PPP_DEFLATE || BTRFS_FS || ZISOFS || JFFS2_ZLIB || CRAMFS || SQUASHFS_ZLIB || SECURITY_APPARMOR_EXPORT_BINARY || CRYPTO_DEFLATE || DECOMPRESS_GZIP",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZLIB_DEFLATE": [
        {
            "type": "tristate",
            "rev_select": "CHELSIO_T4 || PPP_DEFLATE || DRM_I915_COMPRESS_ERROR || BTRFS_FS || JFFS2_ZLIB || SECURITY_APPARMOR_EXPORT_BINARY || CRYPTO_DEFLATE",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZLIB_DFLTCC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(S390)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LZO_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "HIBERNATION || REGCACHE_COMPRESSED || BTRFS_FS || F2FS_FS[F2FS_FS_LZO] || JFFS2_LZO || CRYPTO_LZO",
            "dep": "",
            "restrict": ""
        }
    ],
    "LZO_DECOMPRESS": [
        {
            "type": "tristate",
            "rev_select": "HIBERNATION || REGCACHE_COMPRESSED || BTRFS_FS || F2FS_FS[F2FS_FS_LZO] || JFFS2_LZO || SQUASHFS_LZO || CRYPTO_LZO || DECOMPRESS_LZO",
            "dep": "",
            "restrict": ""
        }
    ],
    "LZ4_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "DRM_GUD || F2FS_FS[F2FS_FS_LZ4] || CRYPTO_LZ4",
            "dep": "",
            "restrict": ""
        }
    ],
    "LZ4HC_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "F2FS_FS[F2FS_FS_LZ4HC] || CRYPTO_LZ4HC",
            "dep": "",
            "restrict": ""
        }
    ],
    "LZ4_DECOMPRESS": [
        {
            "type": "tristate",
            "rev_select": "F2FS_FS[F2FS_FS_LZ4] || SQUASHFS_LZ4 || EROFS_FS_ZIP || CRYPTO_LZ4 || CRYPTO_LZ4HC || DECOMPRESS_LZ4",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZSTD_COMPRESS": [
        {
            "type": "tristate",
            "rev_select": "BTRFS_FS || F2FS_FS[F2FS_FS_ZSTD] || CRYPTO_ZSTD",
            "dep": "",
            "restrict": ""
        }
    ],
    "ZSTD_DECOMPRESS": [
        {
            "type": "tristate",
            "rev_select": "FW_LOADER_COMPRESS_ZSTD || BTRFS_FS || F2FS_FS[F2FS_FS_ZSTD] || SQUASHFS_ZSTD || CRYPTO_ZSTD || DECOMPRESS_ZSTD",
            "dep": "",
            "restrict": ""
        }
    ],
    "XZ_DEC": [
        {
            "type": "tristate",
            "rev_select": "MODULE_DECOMPRESS[MODULE_COMPRESS_XZ] || FW_LOADER_COMPRESS_XZ || SQUASHFS_XZ || EROFS_FS_ZIP_LZMA || DECOMPRESS_XZ",
            "dep": "",
            "restrict": ""
        }
    ],
    "XZ_DEC_X86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( XZ_DEC )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "XZ_DEC_POWERPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( XZ_DEC )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "XZ_DEC_IA64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( XZ_DEC )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "XZ_DEC_ARM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( XZ_DEC )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "XZ_DEC_ARMTHUMB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( XZ_DEC )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "XZ_DEC_SPARC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( XZ_DEC )",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "XZ_DEC_MICROLZMA": [
        {
            "type": "bool",
            "rev_select": "EROFS_FS_ZIP_LZMA",
            "dep": "( XZ_DEC )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XZ_DEC_BCJ": [
        {
            "type": "bool",
            "rev_select": "XZ_DEC_X86 || XZ_DEC_POWERPC || XZ_DEC_IA64 || XZ_DEC_ARM || XZ_DEC_ARMTHUMB || XZ_DEC_SPARC",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "XZ_DEC_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(XZ_DEC)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DECOMPRESS_GZIP": [
        {
            "type": "tristate",
            "rev_select": "RD_GZIP",
            "dep": "",
            "restrict": ""
        }
    ],
    "DECOMPRESS_BZIP2": [
        {
            "type": "tristate",
            "rev_select": "RD_BZIP2",
            "dep": "",
            "restrict": ""
        }
    ],
    "DECOMPRESS_LZMA": [
        {
            "type": "tristate",
            "rev_select": "RD_LZMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "DECOMPRESS_XZ": [
        {
            "type": "tristate",
            "rev_select": "RD_XZ",
            "dep": "",
            "restrict": ""
        }
    ],
    "DECOMPRESS_LZO": [
        {
            "type": "tristate",
            "rev_select": "RD_LZO",
            "dep": "",
            "restrict": ""
        }
    ],
    "DECOMPRESS_LZ4": [
        {
            "type": "tristate",
            "rev_select": "RD_LZ4",
            "dep": "",
            "restrict": ""
        }
    ],
    "DECOMPRESS_ZSTD": [
        {
            "type": "tristate",
            "rev_select": "RD_ZSTD",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_ALLOCATOR": [
        {
            "type": "bool",
            "rev_select": "X86_MCE || ACPI_APEI_GHES || PCI_P2PDMA || MTD_NAND_ATMEL || SRAM || HABANA_AI || CAIF_VIRTIO || FSL_FMAN || MVNETA_BM || MLXSW_SPECTRUM || TI_DAVINCI_EMAC || VIDEO_CODA || IMX_IPUV3_CORE[DRM] || DRM_VBOXVIDEO || USB || INFINIBAND_CXGB4 || INFINIBAND_IRDMA || MMP_TDMA || UIO_PRUSS || FSL_PAMU || MESON_MX_AO_ARC_REMOTEPROC || FSL_DPAA || QUICC_ENGINE || FSI_MASTER_AST_CF || TEE || DMA_COHERENT_POOL",
            "dep": "",
            "restrict": ""
        }
    ],
    "REED_SOLOMON": [
        {
            "type": "tristate",
            "rev_select": "MTD_NAND_CAFE || MTD_NAND_DISKONCHIP || DM_VERITY_FEC || PSTORE_RAM || REED_SOLOMON_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "REED_SOLOMON_ENC8": [
        {
            "type": "bool",
            "rev_select": "PSTORE_RAM",
            "dep": "",
            "restrict": ""
        }
    ],
    "REED_SOLOMON_DEC8": [
        {
            "type": "bool",
            "rev_select": "DM_VERITY_FEC || PSTORE_RAM",
            "dep": "",
            "restrict": ""
        }
    ],
    "REED_SOLOMON_ENC16": [
        {
            "type": "bool",
            "rev_select": "REED_SOLOMON_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "REED_SOLOMON_DEC16": [
        {
            "type": "bool",
            "rev_select": "MTD_NAND_CAFE || MTD_NAND_DISKONCHIP || REED_SOLOMON_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "BCH": [
        {
            "type": "tristate",
            "rev_select": "MTD_DOCG3 || MTD_NAND_OMAP_BCH || MTD_NAND_ARASAN || MTD_NAND_ECC_SW_BCH",
            "dep": "",
            "restrict": ""
        }
    ],
    "BCH_CONST_PARAMS": [
        {
            "type": "bool",
            "rev_select": "MTD_DOCG3[! MTD_NAND_ECC_SW_BCH]",
            "dep": "",
            "restrict": ""
        }
    ],
    "TEXTSEARCH": [
        {
            "type": "bool",
            "rev_select": "NF_CONNTRACK_AMANDA || NETFILTER_XT_MATCH_STRING || NET_EMATCH_TEXT",
            "dep": "",
            "restrict": ""
        }
    ],
    "TEXTSEARCH_KMP": [
        {
            "type": "tristate",
            "rev_select": "NF_CONNTRACK_AMANDA || NETFILTER_XT_MATCH_STRING || NET_EMATCH_TEXT",
            "dep": "",
            "restrict": ""
        }
    ],
    "TEXTSEARCH_BM": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_MATCH_STRING || NET_EMATCH_TEXT",
            "dep": "",
            "restrict": ""
        }
    ],
    "TEXTSEARCH_FSM": [
        {
            "type": "tristate",
            "rev_select": "NETFILTER_XT_MATCH_STRING || NET_EMATCH_TEXT",
            "dep": "",
            "restrict": ""
        }
    ],
    "BTREE": [
        {
            "type": "bool",
            "rev_select": "SCSI_QLA_FC || TCM_QLA2XXX || VIDEO_BCM2835",
            "dep": "",
            "restrict": ""
        }
    ],
    "INTERVAL_TREE": [
        {
            "type": "bool",
            "rev_select": "KVM || MMU_NOTIFIER || DRM_RADEON || DRM_AMDGPU || DRM_I915 || INFINIBAND_ON_DEMAND_PAGING || VIRTIO_IOMMU || FUSE_DAX || INTERVAL_TREE_TEST",
            "dep": "",
            "restrict": ""
        }
    ],
    "XARRAY_MULTI": [
        {
            "type": "bool",
            "rev_select": "X86_SGX || TRANSPARENT_HUGEPAGE || ZONE_DEVICE || SND_CTL_FAST_LOOKUP",
            "dep": "",
            "restrict": ""
        }
    ],
    "ASSOCIATIVE_ARRAY": [
        {
            "type": "bool",
            "rev_select": "KEYS",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAS_IOMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! NO_IOMEM)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAS_IOPORT_MAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAS_IOMEM && ! NO_IOPORT_MAP)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "NO_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAS_DMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! NO_DMA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMA_OPS": [
        {
            "type": "bool",
            "rev_select": "GART_IOMMU || VDPA_SIM || VDPA_USER || SWIOTLB_XEN || XEN_GRANT_DMA_OPS || IOMMU_DMA || INTEL_IOMMU",
            "dep": "(HAS_DMA)",
            "restrict": ""
        }
    ],
    "DMA_OPS_BYPASS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DMA_MAP_DIRECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "NEED_SG_DMA_LENGTH": [
        {
            "type": "bool",
            "rev_select": "X86 || IOMMU_DMA",
            "dep": "",
            "restrict": ""
        }
    ],
    "NEED_DMA_MAP_STATE": [
        {
            "type": "bool",
            "rev_select": "X86_64 || INTEL_IOMMU || ARCH_HAS_SYNC_DMA_FOR_CPU || SWIOTLB || DMA_API_DEBUG",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_DMA_ADDR_T_64BIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( 64BIT || PHYS_ADDR_T_64BIT )[!(y)]"
        }
    ],
    "ARCH_HAS_DMA_SET_MASK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DMA_WRITE_COMBINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DMA_MARK_CLEAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMA_DECLARE_COHERENT": [
        {
            "type": "bool",
            "rev_select": "OF_EARLY_FLATTREE[HAS_DMA] || DMA_GLOBAL_POOL",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SETUP_DMA_OPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_TEARDOWN_DMA_OPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SYNC_DMA_FOR_DEVICE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SYNC_DMA_FOR_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_SYNC_DMA_FOR_CPU_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DMA_PREP_COHERENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_FORCE_DMA_UNENCRYPTED": [
        {
            "type": "bool",
            "rev_select": "X86_MEM_ENCRYPT",
            "dep": "",
            "restrict": ""
        }
    ],
    "SWIOTLB": [
        {
            "type": "bool",
            "rev_select": "X86_64 || STA2X11 || GART_IOMMU || X86_PAE || SWIOTLB_XEN || AMD_IOMMU || INTEL_IOMMU",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMA_RESTRICTED_POOL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(OF && OF_RESERVED_MEM && SWIOTLB)",
            "restrict": ""
        }
    ],
    "DMA_NONCOHERENT_MMAP": [
        {
            "type": "bool",
            "rev_select": "DMA_DIRECT_REMAP",
            "dep": "",
            "restrict": "( y )[!(y) && (! MMU)]"
        }
    ],
    "DMA_COHERENT_POOL": [
        {
            "type": "bool",
            "rev_select": "AMD_MEM_ENCRYPT || DMA_DIRECT_REMAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMA_GLOBAL_POOL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMA_DIRECT_REMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMA_CMA": [
        {
            "type": "bool",
            "rev_select": "DRM_ETNAVIV[HAVE_DMA_CONTIGUOUS] || DRM_ASPEED_GFX[HAVE_DMA_CONTIGUOUS] || FB_HYPERV[HAVE_DMA_CONTIGUOUS && CMA]",
            "dep": "(HAVE_DMA_CONTIGUOUS && CMA)",
            "restrict": ""
        }
    ],
    "DMA_PERNUMA_CMA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMA_CMA )",
            "restrict": "( NUMA && ARM64 )[!(y)]"
        }
    ],
    "CMA_SIZE_MBYTES": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( DMA_CMA ) && (! CMA_SIZE_SEL_PERCENTAGE)",
            "restrict": "( 0 )[!(y) && (X86)] || ( 16 )[!(y)]"
        }
    ],
    "CMA_SIZE_PERCENTAGE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( DMA_CMA ) && (! CMA_SIZE_SEL_MBYTES)",
            "restrict": "( 0 )[!(y) && (X86)] || ( 10 )[!(y)]"
        }
    ],
    "CMA_SIZE_SEL_MBYTES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMA_CMA ) && ( CMA_SIZE_SEL_MBYTES &&  !CMA_SIZE_SEL_PERCENTAGE &&  !CMA_SIZE_SEL_MIN &&  !CMA_SIZE_SEL_MAX )",
            "restrict": ""
        }
    ],
    "CMA_SIZE_SEL_PERCENTAGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMA_CMA ) && ( CMA_SIZE_SEL_PERCENTAGE &&  !CMA_SIZE_SEL_MBYTES &&  !CMA_SIZE_SEL_MIN &&  !CMA_SIZE_SEL_MAX )",
            "restrict": ""
        }
    ],
    "CMA_SIZE_SEL_MIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMA_CMA ) && ( CMA_SIZE_SEL_MIN &&  !CMA_SIZE_SEL_MBYTES &&  !CMA_SIZE_SEL_PERCENTAGE &&  !CMA_SIZE_SEL_MAX )",
            "restrict": ""
        }
    ],
    "CMA_SIZE_SEL_MAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DMA_CMA ) && ( CMA_SIZE_SEL_MAX &&  !CMA_SIZE_SEL_MBYTES &&  !CMA_SIZE_SEL_PERCENTAGE &&  !CMA_SIZE_SEL_MIN )",
            "restrict": ""
        }
    ],
    "CMA_ALIGNMENT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( DMA_CMA )",
            "restrict": "( 2 12 ) || ( 8 )[!(y)]"
        }
    ],
    "DMA_API_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DMA_API_DEBUG_SG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DMA_API_DEBUG)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DMA_MAP_BENCHMARK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS)",
            "restrict": ""
        }
    ],
    "SGL_ALLOC": [
        {
            "type": "bool",
            "rev_select": "NVME_TARGET || NVME_TARGET_RDMA || NVME_TARGET_FC || SCSI_IPR || SCSI_PMCRAID || TARGET_CORE || USBIP_CORE || CRYPTO_ACOMP2",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "IOMMU_HELPER": [
        {
            "type": "bool",
            "rev_select": "GART_IOMMU",
            "dep": "",
            "restrict": ""
        }
    ],
    "CHECK_SIGNATURE": [
        {
            "type": "bool",
            "rev_select": "TS5500 || SCSI_HPSA || SCSI_AHA152X || SCSI_FDOMAIN_ISA || INPUT_APANEL || INPUT_WISTRON_BTNS || I2C_I801[X86 && DMI]",
            "dep": "",
            "restrict": ""
        }
    ],
    "CPUMASK_OFFSTACK": [
        {
            "type": "bool",
            "rev_select": "MAXSMP",
            "dep": "",
            "restrict": ""
        }
    ],
    "CPU_RMAP": [
        {
            "type": "bool",
            "rev_select": "RFS_ACCEL",
            "dep": "(SMP)",
            "restrict": ""
        }
    ],
    "DQL": [
        {
            "type": "bool",
            "rev_select": "BQL",
            "dep": "",
            "restrict": ""
        }
    ],
    "GLOB": [
        {
            "type": "bool",
            "rev_select": "SOC_BUS || ATA || EVENT_TRACING || FUNCTION_TRACER || KUNIT[KUNIT = y]",
            "dep": "",
            "restrict": ""
        }
    ],
    "GLOB_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(GLOB)",
            "restrict": ""
        }
    ],
    "NLATTR": [
        {
            "type": "bool",
            "rev_select": "NET",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_ATOMIC64": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LRU_CACHE": [
        {
            "type": "tristate",
            "rev_select": "BLK_DEV_DRBD",
            "dep": "",
            "restrict": ""
        }
    ],
    "CLZ_TAB": [
        {
            "type": "bool",
            "rev_select": "MPILIB",
            "dep": "",
            "restrict": ""
        }
    ],
    "IRQ_POLL": [
        {
            "type": "bool",
            "rev_select": "BE2ISCSI || CXLFLASH || MEGARAID_SAS || SCSI_MPT3SAS || SCSI_IPR || SCSI_LPFC || INFINIBAND",
            "dep": "",
            "restrict": ""
        }
    ],
    "MPILIB": [
        {
            "type": "tristate",
            "rev_select": "CRYPTO_RSA || CRYPTO_DH || CRYPTO_SM2 || CRYPTO_DEV_VIRTIO || ASYMMETRIC_PUBLIC_KEY_SUBTYPE || SIGNATURE",
            "dep": "",
            "restrict": ""
        }
    ],
    "SIGNATURE": [
        {
            "type": "tristate",
            "rev_select": "INTEGRITY_SIGNATURE",
            "dep": "(KEYS)",
            "restrict": ""
        }
    ],
    "DIMLIB": [
        {
            "type": "bool",
            "rev_select": "ENA_ETHERNET || BCMGENET || SYSTEMPORT || BNXT || FSL_ENETC || FSL_ENETC_VF || HNS3_ENET || ICE || OCTEONTX2_PF || NET_MEDIATEK_SOC || MLX5_CORE_EN || NFP || IONIC || INFINIBAND || FSL_MC_DPIO",
            "dep": "",
            "restrict": ""
        }
    ],
    "LIBFDT": [
        {
            "type": "bool",
            "rev_select": "OF_FLATTREE",
            "dep": "",
            "restrict": ""
        }
    ],
    "OID_REGISTRY": [
        {
            "type": "tristate",
            "rev_select": "SYSTEM_DATA_VERIFICATION || SUNRPC_GSS || CIFS || SMB_SERVER || TRUSTED_KEYS_TPM || CRYPTO_ECRDSA || X509_CERTIFICATE_PARSER || PKCS8_PRIVATE_KEY_PARSER || PKCS7_MESSAGE_PARSER || SIGNED_PE_FILE_VERIFICATION",
            "dep": "",
            "restrict": ""
        }
    ],
    "UCS2_STRING": [
        {
            "type": "tristate",
            "rev_select": "EFI || EFI_VARS_PSTORE || EFI_BOOTLOADER_CONTROL || APPLE_PROPERTIES || HYPERV_NET",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_GENERIC_VDSO": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_GETTIMEOFDAY": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "( HAVE_GENERIC_VDSO )",
            "restrict": ""
        }
    ],
    "GENERIC_VDSO_32": [
        {
            "type": "bool",
            "rev_select": "X86_32",
            "dep": "( HAVE_GENERIC_VDSO ) && (GENERIC_GETTIMEOFDAY && ! 64BIT)",
            "restrict": ""
        }
    ],
    "GENERIC_COMPAT_VDSO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( HAVE_GENERIC_VDSO )",
            "restrict": ""
        }
    ],
    "GENERIC_VDSO_TIME_NS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "( HAVE_GENERIC_VDSO )",
            "restrict": ""
        }
    ],
    "FONT_SUPPORT": [
        {
            "type": "tristate",
            "rev_select": "EFI_EARLYCON || VIDEO_SOLO6X10 || VIDEO_VIMC || VIDEO_VIVID || SGI_NEWPORT_CONSOLE || FRAMEBUFFER_CONSOLE || STI_CONSOLE || USB_SISUSBVGA[USB_SISUSBVGA_CON]",
            "dep": "",
            "restrict": ""
        }
    ],
    "FONTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE || STI_CONSOLE)",
            "restrict": ""
        }
    ],
    "FONT_8x8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE || STI_CONSOLE)",
            "restrict": "( y )[!(FONTS) && (! SPARC && ! FONTS)]"
        }
    ],
    "FONT_8x16": [
        {
            "type": "bool",
            "rev_select": "VIDEO_SOLO6X10 || VIDEO_SOLO6X10 || VIDEO_VIMC || VIDEO_VIVID || FB_VGA16[FRAMEBUFFER_CONSOLE] || FB_S3[FRAMEBUFFER_CONSOLE] || FB_VT8623[FRAMEBUFFER_CONSOLE] || FB_ARK[FRAMEBUFFER_CONSOLE] || USB_SISUSBVGA_CON || FONT_AUTOSELECT",
            "dep": "( FONT_SUPPORT )",
            "restrict": "( y )[!(FONTS) && (! SPARC && ! FONTS)]"
        }
    ],
    "FONT_6x11": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE || STI_CONSOLE)",
            "restrict": "( y )[!(FONTS) && (! SPARC && ! FONTS && MAC)]"
        }
    ],
    "FONT_7x14": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": ""
        }
    ],
    "FONT_PEARL_8x8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": "( y )[!(FONTS) && (! SPARC && ! FONTS && AMIGA)]"
        }
    ],
    "FONT_ACORN_8x8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": "( y )[!(FONTS) && (! SPARC && ! FONTS && ARM && ARCH_ACORN)]"
        }
    ],
    "FONT_MINI_4x6": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (! SPARC && FONTS)",
            "restrict": ""
        }
    ],
    "FONT_6x10": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (! SPARC && FONTS)",
            "restrict": ""
        }
    ],
    "FONT_10x18": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": ""
        }
    ],
    "FONT_SUN8x16": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE && ( ! SPARC && FONTS || SPARC ))",
            "restrict": ""
        }
    ],
    "FONT_SUN12x22": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE && ( ! SPARC && FONTS || SPARC ))",
            "restrict": ""
        }
    ],
    "FONT_TER16x32": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE && ( ! SPARC && FONTS || SPARC ))",
            "restrict": ""
        }
    ],
    "FONT_6x8": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (FRAMEBUFFER_CONSOLE)",
            "restrict": ""
        }
    ],
    "FONT_AUTOSELECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FONT_SUPPORT ) && (! FONT_8x8) && (! FONT_6x11) && (! FONT_7x14) && (! FONT_PEARL_8x8) && (! FONT_ACORN_8x8) && (! FONT_MINI_4x6) && (! FONT_6x10) && (! FONT_SUN8x16) && (! FONT_SUN12x22) && (! FONT_10x18) && (! FONT_TER16x32) && (! FONT_6x8)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SG_SPLIT": [
        {
            "type": "bool",
            "rev_select": "SPI_OMAP24XX || VIDEO_PXA27x || CRYPTO_DEV_HISI_SEC || CRYPTO_DEV_SA2UL",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SG_POOL": [
        {
            "type": "bool",
            "rev_select": "VIRTIO_BLK || BLK_DEV_RNBD_CLIENT || NVME_RDMA || NVME_FC || NVME_TARGET_LOOP || NVME_TARGET_FCLOOP || SCSI || SUNRPC_XPRT_RDMA || SMB_SERVER_SMBDIRECT",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_NO_SG_CHAIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_PMEM_API": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMREGION": [
        {
            "type": "bool",
            "rev_select": "ACPI_HMAT || CXL_REGION || LIBNVDIMM",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_MEMREMAP_COMPAT_ALIGN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "UACCESS_MEMCPY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_UACCESS_FLUSHCACHE": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_COPY_MC": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_STACKWALK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "STACKDEPOT": [
        {
            "type": "bool",
            "rev_select": "DRM_DEBUG_MM || DRM_DEBUG_DP_MST_TOPOLOGY_REFS || DRM_DEBUG_MODESET_LOCK || DRM_I915_DEBUG || DRM_I915_DEBUG_RUNTIME_PM || STACKDEPOT_ALWAYS_INIT || REF_TRACKER || SLUB_DEBUG[STACKTRACE_SUPPORT] || PAGE_OWNER",
            "dep": "",
            "restrict": ""
        }
    ],
    "STACKDEPOT_ALWAYS_INIT": [
        {
            "type": "bool",
            "rev_select": "SLUB_DEBUG_ON[STACKTRACE_SUPPORT] || KASAN",
            "dep": "",
            "restrict": ""
        }
    ],
    "REF_TRACKER": [
        {
            "type": "bool",
            "rev_select": "NET_DEV_REFCNT_TRACKER || NET_NS_REFCNT_TRACKER || TEST_REF_TRACKER",
            "dep": "(STACKTRACE_SUPPORT)",
            "restrict": ""
        }
    ],
    "SBITMAP": [
        {
            "type": "bool",
            "rev_select": "BLOCK || FUN_CORE",
            "dep": "",
            "restrict": ""
        }
    ],
    "PARMAN": [
        {
            "type": "tristate",
            "rev_select": "MLXSW_SPECTRUM",
            "dep": "",
            "restrict": ""
        }
    ],
    "OBJAGG": [
        {
            "type": "tristate",
            "rev_select": "MLXSW_SPECTRUM",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_IOREMAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_ASHLDI3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_ASHRDI3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_LSHRDI3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_MULDI3": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_CMPDI2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_UCMPDI2": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_LIB_DEVMEM_IS_ALLOWED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PLDMFW": [
        {
            "type": "bool",
            "rev_select": "ICE",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ASN1_ENCODER": [
        {
            "type": "tristate",
            "rev_select": "TRUSTED_KEYS_TPM",
            "dep": "",
            "restrict": ""
        }
    ],
    "POLYNOMIAL": [
        {
            "type": "tristate",
            "rev_select": "MAXLINEAR_GPHY[HWMON] || SENSORS_BT1_PVT || SENSORS_LAN966X",
            "dep": "",
            "restrict": ""
        }
    ],
    "PRINTK_TIME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PRINTK)",
            "restrict": ""
        }
    ],
    "PRINTK_CALLER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PRINTK)",
            "restrict": ""
        }
    ],
    "STACKTRACE_BUILD_ID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PRINTK)",
            "restrict": ""
        }
    ],
    "CONSOLE_LOGLEVEL_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 1 15 ) || ( 7 )[!(y)]"
        }
    ],
    "CONSOLE_LOGLEVEL_QUIET": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 1 15 ) || ( 4 )[!(y)]"
        }
    ],
    "MESSAGE_LOGLEVEL_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 1 7 ) || ( 4 )[!(y)]"
        }
    ],
    "BOOT_PRINTK_DELAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && PRINTK && GENERIC_CALIBRATE_DELAY)",
            "restrict": ""
        }
    ],
    "DYNAMIC_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PRINTK) && (( DEBUG_FS || PROC_FS ))",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DYNAMIC_DEBUG_CORE": [
        {
            "type": "bool",
            "rev_select": "DYNAMIC_DEBUG",
            "dep": "(PRINTK) && (( DEBUG_FS || PROC_FS ))",
            "restrict": ""
        }
    ],
    "SYMBOLIC_ERRNAME": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y) && (PRINTK)]"
        }
    ],
    "DEBUG_BUGVERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(BUG && ( GENERIC_BUG || HAVE_DEBUG_BUGVERBOSE ))",
            "restrict": "( y )[!(DEBUG_KERNEL && EXPERT)]"
        }
    ],
    "DEBUG_KERNEL": [
        {
            "type": "bool",
            "rev_select": "EXPERT",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_MISC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( DEBUG_KERNEL )[!(y)]"
        }
    ],
    "DEBUG_INFO": [
        {
            "type": "bool",
            "rev_select": "DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT || DEBUG_INFO_DWARF4 || DEBUG_INFO_DWARF5",
            "dep": "",
            "restrict": ""
        }
    ],
    "AS_HAS_NON_CONST_LEB128": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "DEBUG_INFO_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_KERNEL ) ) && ( DEBUG_INFO_NONE &&  !DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT &&  !DEBUG_INFO_DWARF4 &&  !DEBUG_INFO_DWARF5 )",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_KERNEL ) ) && (! CC_IS_CLANG || AS_IS_LLVM || CLANG_VERSION < 140000 || ( AS_IS_GNU && AS_VERSION >= 23502 && AS_HAS_NON_CONST_LEB128 )) && ( DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT &&  !DEBUG_INFO_NONE &&  !DEBUG_INFO_DWARF4 &&  !DEBUG_INFO_DWARF5 )",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_DWARF4": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_KERNEL ) ) && (! CC_IS_CLANG || AS_IS_LLVM || ( AS_IS_GNU && AS_VERSION >= 23502 )) && ( DEBUG_INFO_DWARF4 &&  !DEBUG_INFO_NONE &&  !DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT &&  !DEBUG_INFO_DWARF5 )",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_DWARF5": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_KERNEL ) ) && (! CC_IS_CLANG || AS_IS_LLVM || ( AS_IS_GNU && AS_VERSION >= 23502 && AS_HAS_NON_CONST_LEB128 )) && ( DEBUG_INFO_DWARF5 &&  !DEBUG_INFO_NONE &&  !DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT &&  !DEBUG_INFO_DWARF4 )",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_REDUCED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO )",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_COMPRESSED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO ) && (SP_WORD) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_SPLIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO ) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "DEBUG_INFO_BTF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO ) && (! DEBUG_INFO_SPLIT && ! DEBUG_INFO_REDUCED) && (! GCC_PLUGIN_RANDSTRUCT || COMPILE_TEST) && (BPF_SYSCALL) && (! DEBUG_INFO_DWARF5 || PAHOLE_VERSION >= 121)",
            "restrict": ""
        }
    ],
    "PAHOLE_HAS_SPLIT_BTF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO )",
            "restrict": "( PAHOLE_VERSION >= 119 )[!(y)]"
        }
    ],
    "PAHOLE_HAS_BTF_TAG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO ) && (CC_IS_CLANG)",
            "restrict": "( PAHOLE_VERSION >= 123 )[!(y)]"
        }
    ],
    "DEBUG_INFO_BTF_MODULES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO ) && (DEBUG_INFO_BTF && MODULES && PAHOLE_HAS_SPLIT_BTF)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MODULE_ALLOW_BTF_MISMATCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO ) && (DEBUG_INFO_BTF_MODULES)",
            "restrict": ""
        }
    ],
    "GDB_SCRIPTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( DEBUG_INFO )",
            "restrict": ""
        }
    ],
    "FRAME_WARN": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 0 8192 ) || ( 2048 )[!(y) && (GCC_PLUGIN_LATENT_ENTROPY)] || ( 2048 )[!(y) && (PARISC)] || ( 1536 )[!(y) && (( ! 64BIT && XTENSA ))] || ( 1024 )[!(y) && (! 64BIT)] || ( 2048 )[!(y) && (64BIT)]"
        }
    ],
    "STRIP_ASM_SYMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "READABLE_ASM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (CC_IS_GCC)",
            "restrict": ""
        }
    ],
    "HEADERS_INSTALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(! UML)",
            "restrict": ""
        }
    ],
    "DEBUG_SECTION_MISMATCH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(CC_IS_GCC)",
            "restrict": ""
        }
    ],
    "SECTION_MISMATCH_WARN_ONLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DEBUG_FORCE_FUNCTION_ALIGN_64B": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EXPERT && ( X86_64 || ARM64 || PPC32 || PPC64 || ARC ))",
            "restrict": ""
        }
    ],
    "ARCH_WANT_FRAME_POINTERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "FRAME_POINTER": [
        {
            "type": "bool",
            "rev_select": "UNWINDER_FRAME_POINTER",
            "dep": "(DEBUG_KERNEL && ( M68K || UML || SUPERH ) || ARCH_WANT_FRAME_POINTERS)",
            "restrict": "( y )[!(y) && (( DEBUG_INFO && UML ) || ARCH_WANT_FRAME_POINTERS)]"
        },
        {
            "type": "bool",
            "rev_select": "UNWINDER_FRAME_POINTER",
            "dep": "(! UNWINDER_ORC && ! UNWINDER_GUESS)",
            "restrict": ""
        }
    ],
    "OBJTOOL": [
        {
            "type": "bool",
            "rev_select": "X86_KERNEL_IBT || RETPOLINE[HAVE_OBJTOOL] || RETHUNK[HAVE_OBJTOOL] || SLS[HAVE_OBJTOOL] || JUMP_LABEL[HAVE_JUMP_LABEL_HACK] || HAVE_UACCESS_VALIDATION || HAVE_STATIC_CALL_INLINE || STACK_VALIDATION || NOINSTR_VALIDATION || KCSAN_WEAK_MEMORY[HAVE_NOINSTR_HACK] || FTRACE_MCOUNT_USE_OBJTOOL || UNWINDER_ORC || KCOV[HAVE_NOINSTR_HACK]",
            "dep": "",
            "restrict": ""
        }
    ],
    "STACK_VALIDATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_STACK_VALIDATION && UNWINDER_FRAME_POINTER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NOINSTR_VALIDATION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_NOINSTR_VALIDATION && DEBUG_ENTRY)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "VMLINUX_MAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EXPERT)",
            "restrict": ""
        }
    ],
    "DEBUG_FORCE_WEAK_PER_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "MAGIC_SYSRQ": [
        {
            "type": "bool",
            "rev_select": "KGDB_SERIAL_CONSOLE",
            "dep": "(! UML)",
            "restrict": ""
        }
    ],
    "MAGIC_SYSRQ_DEFAULT_ENABLE": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "(MAGIC_SYSRQ)",
            "restrict": "( 0x1 )[!(y)]"
        }
    ],
    "MAGIC_SYSRQ_SERIAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MAGIC_SYSRQ)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "MAGIC_SYSRQ_SERIAL_SEQUENCE": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "(MAGIC_SYSRQ_SERIAL)",
            "restrict": "( \"\" )[!(y)]"
        }
    ],
    "DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "ZSMALLOC_STAT || BCACHE_CLOSURES_DEBUG || DVB_C8SECTPFE || DRM_I915_DEBUG || EDAC_DEBUG || SUNRPC_DEBUG || PAGE_OWNER || DEBUG_KMEMLEAK || BLK_DEV_IO_TRACE || PUNIT_ATOM_DEBUG || NOTIFIER_ERROR_INJECTION || FAIL_FUTEX || KCOV",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_FS_ALLOW_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_FS ) ) && ( DEBUG_FS_ALLOW_ALL &&  !DEBUG_FS_DISALLOW_MOUNT &&  !DEBUG_FS_ALLOW_NONE )",
            "restrict": ""
        }
    ],
    "DEBUG_FS_DISALLOW_MOUNT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_FS ) ) && ( DEBUG_FS_DISALLOW_MOUNT &&  !DEBUG_FS_ALLOW_ALL &&  !DEBUG_FS_ALLOW_NONE )",
            "restrict": ""
        }
    ],
    "DEBUG_FS_ALLOW_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( ( DEBUG_FS ) ) && ( DEBUG_FS_ALLOW_NONE &&  !DEBUG_FS_ALLOW_ALL &&  !DEBUG_FS_DISALLOW_MOUNT )",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KGDB": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KGDB_QXFER_PKT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KGDB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_KGDB) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "KGDB_HONOUR_BLOCKLIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KGDB ) && (HAVE_KPROBES) && (MODULES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KGDB_SERIAL_CONSOLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KGDB ) && (TTY && HW_CONSOLE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KGDB_TESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KGDB )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KGDB_TESTS_ON_BOOT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KGDB ) && (KGDB_TESTS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KGDB_TESTS_BOOT_STRING": [
        {
            "type": "string",
            "rev_select": "",
            "dep": "( KGDB ) && (KGDB_TESTS_ON_BOOT)",
            "restrict": "( \"V1F100\" )[!(y)]"
        }
    ],
    "KGDB_LOW_LEVEL_TRAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KGDB ) && (X86 || MIPS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KGDB_KDB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KGDB )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KDB_DEFAULT_ENABLE": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "( KGDB ) && (KGDB_KDB)",
            "restrict": "( 0x1 )[!(y)]"
        }
    ],
    "KDB_KEYBOARD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KGDB ) && (VT && KGDB_KDB)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "KDB_CONTINUE_CATASTROPHIC": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KGDB ) && (KGDB_KDB)",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "ARCH_HAS_EARLY_DEBUG": [
        {
            "type": "bool",
            "rev_select": "X86[KGDB]",
            "dep": "( KGDB )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_UBSAN_SANITIZE_ALL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "UBSAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "UBSAN_TRAP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (! COMPILE_TEST) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "CC_HAS_UBSAN_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN )",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_UBSAN_ARRAY_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN )",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "UBSAN_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (CC_HAS_UBSAN_ARRAY_BOUNDS || CC_HAS_UBSAN_BOUNDS)",
            "restrict": "( UBSAN )[!(y)]"
        }
    ],
    "UBSAN_ONLY_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (UBSAN_BOUNDS)",
            "restrict": "( CC_HAS_UBSAN_BOUNDS && ! CC_HAS_UBSAN_ARRAY_BOUNDS )[!(y)]"
        }
    ],
    "UBSAN_ARRAY_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (UBSAN_BOUNDS)",
            "restrict": "( CC_HAS_UBSAN_ARRAY_BOUNDS )[!(y)]"
        }
    ],
    "UBSAN_LOCAL_BOUNDS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (UBSAN_TRAP) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "UBSAN_SHIFT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (SP_WORD)",
            "restrict": "( UBSAN )[!(y)]"
        }
    ],
    "UBSAN_DIV_ZERO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (SP_WORD) && (! CC_IS_CLANG)",
            "restrict": ""
        }
    ],
    "UBSAN_UNREACHABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (! ( OBJTOOL && ( STACK_VALIDATION || UNWINDER_ORC || HAVE_UACCESS_VALIDATION ) )) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "UBSAN_BOOL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (SP_WORD)",
            "restrict": "( UBSAN )[!(y)]"
        }
    ],
    "UBSAN_ENUM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (SP_WORD)",
            "restrict": "( UBSAN )[!(y)]"
        }
    ],
    "UBSAN_ALIGNMENT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (! UBSAN_TRAP && ! COMPILE_TEST) && (SP_WORD)",
            "restrict": "( ! HAVE_EFFICIENT_UNALIGNED_ACCESS )[!(y)]"
        }
    ],
    "UBSAN_SANITIZE_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UBSAN ) && (ARCH_HAS_UBSAN_SANITIZE_ALL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TEST_UBSAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( UBSAN ) && (m)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KCSAN": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_KCSAN_COMPILER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ( CC_IS_CLANG && SP_WORD ) || ( CC_IS_GCC && SP_WORD ) )[!(y)]"
        }
    ],
    "KCSAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_KCSAN && HAVE_KCSAN_COMPILER) && (DEBUG_KERNEL && ! KASAN)",
            "restrict": ""
        }
    ],
    "CC_HAS_TSAN_COMPOUND_READ_BEFORE_WRITE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( ( CC_IS_CLANG && SP_WORD ) || ( CC_IS_GCC && SP_WORD ) )[!(y)]"
        }
    ],
    "KCSAN_VERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN ) && (PROVE_LOCKING)",
            "restrict": ""
        }
    ],
    "KCSAN_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KCSAN ) && (TRACEPOINTS && KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "KCSAN_EARLY_ENABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_NUM_WATCHPOINTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( 64 )[!(y)]"
        }
    ],
    "KCSAN_UDELAY_TASK": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( 80 )[!(y)]"
        }
    ],
    "KCSAN_UDELAY_INTERRUPT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( 20 )[!(y)]"
        }
    ],
    "KCSAN_DELAY_RANDOMIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_SKIP_WATCH": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( 4000 )[!(y)]"
        }
    ],
    "KCSAN_SKIP_WATCH_RANDOMIZE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_INTERRUPT_WATCHER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( KCSAN_STRICT )[!(! KCSAN_STRICT)]"
        }
    ],
    "KCSAN_REPORT_ONCE_IN_MS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( 3000 )[!(y)]"
        }
    ],
    "KCSAN_REPORT_RACE_UNKNOWN_ORIGIN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_STRICT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN )",
            "restrict": ""
        }
    ],
    "KCSAN_WEAK_MEMORY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN ) && (KCSAN_STRICT) && (! ARCH_WANTS_NO_INSTR || HAVE_NOINSTR_HACK || CC_IS_GCC || CLANG_VERSION >= 140000)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_REPORT_VALUE_CHANGE_ONLY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN ) && (! KCSAN_STRICT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_ASSUME_PLAIN_WRITES_ATOMIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN ) && (! KCSAN_STRICT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCSAN_IGNORE_ATOMICS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN ) && (! KCSAN_STRICT)",
            "restrict": ""
        }
    ],
    "KCSAN_PERMISSIVE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KCSAN ) && (KCSAN_REPORT_VALUE_CHANGE_ONLY)",
            "restrict": ""
        }
    ],
    "NET_DEV_REFCNT_TRACKER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && STACKTRACE_SUPPORT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "NET_NS_REFCNT_TRACKER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && STACKTRACE_SUPPORT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DEBUG_NET": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && NET)",
            "restrict": ""
        }
    ],
    "PAGE_EXTENSION": [
        {
            "type": "bool",
            "rev_select": "PAGE_IDLE_FLAG[! 64BIT] || PAGE_OWNER || PAGE_TABLE_CHECK",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_PAGEALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (! HIBERNATION || ARCH_SUPPORTS_DEBUG_PAGEALLOC && ! PPC && ! SPARC)",
            "restrict": ""
        }
    ],
    "DEBUG_PAGEALLOC_ENABLE_DEFAULT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_PAGEALLOC)",
            "restrict": ""
        }
    ],
    "DEBUG_SLAB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && SLAB)",
            "restrict": ""
        }
    ],
    "SLUB_DEBUG": [
        {
            "type": "bool",
            "rev_select": "KASAN_GENERIC[SLUB] || KASAN_SW_TAGS[SLUB]",
            "dep": "(SLUB && SYSFS)",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "SLUB_DEBUG_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SLUB && SLUB_DEBUG)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PAGE_OWNER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && STACKTRACE_SUPPORT)",
            "restrict": ""
        }
    ],
    "PAGE_TABLE_CHECK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_SUPPORTS_PAGE_TABLE_CHECK)",
            "restrict": ""
        }
    ],
    "PAGE_TABLE_CHECK_ENFORCED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PAGE_TABLE_CHECK)",
            "restrict": ""
        }
    ],
    "PAGE_POISONING": [
        {
            "type": "bool",
            "rev_select": "DEBUG_PAGEALLOC[! ARCH_SUPPORTS_DEBUG_PAGEALLOC]",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_PAGE_REF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (TRACEPOINTS)",
            "restrict": ""
        }
    ],
    "DEBUG_RODATA_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(STRICT_KERNEL_RWX)",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DEBUG_WX": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_WX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_DEBUG_WX) && (MMU)",
            "restrict": ""
        }
    ],
    "GENERIC_PTDUMP": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "PTDUMP_CORE": [
        {
            "type": "bool",
            "rev_select": "DEBUG_WX || PTDUMP_DEBUGFS || EFI_PGT_DUMP",
            "dep": "",
            "restrict": ""
        }
    ],
    "PTDUMP_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (DEBUG_FS) && (GENERIC_PTDUMP)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_SW_FENCE_DEBUG_OBJECTS",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_FREE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_TIMERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_WORK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_RCU_HEAD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_PERCPU_COUNTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": ""
        }
    ],
    "DEBUG_OBJECTS_ENABLE_DEFAULT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS)",
            "restrict": "( 0 1 ) || ( 1 )[!(y)]"
        }
    ],
    "SHRINKER_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_FS)",
            "restrict": ""
        }
    ],
    "HAVE_DEBUG_KMEMLEAK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_KMEMLEAK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && HAVE_DEBUG_KMEMLEAK)",
            "restrict": ""
        }
    ],
    "DEBUG_KMEMLEAK_MEM_POOL_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(DEBUG_KMEMLEAK)",
            "restrict": "( 200 1000000 ) || ( 16000 )[!(y)]"
        }
    ],
    "DEBUG_KMEMLEAK_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KMEMLEAK && m)",
            "restrict": ""
        }
    ],
    "DEBUG_KMEMLEAK_DEFAULT_OFF": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KMEMLEAK)",
            "restrict": ""
        }
    ],
    "DEBUG_KMEMLEAK_AUTO_SCAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KMEMLEAK)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DEBUG_STACK_USAGE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && ! IA64)",
            "restrict": ""
        }
    ],
    "SCHED_STACK_END_CHECK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "ARCH_HAS_DEBUG_VM_PGTABLE": [
        {
            "type": "bool",
            "rev_select": "X86[! X86_PAE]",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_VM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_VM_VMACACHE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_VM)",
            "restrict": ""
        }
    ],
    "DEBUG_VM_RB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_VM)",
            "restrict": ""
        }
    ],
    "DEBUG_VM_PGFLAGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_VM)",
            "restrict": ""
        }
    ],
    "DEBUG_VM_PGTABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU) && (ARCH_HAS_DEBUG_VM_PGTABLE)",
            "restrict": "( y )[!(y) && (DEBUG_VM)]"
        }
    ],
    "ARCH_HAS_DEBUG_VIRTUAL": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_VIRTUAL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && ARCH_HAS_DEBUG_VIRTUAL)",
            "restrict": ""
        }
    ],
    "DEBUG_NOMMU_REGIONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && ! MMU)",
            "restrict": ""
        }
    ],
    "DEBUG_MEMORY_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! EXPERT )[!(EXPERT)]"
        }
    ],
    "MEMORY_NOTIFIER_ERROR_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(MEMORY_HOTPLUG && NOTIFIER_ERROR_INJECTION)",
            "restrict": ""
        }
    ],
    "DEBUG_PER_CPU_MAPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (SMP)",
            "restrict": ""
        }
    ],
    "DEBUG_KMAP_LOCAL": [
        {
            "type": "bool",
            "rev_select": "DEBUG_KMAP_LOCAL_FORCE_MAP || DEBUG_HIGHMEM",
            "dep": "(DEBUG_KERNEL && KMAP_LOCAL)",
            "restrict": ""
        }
    ],
    "ARCH_SUPPORTS_KMAP_LOCAL_FORCE_MAP": [
        {
            "type": "bool",
            "rev_select": "X86[NR_CPUS <= 4096]",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_KMAP_LOCAL_FORCE_MAP": [
        {
            "type": "bool",
            "rev_select": "DEBUG_HIGHMEM[ARCH_SUPPORTS_KMAP_LOCAL_FORCE_MAP]",
            "dep": "(DEBUG_KERNEL && ARCH_SUPPORTS_KMAP_LOCAL_FORCE_MAP)",
            "restrict": ""
        }
    ],
    "DEBUG_HIGHMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && HIGHMEM)",
            "restrict": ""
        }
    ],
    "HAVE_DEBUG_STACKOVERFLOW": [
        {
            "type": "bool",
            "rev_select": "X86_32",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_STACKOVERFLOW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && HAVE_DEBUG_STACKOVERFLOW)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KASAN": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KASAN_SW_TAGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KASAN_HW_TAGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KASAN_VMALLOC": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_DISABLE_KASAN_INLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "CC_HAS_KASAN_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_KASAN_SW_TAGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "CC_HAS_WORKING_NOSANITIZE_ADDRESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! CC_IS_GCC || GCC_VERSION >= 80300 )[!(y)]"
        }
    ],
    "KASAN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(( ( ( HAVE_ARCH_KASAN && CC_HAS_KASAN_GENERIC ) || ( HAVE_ARCH_KASAN_SW_TAGS && CC_HAS_KASAN_SW_TAGS ) ) && CC_HAS_WORKING_NOSANITIZE_ADDRESS ) || HAVE_ARCH_KASAN_HW_TAGS) && (( SLUB && SYSFS ) || ( SLAB && ! DEBUG_SLAB ))",
            "restrict": ""
        }
    ],
    "KASAN_GENERIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && (HAVE_ARCH_KASAN && CC_HAS_KASAN_GENERIC) && (CC_HAS_WORKING_NOSANITIZE_ADDRESS) && ( KASAN_GENERIC &&  !KASAN_SW_TAGS &&  !KASAN_HW_TAGS )",
            "restrict": ""
        }
    ],
    "KASAN_SW_TAGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && (HAVE_ARCH_KASAN_SW_TAGS && CC_HAS_KASAN_SW_TAGS) && (CC_HAS_WORKING_NOSANITIZE_ADDRESS) && ( KASAN_SW_TAGS &&  !KASAN_GENERIC &&  !KASAN_HW_TAGS )",
            "restrict": ""
        }
    ],
    "KASAN_HW_TAGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && (HAVE_ARCH_KASAN_HW_TAGS) && (SLUB) && ( KASAN_HW_TAGS &&  !KASAN_GENERIC &&  !KASAN_SW_TAGS )",
            "restrict": ""
        }
    ],
    "KASAN_OUTLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && ( ( KASAN_GENERIC || KASAN_SW_TAGS ) ) && ( KASAN_OUTLINE &&  !KASAN_INLINE )",
            "restrict": ""
        }
    ],
    "KASAN_INLINE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && ( ( KASAN_GENERIC || KASAN_SW_TAGS ) ) && (! ARCH_DISABLE_KASAN_INLINE) && ( KASAN_INLINE &&  !KASAN_OUTLINE )",
            "restrict": ""
        }
    ],
    "KASAN_STACK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && (KASAN_GENERIC || KASAN_SW_TAGS) && (! ARCH_DISABLE_KASAN_INLINE)",
            "restrict": "( y )[!(CC_IS_CLANG && ! COMPILE_TEST) && (CC_IS_GCC)]"
        }
    ],
    "KASAN_TAGS_IDENTIFY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && (KASAN_SW_TAGS || KASAN_HW_TAGS)",
            "restrict": ""
        }
    ],
    "KASAN_VMALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KASAN ) && (HAVE_ARCH_KASAN_VMALLOC)",
            "restrict": ""
        }
    ],
    "KASAN_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KASAN ) && (KASAN && KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "KASAN_MODULE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KASAN ) && (m && KASAN && ! KASAN_HW_TAGS)",
            "restrict": ""
        }
    ],
    "HAVE_ARCH_KFENCE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "KFENCE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_ARCH_KFENCE && ( SLAB || SLUB ))",
            "restrict": ""
        }
    ],
    "KFENCE_SAMPLE_INTERVAL": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KFENCE )",
            "restrict": "( 100 )[!(y)]"
        }
    ],
    "KFENCE_NUM_OBJECTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KFENCE )",
            "restrict": "( 1 65535 ) || ( 255 )[!(y)]"
        }
    ],
    "KFENCE_DEFERRABLE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KFENCE )",
            "restrict": ""
        }
    ],
    "KFENCE_STATIC_KEYS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KFENCE ) && (JUMP_LABEL)",
            "restrict": ""
        }
    ],
    "KFENCE_STRESS_TEST_FAULTS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( KFENCE )",
            "restrict": "( 0 )[!(EXPERT)]"
        }
    ],
    "KFENCE_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KFENCE ) && (TRACEPOINTS && KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "DEBUG_SHIRQ": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PANIC_ON_OOPS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "PANIC_ON_OOPS_VALUE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 0 1 ) || ( 0 )[!(y) && (! PANIC_ON_OOPS)] || ( 1 )[!(y) && (PANIC_ON_OOPS)]"
        }
    ],
    "PANIC_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "",
            "restrict": "( 0 )[!(y)]"
        }
    ],
    "LOCKUP_DETECTOR": [
        {
            "type": "bool",
            "rev_select": "SOFTLOCKUP_DETECTOR || HARDLOCKUP_DETECTOR",
            "dep": "",
            "restrict": ""
        }
    ],
    "SOFTLOCKUP_DETECTOR": [
        {
            "type": "bool",
            "rev_select": "HARDLOCKUP_DETECTOR_PERF",
            "dep": "(DEBUG_KERNEL && ! S390)",
            "restrict": ""
        }
    ],
    "BOOTPARAM_SOFTLOCKUP_PANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(SOFTLOCKUP_DETECTOR)",
            "restrict": ""
        }
    ],
    "HARDLOCKUP_DETECTOR_PERF": [
        {
            "type": "bool",
            "rev_select": "HARDLOCKUP_DETECTOR[HAVE_HARDLOCKUP_DETECTOR_PERF]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HARDLOCKUP_CHECK_TIMESTAMP": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HARDLOCKUP_DETECTOR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && ! S390) && (HAVE_HARDLOCKUP_DETECTOR_PERF || HAVE_HARDLOCKUP_DETECTOR_ARCH)",
            "restrict": ""
        }
    ],
    "BOOTPARAM_HARDLOCKUP_PANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HARDLOCKUP_DETECTOR)",
            "restrict": ""
        }
    ],
    "DETECT_HUNG_TASK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( SOFTLOCKUP_DETECTOR )[!(y)]"
        }
    ],
    "DEFAULT_HUNG_TASK_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(DETECT_HUNG_TASK)",
            "restrict": "( 120 )[!(y)]"
        }
    ],
    "BOOTPARAM_HUNG_TASK_PANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DETECT_HUNG_TASK)",
            "restrict": ""
        }
    ],
    "WQ_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "TEST_LOCKUP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(m)",
            "restrict": ""
        }
    ],
    "SCHED_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && PROC_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "SCHED_INFO": [
        {
            "type": "bool",
            "rev_select": "TASK_DELAY_ACCT || KVM || SCHEDSTATS",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCHEDSTATS": [
        {
            "type": "bool",
            "rev_select": "LATENCYTOP",
            "dep": "(DEBUG_KERNEL && PROC_FS)",
            "restrict": ""
        }
    ],
    "DEBUG_TIMEKEEPING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_PREEMPT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && PREEMPTION && TRACE_IRQFLAGS_SUPPORT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "LOCK_DEBUGGING_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TRACE_IRQFLAGS_SUPPORT && STACKTRACE_SUPPORT && LOCKDEP_SUPPORT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PROVE_LOCKING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && LOCK_DEBUGGING_SUPPORT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PROVE_RAW_LOCK_NESTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROVE_LOCKING)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "LOCK_STAT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && LOCK_DEBUGGING_SUPPORT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DEBUG_RT_MUTEXES": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING[RT_MUTEXES] || LOCK_STAT[RT_MUTEXES] || DEBUG_WW_MUTEX_SLOWPATH[PREEMPT_RT] || DEBUG_LOCK_ALLOC[RT_MUTEXES]",
            "dep": "(DEBUG_KERNEL && RT_MUTEXES)",
            "restrict": ""
        }
    ],
    "DEBUG_SPINLOCK": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING || LOCK_STAT || DEBUG_WW_MUTEX_SLOWPATH || DEBUG_LOCK_ALLOC",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_MUTEXES": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING[! PREEMPT_RT] || LOCK_STAT[! PREEMPT_RT] || DEBUG_WW_MUTEX_SLOWPATH[! PREEMPT_RT] || DEBUG_LOCK_ALLOC[! PREEMPT_RT]",
            "dep": "(DEBUG_KERNEL && ! PREEMPT_RT)",
            "restrict": ""
        }
    ],
    "DEBUG_WW_MUTEX_SLOWPATH": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING",
            "dep": "(DEBUG_KERNEL && LOCK_DEBUGGING_SUPPORT)",
            "restrict": ""
        }
    ],
    "DEBUG_RWSEMS": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_LOCK_ALLOC": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING || LOCK_STAT || DEBUG_WW_MUTEX_SLOWPATH",
            "dep": "(DEBUG_KERNEL && LOCK_DEBUGGING_SUPPORT)",
            "restrict": ""
        }
    ],
    "LOCKDEP": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING || LOCK_STAT || DEBUG_LOCK_ALLOC",
            "dep": "(DEBUG_KERNEL && LOCK_DEBUGGING_SUPPORT)",
            "restrict": ""
        }
    ],
    "LOCKDEP_SMALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LOCKDEP_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(LOCKDEP && ! LOCKDEP_SMALL)",
            "restrict": "( 10 30 ) || ( 15 )[!(y)]"
        }
    ],
    "LOCKDEP_CHAINS_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(LOCKDEP && ! LOCKDEP_SMALL)",
            "restrict": "( 10 30 ) || ( 16 )[!(y)]"
        }
    ],
    "LOCKDEP_STACK_TRACE_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(LOCKDEP && ! LOCKDEP_SMALL)",
            "restrict": "( 10 30 ) || ( 19 )[!(y)]"
        }
    ],
    "LOCKDEP_STACK_TRACE_HASH_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(LOCKDEP && ! LOCKDEP_SMALL)",
            "restrict": "( 10 30 ) || ( 14 )[!(y)]"
        }
    ],
    "LOCKDEP_CIRCULAR_QUEUE_BITS": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(LOCKDEP)",
            "restrict": "( 10 30 ) || ( 12 )[!(y)]"
        }
    ],
    "DEBUG_LOCKDEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && LOCKDEP)",
            "restrict": ""
        }
    ],
    "DEBUG_ATOMIC_SLEEP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (! ARCH_NO_PREEMPT)",
            "restrict": ""
        }
    ],
    "DEBUG_LOCKING_API_SELFTESTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "LOCK_TORTURE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "WW_MUTEX_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SCF_TORTURE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "CSD_LOCK_WAIT_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (64BIT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TRACE_IRQFLAGS": [
        {
            "type": "bool",
            "rev_select": "PROVE_LOCKING || IRQSOFF_TRACER",
            "dep": "(TRACE_IRQFLAGS_SUPPORT)",
            "restrict": ""
        }
    ],
    "TRACE_IRQFLAGS_NMI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TRACE_IRQFLAGS) && (TRACE_IRQFLAGS_NMI_SUPPORT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DEBUG_IRQFLAGS": [
        {
            "type": "bool",
            "rev_select": "DEBUG_LOCKDEP",
            "dep": "",
            "restrict": ""
        }
    ],
    "STACKTRACE": [
        {
            "type": "bool",
            "rev_select": "DM_DEBUG_BLOCK_STACK_TRACING || STACKDEPOT || KCSAN || PAGE_OWNER || DEBUG_KMEMLEAK[STACKTRACE_SUPPORT] || KFENCE || LOCKDEP || LATENCYTOP || TRACING[STACKTRACE_SUPPORT] || STACK_TRACER || BLK_DEV_IO_TRACE || FAULT_INJECTION_STACKTRACE_FILTER",
            "dep": "(STACKTRACE_SUPPORT)",
            "restrict": ""
        }
    ],
    "WARN_ALL_UNSEEDED_RANDOM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DEBUG_KOBJECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_KOBJECT_RELEASE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_OBJECTS_TIMERS)",
            "restrict": ""
        }
    ],
    "HAVE_DEBUG_BUGVERBOSE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_LIST": [
        {
            "type": "bool",
            "rev_select": "BUG_ON_DATA_CORRUPTION",
            "dep": "(DEBUG_KERNEL || BUG_ON_DATA_CORRUPTION)",
            "restrict": ""
        }
    ],
    "DEBUG_PLIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_SG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_NOTIFIERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "BUG_ON_DATA_CORRUPTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "DEBUG_CREDENTIALS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PROVE_RCU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( PROVE_LOCKING )[!(y)]"
        }
    ],
    "PROVE_RCU_LIST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROVE_RCU && RCU_EXPERT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TORTURE_TEST": [
        {
            "type": "tristate",
            "rev_select": "KCSAN_KUNIT_TEST || LOCK_TORTURE_TEST || SCF_TORTURE_TEST || RCU_SCALE_TEST || RCU_TORTURE_TEST || RCU_REF_SCALE_TEST",
            "dep": "",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_SCALE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_TORTURE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_REF_SCALE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "RCU_CPU_STALL_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(RCU_STALL_COMMON)",
            "restrict": "( 3 300 ) || ( 21 )[!(y)]"
        }
    ],
    "RCU_EXP_CPU_STALL_TIMEOUT": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "(RCU_STALL_COMMON)",
            "restrict": "( 0 21000 ) || ( 0 )[!(y)]"
        }
    ],
    "RCU_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( y )[!(y) && (TREE_RCU)]"
        }
    ],
    "RCU_EQS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "RCU_STRICT_GRACE_PERIOD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && RCU_EXPERT && NR_CPUS <= 4 && ! TINY_RCU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "DEBUG_WQ_FORCE_RR_CPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "CPU_HOTPLUG_STATE_CONTROL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (HOTPLUG_CPU)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "LATENCYTOP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (STACKTRACE_SUPPORT) && (PROC_FS) && (FRAME_POINTER || MIPS || PPC || S390 || MICROBLAZE || ARM || ARC || X86)",
            "restrict": ""
        }
    ],
    "USER_STACKTRACE_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "NOP_TRACER": [
        {
            "type": "bool",
            "rev_select": "TRACING",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_RETHOOK": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "RETHOOK": [
        {
            "type": "bool",
            "rev_select": "KRETPROBE_ON_RETHOOK || FPROBE",
            "dep": "(HAVE_RETHOOK)",
            "restrict": ""
        }
    ],
    "HAVE_FUNCTION_TRACER": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FUNCTION_GRAPH_TRACER": [
        {
            "type": "bool",
            "rev_select": "X86[X86_32 || ( X86_64 && DYNAMIC_FTRACE )]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_DYNAMIC_FTRACE": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_DYNAMIC_FTRACE_WITH_REGS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_DYNAMIC_FTRACE_WITH_ARGS": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FTRACE_MCOUNT_RECORD": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_SYSCALL_TRACEPOINTS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_FENTRY": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64 || DYNAMIC_FTRACE]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_NOP_MCOUNT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_OBJTOOL_MCOUNT": [
        {
            "type": "bool",
            "rev_select": "X86[HAVE_OBJTOOL]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_C_RECORDMCOUNT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_BUILDTIME_MCOUNT_SORT": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "BUILDTIME_MCOUNT_SORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_BUILDTIME_MCOUNT_SORT && DYNAMIC_FTRACE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TRACER_MAX_TRACE": [
        {
            "type": "bool",
            "rev_select": "IRQSOFF_TRACER || PREEMPT_TRACER || SCHED_TRACER || TRACER_SNAPSHOT",
            "dep": "",
            "restrict": ""
        }
    ],
    "TRACE_CLOCK": [
        {
            "type": "bool",
            "rev_select": "RCU_TRACE || RING_BUFFER || TRACING",
            "dep": "",
            "restrict": ""
        }
    ],
    "RING_BUFFER": [
        {
            "type": "bool",
            "rev_select": "TRACING",
            "dep": "",
            "restrict": ""
        }
    ],
    "EVENT_TRACING": [
        {
            "type": "bool",
            "rev_select": "TRACING",
            "dep": "",
            "restrict": ""
        }
    ],
    "CONTEXT_SWITCH_TRACER": [
        {
            "type": "bool",
            "rev_select": "EVENT_TRACING || FUNCTION_TRACER || SCHED_TRACER",
            "dep": "",
            "restrict": ""
        }
    ],
    "RING_BUFFER_ALLOW_SWAP": [
        {
            "type": "bool",
            "rev_select": "IRQSOFF_TRACER || PREEMPT_TRACER || TRACER_SNAPSHOT_PER_CPU_SWAP",
            "dep": "",
            "restrict": ""
        }
    ],
    "PREEMPTIRQ_TRACEPOINTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TRACE_PREEMPT_TOGGLE || TRACE_IRQFLAGS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TRACING": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_TRACE_GEM || DRM_I915_TRACE_GTT || PREEMPTIRQ_TRACEPOINTS || GENERIC_TRACER || ENABLE_DEFAULT_TRACERS || KPROBE_EVENTS || UPROBE_EVENTS || SYNTH_EVENTS || USER_EVENTS || HIST_TRIGGERS",
            "dep": "",
            "restrict": ""
        }
    ],
    "GENERIC_TRACER": [
        {
            "type": "bool",
            "rev_select": "FUNCTION_TRACER || IRQSOFF_TRACER || PREEMPT_TRACER || SCHED_TRACER || HWLAT_TRACER || OSNOISE_TRACER || TIMERLAT_TRACER || MMIOTRACE || FTRACE_SYSCALLS || TRACE_BRANCH_PROFILING || BLK_DEV_IO_TRACE",
            "dep": "",
            "restrict": ""
        }
    ],
    "TRACING_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TRACE_IRQFLAGS_SUPPORT) && (STACKTRACE_SUPPORT)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(TRACING_SUPPORT)",
            "restrict": ""
        }
    ],
    "BOOTTIME_TRACING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (TRACING)",
            "restrict": ""
        }
    ],
    "FUNCTION_TRACER": [
        {
            "type": "bool",
            "rev_select": "STACK_TRACER",
            "dep": "( FTRACE ) && (HAVE_FUNCTION_TRACER)",
            "restrict": ""
        }
    ],
    "FUNCTION_GRAPH_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (HAVE_FUNCTION_GRAPH_TRACER) && (FUNCTION_TRACER) && (! X86_32 || ! CC_OPTIMIZE_FOR_SIZE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DYNAMIC_FTRACE": [
        {
            "type": "bool",
            "rev_select": "FORCE_DYNAMIC_FTRACE",
            "dep": "( FTRACE ) && (FUNCTION_TRACER) && (HAVE_DYNAMIC_FTRACE)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DYNAMIC_FTRACE_WITH_REGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (DYNAMIC_FTRACE) && (HAVE_DYNAMIC_FTRACE_WITH_REGS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DYNAMIC_FTRACE_WITH_DIRECT_CALLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (DYNAMIC_FTRACE_WITH_REGS) && (HAVE_DYNAMIC_FTRACE_WITH_DIRECT_CALLS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DYNAMIC_FTRACE_WITH_ARGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (DYNAMIC_FTRACE) && (HAVE_DYNAMIC_FTRACE_WITH_ARGS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FPROBE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (FUNCTION_TRACER) && (DYNAMIC_FTRACE_WITH_REGS) && (HAVE_RETHOOK)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FUNCTION_PROFILER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (FUNCTION_TRACER)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "STACK_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (HAVE_FUNCTION_TRACER)",
            "restrict": ""
        }
    ],
    "TRACE_PREEMPT_TOGGLE": [
        {
            "type": "bool",
            "rev_select": "PREEMPT_TRACER",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "IRQSOFF_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (TRACE_IRQFLAGS_SUPPORT)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PREEMPT_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (PREEMPTION)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "SCHED_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "HWLAT_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "OSNOISE_TRACER": [
        {
            "type": "bool",
            "rev_select": "TIMERLAT_TRACER",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "TIMERLAT_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "MMIOTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (HAVE_MMIOTRACE_SUPPORT && PCI)",
            "restrict": ""
        }
    ],
    "ENABLE_DEFAULT_TRACERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (! GENERIC_TRACER)",
            "restrict": ""
        }
    ],
    "FTRACE_SYSCALLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (HAVE_SYSCALL_TRACEPOINTS)",
            "restrict": ""
        }
    ],
    "TRACER_SNAPSHOT": [
        {
            "type": "bool",
            "rev_select": "IRQSOFF_TRACER || PREEMPT_TRACER || SCHED_TRACER",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "TRACER_SNAPSHOT_PER_CPU_SWAP": [
        {
            "type": "bool",
            "rev_select": "IRQSOFF_TRACER || PREEMPT_TRACER",
            "dep": "( FTRACE ) && (TRACER_SNAPSHOT)",
            "restrict": ""
        }
    ],
    "TRACE_BRANCH_PROFILING": [
        {
            "type": "bool",
            "rev_select": "PROFILE_ANNOTATED_BRANCHES || PROFILE_ALL_BRANCHES",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "BRANCH_PROFILE_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && ( BRANCH_PROFILE_NONE &&  !PROFILE_ANNOTATED_BRANCHES &&  !PROFILE_ALL_BRANCHES )",
            "restrict": ""
        }
    ],
    "PROFILE_ANNOTATED_BRANCHES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && ( PROFILE_ANNOTATED_BRANCHES &&  !BRANCH_PROFILE_NONE &&  !PROFILE_ALL_BRANCHES )",
            "restrict": ""
        }
    ],
    "PROFILE_ALL_BRANCHES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && ( PROFILE_ALL_BRANCHES &&  !BRANCH_PROFILE_NONE &&  !PROFILE_ANNOTATED_BRANCHES )",
            "restrict": ""
        }
    ],
    "TRACING_BRANCHES": [
        {
            "type": "bool",
            "rev_select": "BRANCH_TRACER",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "BRANCH_TRACER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (TRACE_BRANCH_PROFILING)",
            "restrict": ""
        }
    ],
    "BLK_DEV_IO_TRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (SYSFS) && (BLOCK)",
            "restrict": ""
        }
    ],
    "KPROBE_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (KPROBES) && (HAVE_REGS_AND_STACK_ACCESS_API)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KPROBE_EVENTS_ON_NOTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (KPROBE_EVENTS) && (DYNAMIC_FTRACE)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "UPROBE_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (ARCH_SUPPORTS_UPROBES) && (MMU) && (PERF_EVENTS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "BPF_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (BPF_SYSCALL) && (( KPROBE_EVENTS || UPROBE_EVENTS ) && PERF_EVENTS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "DYNAMIC_EVENTS": [
        {
            "type": "bool",
            "rev_select": "KPROBE_EVENTS || UPROBE_EVENTS || SYNTH_EVENTS || USER_EVENTS || HIST_TRIGGERS",
            "dep": "( FTRACE )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "PROBE_EVENTS": [
        {
            "type": "bool",
            "rev_select": "KPROBE_EVENTS || UPROBE_EVENTS",
            "dep": "( FTRACE )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "BPF_KPROBE_OVERRIDE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (BPF_EVENTS) && (FUNCTION_ERROR_INJECTION)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "FTRACE_MCOUNT_RECORD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (DYNAMIC_FTRACE) && (HAVE_FTRACE_MCOUNT_RECORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FTRACE_MCOUNT_USE_PATCHABLE_FUNCTION_ENTRY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (FTRACE_MCOUNT_RECORD)",
            "restrict": ""
        }
    ],
    "FTRACE_MCOUNT_USE_CC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (SP_WORD) && (! FTRACE_MCOUNT_USE_PATCHABLE_FUNCTION_ENTRY) && (FTRACE_MCOUNT_RECORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FTRACE_MCOUNT_USE_OBJTOOL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (HAVE_OBJTOOL_MCOUNT) && (! FTRACE_MCOUNT_USE_PATCHABLE_FUNCTION_ENTRY) && (! FTRACE_MCOUNT_USE_CC) && (FTRACE_MCOUNT_RECORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FTRACE_MCOUNT_USE_RECORDMCOUNT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (! FTRACE_MCOUNT_USE_PATCHABLE_FUNCTION_ENTRY) && (! FTRACE_MCOUNT_USE_CC) && (! FTRACE_MCOUNT_USE_OBJTOOL) && (FTRACE_MCOUNT_RECORD)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "TRACING_MAP": [
        {
            "type": "bool",
            "rev_select": "HIST_TRIGGERS",
            "dep": "( FTRACE ) && (ARCH_HAVE_NMI_SAFE_CMPXCHG)",
            "restrict": ""
        }
    ],
    "SYNTH_EVENTS": [
        {
            "type": "bool",
            "rev_select": "HIST_TRIGGERS",
            "dep": "( FTRACE )",
            "restrict": "( n )[!(y)]"
        }
    ],
    "USER_EVENTS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (BROKEN || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "HIST_TRIGGERS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (ARCH_HAVE_NMI_SAFE_CMPXCHG)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TRACE_EVENT_INJECT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (TRACING)",
            "restrict": ""
        }
    ],
    "TRACEPOINT_BENCHMARK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "RING_BUFFER_BENCHMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FTRACE ) && (RING_BUFFER)",
            "restrict": ""
        }
    ],
    "TRACE_EVAL_MAP_FILE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (TRACING)",
            "restrict": ""
        }
    ],
    "FTRACE_RECORD_RECURSION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (FUNCTION_TRACER)",
            "restrict": ""
        }
    ],
    "FTRACE_RECORD_RECURSION_SIZE": [
        {
            "type": "int",
            "rev_select": "",
            "dep": "( FTRACE ) && (FTRACE_RECORD_RECURSION)",
            "restrict": "( 128 )[!(y)]"
        }
    ],
    "RING_BUFFER_RECORD_RECURSION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (FTRACE_RECORD_RECURSION)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "GCOV_PROFILE_FTRACE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (GCOV_KERNEL)",
            "restrict": ""
        }
    ],
    "FTRACE_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "FTRACE_STARTUP_TEST",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "FTRACE_STARTUP_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (GENERIC_TRACER)",
            "restrict": ""
        }
    ],
    "EVENT_TRACE_STARTUP_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (FTRACE_STARTUP_TEST)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EVENT_TRACE_TEST_SYSCALLS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (EVENT_TRACE_STARTUP_TEST)",
            "restrict": ""
        }
    ],
    "FTRACE_SORT_STARTUP_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (DYNAMIC_FTRACE) && (BUILDTIME_MCOUNT_SORT)",
            "restrict": ""
        }
    ],
    "RING_BUFFER_STARTUP_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RING_BUFFER)",
            "restrict": ""
        }
    ],
    "RING_BUFFER_VALIDATE_TIME_DELTAS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RING_BUFFER)",
            "restrict": ""
        }
    ],
    "MMIOTRACE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FTRACE ) && (MMIOTRACE && m)",
            "restrict": ""
        }
    ],
    "PREEMPTIRQ_DELAY_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FTRACE ) && (m)",
            "restrict": ""
        }
    ],
    "SYNTH_EVENT_GEN_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FTRACE ) && (SYNTH_EVENTS)",
            "restrict": ""
        }
    ],
    "KPROBE_EVENT_GEN_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( FTRACE ) && (KPROBE_EVENTS)",
            "restrict": ""
        }
    ],
    "HIST_TRIGGERS_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (HIST_TRIGGERS)",
            "restrict": ""
        }
    ],
    "DA_MON_EVENTS": [
        {
            "type": "bool",
            "rev_select": "DA_MON_EVENTS_IMPLICIT || DA_MON_EVENTS_ID",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "DA_MON_EVENTS_IMPLICIT": [
        {
            "type": "bool",
            "rev_select": "RV_MON_WIP",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "DA_MON_EVENTS_ID": [
        {
            "type": "bool",
            "rev_select": "RV_MON_WWNR",
            "dep": "( FTRACE )",
            "restrict": ""
        }
    ],
    "RV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (TRACING)",
            "restrict": ""
        }
    ],
    "RV_MON_WIP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RV) && (PREEMPT_TRACER)",
            "restrict": ""
        }
    ],
    "RV_MON_WWNR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RV)",
            "restrict": ""
        }
    ],
    "RV_REACTORS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RV_REACT_PRINTK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RV_REACTORS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "RV_REACT_PANIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( FTRACE ) && (RV_REACTORS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PROVIDE_OHCI1394_DMA_INIT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI && X86)",
            "restrict": ""
        }
    ],
    "SAMPLES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "SAMPLE_AUXDISPLAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK)",
            "restrict": ""
        }
    ],
    "SAMPLE_TRACE_EVENTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (EVENT_TRACING && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_TRACE_CUSTOM_EVENTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (EVENT_TRACING && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_TRACE_PRINTK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (EVENT_TRACING && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_FTRACE_DIRECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (DYNAMIC_FTRACE_WITH_DIRECT_CALLS && m) && (HAVE_SAMPLE_FTRACE_DIRECT)",
            "restrict": ""
        }
    ],
    "SAMPLE_FTRACE_DIRECT_MULTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (DYNAMIC_FTRACE_WITH_DIRECT_CALLS && m) && (HAVE_SAMPLE_FTRACE_DIRECT_MULTI)",
            "restrict": ""
        }
    ],
    "SAMPLE_TRACE_ARRAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (EVENT_TRACING && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_KOBJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES )",
            "restrict": ""
        }
    ],
    "SAMPLE_KPROBES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (KPROBES && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_KRETPROBES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (SAMPLE_KPROBES && KRETPROBES)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SAMPLE_HW_BREAKPOINT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (HAVE_HW_BREAKPOINT && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_FPROBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (FPROBE && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_KFIFO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (m)",
            "restrict": ""
        }
    ],
    "SAMPLE_KDB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (KGDB_KDB && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_QMI_CLIENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (m) && (ARCH_QCOM) && (NET)",
            "restrict": ""
        }
    ],
    "SAMPLE_RPMSG_CLIENT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (RPMSG && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_LIVEPATCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (LIVEPATCH && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_CONFIGFS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CONFIGFS_FS && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_CONNECTOR": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CONNECTOR && HEADERS_INSTALL && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_FANOTIFY_ERROR": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (FANOTIFY && CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_HIDRAW": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_LANDLOCK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_PIDFD": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_SECCOMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (SECCOMP_FILTER && CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_TIMER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_UHID": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_VFIO_MDEV_MTTY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (VFIO_MDEV && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_VFIO_MDEV_MDPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (VFIO_MDEV && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_VFIO_MDEV_MDPY_FB": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (FB && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_VFIO_MDEV_MBOCHS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (VFIO_MDEV && m)",
            "restrict": ""
        }
    ],
    "SAMPLE_ANDROID_BINDERFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_VFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_INTEL_MEI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (INTEL_MEI) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_WATCHDOG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK)",
            "restrict": ""
        }
    ],
    "SAMPLE_WATCH_QUEUE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CC_CAN_LINK && HEADERS_INSTALL)",
            "restrict": ""
        }
    ],
    "SAMPLE_CORESIGHT_SYSCFG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( SAMPLES ) && (CORESIGHT && m)",
            "restrict": ""
        }
    ],
    "HAVE_SAMPLE_FTRACE_DIRECT": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "HAVE_SAMPLE_FTRACE_DIRECT_MULTI": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "ARCH_HAS_DEVMEM_IS_ALLOWED": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "STRICT_DEVMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(MMU && DEVMEM) && (ARCH_HAS_DEVMEM_IS_ALLOWED || GENERIC_LIB_DEVMEM_IS_ALLOWED)",
            "restrict": "( y )[!(y) && (PPC || X86 || ARM64)]"
        }
    ],
    "IO_STRICT_DEVMEM": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(STRICT_DEVMEM)",
            "restrict": ""
        }
    ],
    "EARLY_PRINTK_USB": [
        {
            "type": "bool",
            "rev_select": "EARLY_PRINTK_DBGP || EARLY_PRINTK_USB_XDBC",
            "dep": "",
            "restrict": ""
        }
    ],
    "X86_VERBOSE_BOOTUP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "EARLY_PRINTK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(EXPERT)]"
        }
    ],
    "EARLY_PRINTK_DBGP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EARLY_PRINTK && PCI)",
            "restrict": ""
        }
    ],
    "EARLY_PRINTK_USB_XDBC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EARLY_PRINTK && PCI)",
            "restrict": ""
        }
    ],
    "EFI_PGT_DUMP": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EFI)",
            "restrict": ""
        }
    ],
    "DEBUG_TLBFLUSH": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "IOMMU_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GART_IOMMU && DEBUG_KERNEL) && (X86_64)",
            "restrict": ""
        }
    ],
    "IOMMU_LEAK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(IOMMU_DEBUG && DMA_API_DEBUG)",
            "restrict": ""
        }
    ],
    "HAVE_MMIOTRACE_SUPPORT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "X86_DECODER_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && INSTRUCTION_DECODER) && (! COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "IO_DELAY_0X80": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IO_DELAY_0X80 &&  !IO_DELAY_0XED &&  !IO_DELAY_UDELAY &&  !IO_DELAY_NONE )",
            "restrict": ""
        }
    ],
    "IO_DELAY_0XED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IO_DELAY_0XED &&  !IO_DELAY_0X80 &&  !IO_DELAY_UDELAY &&  !IO_DELAY_NONE )",
            "restrict": ""
        }
    ],
    "IO_DELAY_UDELAY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IO_DELAY_UDELAY &&  !IO_DELAY_0X80 &&  !IO_DELAY_0XED &&  !IO_DELAY_NONE )",
            "restrict": ""
        }
    ],
    "IO_DELAY_NONE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( IO_DELAY_NONE &&  !IO_DELAY_0X80 &&  !IO_DELAY_0XED &&  !IO_DELAY_UDELAY )",
            "restrict": ""
        }
    ],
    "DEBUG_BOOT_PARAMS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CPA_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_ENTRY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "DEBUG_NMI_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL && X86_LOCAL_APIC)",
            "restrict": ""
        }
    ],
    "DEBUG_IMR_SELFTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(INTEL_IMR)",
            "restrict": ""
        }
    ],
    "X86_DEBUG_FPU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PUNIT_ATOM_DEBUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "UNWINDER_ORC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(X86_64) && ( UNWINDER_ORC &&  !UNWINDER_FRAME_POINTER &&  !UNWINDER_GUESS )",
            "restrict": ""
        }
    ],
    "UNWINDER_FRAME_POINTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( UNWINDER_FRAME_POINTER &&  !UNWINDER_ORC &&  !UNWINDER_GUESS )",
            "restrict": ""
        }
    ],
    "UNWINDER_GUESS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(EXPERT) && (! STACKDEPOT) && ( UNWINDER_GUESS &&  !UNWINDER_ORC &&  !UNWINDER_FRAME_POINTER )",
            "restrict": ""
        }
    ],
    "KUNIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "KUNIT_DEBUGFS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( KUNIT )",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KUNIT )",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "KUNIT_EXAMPLE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KUNIT )",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "KUNIT_ALL_TESTS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( KUNIT )",
            "restrict": ""
        }
    ],
    "NOTIFIER_ERROR_INJECTION": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PM_NOTIFIER_ERROR_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PM && NOTIFIER_ERROR_INJECTION)",
            "restrict": "( m )[!(y) && (PM_DEBUG)]"
        }
    ],
    "OF_RECONFIG_NOTIFIER_ERROR_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(OF_DYNAMIC && NOTIFIER_ERROR_INJECTION)",
            "restrict": ""
        }
    ],
    "NETDEV_NOTIFIER_ERROR_INJECT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(NET && NOTIFIER_ERROR_INJECTION)",
            "restrict": ""
        }
    ],
    "FUNCTION_ERROR_INJECTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_FUNCTION_ERROR_INJECTION && KPROBES)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "FAULT_INJECTION": [
        {
            "type": "bool",
            "rev_select": "DRM_I915_SELFTEST",
            "dep": "(DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "FAILSLAB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION) && (SLAB || SLUB)",
            "restrict": ""
        }
    ],
    "FAIL_PAGE_ALLOC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION)",
            "restrict": ""
        }
    ],
    "FAULT_INJECTION_USERCOPY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION)",
            "restrict": ""
        }
    ],
    "FAIL_MAKE_REQUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION && BLOCK)",
            "restrict": ""
        }
    ],
    "FAIL_IO_TIMEOUT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION && BLOCK)",
            "restrict": ""
        }
    ],
    "FAIL_FUTEX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION && FUTEX)",
            "restrict": ""
        }
    ],
    "FAULT_INJECTION_DEBUG_FS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION && SYSFS && DEBUG_FS)",
            "restrict": ""
        }
    ],
    "FAIL_FUNCTION": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION_DEBUG_FS && FUNCTION_ERROR_INJECTION)",
            "restrict": ""
        }
    ],
    "FAIL_MMC_REQUEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION_DEBUG_FS && MMC)",
            "restrict": ""
        }
    ],
    "FAIL_SUNRPC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION_DEBUG_FS && SUNRPC_DEBUG)",
            "restrict": ""
        }
    ],
    "FAULT_INJECTION_STACKTRACE_FILTER": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(FAULT_INJECTION_DEBUG_FS && STACKTRACE_SUPPORT) && (! X86_64) && (FRAME_POINTER || MIPS || PPC || S390 || MICROBLAZE || ARM || ARC || X86)",
            "restrict": ""
        }
    ],
    "ARCH_HAS_KCOV": [
        {
            "type": "bool",
            "rev_select": "X86[X86_64]",
            "dep": "",
            "restrict": ""
        }
    ],
    "CC_HAS_SANCOV_TRACE_PC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( SP_WORD )[!(y)]"
        }
    ],
    "KCOV": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_HAS_KCOV) && (CC_HAS_SANCOV_TRACE_PC || GCC_PLUGINS) && (! ARCH_WANTS_NO_INSTR || HAVE_NOINSTR_HACK || GCC_VERSION >= 120000 || CLANG_VERSION >= 130000)",
            "restrict": ""
        }
    ],
    "KCOV_ENABLE_COMPARISONS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KCOV) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "KCOV_INSTRUMENT_ALL": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(KCOV)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "KCOV_IRQ_AREA_SIZE": [
        {
            "type": "hex",
            "rev_select": "",
            "dep": "(KCOV)",
            "restrict": "( 0x40000 )[!(y)]"
        }
    ],
    "RUNTIME_TESTING_MENU": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "LKDTM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CPUMASK_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "TEST_LIST_SORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "TEST_MIN_HEAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL || m)",
            "restrict": ""
        }
    ],
    "TEST_SORT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "TEST_DIV64": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL || m)",
            "restrict": ""
        }
    ],
    "KPROBES_SANITY_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL) && (KPROBES) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "FPROBE_SANITY_TEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL) && (FPROBE) && (KUNIT = y)",
            "restrict": ""
        }
    ],
    "BACKTRACE_SELF_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "TEST_REF_TRACKER": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL && STACKTRACE_SUPPORT)",
            "restrict": ""
        }
    ],
    "RBTREE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "REED_SOLOMON_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL || m)",
            "restrict": ""
        }
    ],
    "INTERVAL_TREE_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "PERCPU_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m && DEBUG_KERNEL)",
            "restrict": ""
        }
    ],
    "ATOMIC64_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "ASYNC_RAID6_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (ASYNC_RAID6_RECOV)",
            "restrict": ""
        }
    ],
    "TEST_HEXDUMP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "STRING_SELFTEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_STRING_HELPERS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_STRSCPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_KSTRTOX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_PRINTF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_SCANF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_BITMAP": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_UUID": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_XARRAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_RHASHTABLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_SIPHASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_IDA": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_PARMAN": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (PARMAN)",
            "restrict": ""
        }
    ],
    "TEST_IRQ_TIMINGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (IRQ_TIMINGS)",
            "restrict": ""
        }
    ],
    "TEST_LKM": [
        {
            "type": "tristate",
            "rev_select": "TEST_KMOD",
            "dep": "( RUNTIME_TESTING_MENU ) && (m)",
            "restrict": ""
        }
    ],
    "TEST_BITOPS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m)",
            "restrict": ""
        }
    ],
    "TEST_VMALLOC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (MMU) && (m)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TEST_USER_COPY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m)",
            "restrict": ""
        }
    ],
    "TEST_BPF": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m && NET)",
            "restrict": ""
        }
    ],
    "TEST_BLACKHOLE_DEV": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m && NET)",
            "restrict": ""
        }
    ],
    "FIND_BIT_BENCHMARK": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_FIRMWARE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (FW_LOADER)",
            "restrict": ""
        }
    ],
    "TEST_SYSCTL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (PROC_SYSCTL)",
            "restrict": ""
        }
    ],
    "BITFIELD_KUNIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "HASH_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "RESOURCE_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "SYSCTL_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "LIST_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "LINEAR_RANGES_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": ""
        }
    ],
    "CMDLINE_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "BITS_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "SLUB_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (SLUB_DEBUG && KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "RATIONAL_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT && RATIONAL)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "MEMCPY_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "OVERFLOW_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "STACKINIT_KUNIT_TEST": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (KUNIT)",
            "restrict": "( KUNIT_ALL_TESTS )[!(! KUNIT_ALL_TESTS)]"
        }
    ],
    "TEST_UDELAY": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_STATIC_KEYS": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m)",
            "restrict": ""
        }
    ],
    "TEST_KMOD": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (m) && (NETDEVICES && NET_CORE && INET) && (BLOCK) && (PAGE_SIZE_LESS_THAN_256KB)",
            "restrict": ""
        }
    ],
    "TEST_DEBUG_VIRTUAL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DEBUG_VIRTUAL)",
            "restrict": ""
        }
    ],
    "TEST_MEMCAT_P": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_LIVEPATCH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (DYNAMIC_DEBUG) && (LIVEPATCH) && (m)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TEST_OBJAGG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (OBJAGG)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "TEST_MEMINIT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_HMM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (TRANSPARENT_HUGEPAGE) && (DEVICE_PRIVATE)",
            "restrict": ""
        }
    ],
    "TEST_FREE_PAGES": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU )",
            "restrict": ""
        }
    ],
    "TEST_FPU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (X86 && ! KCOV_INSTRUMENT_ALL)",
            "restrict": ""
        }
    ],
    "TEST_CLOCKSOURCE_WATCHDOG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( RUNTIME_TESTING_MENU ) && (CLOCKSOURCE_WATCHDOG)",
            "restrict": ""
        }
    ],
    "ARCH_USE_MEMTEST": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "MEMTEST": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ARCH_USE_MEMTEST)",
            "restrict": ""
        }
    ],
    "HYPERV_TESTING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HYPERV && DEBUG_FS)",
            "restrict": "( n )[!(y)]"
        }
    ],
    "GSC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HPPB": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GSC)",
            "restrict": ""
        }
    ],
    "IOMMU_CCIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GSC)",
            "restrict": ""
        }
    ],
    "GSC_LASI": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GSC)",
            "restrict": ""
        }
    ],
    "GSC_WAX": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(GSC)",
            "restrict": ""
        }
    ],
    "GSC_DINO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI && GSC)",
            "restrict": ""
        }
    ],
    "PCI_LBA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI)",
            "restrict": ""
        }
    ],
    "IOSAPIC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI_LBA)",
            "restrict": "( PCI_LBA )[!(y)]"
        }
    ],
    "IOMMU_SBA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI_LBA)",
            "restrict": "( PCI_LBA )[!(y)]"
        }
    ],
    "SUPERIO": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PCI_LBA)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CHASSIS_LCD_LED": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PDC_CHASSIS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PDC_CHASSIS_WARN": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(PROC_FS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "PDC_STABLE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SYSFS)",
            "restrict": "( y )[!(y)]"
        }
    ],
    "CORESIGHT": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(ARM || ARM64) && (OF || ACPI)",
            "restrict": ""
        }
    ],
    "CORESIGHT_LINKS_AND_SINKS": [
        {
            "type": "tristate",
            "rev_select": "CORESIGHT_SOURCE_ETM3X || CORESIGHT_SOURCE_ETM4X || CORESIGHT_STM",
            "dep": "( CORESIGHT )",
            "restrict": ""
        }
    ],
    "CORESIGHT_LINK_AND_SINK_TMC": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_LINKS_AND_SINKS)",
            "restrict": ""
        }
    ],
    "CORESIGHT_CATU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_LINK_AND_SINK_TMC)",
            "restrict": ""
        }
    ],
    "CORESIGHT_SINK_TPIU": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_LINKS_AND_SINKS)",
            "restrict": ""
        }
    ],
    "CORESIGHT_SINK_ETBV10": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_LINKS_AND_SINKS)",
            "restrict": ""
        }
    ],
    "CORESIGHT_SOURCE_ETM3X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (! ARM64)",
            "restrict": ""
        }
    ],
    "CORESIGHT_SOURCE_ETM4X": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (ARM64)",
            "restrict": ""
        }
    ],
    "ETM4X_IMPDEF_FEATURE": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_SOURCE_ETM4X)",
            "restrict": ""
        }
    ],
    "CORESIGHT_STM": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (( ARM && ! ( CPU_32v3 || CPU_32v4 || CPU_32v4T ) ) || ARM64)",
            "restrict": ""
        }
    ],
    "CORESIGHT_CPU_DEBUG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (ARM || ARM64) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "CORESIGHT_CPU_DEBUG_DEFAULT_ON": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_CPU_DEBUG)",
            "restrict": ""
        }
    ],
    "CORESIGHT_CTI": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (ARM || ARM64)",
            "restrict": ""
        }
    ],
    "CORESIGHT_CTI_INTEGRATION_REGS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (CORESIGHT_CTI)",
            "restrict": ""
        }
    ],
    "CORESIGHT_TRBE": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "( CORESIGHT ) && (ARM64 && CORESIGHT_SOURCE_ETM4X)",
            "restrict": ""
        }
    ],
    "SUN_OPENPROMIO": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "OBP_FLASH": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPARC64)",
            "restrict": ""
        }
    ],
    "TADPOLE_TS102_UCTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "BBC_I2C": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && SPARC64)",
            "restrict": ""
        }
    ],
    "ENVCTRL": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && SPARC64)",
            "restrict": ""
        }
    ],
    "DISPLAY7SEG": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(PCI && SPARC64)",
            "restrict": ""
        }
    ],
    "ORACLE_DAX": [
        {
            "type": "tristate",
            "rev_select": "",
            "dep": "(SPARC64)",
            "restrict": "( m )[!(y)]"
        }
    ],
    "SH_INTC": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": ""
        }
    ],
    "INTC_USERIMASK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SH_INTC ) && (( SUPERH && CPU_SH4A ) || COMPILE_TEST)",
            "restrict": ""
        }
    ],
    "INTC_BALANCING": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SH_INTC ) && (SMP && SUPERH && CPU_SHX3)",
            "restrict": ""
        }
    ],
    "INTC_MAPPING_DEBUG": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( SH_INTC ) && (DEBUG_FS)",
            "restrict": ""
        }
    ],
    "ZORRO_NAMES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(ZORRO)",
            "restrict": ""
        }
    ],
    "UML_X86": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "3_LEVEL_PGTABLES": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( 64BIT )[!(! 64BIT)]"
        }
    ],
    "ARCH_HAS_SC_SIGNALS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! 64BIT )[!(y)]"
        }
    ],
    "ARCH_REUSE_HOST_VSYSCALL_AREA": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( ! 64BIT )[!(y)]"
        }
    ],
    "GENERIC_HWEIGHT": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "",
            "restrict": "( y )[!(y)]"
        }
    ],
    "HAVE_GCC_PLUGINS": [
        {
            "type": "bool",
            "rev_select": "X86",
            "dep": "",
            "restrict": ""
        }
    ],
    "GCC_PLUGINS": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "(HAVE_GCC_PLUGINS) && (CC_IS_GCC) && (SP_WORD)",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_SANCOV": [
        {
            "type": "bool",
            "rev_select": "KCOV[! CC_HAS_SANCOV_TRACE_PC]",
            "dep": "( GCC_PLUGINS ) && (! CC_HAS_SANCOV_TRACE_PC)",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_LATENT_ENTROPY": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GCC_PLUGINS )",
            "restrict": ""
        }
    ],
    "GCC_PLUGIN_ARM_SSP_PER_TASK": [
        {
            "type": "bool",
            "rev_select": "",
            "dep": "( GCC_PLUGINS ) && (GCC_PLUGINS && ARM)",
            "restrict": ""
        }
    ]
}